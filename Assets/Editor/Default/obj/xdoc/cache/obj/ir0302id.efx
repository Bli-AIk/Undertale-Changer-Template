id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
items:
- id: Editor
  commentId: N:Editor
  language: CSharp
  name:
    CSharp: Editor
    VB: Editor
  nameWithType:
    CSharp: Editor
    VB: Editor
  qualifiedName:
    CSharp: Editor
    VB: Editor
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: Editor.EditorService
    commentId: T:Editor.EditorService
    language: CSharp
    name:
      CSharp: EditorService
      VB: EditorService
    nameWithType:
      CSharp: EditorService
      VB: EditorService
    qualifiedName:
      CSharp: Editor.EditorService
      VB: Editor.EditorService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor
    source:
      id: EditorService
      path: ''
      startLine: 8
    syntax:
      content:
        CSharp: public static class EditorService
        VB: Public Module EditorService
    inheritance:
    - System.Object
    items:
    - id: Editor.EditorService.CopyProperty(SerializedProperty,SerializedProperty,System.String)
      commentId: M:Editor.EditorService.CopyProperty(SerializedProperty,SerializedProperty,System.String)
      language: CSharp
      name:
        CSharp: CopyProperty(SerializedProperty, SerializedProperty, string)
        VB: CopyProperty(SerializedProperty, SerializedProperty, String)
      nameWithType:
        CSharp: EditorService.CopyProperty(SerializedProperty, SerializedProperty, string)
        VB: EditorService.CopyProperty(SerializedProperty, SerializedProperty, String)
      qualifiedName:
        CSharp: Editor.EditorService.CopyProperty(SerializedProperty, SerializedProperty, string)
        VB: Editor.EditorService.CopyProperty(SerializedProperty, SerializedProperty, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor
      source:
        id: CopyProperty
        path: ''
        startLine: 10
      syntax:
        content:
          CSharp: public static void CopyProperty(SerializedProperty source, SerializedProperty target, string propertyName)
          VB: Public Shared Sub CopyProperty(source As SerializedProperty, target As SerializedProperty, propertyName As String)
        parameters:
        - id: source
          type: Global.SerializedProperty
        - id: target
          type: Global.SerializedProperty
        - id: propertyName
          type: System.String
      overload: Editor.EditorService.CopyProperty*
    - id: Editor.EditorService.ResetProperty``1(SerializedProperty,System.String,``0)
      commentId: M:Editor.EditorService.ResetProperty``1(SerializedProperty,System.String,``0)
      language: CSharp
      name:
        CSharp: ResetProperty<T>(SerializedProperty, string, T)
        VB: ResetProperty(Of T)(SerializedProperty, String, T)
      nameWithType:
        CSharp: EditorService.ResetProperty<T>(SerializedProperty, string, T)
        VB: EditorService.ResetProperty(Of T)(SerializedProperty, String, T)
      qualifiedName:
        CSharp: Editor.EditorService.ResetProperty<T>(SerializedProperty, string, T)
        VB: Editor.EditorService.ResetProperty(Of T)(SerializedProperty, String, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor
      source:
        id: ResetProperty
        path: ''
        startLine: 38
      syntax:
        content:
          CSharp: public static void ResetProperty<T>(SerializedProperty property, string propertyName, T defaultValue)
          VB: Public Shared Sub ResetProperty(Of T)([property] As SerializedProperty, propertyName As String, defaultValue As T)
        parameters:
        - id: property
          type: Global.SerializedProperty
        - id: propertyName
          type: System.String
        - id: defaultValue
          type: '{T}'
        typeParameters:
        - id: T
      overload: Editor.EditorService.ResetProperty*
    - id: Editor.EditorService.DrawHorizontalLine(Rect,System.Single)
      commentId: M:Editor.EditorService.DrawHorizontalLine(Rect,System.Single)
      language: CSharp
      name:
        CSharp: DrawHorizontalLine(Rect, float)
        VB: DrawHorizontalLine(Rect, Single)
      nameWithType:
        CSharp: EditorService.DrawHorizontalLine(Rect, float)
        VB: EditorService.DrawHorizontalLine(Rect, Single)
      qualifiedName:
        CSharp: Editor.EditorService.DrawHorizontalLine(Rect, float)
        VB: Editor.EditorService.DrawHorizontalLine(Rect, Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor
      source:
        id: DrawHorizontalLine
        path: ''
        startLine: 89
      syntax:
        content:
          CSharp: public static void DrawHorizontalLine(Rect rect, float width)
          VB: Public Shared Sub DrawHorizontalLine(rect As Rect, width As Single)
        parameters:
        - id: rect
          type: Global.Rect
        - id: width
          type: System.Single
      overload: Editor.EditorService.DrawHorizontalLine*
    - id: Editor.EditorService.DrawVerticalLine(Rect,System.Single)
      commentId: M:Editor.EditorService.DrawVerticalLine(Rect,System.Single)
      language: CSharp
      name:
        CSharp: DrawVerticalLine(Rect, float)
        VB: DrawVerticalLine(Rect, Single)
      nameWithType:
        CSharp: EditorService.DrawVerticalLine(Rect, float)
        VB: EditorService.DrawVerticalLine(Rect, Single)
      qualifiedName:
        CSharp: Editor.EditorService.DrawVerticalLine(Rect, float)
        VB: Editor.EditorService.DrawVerticalLine(Rect, Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor
      source:
        id: DrawVerticalLine
        path: ''
        startLine: 95
      syntax:
        content:
          CSharp: public static void DrawVerticalLine(Rect rect, float height)
          VB: Public Shared Sub DrawVerticalLine(rect As Rect, height As Single)
        parameters:
        - id: rect
          type: Global.Rect
        - id: height
          type: System.Single
      overload: Editor.EditorService.DrawVerticalLine*
    - id: Editor.EditorService.EnumPopup``1(Rect,SerializedProperty,System.Collections.Generic.Dictionary{``0,System.String},GUIStyle)
      commentId: M:Editor.EditorService.EnumPopup``1(Rect,SerializedProperty,System.Collections.Generic.Dictionary{``0,System.String},GUIStyle)
      language: CSharp
      name:
        CSharp: EnumPopup<TEnum>(Rect, SerializedProperty, Dictionary<TEnum, string>, GUIStyle)
        VB: EnumPopup(Of TEnum)(Rect, SerializedProperty, Dictionary(Of TEnum, String), GUIStyle)
      nameWithType:
        CSharp: EditorService.EnumPopup<TEnum>(Rect, SerializedProperty, Dictionary<TEnum, string>, GUIStyle)
        VB: EditorService.EnumPopup(Of TEnum)(Rect, SerializedProperty, Dictionary(Of TEnum, String), GUIStyle)
      qualifiedName:
        CSharp: Editor.EditorService.EnumPopup<TEnum>(Rect, SerializedProperty, System.Collections.Generic.Dictionary<TEnum, string>, GUIStyle)
        VB: Editor.EditorService.EnumPopup(Of TEnum)(Rect, SerializedProperty, System.Collections.Generic.Dictionary(Of TEnum, String), GUIStyle)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor
      source:
        id: EnumPopup
        path: ''
        startLine: 108
      summary: "\n显示一个自定义 Popup 并修改 SerializedProperty 的值（使用字典映射）\n"
      example: []
      syntax:
        content:
          CSharp: 'public static void EnumPopup<TEnum>(Rect rect, SerializedProperty property, Dictionary<TEnum, string> enumMap, GUIStyle guiStyle) where TEnum : Enum'
          VB: Public Shared Sub EnumPopup(Of TEnum As [Enum])(rect As Rect, [property] As SerializedProperty, enumMap As Dictionary(Of TEnum, String), guiStyle As GUIStyle)
        parameters:
        - id: rect
          type: Global.Rect
          description: Popup 显示的区域
        - id: property
          type: Global.SerializedProperty
          description: 要修改的 SerializedProperty
        - id: enumMap
          type: System.Collections.Generic.Dictionary{{TEnum},System.String}
          description: 枚举值和显示内容的字典
        - id: guiStyle
          type: Global.GUIStyle
          description: ''
        typeParameters:
        - id: TEnum
      overload: Editor.EditorService.EnumPopup*
- id: Editor.Default
  commentId: N:Editor.Default
  language: CSharp
  name:
    CSharp: Editor.Default
    VB: Editor.Default
  nameWithType:
    CSharp: Editor.Default
    VB: Editor.Default
  qualifiedName:
    CSharp: Editor.Default
    VB: Editor.Default
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: Editor.Default.SetTmpExtraPadding
    commentId: T:Editor.Default.SetTmpExtraPadding
    language: CSharp
    name:
      CSharp: SetTmpExtraPadding
      VB: SetTmpExtraPadding
    nameWithType:
      CSharp: SetTmpExtraPadding
      VB: SetTmpExtraPadding
    qualifiedName:
      CSharp: Editor.Default.SetTmpExtraPadding
      VB: Editor.Default.SetTmpExtraPadding
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor.Default
    source:
      id: SetTmpExtraPadding
      path: ''
      startLine: 148
    syntax:
      content:
        CSharp: 'public class SetTmpExtraPadding : EditorWindow'
        VB: Public Class SetTmpExtraPadding Inherits EditorWindow
    inheritance:
    - System.Object
    items: []
  - id: Editor.Default.ScriptableObjectIconSetter
    commentId: T:Editor.Default.ScriptableObjectIconSetter
    language: CSharp
    name:
      CSharp: ScriptableObjectIconSetter
      VB: ScriptableObjectIconSetter
    nameWithType:
      CSharp: ScriptableObjectIconSetter
      VB: ScriptableObjectIconSetter
    qualifiedName:
      CSharp: Editor.Default.ScriptableObjectIconSetter
      VB: Editor.Default.ScriptableObjectIconSetter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor.Default
    source:
      id: ScriptableObjectIconSetter
      path: ''
      startLine: 200
    syntax:
      content:
        CSharp: 'public class ScriptableObjectIconSetter : UnityEditor.Editor'
        VB: Public Class ScriptableObjectIconSetter Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    items:
    - id: Editor.Default.ScriptableObjectIconSetter.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
      commentId: M:Editor.Default.ScriptableObjectIconSetter.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: RenderStaticPreview(string, object[], int, int)
        VB: RenderStaticPreview(String, Object(), Integer, Integer)
      nameWithType:
        CSharp: ScriptableObjectIconSetter.RenderStaticPreview(string, object[], int, int)
        VB: ScriptableObjectIconSetter.RenderStaticPreview(String, Object(), Integer, Integer)
      qualifiedName:
        CSharp: Editor.Default.ScriptableObjectIconSetter.RenderStaticPreview(string, object[], int, int)
        VB: Editor.Default.ScriptableObjectIconSetter.RenderStaticPreview(String, Object(), Integer, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Default
      source:
        id: RenderStaticPreview
        path: ''
        startLine: 219
      syntax:
        content:
          CSharp: public override Texture2D RenderStaticPreview(string assetPath, object[] subAssets, int width, int height)
          VB: Public Overrides Function RenderStaticPreview(assetPath As String, subAssets As Object(), width As Integer, height As Integer) As Texture2D
        parameters:
        - id: assetPath
          type: System.String
        - id: subAssets
          type: System.Object[]
        - id: width
          type: System.Int32
        - id: height
          type: System.Int32
        return:
          type: Global.Texture2D
      overload: Editor.Default.ScriptableObjectIconSetter.RenderStaticPreview*
  - id: Editor.Default.WelcomeToUctWindow
    commentId: T:Editor.Default.WelcomeToUctWindow
    language: CSharp
    name:
      CSharp: WelcomeToUctWindow
      VB: WelcomeToUctWindow
    nameWithType:
      CSharp: WelcomeToUctWindow
      VB: WelcomeToUctWindow
    qualifiedName:
      CSharp: Editor.Default.WelcomeToUctWindow
      VB: Editor.Default.WelcomeToUctWindow
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor.Default
    source:
      id: WelcomeToUctWindow
      path: ''
      startLine: 248
    syntax:
      content:
        CSharp: 'public class WelcomeToUctWindow : EditorWindow'
        VB: Public Class WelcomeToUctWindow Inherits EditorWindow
    inheritance:
    - System.Object
    items:
    - id: Editor.Default.WelcomeToUctWindow.CreateGUI
      commentId: M:Editor.Default.WelcomeToUctWindow.CreateGUI
      language: CSharp
      name:
        CSharp: CreateGUI()
        VB: CreateGUI()
      nameWithType:
        CSharp: WelcomeToUctWindow.CreateGUI()
        VB: WelcomeToUctWindow.CreateGUI()
      qualifiedName:
        CSharp: Editor.Default.WelcomeToUctWindow.CreateGUI()
        VB: Editor.Default.WelcomeToUctWindow.CreateGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Default
      source:
        id: CreateGUI
        path: ''
        startLine: 259
      syntax:
        content:
          CSharp: public void CreateGUI()
          VB: Public Sub CreateGUI()
      overload: Editor.Default.WelcomeToUctWindow.CreateGUI*
    - id: Editor.Default.WelcomeToUctWindow.ShowExample
      commentId: M:Editor.Default.WelcomeToUctWindow.ShowExample
      language: CSharp
      name:
        CSharp: ShowExample()
        VB: ShowExample()
      nameWithType:
        CSharp: WelcomeToUctWindow.ShowExample()
        VB: WelcomeToUctWindow.ShowExample()
      qualifiedName:
        CSharp: Editor.Default.WelcomeToUctWindow.ShowExample()
        VB: Editor.Default.WelcomeToUctWindow.ShowExample()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Default
      source:
        id: ShowExample
        path: ''
        startLine: 390
      syntax:
        content:
          CSharp: public static void ShowExample()
          VB: Public Shared Sub ShowExample()
      overload: Editor.Default.WelcomeToUctWindow.ShowExample*
- id: Editor.Inspector
  commentId: N:Editor.Inspector
  language: CSharp
  name:
    CSharp: Editor.Inspector
    VB: Editor.Inspector
  nameWithType:
    CSharp: Editor.Inspector
    VB: Editor.Inspector
  qualifiedName:
    CSharp: Editor.Inspector
    VB: Editor.Inspector
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: Editor.Inspector.CharacterSpriteManagerInspector
    commentId: T:Editor.Inspector.CharacterSpriteManagerInspector
    language: CSharp
    name:
      CSharp: CharacterSpriteManagerInspector
      VB: CharacterSpriteManagerInspector
    nameWithType:
      CSharp: CharacterSpriteManagerInspector
      VB: CharacterSpriteManagerInspector
    qualifiedName:
      CSharp: Editor.Inspector.CharacterSpriteManagerInspector
      VB: Editor.Inspector.CharacterSpriteManagerInspector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor.Inspector
    source:
      id: CharacterSpriteManagerInspector
      path: ''
      startLine: 412
    syntax:
      content:
        CSharp: 'public class CharacterSpriteManagerInspector : UnityEditor.Editor'
        VB: Public Class CharacterSpriteManagerInspector Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    items:
    - id: Editor.Inspector.CharacterSpriteManagerInspector.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
      commentId: M:Editor.Inspector.CharacterSpriteManagerInspector.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: RenderStaticPreview(string, object[], int, int)
        VB: RenderStaticPreview(String, Object(), Integer, Integer)
      nameWithType:
        CSharp: CharacterSpriteManagerInspector.RenderStaticPreview(string, object[], int, int)
        VB: CharacterSpriteManagerInspector.RenderStaticPreview(String, Object(), Integer, Integer)
      qualifiedName:
        CSharp: Editor.Inspector.CharacterSpriteManagerInspector.RenderStaticPreview(string, object[], int, int)
        VB: Editor.Inspector.CharacterSpriteManagerInspector.RenderStaticPreview(String, Object(), Integer, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector
      source:
        id: RenderStaticPreview
        path: ''
        startLine: 433
      syntax:
        content:
          CSharp: public override Texture2D RenderStaticPreview(string assetPath, object[] subAssets, int width, int height)
          VB: Public Overrides Function RenderStaticPreview(assetPath As String, subAssets As Object(), width As Integer, height As Integer) As Texture2D
        parameters:
        - id: assetPath
          type: System.String
        - id: subAssets
          type: System.Object[]
        - id: width
          type: System.Int32
        - id: height
          type: System.Int32
        return:
          type: Global.Texture2D
      overload: Editor.Inspector.CharacterSpriteManagerInspector.RenderStaticPreview*
    - id: Editor.Inspector.CharacterSpriteManagerInspector.OnInspectorGUI
      commentId: M:Editor.Inspector.CharacterSpriteManagerInspector.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: CharacterSpriteManagerInspector.OnInspectorGUI()
        VB: CharacterSpriteManagerInspector.OnInspectorGUI()
      qualifiedName:
        CSharp: Editor.Inspector.CharacterSpriteManagerInspector.OnInspectorGUI()
        VB: Editor.Inspector.CharacterSpriteManagerInspector.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 593
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI()
      overload: Editor.Inspector.CharacterSpriteManagerInspector.OnInspectorGUI*
  - id: Editor.Inspector.MusicDataInspector
    commentId: T:Editor.Inspector.MusicDataInspector
    language: CSharp
    name:
      CSharp: MusicDataInspector
      VB: MusicDataInspector
    nameWithType:
      CSharp: MusicDataInspector
      VB: MusicDataInspector
    qualifiedName:
      CSharp: Editor.Inspector.MusicDataInspector
      VB: Editor.Inspector.MusicDataInspector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor.Inspector
    source:
      id: MusicDataInspector
      path: ''
      startLine: 615
    syntax:
      content:
        CSharp: 'public class MusicDataInspector : UnityEditor.Editor'
        VB: Public Class MusicDataInspector Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    items:
    - id: Editor.Inspector.MusicDataInspector.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
      commentId: M:Editor.Inspector.MusicDataInspector.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: RenderStaticPreview(string, object[], int, int)
        VB: RenderStaticPreview(String, Object(), Integer, Integer)
      nameWithType:
        CSharp: MusicDataInspector.RenderStaticPreview(string, object[], int, int)
        VB: MusicDataInspector.RenderStaticPreview(String, Object(), Integer, Integer)
      qualifiedName:
        CSharp: Editor.Inspector.MusicDataInspector.RenderStaticPreview(string, object[], int, int)
        VB: Editor.Inspector.MusicDataInspector.RenderStaticPreview(String, Object(), Integer, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector
      source:
        id: RenderStaticPreview
        path: ''
        startLine: 618
      syntax:
        content:
          CSharp: public override Texture2D RenderStaticPreview(string assetPath, object[] subAssets, int width, int height)
          VB: Public Overrides Function RenderStaticPreview(assetPath As String, subAssets As Object(), width As Integer, height As Integer) As Texture2D
        parameters:
        - id: assetPath
          type: System.String
        - id: subAssets
          type: System.Object[]
        - id: width
          type: System.Int32
        - id: height
          type: System.Int32
        return:
          type: Global.Texture2D
      overload: Editor.Inspector.MusicDataInspector.RenderStaticPreview*
  - id: Editor.Inspector.SpriteExpressionCollectionInspector
    commentId: T:Editor.Inspector.SpriteExpressionCollectionInspector
    language: CSharp
    name:
      CSharp: SpriteExpressionCollectionInspector
      VB: SpriteExpressionCollectionInspector
    nameWithType:
      CSharp: SpriteExpressionCollectionInspector
      VB: SpriteExpressionCollectionInspector
    qualifiedName:
      CSharp: Editor.Inspector.SpriteExpressionCollectionInspector
      VB: Editor.Inspector.SpriteExpressionCollectionInspector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor.Inspector
    source:
      id: SpriteExpressionCollectionInspector
      path: ''
      startLine: 640
    syntax:
      content:
        CSharp: 'public class SpriteExpressionCollectionInspector : UnityEditor.Editor'
        VB: Public Class SpriteExpressionCollectionInspector Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    items:
    - id: Editor.Inspector.SpriteExpressionCollectionInspector.OnInspectorGUI
      commentId: M:Editor.Inspector.SpriteExpressionCollectionInspector.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: SpriteExpressionCollectionInspector.OnInspectorGUI()
        VB: SpriteExpressionCollectionInspector.OnInspectorGUI()
      qualifiedName:
        CSharp: Editor.Inspector.SpriteExpressionCollectionInspector.OnInspectorGUI()
        VB: Editor.Inspector.SpriteExpressionCollectionInspector.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 698
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI()
      overload: Editor.Inspector.SpriteExpressionCollectionInspector.OnInspectorGUI*
    - id: Editor.Inspector.SpriteExpressionCollectionInspector.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
      commentId: M:Editor.Inspector.SpriteExpressionCollectionInspector.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: RenderStaticPreview(string, object[], int, int)
        VB: RenderStaticPreview(String, Object(), Integer, Integer)
      nameWithType:
        CSharp: SpriteExpressionCollectionInspector.RenderStaticPreview(string, object[], int, int)
        VB: SpriteExpressionCollectionInspector.RenderStaticPreview(String, Object(), Integer, Integer)
      qualifiedName:
        CSharp: Editor.Inspector.SpriteExpressionCollectionInspector.RenderStaticPreview(string, object[], int, int)
        VB: Editor.Inspector.SpriteExpressionCollectionInspector.RenderStaticPreview(String, Object(), Integer, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector
      source:
        id: RenderStaticPreview
        path: ''
        startLine: 761
      syntax:
        content:
          CSharp: public override Texture2D RenderStaticPreview(string assetPath, object[] subAssets, int width, int height)
          VB: Public Overrides Function RenderStaticPreview(assetPath As String, subAssets As Object(), width As Integer, height As Integer) As Texture2D
        parameters:
        - id: assetPath
          type: System.String
        - id: subAssets
          type: System.Object[]
        - id: width
          type: System.Int32
        - id: height
          type: System.Int32
        return:
          type: Global.Texture2D
      overload: Editor.Inspector.SpriteExpressionCollectionInspector.RenderStaticPreview*
  - id: Editor.Inspector.BulletControlInspector
    commentId: T:Editor.Inspector.BulletControlInspector
    language: CSharp
    name:
      CSharp: BulletControlInspector
      VB: BulletControlInspector
    nameWithType:
      CSharp: BulletControlInspector
      VB: BulletControlInspector
    qualifiedName:
      CSharp: Editor.Inspector.BulletControlInspector
      VB: Editor.Inspector.BulletControlInspector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor.Inspector
    source:
      id: BulletControlInspector
      path: ''
      startLine: 787
    syntax:
      content:
        CSharp: 'public class BulletControlInspector : UnityEditor.Editor'
        VB: Public Class BulletControlInspector Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    items:
    - id: Editor.Inspector.BulletControlInspector.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
      commentId: M:Editor.Inspector.BulletControlInspector.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: RenderStaticPreview(string, object[], int, int)
        VB: RenderStaticPreview(String, Object(), Integer, Integer)
      nameWithType:
        CSharp: BulletControlInspector.RenderStaticPreview(string, object[], int, int)
        VB: BulletControlInspector.RenderStaticPreview(String, Object(), Integer, Integer)
      qualifiedName:
        CSharp: Editor.Inspector.BulletControlInspector.RenderStaticPreview(string, object[], int, int)
        VB: Editor.Inspector.BulletControlInspector.RenderStaticPreview(String, Object(), Integer, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector
      source:
        id: RenderStaticPreview
        path: ''
        startLine: 790
      syntax:
        content:
          CSharp: public override Texture2D RenderStaticPreview(string assetPath, object[] subAssets, int width, int height)
          VB: Public Overrides Function RenderStaticPreview(assetPath As String, subAssets As Object(), width As Integer, height As Integer) As Texture2D
        parameters:
        - id: assetPath
          type: System.String
        - id: subAssets
          type: System.Object[]
        - id: width
          type: System.Int32
        - id: height
          type: System.Int32
        return:
          type: Global.Texture2D
      overload: Editor.Inspector.BulletControlInspector.RenderStaticPreview*
    - id: Editor.Inspector.BulletControlInspector.CreateInspectorGUI
      commentId: M:Editor.Inspector.BulletControlInspector.CreateInspectorGUI
      language: CSharp
      name:
        CSharp: CreateInspectorGUI()
        VB: CreateInspectorGUI()
      nameWithType:
        CSharp: BulletControlInspector.CreateInspectorGUI()
        VB: BulletControlInspector.CreateInspectorGUI()
      qualifiedName:
        CSharp: Editor.Inspector.BulletControlInspector.CreateInspectorGUI()
        VB: Editor.Inspector.BulletControlInspector.CreateInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector
      source:
        id: CreateInspectorGUI
        path: ''
        startLine: 805
      syntax:
        content:
          CSharp: public override VisualElement CreateInspectorGUI()
          VB: Public Overrides Function CreateInspectorGUI() As VisualElement
        return:
          type: Global.VisualElement
      overload: Editor.Inspector.BulletControlInspector.CreateInspectorGUI*
- id: Editor.Inspector.EventSystem
  commentId: N:Editor.Inspector.EventSystem
  language: CSharp
  name:
    CSharp: Editor.Inspector.EventSystem
    VB: Editor.Inspector.EventSystem
  nameWithType:
    CSharp: Editor.Inspector.EventSystem
    VB: Editor.Inspector.EventSystem
  qualifiedName:
    CSharp: Editor.Inspector.EventSystem
    VB: Editor.Inspector.EventSystem
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector
    commentId: T:Editor.Inspector.EventSystem.OverworldStatusChangerInspector
    language: CSharp
    name:
      CSharp: OverworldStatusChangerInspector
      VB: OverworldStatusChangerInspector
    nameWithType:
      CSharp: OverworldStatusChangerInspector
      VB: OverworldStatusChangerInspector
    qualifiedName:
      CSharp: Editor.Inspector.EventSystem.OverworldStatusChangerInspector
      VB: Editor.Inspector.EventSystem.OverworldStatusChangerInspector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor.Inspector.EventSystem
    source:
      id: OverworldStatusChangerInspector
      path: ''
      startLine: 917
    syntax:
      content:
        CSharp: 'public class OverworldStatusChangerInspector : UnityEditor.Editor'
        VB: Public Class OverworldStatusChangerInspector Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    items:
    - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector.elementHeight
      commentId: F:Editor.Inspector.EventSystem.OverworldStatusChangerInspector.elementHeight
      language: CSharp
      name:
        CSharp: elementHeight
        VB: elementHeight
      nameWithType:
        CSharp: OverworldStatusChangerInspector.elementHeight
        VB: OverworldStatusChangerInspector.elementHeight
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.OverworldStatusChangerInspector.elementHeight
        VB: Editor.Inspector.EventSystem.OverworldStatusChangerInspector.elementHeight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: elementHeight
        path: ''
        startLine: 920
      syntax:
        content:
          CSharp: public List<float> elementHeight
          VB: Public elementHeight As List(Of Single)
        return:
          type: System.Collections.Generic.List{System.Single}
    - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector.OnInspectorGUI
      commentId: M:Editor.Inspector.EventSystem.OverworldStatusChangerInspector.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: OverworldStatusChangerInspector.OnInspectorGUI()
        VB: OverworldStatusChangerInspector.OnInspectorGUI()
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.OverworldStatusChangerInspector.OnInspectorGUI()
        VB: Editor.Inspector.EventSystem.OverworldStatusChangerInspector.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 941
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI()
      overload: Editor.Inspector.EventSystem.OverworldStatusChangerInspector.OnInspectorGUI*
  - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor
    commentId: T:Editor.Inspector.EventSystem.OverworldEventTriggerEditor
    language: CSharp
    name:
      CSharp: OverworldEventTriggerEditor
      VB: OverworldEventTriggerEditor
    nameWithType:
      CSharp: OverworldEventTriggerEditor
      VB: OverworldEventTriggerEditor
    qualifiedName:
      CSharp: Editor.Inspector.EventSystem.OverworldEventTriggerEditor
      VB: Editor.Inspector.EventSystem.OverworldEventTriggerEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor.Inspector.EventSystem
    source:
      id: OverworldEventTriggerEditor
      path: ''
      startLine: 1087
    syntax:
      content:
        CSharp: 'public class OverworldEventTriggerEditor : UnityEditor.Editor'
        VB: Public Class OverworldEventTriggerEditor Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    items:
    - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor.elementHeight
      commentId: F:Editor.Inspector.EventSystem.OverworldEventTriggerEditor.elementHeight
      language: CSharp
      name:
        CSharp: elementHeight
        VB: elementHeight
      nameWithType:
        CSharp: OverworldEventTriggerEditor.elementHeight
        VB: OverworldEventTriggerEditor.elementHeight
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.OverworldEventTriggerEditor.elementHeight
        VB: Editor.Inspector.EventSystem.OverworldEventTriggerEditor.elementHeight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: elementHeight
        path: ''
        startLine: 1090
      syntax:
        content:
          CSharp: public List<float> elementHeight
          VB: Public elementHeight As List(Of Single)
        return:
          type: System.Collections.Generic.List{System.Single}
    - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor.OnInspectorGUI
      commentId: M:Editor.Inspector.EventSystem.OverworldEventTriggerEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: OverworldEventTriggerEditor.OnInspectorGUI()
        VB: OverworldEventTriggerEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.OverworldEventTriggerEditor.OnInspectorGUI()
        VB: Editor.Inspector.EventSystem.OverworldEventTriggerEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 2259
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI()
      overload: Editor.Inspector.EventSystem.OverworldEventTriggerEditor.OnInspectorGUI*
  - id: Editor.Inspector.EventSystem.EntrySaver
    commentId: T:Editor.Inspector.EventSystem.EntrySaver
    language: CSharp
    name:
      CSharp: EntrySaver
      VB: EntrySaver
    nameWithType:
      CSharp: EntrySaver
      VB: EntrySaver
    qualifiedName:
      CSharp: Editor.Inspector.EventSystem.EntrySaver
      VB: Editor.Inspector.EventSystem.EntrySaver
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor.Inspector.EventSystem
    source:
      id: EntrySaver
      path: ''
      startLine: 2382
    syntax:
      content:
        CSharp: public static class EntrySaver
        VB: Public Module EntrySaver
    inheritance:
    - System.Object
    items:
    - id: Editor.Inspector.EventSystem.EntrySaver.GetFactEntry(System.Boolean,System.String)
      commentId: M:Editor.Inspector.EventSystem.EntrySaver.GetFactEntry(System.Boolean,System.String)
      language: CSharp
      name:
        CSharp: GetFactEntry(bool, string)
        VB: GetFactEntry(Boolean, String)
      nameWithType:
        CSharp: EntrySaver.GetFactEntry(bool, string)
        VB: EntrySaver.GetFactEntry(Boolean, String)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.EntrySaver.GetFactEntry(bool, string)
        VB: Editor.Inspector.EventSystem.EntrySaver.GetFactEntry(Boolean, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: GetFactEntry
        path: ''
        startLine: 2384
      syntax:
        content:
          CSharp: public static FactEntry[] GetFactEntry(bool isGlobal, string sceneName)
          VB: Public Shared Function GetFactEntry(isGlobal As Boolean, sceneName As String) As FactEntry()
        parameters:
        - id: isGlobal
          type: System.Boolean
        - id: sceneName
          type: System.String
        return:
          type: Global.FactEntry[]
      overload: Editor.Inspector.EventSystem.EntrySaver.GetFactEntry*
    - id: Editor.Inspector.EventSystem.EntrySaver.GetEventEntry(System.Boolean,System.String)
      commentId: M:Editor.Inspector.EventSystem.EntrySaver.GetEventEntry(System.Boolean,System.String)
      language: CSharp
      name:
        CSharp: GetEventEntry(bool, string)
        VB: GetEventEntry(Boolean, String)
      nameWithType:
        CSharp: EntrySaver.GetEventEntry(bool, string)
        VB: EntrySaver.GetEventEntry(Boolean, String)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.EntrySaver.GetEventEntry(bool, string)
        VB: Editor.Inspector.EventSystem.EntrySaver.GetEventEntry(Boolean, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: GetEventEntry
        path: ''
        startLine: 2400
      syntax:
        content:
          CSharp: public static EventEntry[] GetEventEntry(bool isGlobal, string sceneName)
          VB: Public Shared Function GetEventEntry(isGlobal As Boolean, sceneName As String) As EventEntry()
        parameters:
        - id: isGlobal
          type: System.Boolean
        - id: sceneName
          type: System.String
        return:
          type: Global.EventEntry[]
      overload: Editor.Inspector.EventSystem.EntrySaver.GetEventEntry*
    - id: Editor.Inspector.EventSystem.EntrySaver.GetRuleEntry(System.Boolean,System.String)
      commentId: M:Editor.Inspector.EventSystem.EntrySaver.GetRuleEntry(System.Boolean,System.String)
      language: CSharp
      name:
        CSharp: GetRuleEntry(bool, string)
        VB: GetRuleEntry(Boolean, String)
      nameWithType:
        CSharp: EntrySaver.GetRuleEntry(bool, string)
        VB: EntrySaver.GetRuleEntry(Boolean, String)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.EntrySaver.GetRuleEntry(bool, string)
        VB: Editor.Inspector.EventSystem.EntrySaver.GetRuleEntry(Boolean, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: GetRuleEntry
        path: ''
        startLine: 2416
      syntax:
        content:
          CSharp: public static RuleEntry[] GetRuleEntry(bool isGlobal, string sceneName)
          VB: Public Shared Function GetRuleEntry(isGlobal As Boolean, sceneName As String) As RuleEntry()
        parameters:
        - id: isGlobal
          type: System.Boolean
        - id: sceneName
          type: System.String
        return:
          type: Global.RuleEntry[]
      overload: Editor.Inspector.EventSystem.EntrySaver.GetRuleEntry*
    - id: Editor.Inspector.EventSystem.EntrySaver.EventEntryField(Rect,SerializedProperty,System.Boolean,System.String)
      commentId: M:Editor.Inspector.EventSystem.EntrySaver.EventEntryField(Rect,SerializedProperty,System.Boolean,System.String)
      language: CSharp
      name:
        CSharp: EventEntryField(Rect, SerializedProperty, bool, string)
        VB: EventEntryField(Rect, SerializedProperty, Boolean, String)
      nameWithType:
        CSharp: EntrySaver.EventEntryField(Rect, SerializedProperty, bool, string)
        VB: EntrySaver.EventEntryField(Rect, SerializedProperty, Boolean, String)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.EntrySaver.EventEntryField(Rect, SerializedProperty, bool, string)
        VB: Editor.Inspector.EventSystem.EntrySaver.EventEntryField(Rect, SerializedProperty, Boolean, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: EventEntryField
        path: ''
        startLine: 2433
      syntax:
        content:
          CSharp: public static bool EventEntryField(Rect rect, SerializedProperty property, bool isGlobal, string sceneName)
          VB: Public Shared Function EventEntryField(rect As Rect, [property] As SerializedProperty, isGlobal As Boolean, sceneName As String) As Boolean
        parameters:
        - id: rect
          type: Global.Rect
        - id: property
          type: Global.SerializedProperty
        - id: isGlobal
          type: System.Boolean
        - id: sceneName
          type: System.String
        return:
          type: System.Boolean
      overload: Editor.Inspector.EventSystem.EntrySaver.EventEntryField*
    - id: Editor.Inspector.EventSystem.EntrySaver.FactEntryField(Rect,SerializedProperty,System.Boolean,System.String,System.Boolean,System.Boolean)
      commentId: M:Editor.Inspector.EventSystem.EntrySaver.FactEntryField(Rect,SerializedProperty,System.Boolean,System.String,System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: FactEntryField(Rect, SerializedProperty, bool, string, bool, bool)
        VB: FactEntryField(Rect, SerializedProperty, Boolean, String, Boolean, Boolean)
      nameWithType:
        CSharp: EntrySaver.FactEntryField(Rect, SerializedProperty, bool, string, bool, bool)
        VB: EntrySaver.FactEntryField(Rect, SerializedProperty, Boolean, String, Boolean, Boolean)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.EntrySaver.FactEntryField(Rect, SerializedProperty, bool, string, bool, bool)
        VB: Editor.Inspector.EventSystem.EntrySaver.FactEntryField(Rect, SerializedProperty, Boolean, String, Boolean, Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: FactEntryField
        path: ''
        startLine: 2461
      syntax:
        content:
          CSharp: public static bool FactEntryField(Rect rect, SerializedProperty fact, bool isGlobal, string sceneName, bool isDisplayValue = true, bool setValue = false)
          VB: Public Shared Function FactEntryField(rect As Rect, fact As SerializedProperty, isGlobal As Boolean, sceneName As String, isDisplayValue As Boolean = True, setValue As Boolean = False) As Boolean
        parameters:
        - id: rect
          type: Global.Rect
        - id: fact
          type: Global.SerializedProperty
        - id: isGlobal
          type: System.Boolean
        - id: sceneName
          type: System.String
        - id: isDisplayValue
          type: System.Boolean
        - id: setValue
          type: System.Boolean
        return:
          type: System.Boolean
      overload: Editor.Inspector.EventSystem.EntrySaver.FactEntryField*
  - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
    commentId: T:Editor.Inspector.EventSystem.ReorderableListInspector`1
    language: CSharp
    name:
      CSharp: ReorderableListInspector<T>
      VB: ReorderableListInspector(Of T)
    nameWithType:
      CSharp: ReorderableListInspector<T>
      VB: ReorderableListInspector(Of T)
    qualifiedName:
      CSharp: Editor.Inspector.EventSystem.ReorderableListInspector<T>
      VB: Editor.Inspector.EventSystem.ReorderableListInspector(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor.Inspector.EventSystem
    source:
      id: ReorderableListInspector
      path: ''
      startLine: 2549
    syntax:
      content:
        CSharp: 'public abstract class ReorderableListInspector<T> : UnityEditor.Editor where T : class, new()'
        VB: Public MustInherit Class ReorderableListInspector(Of T As {Class, New}) Inherits UnityEditor.Editor
      typeParameters:
      - id: T
    inheritance:
    - System.Object
    items:
    - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.elementHeight
      commentId: F:Editor.Inspector.EventSystem.ReorderableListInspector`1.elementHeight
      language: CSharp
      name:
        CSharp: elementHeight
        VB: elementHeight
      nameWithType:
        CSharp: ReorderableListInspector<T>.elementHeight
        VB: ReorderableListInspector(Of T).elementHeight
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.ReorderableListInspector<T>.elementHeight
        VB: Editor.Inspector.EventSystem.ReorderableListInspector(Of T).elementHeight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: elementHeight
        path: ''
        startLine: 2551
      syntax:
        content:
          CSharp: public List<float> elementHeight
          VB: Public elementHeight As List(Of Single)
        return:
          type: System.Collections.Generic.List{System.Single}
    - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.extraHeight
      commentId: F:Editor.Inspector.EventSystem.ReorderableListInspector`1.extraHeight
      language: CSharp
      name:
        CSharp: extraHeight
        VB: extraHeight
      nameWithType:
        CSharp: ReorderableListInspector<T>.extraHeight
        VB: ReorderableListInspector(Of T).extraHeight
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.ReorderableListInspector<T>.extraHeight
        VB: Editor.Inspector.EventSystem.ReorderableListInspector(Of T).extraHeight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: extraHeight
        path: ''
        startLine: 2552
      syntax:
        content:
          CSharp: public float extraHeight
          VB: Public extraHeight As Single
        return:
          type: System.Single
    - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName
      commentId: P:Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName
      language: CSharp
      name:
        CSharp: PropertyName
        VB: PropertyName
      nameWithType:
        CSharp: ReorderableListInspector<T>.PropertyName
        VB: ReorderableListInspector(Of T).PropertyName
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.ReorderableListInspector<T>.PropertyName
        VB: Editor.Inspector.EventSystem.ReorderableListInspector(Of T).PropertyName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: PropertyName
        path: ''
        startLine: 2555
      syntax:
        content:
          CSharp: protected abstract string PropertyName { get; }
          VB: Protected MustOverride ReadOnly Property PropertyName As String
        parameters: []
        return:
          type: System.String
      overload: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName*
    - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath
      commentId: P:Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath
      language: CSharp
      name:
        CSharp: IconPath
        VB: IconPath
      nameWithType:
        CSharp: ReorderableListInspector<T>.IconPath
        VB: ReorderableListInspector(Of T).IconPath
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.ReorderableListInspector<T>.IconPath
        VB: Editor.Inspector.EventSystem.ReorderableListInspector(Of T).IconPath
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: IconPath
        path: ''
        startLine: 2558
      syntax:
        content:
          CSharp: protected abstract string IconPath { get; }
          VB: Protected MustOverride ReadOnly Property IconPath As String
        parameters: []
        return:
          type: System.String
      overload: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath*
    - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd
      commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd
      language: CSharp
      name:
        CSharp: OnEnableAdd()
        VB: OnEnableAdd()
      nameWithType:
        CSharp: ReorderableListInspector<T>.OnEnableAdd()
        VB: ReorderableListInspector(Of T).OnEnableAdd()
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.ReorderableListInspector<T>.OnEnableAdd()
        VB: Editor.Inspector.EventSystem.ReorderableListInspector(Of T).OnEnableAdd()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: OnEnableAdd
        path: ''
        startLine: 2566
      syntax:
        content:
          CSharp: protected abstract void OnEnableAdd()
          VB: Protected MustOverride Sub OnEnableAdd()
      overload: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd*
    - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement(Rect,SerializedProperty,System.Int32)
      commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement(Rect,SerializedProperty,System.Int32)
      language: CSharp
      name:
        CSharp: DrawElement(Rect, SerializedProperty, int)
        VB: DrawElement(Rect, SerializedProperty, Integer)
      nameWithType:
        CSharp: ReorderableListInspector<T>.DrawElement(Rect, SerializedProperty, int)
        VB: ReorderableListInspector(Of T).DrawElement(Rect, SerializedProperty, Integer)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.ReorderableListInspector<T>.DrawElement(Rect, SerializedProperty, int)
        VB: Editor.Inspector.EventSystem.ReorderableListInspector(Of T).DrawElement(Rect, SerializedProperty, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: DrawElement
        path: ''
        startLine: 2568
      syntax:
        content:
          CSharp: protected abstract void DrawElement(Rect rect, SerializedProperty element, int index)
          VB: Protected MustOverride Sub DrawElement(rect As Rect, element As SerializedProperty, index As Integer)
        parameters:
        - id: rect
          type: Global.Rect
        - id: element
          type: Global.SerializedProperty
        - id: index
          type: System.Int32
      overload: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement*
    - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection(SerializedProperty)
      commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection(SerializedProperty)
      language: CSharp
      name:
        CSharp: RenameDetection(SerializedProperty)
        VB: RenameDetection(SerializedProperty)
      nameWithType:
        CSharp: ReorderableListInspector<T>.RenameDetection(SerializedProperty)
        VB: ReorderableListInspector(Of T).RenameDetection(SerializedProperty)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.ReorderableListInspector<T>.RenameDetection(SerializedProperty)
        VB: Editor.Inspector.EventSystem.ReorderableListInspector(Of T).RenameDetection(SerializedProperty)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: RenameDetection
        path: ''
        startLine: 2570
      syntax:
        content:
          CSharp: protected abstract void RenameDetection(SerializedProperty element)
          VB: Protected MustOverride Sub RenameDetection(element As SerializedProperty)
        parameters:
        - id: element
          type: Global.SerializedProperty
      overload: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection*
    - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader(Rect)
      commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader(Rect)
      language: CSharp
      name:
        CSharp: DrawHeader(Rect)
        VB: DrawHeader(Rect)
      nameWithType:
        CSharp: ReorderableListInspector<T>.DrawHeader(Rect)
        VB: ReorderableListInspector(Of T).DrawHeader(Rect)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.ReorderableListInspector<T>.DrawHeader(Rect)
        VB: Editor.Inspector.EventSystem.ReorderableListInspector(Of T).DrawHeader(Rect)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: DrawHeader
        path: ''
        startLine: 2572
      syntax:
        content:
          CSharp: protected virtual void DrawHeader(Rect rect)
          VB: Protected Overridable Sub DrawHeader(rect As Rect)
        parameters:
        - id: rect
          type: Global.Rect
      overload: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader*
    - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement(SerializedProperty)
      commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement(SerializedProperty)
      language: CSharp
      name:
        CSharp: OnAddElement(SerializedProperty)
        VB: OnAddElement(SerializedProperty)
      nameWithType:
        CSharp: ReorderableListInspector<T>.OnAddElement(SerializedProperty)
        VB: ReorderableListInspector(Of T).OnAddElement(SerializedProperty)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.ReorderableListInspector<T>.OnAddElement(SerializedProperty)
        VB: Editor.Inspector.EventSystem.ReorderableListInspector(Of T).OnAddElement(SerializedProperty)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: OnAddElement
        path: ''
        startLine: 2577
      syntax:
        content:
          CSharp: protected virtual void OnAddElement(SerializedProperty listProperty)
          VB: Protected Overridable Sub OnAddElement(listProperty As SerializedProperty)
        parameters:
        - id: listProperty
          type: Global.SerializedProperty
      overload: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement*
    - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement(SerializedProperty,System.Int32)
      commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement(SerializedProperty,System.Int32)
      language: CSharp
      name:
        CSharp: OnRemoveElement(SerializedProperty, int)
        VB: OnRemoveElement(SerializedProperty, Integer)
      nameWithType:
        CSharp: ReorderableListInspector<T>.OnRemoveElement(SerializedProperty, int)
        VB: ReorderableListInspector(Of T).OnRemoveElement(SerializedProperty, Integer)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.ReorderableListInspector<T>.OnRemoveElement(SerializedProperty, int)
        VB: Editor.Inspector.EventSystem.ReorderableListInspector(Of T).OnRemoveElement(SerializedProperty, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: OnRemoveElement
        path: ''
        startLine: 2582
      syntax:
        content:
          CSharp: protected virtual void OnRemoveElement(SerializedProperty listProperty, int index)
          VB: Protected Overridable Sub OnRemoveElement(listProperty As SerializedProperty, index As Integer)
        parameters:
        - id: listProperty
          type: Global.SerializedProperty
        - id: index
          type: System.Int32
      overload: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement*
    - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName(SerializedObject)
      commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName(SerializedObject)
      language: CSharp
      name:
        CSharp: GetSceneName(SerializedObject)
        VB: GetSceneName(SerializedObject)
      nameWithType:
        CSharp: ReorderableListInspector<T>.GetSceneName(SerializedObject)
        VB: ReorderableListInspector(Of T).GetSceneName(SerializedObject)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.ReorderableListInspector<T>.GetSceneName(SerializedObject)
        VB: Editor.Inspector.EventSystem.ReorderableListInspector(Of T).GetSceneName(SerializedObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: GetSceneName
        path: ''
        startLine: 2592
      syntax:
        content:
          CSharp: protected static string GetSceneName(SerializedObject serializedObject)
          VB: Protected Shared Function GetSceneName(serializedObject As SerializedObject) As String
        parameters:
        - id: serializedObject
          type: Global.SerializedObject
        return:
          type: System.String
      overload: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName*
    - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI
      commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: ReorderableListInspector<T>.OnInspectorGUI()
        VB: ReorderableListInspector(Of T).OnInspectorGUI()
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.ReorderableListInspector<T>.OnInspectorGUI()
        VB: Editor.Inspector.EventSystem.ReorderableListInspector(Of T).OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 2661
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI()
      overload: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI*
    - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
      commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: RenderStaticPreview(string, object[], int, int)
        VB: RenderStaticPreview(String, Object(), Integer, Integer)
      nameWithType:
        CSharp: ReorderableListInspector<T>.RenderStaticPreview(string, object[], int, int)
        VB: ReorderableListInspector(Of T).RenderStaticPreview(String, Object(), Integer, Integer)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.ReorderableListInspector<T>.RenderStaticPreview(string, object[], int, int)
        VB: Editor.Inspector.EventSystem.ReorderableListInspector(Of T).RenderStaticPreview(String, Object(), Integer, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: RenderStaticPreview
        path: ''
        startLine: 2691
      syntax:
        content:
          CSharp: public override Texture2D RenderStaticPreview(string assetPath, object[] subAssets, int width, int height)
          VB: Public Overrides Function RenderStaticPreview(assetPath As String, subAssets As Object(), width As Integer, height As Integer) As Texture2D
        parameters:
        - id: assetPath
          type: System.String
        - id: subAssets
          type: System.Object[]
        - id: width
          type: System.Int32
        - id: height
          type: System.Int32
        return:
          type: Global.Texture2D
      overload: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview*
  - id: Editor.Inspector.EventSystem.FactTableInspector
    commentId: T:Editor.Inspector.EventSystem.FactTableInspector
    language: CSharp
    name:
      CSharp: FactTableInspector
      VB: FactTableInspector
    nameWithType:
      CSharp: FactTableInspector
      VB: FactTableInspector
    qualifiedName:
      CSharp: Editor.Inspector.EventSystem.FactTableInspector
      VB: Editor.Inspector.EventSystem.FactTableInspector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor.Inspector.EventSystem
    source:
      id: FactTableInspector
      path: ''
      startLine: 2712
    syntax:
      content:
        CSharp: 'public class FactTableInspector : ReorderableListInspector<FactTable>'
        VB: Public Class FactTableInspector Inherits ReorderableListInspector(Of FactTable)
    inheritance:
    - System.Object
    - Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}
    inheritedMembers:
    - Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.elementHeight
    - Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.extraHeight
    - Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.GetSceneName(SerializedObject)
    - Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnInspectorGUI
    - Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
    items:
    - id: Editor.Inspector.EventSystem.FactTableInspector.PropertyName
      commentId: P:Editor.Inspector.EventSystem.FactTableInspector.PropertyName
      language: CSharp
      name:
        CSharp: PropertyName
        VB: PropertyName
      nameWithType:
        CSharp: FactTableInspector.PropertyName
        VB: FactTableInspector.PropertyName
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.FactTableInspector.PropertyName
        VB: Editor.Inspector.EventSystem.FactTableInspector.PropertyName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: PropertyName
        path: ''
        startLine: 2715
      syntax:
        content:
          CSharp: protected override string PropertyName { get; }
          VB: Protected Overrides ReadOnly Property PropertyName As String
        parameters: []
        return:
          type: System.String
      overload: Editor.Inspector.EventSystem.FactTableInspector.PropertyName*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.PropertyName
    - id: Editor.Inspector.EventSystem.FactTableInspector.IconPath
      commentId: P:Editor.Inspector.EventSystem.FactTableInspector.IconPath
      language: CSharp
      name:
        CSharp: IconPath
        VB: IconPath
      nameWithType:
        CSharp: FactTableInspector.IconPath
        VB: FactTableInspector.IconPath
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.FactTableInspector.IconPath
        VB: Editor.Inspector.EventSystem.FactTableInspector.IconPath
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: IconPath
        path: ''
        startLine: 2716
      syntax:
        content:
          CSharp: protected override string IconPath { get; }
          VB: Protected Overrides ReadOnly Property IconPath As String
        parameters: []
        return:
          type: System.String
      overload: Editor.Inspector.EventSystem.FactTableInspector.IconPath*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.IconPath
    - id: Editor.Inspector.EventSystem.FactTableInspector.OnEnableAdd
      commentId: M:Editor.Inspector.EventSystem.FactTableInspector.OnEnableAdd
      language: CSharp
      name:
        CSharp: OnEnableAdd()
        VB: OnEnableAdd()
      nameWithType:
        CSharp: FactTableInspector.OnEnableAdd()
        VB: FactTableInspector.OnEnableAdd()
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.FactTableInspector.OnEnableAdd()
        VB: Editor.Inspector.EventSystem.FactTableInspector.OnEnableAdd()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: OnEnableAdd
        path: ''
        startLine: 2718
      syntax:
        content:
          CSharp: protected override void OnEnableAdd()
          VB: Protected Overrides Sub OnEnableAdd()
      overload: Editor.Inspector.EventSystem.FactTableInspector.OnEnableAdd*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnEnableAdd
    - id: Editor.Inspector.EventSystem.FactTableInspector.DrawElement(Rect,SerializedProperty,System.Int32)
      commentId: M:Editor.Inspector.EventSystem.FactTableInspector.DrawElement(Rect,SerializedProperty,System.Int32)
      language: CSharp
      name:
        CSharp: DrawElement(Rect, SerializedProperty, int)
        VB: DrawElement(Rect, SerializedProperty, Integer)
      nameWithType:
        CSharp: FactTableInspector.DrawElement(Rect, SerializedProperty, int)
        VB: FactTableInspector.DrawElement(Rect, SerializedProperty, Integer)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.FactTableInspector.DrawElement(Rect, SerializedProperty, int)
        VB: Editor.Inspector.EventSystem.FactTableInspector.DrawElement(Rect, SerializedProperty, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: DrawElement
        path: ''
        startLine: 2720
      syntax:
        content:
          CSharp: protected override void DrawElement(Rect rect, SerializedProperty element, int index)
          VB: Protected Overrides Sub DrawElement(rect As Rect, element As SerializedProperty, index As Integer)
        parameters:
        - id: rect
          type: Global.Rect
        - id: element
          type: Global.SerializedProperty
        - id: index
          type: System.Int32
      overload: Editor.Inspector.EventSystem.FactTableInspector.DrawElement*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawElement(Rect,SerializedProperty,System.Int32)
    - id: Editor.Inspector.EventSystem.FactTableInspector.DrawHeader(Rect)
      commentId: M:Editor.Inspector.EventSystem.FactTableInspector.DrawHeader(Rect)
      language: CSharp
      name:
        CSharp: DrawHeader(Rect)
        VB: DrawHeader(Rect)
      nameWithType:
        CSharp: FactTableInspector.DrawHeader(Rect)
        VB: FactTableInspector.DrawHeader(Rect)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.FactTableInspector.DrawHeader(Rect)
        VB: Editor.Inspector.EventSystem.FactTableInspector.DrawHeader(Rect)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: DrawHeader
        path: ''
        startLine: 2744
      syntax:
        content:
          CSharp: protected override void DrawHeader(Rect rect)
          VB: Protected Overrides Sub DrawHeader(rect As Rect)
        parameters:
        - id: rect
          type: Global.Rect
      overload: Editor.Inspector.EventSystem.FactTableInspector.DrawHeader*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawHeader(Rect)
    - id: Editor.Inspector.EventSystem.FactTableInspector.RenameDetection(SerializedProperty)
      commentId: M:Editor.Inspector.EventSystem.FactTableInspector.RenameDetection(SerializedProperty)
      language: CSharp
      name:
        CSharp: RenameDetection(SerializedProperty)
        VB: RenameDetection(SerializedProperty)
      nameWithType:
        CSharp: FactTableInspector.RenameDetection(SerializedProperty)
        VB: FactTableInspector.RenameDetection(SerializedProperty)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.FactTableInspector.RenameDetection(SerializedProperty)
        VB: Editor.Inspector.EventSystem.FactTableInspector.RenameDetection(SerializedProperty)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: RenameDetection
        path: ''
        startLine: 2754
      syntax:
        content:
          CSharp: protected override void RenameDetection(SerializedProperty element)
          VB: Protected Overrides Sub RenameDetection(element As SerializedProperty)
        parameters:
        - id: element
          type: Global.SerializedProperty
      overload: Editor.Inspector.EventSystem.FactTableInspector.RenameDetection*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenameDetection(SerializedProperty)
    - id: Editor.Inspector.EventSystem.FactTableInspector.OnAddElement(SerializedProperty)
      commentId: M:Editor.Inspector.EventSystem.FactTableInspector.OnAddElement(SerializedProperty)
      language: CSharp
      name:
        CSharp: OnAddElement(SerializedProperty)
        VB: OnAddElement(SerializedProperty)
      nameWithType:
        CSharp: FactTableInspector.OnAddElement(SerializedProperty)
        VB: FactTableInspector.OnAddElement(SerializedProperty)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.FactTableInspector.OnAddElement(SerializedProperty)
        VB: Editor.Inspector.EventSystem.FactTableInspector.OnAddElement(SerializedProperty)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: OnAddElement
        path: ''
        startLine: 2769
      syntax:
        content:
          CSharp: protected override void OnAddElement(SerializedProperty listProperty)
          VB: Protected Overrides Sub OnAddElement(listProperty As SerializedProperty)
        parameters:
        - id: listProperty
          type: Global.SerializedProperty
      overload: Editor.Inspector.EventSystem.FactTableInspector.OnAddElement*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnAddElement(SerializedProperty)
    - id: Editor.Inspector.EventSystem.FactTableInspector.OnRemoveElement(SerializedProperty,System.Int32)
      commentId: M:Editor.Inspector.EventSystem.FactTableInspector.OnRemoveElement(SerializedProperty,System.Int32)
      language: CSharp
      name:
        CSharp: OnRemoveElement(SerializedProperty, int)
        VB: OnRemoveElement(SerializedProperty, Integer)
      nameWithType:
        CSharp: FactTableInspector.OnRemoveElement(SerializedProperty, int)
        VB: FactTableInspector.OnRemoveElement(SerializedProperty, Integer)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.FactTableInspector.OnRemoveElement(SerializedProperty, int)
        VB: Editor.Inspector.EventSystem.FactTableInspector.OnRemoveElement(SerializedProperty, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: OnRemoveElement
        path: ''
        startLine: 2777
      syntax:
        content:
          CSharp: protected override void OnRemoveElement(SerializedProperty listProperty, int index)
          VB: Protected Overrides Sub OnRemoveElement(listProperty As SerializedProperty, index As Integer)
        parameters:
        - id: listProperty
          type: Global.SerializedProperty
        - id: index
          type: System.Int32
      overload: Editor.Inspector.EventSystem.FactTableInspector.OnRemoveElement*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnRemoveElement(SerializedProperty,System.Int32)
  - id: Editor.Inspector.EventSystem.EventTableInspector
    commentId: T:Editor.Inspector.EventSystem.EventTableInspector
    language: CSharp
    name:
      CSharp: EventTableInspector
      VB: EventTableInspector
    nameWithType:
      CSharp: EventTableInspector
      VB: EventTableInspector
    qualifiedName:
      CSharp: Editor.Inspector.EventSystem.EventTableInspector
      VB: Editor.Inspector.EventSystem.EventTableInspector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor.Inspector.EventSystem
    source:
      id: EventTableInspector
      path: ''
      startLine: 2785
    syntax:
      content:
        CSharp: 'public class EventTableInspector : ReorderableListInspector<EventTable>'
        VB: Public Class EventTableInspector Inherits ReorderableListInspector(Of EventTable)
    inheritance:
    - System.Object
    - Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}
    inheritedMembers:
    - Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.elementHeight
    - Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.extraHeight
    - Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.GetSceneName(SerializedObject)
    - Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnInspectorGUI
    - Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
    items:
    - id: Editor.Inspector.EventSystem.EventTableInspector.PropertyName
      commentId: P:Editor.Inspector.EventSystem.EventTableInspector.PropertyName
      language: CSharp
      name:
        CSharp: PropertyName
        VB: PropertyName
      nameWithType:
        CSharp: EventTableInspector.PropertyName
        VB: EventTableInspector.PropertyName
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.EventTableInspector.PropertyName
        VB: Editor.Inspector.EventSystem.EventTableInspector.PropertyName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: PropertyName
        path: ''
        startLine: 2788
      syntax:
        content:
          CSharp: protected override string PropertyName { get; }
          VB: Protected Overrides ReadOnly Property PropertyName As String
        parameters: []
        return:
          type: System.String
      overload: Editor.Inspector.EventSystem.EventTableInspector.PropertyName*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.PropertyName
    - id: Editor.Inspector.EventSystem.EventTableInspector.IconPath
      commentId: P:Editor.Inspector.EventSystem.EventTableInspector.IconPath
      language: CSharp
      name:
        CSharp: IconPath
        VB: IconPath
      nameWithType:
        CSharp: EventTableInspector.IconPath
        VB: EventTableInspector.IconPath
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.EventTableInspector.IconPath
        VB: Editor.Inspector.EventSystem.EventTableInspector.IconPath
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: IconPath
        path: ''
        startLine: 2789
      syntax:
        content:
          CSharp: protected override string IconPath { get; }
          VB: Protected Overrides ReadOnly Property IconPath As String
        parameters: []
        return:
          type: System.String
      overload: Editor.Inspector.EventSystem.EventTableInspector.IconPath*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.IconPath
    - id: Editor.Inspector.EventSystem.EventTableInspector.OnEnableAdd
      commentId: M:Editor.Inspector.EventSystem.EventTableInspector.OnEnableAdd
      language: CSharp
      name:
        CSharp: OnEnableAdd()
        VB: OnEnableAdd()
      nameWithType:
        CSharp: EventTableInspector.OnEnableAdd()
        VB: EventTableInspector.OnEnableAdd()
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.EventTableInspector.OnEnableAdd()
        VB: Editor.Inspector.EventSystem.EventTableInspector.OnEnableAdd()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: OnEnableAdd
        path: ''
        startLine: 2790
      syntax:
        content:
          CSharp: protected override void OnEnableAdd()
          VB: Protected Overrides Sub OnEnableAdd()
      overload: Editor.Inspector.EventSystem.EventTableInspector.OnEnableAdd*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnEnableAdd
    - id: Editor.Inspector.EventSystem.EventTableInspector.DrawElement(Rect,SerializedProperty,System.Int32)
      commentId: M:Editor.Inspector.EventSystem.EventTableInspector.DrawElement(Rect,SerializedProperty,System.Int32)
      language: CSharp
      name:
        CSharp: DrawElement(Rect, SerializedProperty, int)
        VB: DrawElement(Rect, SerializedProperty, Integer)
      nameWithType:
        CSharp: EventTableInspector.DrawElement(Rect, SerializedProperty, int)
        VB: EventTableInspector.DrawElement(Rect, SerializedProperty, Integer)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.EventTableInspector.DrawElement(Rect, SerializedProperty, int)
        VB: Editor.Inspector.EventSystem.EventTableInspector.DrawElement(Rect, SerializedProperty, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: DrawElement
        path: ''
        startLine: 2792
      syntax:
        content:
          CSharp: protected override void DrawElement(Rect rect, SerializedProperty element, int index)
          VB: Protected Overrides Sub DrawElement(rect As Rect, element As SerializedProperty, index As Integer)
        parameters:
        - id: rect
          type: Global.Rect
        - id: element
          type: Global.SerializedProperty
        - id: index
          type: System.Int32
      overload: Editor.Inspector.EventSystem.EventTableInspector.DrawElement*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawElement(Rect,SerializedProperty,System.Int32)
    - id: Editor.Inspector.EventSystem.EventTableInspector.RenameDetection(SerializedProperty)
      commentId: M:Editor.Inspector.EventSystem.EventTableInspector.RenameDetection(SerializedProperty)
      language: CSharp
      name:
        CSharp: RenameDetection(SerializedProperty)
        VB: RenameDetection(SerializedProperty)
      nameWithType:
        CSharp: EventTableInspector.RenameDetection(SerializedProperty)
        VB: EventTableInspector.RenameDetection(SerializedProperty)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.EventTableInspector.RenameDetection(SerializedProperty)
        VB: Editor.Inspector.EventSystem.EventTableInspector.RenameDetection(SerializedProperty)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: RenameDetection
        path: ''
        startLine: 2857
      syntax:
        content:
          CSharp: protected override void RenameDetection(SerializedProperty element)
          VB: Protected Overrides Sub RenameDetection(element As SerializedProperty)
        parameters:
        - id: element
          type: Global.SerializedProperty
      overload: Editor.Inspector.EventSystem.EventTableInspector.RenameDetection*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenameDetection(SerializedProperty)
    - id: Editor.Inspector.EventSystem.EventTableInspector.DrawHeader(Rect)
      commentId: M:Editor.Inspector.EventSystem.EventTableInspector.DrawHeader(Rect)
      language: CSharp
      name:
        CSharp: DrawHeader(Rect)
        VB: DrawHeader(Rect)
      nameWithType:
        CSharp: EventTableInspector.DrawHeader(Rect)
        VB: EventTableInspector.DrawHeader(Rect)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.EventTableInspector.DrawHeader(Rect)
        VB: Editor.Inspector.EventSystem.EventTableInspector.DrawHeader(Rect)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: DrawHeader
        path: ''
        startLine: 2870
      syntax:
        content:
          CSharp: protected override void DrawHeader(Rect rect)
          VB: Protected Overrides Sub DrawHeader(rect As Rect)
        parameters:
        - id: rect
          type: Global.Rect
      overload: Editor.Inspector.EventSystem.EventTableInspector.DrawHeader*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawHeader(Rect)
    - id: Editor.Inspector.EventSystem.EventTableInspector.OnAddElement(SerializedProperty)
      commentId: M:Editor.Inspector.EventSystem.EventTableInspector.OnAddElement(SerializedProperty)
      language: CSharp
      name:
        CSharp: OnAddElement(SerializedProperty)
        VB: OnAddElement(SerializedProperty)
      nameWithType:
        CSharp: EventTableInspector.OnAddElement(SerializedProperty)
        VB: EventTableInspector.OnAddElement(SerializedProperty)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.EventTableInspector.OnAddElement(SerializedProperty)
        VB: Editor.Inspector.EventSystem.EventTableInspector.OnAddElement(SerializedProperty)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: OnAddElement
        path: ''
        startLine: 2884
      syntax:
        content:
          CSharp: protected override void OnAddElement(SerializedProperty listProperty)
          VB: Protected Overrides Sub OnAddElement(listProperty As SerializedProperty)
        parameters:
        - id: listProperty
          type: Global.SerializedProperty
      overload: Editor.Inspector.EventSystem.EventTableInspector.OnAddElement*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnAddElement(SerializedProperty)
    - id: Editor.Inspector.EventSystem.EventTableInspector.OnRemoveElement(SerializedProperty,System.Int32)
      commentId: M:Editor.Inspector.EventSystem.EventTableInspector.OnRemoveElement(SerializedProperty,System.Int32)
      language: CSharp
      name:
        CSharp: OnRemoveElement(SerializedProperty, int)
        VB: OnRemoveElement(SerializedProperty, Integer)
      nameWithType:
        CSharp: EventTableInspector.OnRemoveElement(SerializedProperty, int)
        VB: EventTableInspector.OnRemoveElement(SerializedProperty, Integer)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.EventTableInspector.OnRemoveElement(SerializedProperty, int)
        VB: Editor.Inspector.EventSystem.EventTableInspector.OnRemoveElement(SerializedProperty, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: OnRemoveElement
        path: ''
        startLine: 2895
      syntax:
        content:
          CSharp: protected override void OnRemoveElement(SerializedProperty listProperty, int index)
          VB: Protected Overrides Sub OnRemoveElement(listProperty As SerializedProperty, index As Integer)
        parameters:
        - id: listProperty
          type: Global.SerializedProperty
        - id: index
          type: System.Int32
      overload: Editor.Inspector.EventSystem.EventTableInspector.OnRemoveElement*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnRemoveElement(SerializedProperty,System.Int32)
  - id: Editor.Inspector.EventSystem.RuleTableInspector
    commentId: T:Editor.Inspector.EventSystem.RuleTableInspector
    language: CSharp
    name:
      CSharp: RuleTableInspector
      VB: RuleTableInspector
    nameWithType:
      CSharp: RuleTableInspector
      VB: RuleTableInspector
    qualifiedName:
      CSharp: Editor.Inspector.EventSystem.RuleTableInspector
      VB: Editor.Inspector.EventSystem.RuleTableInspector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor.Inspector.EventSystem
    source:
      id: RuleTableInspector
      path: ''
      startLine: 2902
    syntax:
      content:
        CSharp: 'public class RuleTableInspector : ReorderableListInspector<RuleTable>'
        VB: Public Class RuleTableInspector Inherits ReorderableListInspector(Of RuleTable)
    inheritance:
    - System.Object
    - Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}
    inheritedMembers:
    - Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.elementHeight
    - Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.extraHeight
    - Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.GetSceneName(SerializedObject)
    - Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnInspectorGUI
    - Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
    items:
    - id: Editor.Inspector.EventSystem.RuleTableInspector.PropertyName
      commentId: P:Editor.Inspector.EventSystem.RuleTableInspector.PropertyName
      language: CSharp
      name:
        CSharp: PropertyName
        VB: PropertyName
      nameWithType:
        CSharp: RuleTableInspector.PropertyName
        VB: RuleTableInspector.PropertyName
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.RuleTableInspector.PropertyName
        VB: Editor.Inspector.EventSystem.RuleTableInspector.PropertyName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: PropertyName
        path: ''
        startLine: 2936
      syntax:
        content:
          CSharp: protected override string PropertyName { get; }
          VB: Protected Overrides ReadOnly Property PropertyName As String
        parameters: []
        return:
          type: System.String
      overload: Editor.Inspector.EventSystem.RuleTableInspector.PropertyName*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.PropertyName
    - id: Editor.Inspector.EventSystem.RuleTableInspector.IconPath
      commentId: P:Editor.Inspector.EventSystem.RuleTableInspector.IconPath
      language: CSharp
      name:
        CSharp: IconPath
        VB: IconPath
      nameWithType:
        CSharp: RuleTableInspector.IconPath
        VB: RuleTableInspector.IconPath
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.RuleTableInspector.IconPath
        VB: Editor.Inspector.EventSystem.RuleTableInspector.IconPath
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: IconPath
        path: ''
        startLine: 2937
      syntax:
        content:
          CSharp: protected override string IconPath { get; }
          VB: Protected Overrides ReadOnly Property IconPath As String
        parameters: []
        return:
          type: System.String
      overload: Editor.Inspector.EventSystem.RuleTableInspector.IconPath*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.IconPath
    - id: Editor.Inspector.EventSystem.RuleTableInspector.OnEnableAdd
      commentId: M:Editor.Inspector.EventSystem.RuleTableInspector.OnEnableAdd
      language: CSharp
      name:
        CSharp: OnEnableAdd()
        VB: OnEnableAdd()
      nameWithType:
        CSharp: RuleTableInspector.OnEnableAdd()
        VB: RuleTableInspector.OnEnableAdd()
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.RuleTableInspector.OnEnableAdd()
        VB: Editor.Inspector.EventSystem.RuleTableInspector.OnEnableAdd()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: OnEnableAdd
        path: ''
        startLine: 2939
      syntax:
        content:
          CSharp: protected override void OnEnableAdd()
          VB: Protected Overrides Sub OnEnableAdd()
      overload: Editor.Inspector.EventSystem.RuleTableInspector.OnEnableAdd*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnEnableAdd
    - id: Editor.Inspector.EventSystem.RuleTableInspector.GetBattleConfigClassNames
      commentId: M:Editor.Inspector.EventSystem.RuleTableInspector.GetBattleConfigClassNames
      language: CSharp
      name:
        CSharp: GetBattleConfigClassNames()
        VB: GetBattleConfigClassNames()
      nameWithType:
        CSharp: RuleTableInspector.GetBattleConfigClassNames()
        VB: RuleTableInspector.GetBattleConfigClassNames()
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.RuleTableInspector.GetBattleConfigClassNames()
        VB: Editor.Inspector.EventSystem.RuleTableInspector.GetBattleConfigClassNames()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: GetBattleConfigClassNames
        path: ''
        startLine: 2944
      syntax:
        content:
          CSharp: public static string[] GetBattleConfigClassNames()
          VB: Public Shared Function GetBattleConfigClassNames() As String()
        return:
          type: System.String[]
      overload: Editor.Inspector.EventSystem.RuleTableInspector.GetBattleConfigClassNames*
    - id: Editor.Inspector.EventSystem.RuleTableInspector.CalculateCriteriaSize(SerializedProperty,System.Int32)
      commentId: M:Editor.Inspector.EventSystem.RuleTableInspector.CalculateCriteriaSize(SerializedProperty,System.Int32)
      language: CSharp
      name:
        CSharp: CalculateCriteriaSize(SerializedProperty, int)
        VB: CalculateCriteriaSize(SerializedProperty, Integer)
      nameWithType:
        CSharp: RuleTableInspector.CalculateCriteriaSize(SerializedProperty, int)
        VB: RuleTableInspector.CalculateCriteriaSize(SerializedProperty, Integer)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.RuleTableInspector.CalculateCriteriaSize(SerializedProperty, int)
        VB: Editor.Inspector.EventSystem.RuleTableInspector.CalculateCriteriaSize(SerializedProperty, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: CalculateCriteriaSize
        path: ''
        startLine: 2957
      syntax:
        content:
          CSharp: public static int CalculateCriteriaSize(SerializedProperty criteria, int maxDepth = 5)
          VB: Public Shared Function CalculateCriteriaSize(criteria As SerializedProperty, maxDepth As Integer = 5) As Integer
        parameters:
        - id: criteria
          type: Global.SerializedProperty
        - id: maxDepth
          type: System.Int32
        return:
          type: System.Int32
      overload: Editor.Inspector.EventSystem.RuleTableInspector.CalculateCriteriaSize*
    - id: Editor.Inspector.EventSystem.RuleTableInspector.DrawElement(Rect,SerializedProperty,System.Int32)
      commentId: M:Editor.Inspector.EventSystem.RuleTableInspector.DrawElement(Rect,SerializedProperty,System.Int32)
      language: CSharp
      name:
        CSharp: DrawElement(Rect, SerializedProperty, int)
        VB: DrawElement(Rect, SerializedProperty, Integer)
      nameWithType:
        CSharp: RuleTableInspector.DrawElement(Rect, SerializedProperty, int)
        VB: RuleTableInspector.DrawElement(Rect, SerializedProperty, Integer)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.RuleTableInspector.DrawElement(Rect, SerializedProperty, int)
        VB: Editor.Inspector.EventSystem.RuleTableInspector.DrawElement(Rect, SerializedProperty, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: DrawElement
        path: ''
        startLine: 2994
      syntax:
        content:
          CSharp: protected override void DrawElement(Rect rect, SerializedProperty element, int index)
          VB: Protected Overrides Sub DrawElement(rect As Rect, element As SerializedProperty, index As Integer)
        parameters:
        - id: rect
          type: Global.Rect
        - id: element
          type: Global.SerializedProperty
        - id: index
          type: System.Int32
      overload: Editor.Inspector.EventSystem.RuleTableInspector.DrawElement*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawElement(Rect,SerializedProperty,System.Int32)
    - id: Editor.Inspector.EventSystem.RuleTableInspector.EnsureUniqueTriggeredBy(SerializedProperty,System.String)
      commentId: M:Editor.Inspector.EventSystem.RuleTableInspector.EnsureUniqueTriggeredBy(SerializedProperty,System.String)
      language: CSharp
      name:
        CSharp: EnsureUniqueTriggeredBy(SerializedProperty, string)
        VB: EnsureUniqueTriggeredBy(SerializedProperty, String)
      nameWithType:
        CSharp: RuleTableInspector.EnsureUniqueTriggeredBy(SerializedProperty, string)
        VB: RuleTableInspector.EnsureUniqueTriggeredBy(SerializedProperty, String)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.RuleTableInspector.EnsureUniqueTriggeredBy(SerializedProperty, string)
        VB: Editor.Inspector.EventSystem.RuleTableInspector.EnsureUniqueTriggeredBy(SerializedProperty, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: EnsureUniqueTriggeredBy
        path: ''
        startLine: 3725
      syntax:
        content:
          CSharp: public static void EnsureUniqueTriggeredBy(SerializedProperty triggeredByList, string sceneName)
          VB: Public Shared Sub EnsureUniqueTriggeredBy(triggeredByList As SerializedProperty, sceneName As String)
        parameters:
        - id: triggeredByList
          type: Global.SerializedProperty
        - id: sceneName
          type: System.String
      overload: Editor.Inspector.EventSystem.RuleTableInspector.EnsureUniqueTriggeredBy*
    - id: Editor.Inspector.EventSystem.RuleTableInspector.CreateRuleCriteria(Rect,System.Single,SerializedProperty,SerializedProperty,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.String)
      commentId: M:Editor.Inspector.EventSystem.RuleTableInspector.CreateRuleCriteria(Rect,System.Single,SerializedProperty,SerializedProperty,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.String)
      language: CSharp
      name:
        CSharp: CreateRuleCriteria(Rect, float, SerializedProperty, SerializedProperty, float, float, int, int, float, string)
        VB: CreateRuleCriteria(Rect, Single, SerializedProperty, SerializedProperty, Single, Single, Integer, Integer, Single, String)
      nameWithType:
        CSharp: RuleTableInspector.CreateRuleCriteria(Rect, float, SerializedProperty, SerializedProperty, float, float, int, int, float, string)
        VB: RuleTableInspector.CreateRuleCriteria(Rect, Single, SerializedProperty, SerializedProperty, Single, Single, Integer, Integer, Single, String)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.RuleTableInspector.CreateRuleCriteria(Rect, float, SerializedProperty, SerializedProperty, float, float, int, int, float, string)
        VB: Editor.Inspector.EventSystem.RuleTableInspector.CreateRuleCriteria(Rect, Single, SerializedProperty, SerializedProperty, Single, Single, Integer, Integer, Single, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: CreateRuleCriteria
        path: ''
        startLine: 3762
      syntax:
        content:
          CSharp: public static Rect CreateRuleCriteria(Rect rect, float y, SerializedProperty ruleCriterion, SerializedProperty criteriaParentOperation, float fieldWidth, float rectHeight, int nestedLevel, int index, float ruleCriteriaRectY, string sceneName)
          VB: Public Shared Function CreateRuleCriteria(rect As Rect, y As Single, ruleCriterion As SerializedProperty, criteriaParentOperation As SerializedProperty, fieldWidth As Single, rectHeight As Single, nestedLevel As Integer, index As Integer, ruleCriteriaRectY As Single, sceneName As String) As Rect
        parameters:
        - id: rect
          type: Global.Rect
        - id: y
          type: System.Single
        - id: ruleCriterion
          type: Global.SerializedProperty
        - id: criteriaParentOperation
          type: Global.SerializedProperty
        - id: fieldWidth
          type: System.Single
        - id: rectHeight
          type: System.Single
        - id: nestedLevel
          type: System.Int32
        - id: index
          type: System.Int32
        - id: ruleCriteriaRectY
          type: System.Single
        - id: sceneName
          type: System.String
        return:
          type: Global.Rect
      overload: Editor.Inspector.EventSystem.RuleTableInspector.CreateRuleCriteria*
    - id: Editor.Inspector.EventSystem.RuleTableInspector.GetRuleCriterionResult(SerializedProperty,SerializedProperty@,System.Boolean@,SerializedProperty@,SerializedProperty@,SerializedProperty@,SerializedProperty@)
      commentId: M:Editor.Inspector.EventSystem.RuleTableInspector.GetRuleCriterionResult(SerializedProperty,SerializedProperty@,System.Boolean@,SerializedProperty@,SerializedProperty@,SerializedProperty@,SerializedProperty@)
      language: CSharp
      name:
        CSharp: GetRuleCriterionResult(SerializedProperty, out SerializedProperty, out bool, out SerializedProperty, out SerializedProperty, out SerializedProperty, out SerializedProperty)
        VB: GetRuleCriterionResult(SerializedProperty, SerializedProperty, Boolean, SerializedProperty, SerializedProperty, SerializedProperty, SerializedProperty)
      nameWithType:
        CSharp: RuleTableInspector.GetRuleCriterionResult(SerializedProperty, out SerializedProperty, out bool, out SerializedProperty, out SerializedProperty, out SerializedProperty, out SerializedProperty)
        VB: RuleTableInspector.GetRuleCriterionResult(SerializedProperty, SerializedProperty, Boolean, SerializedProperty, SerializedProperty, SerializedProperty, SerializedProperty)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.RuleTableInspector.GetRuleCriterionResult(SerializedProperty, out SerializedProperty, out bool, out SerializedProperty, out SerializedProperty, out SerializedProperty, out SerializedProperty)
        VB: Editor.Inspector.EventSystem.RuleTableInspector.GetRuleCriterionResult(SerializedProperty, SerializedProperty, Boolean, SerializedProperty, SerializedProperty, SerializedProperty, SerializedProperty)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: GetRuleCriterionResult
        path: ''
        startLine: 4129
      syntax:
        content:
          CSharp: public static bool GetRuleCriterionResult(SerializedProperty item, out SerializedProperty isGlobal, out bool isResultReversed, out SerializedProperty fact, out SerializedProperty compare, out SerializedProperty detection, out SerializedProperty operation)
          VB: Public Shared Function GetRuleCriterionResult(item As SerializedProperty, isGlobal As SerializedProperty, isResultReversed As Boolean, fact As SerializedProperty, compare As SerializedProperty, detection As SerializedProperty, operation As SerializedProperty) As Boolean
        parameters:
        - id: item
          type: Global.SerializedProperty
        - id: isGlobal
          type: Global.SerializedProperty
        - id: isResultReversed
          type: System.Boolean
        - id: fact
          type: Global.SerializedProperty
        - id: compare
          type: Global.SerializedProperty
        - id: detection
          type: Global.SerializedProperty
        - id: operation
          type: Global.SerializedProperty
        return:
          type: System.Boolean
      overload: Editor.Inspector.EventSystem.RuleTableInspector.GetRuleCriterionResult*
    - id: Editor.Inspector.EventSystem.RuleTableInspector.RenameDetection(SerializedProperty)
      commentId: M:Editor.Inspector.EventSystem.RuleTableInspector.RenameDetection(SerializedProperty)
      language: CSharp
      name:
        CSharp: RenameDetection(SerializedProperty)
        VB: RenameDetection(SerializedProperty)
      nameWithType:
        CSharp: RuleTableInspector.RenameDetection(SerializedProperty)
        VB: RuleTableInspector.RenameDetection(SerializedProperty)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.RuleTableInspector.RenameDetection(SerializedProperty)
        VB: Editor.Inspector.EventSystem.RuleTableInspector.RenameDetection(SerializedProperty)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: RenameDetection
        path: ''
        startLine: 4205
      syntax:
        content:
          CSharp: protected override void RenameDetection(SerializedProperty element)
          VB: Protected Overrides Sub RenameDetection(element As SerializedProperty)
        parameters:
        - id: element
          type: Global.SerializedProperty
      overload: Editor.Inspector.EventSystem.RuleTableInspector.RenameDetection*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenameDetection(SerializedProperty)
    - id: Editor.Inspector.EventSystem.RuleTableInspector.DrawHeader(Rect)
      commentId: M:Editor.Inspector.EventSystem.RuleTableInspector.DrawHeader(Rect)
      language: CSharp
      name:
        CSharp: DrawHeader(Rect)
        VB: DrawHeader(Rect)
      nameWithType:
        CSharp: RuleTableInspector.DrawHeader(Rect)
        VB: RuleTableInspector.DrawHeader(Rect)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.RuleTableInspector.DrawHeader(Rect)
        VB: Editor.Inspector.EventSystem.RuleTableInspector.DrawHeader(Rect)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: DrawHeader
        path: ''
        startLine: 4218
      syntax:
        content:
          CSharp: protected override void DrawHeader(Rect rect)
          VB: Protected Overrides Sub DrawHeader(rect As Rect)
        parameters:
        - id: rect
          type: Global.Rect
      overload: Editor.Inspector.EventSystem.RuleTableInspector.DrawHeader*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawHeader(Rect)
    - id: Editor.Inspector.EventSystem.RuleTableInspector.OnAddElement(SerializedProperty)
      commentId: M:Editor.Inspector.EventSystem.RuleTableInspector.OnAddElement(SerializedProperty)
      language: CSharp
      name:
        CSharp: OnAddElement(SerializedProperty)
        VB: OnAddElement(SerializedProperty)
      nameWithType:
        CSharp: RuleTableInspector.OnAddElement(SerializedProperty)
        VB: RuleTableInspector.OnAddElement(SerializedProperty)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.RuleTableInspector.OnAddElement(SerializedProperty)
        VB: Editor.Inspector.EventSystem.RuleTableInspector.OnAddElement(SerializedProperty)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: OnAddElement
        path: ''
        startLine: 4226
      syntax:
        content:
          CSharp: protected override void OnAddElement(SerializedProperty listProperty)
          VB: Protected Overrides Sub OnAddElement(listProperty As SerializedProperty)
        parameters:
        - id: listProperty
          type: Global.SerializedProperty
      overload: Editor.Inspector.EventSystem.RuleTableInspector.OnAddElement*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnAddElement(SerializedProperty)
    - id: Editor.Inspector.EventSystem.RuleTableInspector.OnRemoveElement(SerializedProperty,System.Int32)
      commentId: M:Editor.Inspector.EventSystem.RuleTableInspector.OnRemoveElement(SerializedProperty,System.Int32)
      language: CSharp
      name:
        CSharp: OnRemoveElement(SerializedProperty, int)
        VB: OnRemoveElement(SerializedProperty, Integer)
      nameWithType:
        CSharp: RuleTableInspector.OnRemoveElement(SerializedProperty, int)
        VB: RuleTableInspector.OnRemoveElement(SerializedProperty, Integer)
      qualifiedName:
        CSharp: Editor.Inspector.EventSystem.RuleTableInspector.OnRemoveElement(SerializedProperty, int)
        VB: Editor.Inspector.EventSystem.RuleTableInspector.OnRemoveElement(SerializedProperty, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Inspector.EventSystem
      source:
        id: OnRemoveElement
        path: ''
        startLine: 4235
      syntax:
        content:
          CSharp: protected override void OnRemoveElement(SerializedProperty listProperty, int index)
          VB: Protected Overrides Sub OnRemoveElement(listProperty As SerializedProperty, index As Integer)
        parameters:
        - id: listProperty
          type: Global.SerializedProperty
        - id: index
          type: System.Int32
      overload: Editor.Inspector.EventSystem.RuleTableInspector.OnRemoveElement*
      overridden: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnRemoveElement(SerializedProperty,System.Int32)
- id: Editor.Handler
  commentId: N:Editor.Handler
  language: CSharp
  name:
    CSharp: Editor.Handler
    VB: Editor.Handler
  nameWithType:
    CSharp: Editor.Handler
    VB: Editor.Handler
  qualifiedName:
    CSharp: Editor.Handler
    VB: Editor.Handler
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: Editor.Handler.OverworldSceneHandler
    commentId: T:Editor.Handler.OverworldSceneHandler
    language: CSharp
    name:
      CSharp: OverworldSceneHandler
      VB: OverworldSceneHandler
    nameWithType:
      CSharp: OverworldSceneHandler
      VB: OverworldSceneHandler
    qualifiedName:
      CSharp: Editor.Handler.OverworldSceneHandler
      VB: Editor.Handler.OverworldSceneHandler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Editor.Handler
    source:
      id: OverworldSceneHandler
      path: ''
      startLine: 4253
    syntax:
      content:
        CSharp: public static class OverworldSceneHandler
        VB: Public Module OverworldSceneHandler
    inheritance:
    - System.Object
    items:
    - id: Editor.Handler.OverworldSceneHandler.CreateLanguagePackFiles(System.String,System.String)
      commentId: M:Editor.Handler.OverworldSceneHandler.CreateLanguagePackFiles(System.String,System.String)
      language: CSharp
      name:
        CSharp: CreateLanguagePackFiles(string, string)
        VB: CreateLanguagePackFiles(String, String)
      nameWithType:
        CSharp: OverworldSceneHandler.CreateLanguagePackFiles(string, string)
        VB: OverworldSceneHandler.CreateLanguagePackFiles(String, String)
      qualifiedName:
        CSharp: Editor.Handler.OverworldSceneHandler.CreateLanguagePackFiles(string, string)
        VB: Editor.Handler.OverworldSceneHandler.CreateLanguagePackFiles(String, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Handler
      source:
        id: CreateLanguagePackFiles
        path: ''
        startLine: 4289
      syntax:
        content:
          CSharp: public static void CreateLanguagePackFiles(string rootPath, string sceneName)
          VB: Public Shared Sub CreateLanguagePackFiles(rootPath As String, sceneName As String)
        parameters:
        - id: rootPath
          type: System.String
        - id: sceneName
          type: System.String
      overload: Editor.Handler.OverworldSceneHandler.CreateLanguagePackFiles*
    - id: Editor.Handler.OverworldSceneHandler.EnsureScriptableObjects(System.String,System.String)
      commentId: M:Editor.Handler.OverworldSceneHandler.EnsureScriptableObjects(System.String,System.String)
      language: CSharp
      name:
        CSharp: EnsureScriptableObjects(string, string)
        VB: EnsureScriptableObjects(String, String)
      nameWithType:
        CSharp: OverworldSceneHandler.EnsureScriptableObjects(string, string)
        VB: OverworldSceneHandler.EnsureScriptableObjects(String, String)
      qualifiedName:
        CSharp: Editor.Handler.OverworldSceneHandler.EnsureScriptableObjects(string, string)
        VB: Editor.Handler.OverworldSceneHandler.EnsureScriptableObjects(String, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Editor.Handler
      source:
        id: EnsureScriptableObjects
        path: ''
        startLine: 4345
      syntax:
        content:
          CSharp: public static void EnsureScriptableObjects(string path, string sceneName)
          VB: Public Shared Sub EnsureScriptableObjects(path As String, sceneName As String)
        parameters:
        - id: path
          type: System.String
        - id: sceneName
          type: System.String
      overload: Editor.Handler.OverworldSceneHandler.EnsureScriptableObjects*
- id: UCT
  commentId: N:UCT
  language: CSharp
  name:
    CSharp: UCT
    VB: UCT
  nameWithType:
    CSharp: UCT
    VB: UCT
  qualifiedName:
    CSharp: UCT
    VB: UCT
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.CameraLightController
    commentId: T:UCT.CameraLightController
    language: CSharp
    name:
      CSharp: CameraLightController
      VB: CameraLightController
    nameWithType:
      CSharp: CameraLightController
      VB: CameraLightController
    qualifiedName:
      CSharp: UCT.CameraLightController
      VB: UCT.CameraLightController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT
    source:
      id: CameraLightController
      path: ''
      startLine: 18240
    syntax:
      content:
        CSharp: 'public class CameraLightController : MonoBehaviour'
        VB: Public Class CameraLightController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.CameraLightController.viewDistance
      commentId: F:UCT.CameraLightController.viewDistance
      language: CSharp
      name:
        CSharp: viewDistance
        VB: viewDistance
      nameWithType:
        CSharp: CameraLightController.viewDistance
        VB: CameraLightController.viewDistance
      qualifiedName:
        CSharp: UCT.CameraLightController.viewDistance
        VB: UCT.CameraLightController.viewDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: viewDistance
        path: ''
        startLine: 18242
      syntax:
        content:
          CSharp: public float viewDistance
          VB: Public viewDistance As Single
        return:
          type: System.Single
  - id: UCT.TmpDynamicFontController
    commentId: T:UCT.TmpDynamicFontController
    language: CSharp
    name:
      CSharp: TmpDynamicFontController
      VB: TmpDynamicFontController
    nameWithType:
      CSharp: TmpDynamicFontController
      VB: TmpDynamicFontController
    qualifiedName:
      CSharp: UCT.TmpDynamicFontController
      VB: UCT.TmpDynamicFontController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT
    source:
      id: TmpDynamicFontController
      path: ''
      startLine: 18288
    summary: "\n用于TMP动态类型字体的控制\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TmpDynamicFontController : MonoBehaviour'
        VB: Public Class TmpDynamicFontController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.TmpDynamicFontController.Instance
      commentId: P:UCT.TmpDynamicFontController.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: TmpDynamicFontController.Instance
        VB: TmpDynamicFontController.Instance
      qualifiedName:
        CSharp: UCT.TmpDynamicFontController.Instance
        VB: UCT.TmpDynamicFontController.Instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: Instance
        path: ''
        startLine: 18292
      syntax:
        content:
          CSharp: public static TmpDynamicFontController Instance { get; }
          VB: Public Shared Property Instance As TmpDynamicFontController
        parameters: []
        return:
          type: UCT.TmpDynamicFontController
      overload: UCT.TmpDynamicFontController.Instance*
    - id: UCT.TmpDynamicFontController.SimsunClear(System.Collections.Generic.List{TMP_Text})
      commentId: M:UCT.TmpDynamicFontController.SimsunClear(System.Collections.Generic.List{TMP_Text})
      language: CSharp
      name:
        CSharp: SimsunClear(List<TMP_Text>)
        VB: SimsunClear(List(Of TMP_Text))
      nameWithType:
        CSharp: TmpDynamicFontController.SimsunClear(List<TMP_Text>)
        VB: TmpDynamicFontController.SimsunClear(List(Of TMP_Text))
      qualifiedName:
        CSharp: UCT.TmpDynamicFontController.SimsunClear(System.Collections.Generic.List<TMP_Text>)
        VB: UCT.TmpDynamicFontController.SimsunClear(System.Collections.Generic.List(Of TMP_Text))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: SimsunClear
        path: ''
        startLine: 18304
      syntax:
        content:
          CSharp: public void SimsunClear(List<TMP_Text> forceMeshUpdateTexts = null)
          VB: Public Sub SimsunClear(forceMeshUpdateTexts As List(Of TMP_Text) = Nothing)
        parameters:
        - id: forceMeshUpdateTexts
          type: System.Collections.Generic.List{TMP_Text}
      overload: UCT.TmpDynamicFontController.SimsunClear*
  - id: UCT.FollowSth
    commentId: T:UCT.FollowSth
    language: CSharp
    name:
      CSharp: FollowSth
      VB: FollowSth
    nameWithType:
      CSharp: FollowSth
      VB: FollowSth
    qualifiedName:
      CSharp: UCT.FollowSth
      VB: UCT.FollowSth
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT
    source:
      id: FollowSth
      path: ''
      startLine: 18330
    syntax:
      content:
        CSharp: 'public class FollowSth : MonoBehaviour'
        VB: Public Class FollowSth Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.FollowSth.followTarget
      commentId: F:UCT.FollowSth.followTarget
      language: CSharp
      name:
        CSharp: followTarget
        VB: followTarget
      nameWithType:
        CSharp: FollowSth.followTarget
        VB: FollowSth.followTarget
      qualifiedName:
        CSharp: UCT.FollowSth.followTarget
        VB: UCT.FollowSth.followTarget
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: followTarget
        path: ''
        startLine: 18339
      syntax:
        content:
          CSharp: public FollowSth.FollowTarget followTarget
          VB: Public followTarget As FollowSth.FollowTarget
        return:
          type: UCT.FollowSth.FollowTarget
    - id: UCT.FollowSth.sth
      commentId: F:UCT.FollowSth.sth
      language: CSharp
      name:
        CSharp: sth
        VB: sth
      nameWithType:
        CSharp: FollowSth.sth
        VB: FollowSth.sth
      qualifiedName:
        CSharp: UCT.FollowSth.sth
        VB: UCT.FollowSth.sth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: sth
        path: ''
        startLine: 18340
      syntax:
        content:
          CSharp: public GameObject sth
          VB: Public sth As GameObject
        return:
          type: Global.GameObject
    - id: UCT.FollowSth.followPosition
      commentId: F:UCT.FollowSth.followPosition
      language: CSharp
      name:
        CSharp: followPosition
        VB: followPosition
      nameWithType:
        CSharp: FollowSth.followPosition
        VB: FollowSth.followPosition
      qualifiedName:
        CSharp: UCT.FollowSth.followPosition
        VB: UCT.FollowSth.followPosition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: followPosition
        path: ''
        startLine: 18341
      syntax:
        content:
          CSharp: public bool followPosition
          VB: Public followPosition As Boolean
        return:
          type: System.Boolean
    - id: UCT.FollowSth.positionAdd
      commentId: F:UCT.FollowSth.positionAdd
      language: CSharp
      name:
        CSharp: positionAdd
        VB: positionAdd
      nameWithType:
        CSharp: FollowSth.positionAdd
        VB: FollowSth.positionAdd
      qualifiedName:
        CSharp: UCT.FollowSth.positionAdd
        VB: UCT.FollowSth.positionAdd
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: positionAdd
        path: ''
        startLine: 18342
      syntax:
        content:
          CSharp: public Vector3 positionAdd
          VB: Public positionAdd As Vector3
        return:
          type: Global.Vector3
    - id: UCT.FollowSth.followRotation
      commentId: F:UCT.FollowSth.followRotation
      language: CSharp
      name:
        CSharp: followRotation
        VB: followRotation
      nameWithType:
        CSharp: FollowSth.followRotation
        VB: FollowSth.followRotation
      qualifiedName:
        CSharp: UCT.FollowSth.followRotation
        VB: UCT.FollowSth.followRotation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: followRotation
        path: ''
        startLine: 18343
      syntax:
        content:
          CSharp: public bool followRotation
          VB: Public followRotation As Boolean
        return:
          type: System.Boolean
    - id: UCT.FollowSth.rotationAdd
      commentId: F:UCT.FollowSth.rotationAdd
      language: CSharp
      name:
        CSharp: rotationAdd
        VB: rotationAdd
      nameWithType:
        CSharp: FollowSth.rotationAdd
        VB: FollowSth.rotationAdd
      qualifiedName:
        CSharp: UCT.FollowSth.rotationAdd
        VB: UCT.FollowSth.rotationAdd
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: rotationAdd
        path: ''
        startLine: 18344
      syntax:
        content:
          CSharp: public Vector3 rotationAdd
          VB: Public rotationAdd As Vector3
        return:
          type: Global.Vector3
    - id: UCT.FollowSth.followLocalScale
      commentId: F:UCT.FollowSth.followLocalScale
      language: CSharp
      name:
        CSharp: followLocalScale
        VB: followLocalScale
      nameWithType:
        CSharp: FollowSth.followLocalScale
        VB: FollowSth.followLocalScale
      qualifiedName:
        CSharp: UCT.FollowSth.followLocalScale
        VB: UCT.FollowSth.followLocalScale
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: followLocalScale
        path: ''
        startLine: 18345
      syntax:
        content:
          CSharp: public bool followLocalScale
          VB: Public followLocalScale As Boolean
        return:
          type: System.Boolean
    - id: UCT.FollowSth.localScaleAdd
      commentId: F:UCT.FollowSth.localScaleAdd
      language: CSharp
      name:
        CSharp: localScaleAdd
        VB: localScaleAdd
      nameWithType:
        CSharp: FollowSth.localScaleAdd
        VB: FollowSth.localScaleAdd
      qualifiedName:
        CSharp: UCT.FollowSth.localScaleAdd
        VB: UCT.FollowSth.localScaleAdd
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: localScaleAdd
        path: ''
        startLine: 18346
      syntax:
        content:
          CSharp: public Vector3 localScaleAdd
          VB: Public localScaleAdd As Vector3
        return:
          type: Global.Vector3
  - id: UCT.FollowSth.FollowTarget
    commentId: T:UCT.FollowSth.FollowTarget
    language: CSharp
    name:
      CSharp: FollowSth.FollowTarget
      VB: FollowSth.FollowTarget
    nameWithType:
      CSharp: FollowSth.FollowTarget
      VB: FollowSth.FollowTarget
    qualifiedName:
      CSharp: UCT.FollowSth.FollowTarget
      VB: UCT.FollowSth.FollowTarget
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT
    source:
      id: FollowTarget
      path: ''
      startLine: 18332
    syntax:
      content:
        CSharp: public enum FollowSth.FollowTarget
        VB: Public Enum FollowSth.FollowTarget
    items:
    - id: UCT.FollowSth.FollowTarget.Null
      commentId: F:UCT.FollowSth.FollowTarget.Null
      language: CSharp
      name:
        CSharp: "Null"
        VB: "Null"
      nameWithType:
        CSharp: FollowSth.FollowTarget.Null
        VB: FollowSth.FollowTarget.Null
      qualifiedName:
        CSharp: UCT.FollowSth.FollowTarget.Null
        VB: UCT.FollowSth.FollowTarget.Null
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: "Null"
        path: ''
        startLine: 18334
      syntax:
        content:
          CSharp: Null = 0
          VB: Null = 0
        return:
          type: UCT.FollowSth.FollowTarget
    - id: UCT.FollowSth.FollowTarget.Player
      commentId: F:UCT.FollowSth.FollowTarget.Player
      language: CSharp
      name:
        CSharp: Player
        VB: Player
      nameWithType:
        CSharp: FollowSth.FollowTarget.Player
        VB: FollowSth.FollowTarget.Player
      qualifiedName:
        CSharp: UCT.FollowSth.FollowTarget.Player
        VB: UCT.FollowSth.FollowTarget.Player
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: Player
        path: ''
        startLine: 18335
      syntax:
        content:
          CSharp: Player = 1
          VB: Player = 1
        return:
          type: UCT.FollowSth.FollowTarget
    - id: UCT.FollowSth.FollowTarget.MainCamera
      commentId: F:UCT.FollowSth.FollowTarget.MainCamera
      language: CSharp
      name:
        CSharp: MainCamera
        VB: MainCamera
      nameWithType:
        CSharp: FollowSth.FollowTarget.MainCamera
        VB: FollowSth.FollowTarget.MainCamera
      qualifiedName:
        CSharp: UCT.FollowSth.FollowTarget.MainCamera
        VB: UCT.FollowSth.FollowTarget.MainCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: MainCamera
        path: ''
        startLine: 18336
      syntax:
        content:
          CSharp: MainCamera = 2
          VB: MainCamera = 2
        return:
          type: UCT.FollowSth.FollowTarget
  - id: UCT.ChangeClipWalk
    commentId: T:UCT.ChangeClipWalk
    language: CSharp
    name:
      CSharp: ChangeClipWalk
      VB: ChangeClipWalk
    nameWithType:
      CSharp: ChangeClipWalk
      VB: ChangeClipWalk
    qualifiedName:
      CSharp: UCT.ChangeClipWalk
      VB: UCT.ChangeClipWalk
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT
    source:
      id: ChangeClipWalk
      path: ''
      startLine: 18410
    summary: "\n玩家触发后更改移动范围\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ChangeClipWalk : MonoBehaviour'
        VB: Public Class ChangeClipWalk Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.ChangeClipWalk.walkFxRange
      commentId: F:UCT.ChangeClipWalk.walkFxRange
      language: CSharp
      name:
        CSharp: walkFxRange
        VB: walkFxRange
      nameWithType:
        CSharp: ChangeClipWalk.walkFxRange
        VB: ChangeClipWalk.walkFxRange
      qualifiedName:
        CSharp: UCT.ChangeClipWalk.walkFxRange
        VB: UCT.ChangeClipWalk.walkFxRange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: walkFxRange
        path: ''
        startLine: 18413
      syntax:
        content:
          CSharp: public Vector2 walkFxRange
          VB: Public walkFxRange As Vector2
        return:
          type: Global.Vector2
  - id: UCT.MetronomeController
    commentId: T:UCT.MetronomeController
    language: CSharp
    name:
      CSharp: MetronomeController
      VB: MetronomeController
    nameWithType:
      CSharp: MetronomeController
      VB: MetronomeController
    qualifiedName:
      CSharp: UCT.MetronomeController
      VB: UCT.MetronomeController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT
    source:
      id: MetronomeController
      path: ''
      startLine: 18440
    summary: "\n节拍器控制器\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MetronomeController : MonoBehaviour'
        VB: Public Class MetronomeController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.MetronomeController.bpm
      commentId: F:UCT.MetronomeController.bpm
      language: CSharp
      name:
        CSharp: bpm
        VB: bpm
      nameWithType:
        CSharp: MetronomeController.bpm
        VB: MetronomeController.bpm
      qualifiedName:
        CSharp: UCT.MetronomeController.bpm
        VB: UCT.MetronomeController.bpm
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: bpm
        path: ''
        startLine: 18443
      syntax:
        content:
          CSharp: public float bpm
          VB: Public bpm As Single
        return:
          type: System.Single
    - id: UCT.MetronomeController.bpmDeviation
      commentId: F:UCT.MetronomeController.bpmDeviation
      language: CSharp
      name:
        CSharp: bpmDeviation
        VB: bpmDeviation
      nameWithType:
        CSharp: MetronomeController.bpmDeviation
        VB: MetronomeController.bpmDeviation
      qualifiedName:
        CSharp: UCT.MetronomeController.bpmDeviation
        VB: UCT.MetronomeController.bpmDeviation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: bpmDeviation
        path: ''
        startLine: 18446
      syntax:
        content:
          CSharp: public float bpmDeviation
          VB: Public bpmDeviation As Single
        return:
          type: System.Single
    - id: UCT.MetronomeController.beatSeconds
      commentId: F:UCT.MetronomeController.beatSeconds
      language: CSharp
      name:
        CSharp: beatSeconds
        VB: beatSeconds
      nameWithType:
        CSharp: MetronomeController.beatSeconds
        VB: MetronomeController.beatSeconds
      qualifiedName:
        CSharp: UCT.MetronomeController.beatSeconds
        VB: UCT.MetronomeController.beatSeconds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: beatSeconds
        path: ''
        startLine: 18449
      syntax:
        content:
          CSharp: public List<float> beatSeconds
          VB: Public beatSeconds As List(Of Single)
        return:
          type: System.Collections.Generic.List{System.Single}
    - id: UCT.MetronomeController.isPlayMetronome
      commentId: F:UCT.MetronomeController.isPlayMetronome
      language: CSharp
      name:
        CSharp: isPlayMetronome
        VB: isPlayMetronome
      nameWithType:
        CSharp: MetronomeController.isPlayMetronome
        VB: MetronomeController.isPlayMetronome
      qualifiedName:
        CSharp: UCT.MetronomeController.isPlayMetronome
        VB: UCT.MetronomeController.isPlayMetronome
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: isPlayMetronome
        path: ''
        startLine: 18454
      syntax:
        content:
          CSharp: public bool isPlayMetronome
          VB: Public isPlayMetronome As Boolean
        return:
          type: System.Boolean
    - id: UCT.MetronomeController.currentBeatIndex
      commentId: F:UCT.MetronomeController.currentBeatIndex
      language: CSharp
      name:
        CSharp: currentBeatIndex
        VB: currentBeatIndex
      nameWithType:
        CSharp: MetronomeController.currentBeatIndex
        VB: MetronomeController.currentBeatIndex
      qualifiedName:
        CSharp: UCT.MetronomeController.currentBeatIndex
        VB: UCT.MetronomeController.currentBeatIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: currentBeatIndex
        path: ''
        startLine: 18457
      syntax:
        content:
          CSharp: public int currentBeatIndex
          VB: Public currentBeatIndex As Integer
        return:
          type: System.Int32
    - id: UCT.MetronomeController.nextBeatSecond
      commentId: F:UCT.MetronomeController.nextBeatSecond
      language: CSharp
      name:
        CSharp: nextBeatSecond
        VB: nextBeatSecond
      nameWithType:
        CSharp: MetronomeController.nextBeatSecond
        VB: MetronomeController.nextBeatSecond
      qualifiedName:
        CSharp: UCT.MetronomeController.nextBeatSecond
        VB: UCT.MetronomeController.nextBeatSecond
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: nextBeatSecond
        path: ''
        startLine: 18460
      syntax:
        content:
          CSharp: public float nextBeatSecond
          VB: Public nextBeatSecond As Single
        return:
          type: System.Single
  - id: UCT.ColorEx
    commentId: T:UCT.ColorEx
    language: CSharp
    name:
      CSharp: ColorEx
      VB: ColorEx
    nameWithType:
      CSharp: ColorEx
      VB: ColorEx
    qualifiedName:
      CSharp: UCT.ColorEx
      VB: UCT.ColorEx
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT
    source:
      id: ColorEx
      path: ''
      startLine: 18565
    summary: "\nColor 扩展工具\n"
    example: []
    syntax:
      content:
        CSharp: public static class ColorEx
        VB: Public Module ColorEx
    inheritance:
    - System.Object
    items:
    - id: UCT.ColorEx.WhiteClear
      commentId: P:UCT.ColorEx.WhiteClear
      language: CSharp
      name:
        CSharp: WhiteClear
        VB: WhiteClear
      nameWithType:
        CSharp: ColorEx.WhiteClear
        VB: ColorEx.WhiteClear
      qualifiedName:
        CSharp: UCT.ColorEx.WhiteClear
        VB: UCT.ColorEx.WhiteClear
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: WhiteClear
        path: ''
        startLine: 18567
      syntax:
        content:
          CSharp: public static Color WhiteClear { get; }
          VB: Public Shared ReadOnly Property WhiteClear As Color
        parameters: []
        return:
          type: Global.Color
      overload: UCT.ColorEx.WhiteClear*
    - id: UCT.ColorEx.RedClear
      commentId: P:UCT.ColorEx.RedClear
      language: CSharp
      name:
        CSharp: RedClear
        VB: RedClear
      nameWithType:
        CSharp: ColorEx.RedClear
        VB: ColorEx.RedClear
      qualifiedName:
        CSharp: UCT.ColorEx.RedClear
        VB: UCT.ColorEx.RedClear
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: RedClear
        path: ''
        startLine: 18568
      syntax:
        content:
          CSharp: public static Color RedClear { get; }
          VB: Public Shared ReadOnly Property RedClear As Color
        parameters: []
        return:
          type: Global.Color
      overload: UCT.ColorEx.RedClear*
    - id: UCT.ColorEx.HalfAlpha
      commentId: P:UCT.ColorEx.HalfAlpha
      language: CSharp
      name:
        CSharp: HalfAlpha
        VB: HalfAlpha
      nameWithType:
        CSharp: ColorEx.HalfAlpha
        VB: ColorEx.HalfAlpha
      qualifiedName:
        CSharp: UCT.ColorEx.HalfAlpha
        VB: UCT.ColorEx.HalfAlpha
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: HalfAlpha
        path: ''
        startLine: 18569
      syntax:
        content:
          CSharp: public static Color HalfAlpha { get; }
          VB: Public Shared ReadOnly Property HalfAlpha As Color
        parameters: []
        return:
          type: Global.Color
      overload: UCT.ColorEx.HalfAlpha*
    - id: UCT.ColorEx.Purple
      commentId: P:UCT.ColorEx.Purple
      language: CSharp
      name:
        CSharp: Purple
        VB: Purple
      nameWithType:
        CSharp: ColorEx.Purple
        VB: ColorEx.Purple
      qualifiedName:
        CSharp: UCT.ColorEx.Purple
        VB: UCT.ColorEx.Purple
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: Purple
        path: ''
        startLine: 18571
      syntax:
        content:
          CSharp: public static Color Purple { get; }
          VB: Public Shared ReadOnly Property Purple As Color
        parameters: []
        return:
          type: Global.Color
      overload: UCT.ColorEx.Purple*
    - id: UCT.ColorEx.Magenta
      commentId: P:UCT.ColorEx.Magenta
      language: CSharp
      name:
        CSharp: Magenta
        VB: Magenta
      nameWithType:
        CSharp: ColorEx.Magenta
        VB: ColorEx.Magenta
      qualifiedName:
        CSharp: UCT.ColorEx.Magenta
        VB: UCT.ColorEx.Magenta
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: Magenta
        path: ''
        startLine: 18572
      syntax:
        content:
          CSharp: public static Color Magenta { get; }
          VB: Public Shared ReadOnly Property Magenta As Color
        parameters: []
        return:
          type: Global.Color
      overload: UCT.ColorEx.Magenta*
    - id: UCT.ColorEx.Orange
      commentId: P:UCT.ColorEx.Orange
      language: CSharp
      name:
        CSharp: Orange
        VB: Orange
      nameWithType:
        CSharp: ColorEx.Orange
        VB: ColorEx.Orange
      qualifiedName:
        CSharp: UCT.ColorEx.Orange
        VB: UCT.ColorEx.Orange
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: Orange
        path: ''
        startLine: 18573
      syntax:
        content:
          CSharp: public static Color Orange { get; }
          VB: Public Shared ReadOnly Property Orange As Color
        parameters: []
        return:
          type: Global.Color
      overload: UCT.ColorEx.Orange*
    - id: UCT.ColorEx.Gold
      commentId: P:UCT.ColorEx.Gold
      language: CSharp
      name:
        CSharp: Gold
        VB: Gold
      nameWithType:
        CSharp: ColorEx.Gold
        VB: ColorEx.Gold
      qualifiedName:
        CSharp: UCT.ColorEx.Gold
        VB: UCT.ColorEx.Gold
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: Gold
        path: ''
        startLine: 18574
      syntax:
        content:
          CSharp: public static Color Gold { get; }
          VB: Public Shared ReadOnly Property Gold As Color
        parameters: []
        return:
          type: Global.Color
      overload: UCT.ColorEx.Gold*
    - id: UCT.ColorEx.Teal
      commentId: P:UCT.ColorEx.Teal
      language: CSharp
      name:
        CSharp: Teal
        VB: Teal
      nameWithType:
        CSharp: ColorEx.Teal
        VB: ColorEx.Teal
      qualifiedName:
        CSharp: UCT.ColorEx.Teal
        VB: UCT.ColorEx.Teal
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: Teal
        path: ''
        startLine: 18575
      syntax:
        content:
          CSharp: public static Color Teal { get; }
          VB: Public Shared ReadOnly Property Teal As Color
        parameters: []
        return:
          type: Global.Color
      overload: UCT.ColorEx.Teal*
    - id: UCT.ColorEx.Olive
      commentId: P:UCT.ColorEx.Olive
      language: CSharp
      name:
        CSharp: Olive
        VB: Olive
      nameWithType:
        CSharp: ColorEx.Olive
        VB: ColorEx.Olive
      qualifiedName:
        CSharp: UCT.ColorEx.Olive
        VB: UCT.ColorEx.Olive
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: Olive
        path: ''
        startLine: 18576
      syntax:
        content:
          CSharp: public static Color Olive { get; }
          VB: Public Shared ReadOnly Property Olive As Color
        parameters: []
        return:
          type: Global.Color
      overload: UCT.ColorEx.Olive*
    - id: UCT.ColorEx.Navy
      commentId: P:UCT.ColorEx.Navy
      language: CSharp
      name:
        CSharp: Navy
        VB: Navy
      nameWithType:
        CSharp: ColorEx.Navy
        VB: ColorEx.Navy
      qualifiedName:
        CSharp: UCT.ColorEx.Navy
        VB: UCT.ColorEx.Navy
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: Navy
        path: ''
        startLine: 18577
      syntax:
        content:
          CSharp: public static Color Navy { get; }
          VB: Public Shared ReadOnly Property Navy As Color
        parameters: []
        return:
          type: Global.Color
      overload: UCT.ColorEx.Navy*
    - id: UCT.ColorEx.Maroon
      commentId: P:UCT.ColorEx.Maroon
      language: CSharp
      name:
        CSharp: Maroon
        VB: Maroon
      nameWithType:
        CSharp: ColorEx.Maroon
        VB: ColorEx.Maroon
      qualifiedName:
        CSharp: UCT.ColorEx.Maroon
        VB: UCT.ColorEx.Maroon
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: Maroon
        path: ''
        startLine: 18578
      syntax:
        content:
          CSharp: public static Color Maroon { get; }
          VB: Public Shared ReadOnly Property Maroon As Color
        parameters: []
        return:
          type: Global.Color
      overload: UCT.ColorEx.Maroon*
    - id: UCT.ColorEx.Pink
      commentId: P:UCT.ColorEx.Pink
      language: CSharp
      name:
        CSharp: Pink
        VB: Pink
      nameWithType:
        CSharp: ColorEx.Pink
        VB: ColorEx.Pink
      qualifiedName:
        CSharp: UCT.ColorEx.Pink
        VB: UCT.ColorEx.Pink
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: Pink
        path: ''
        startLine: 18579
      syntax:
        content:
          CSharp: public static Color Pink { get; }
          VB: Public Shared ReadOnly Property Pink As Color
        parameters: []
        return:
          type: Global.Color
      overload: UCT.ColorEx.Pink*
    - id: UCT.ColorEx.LightBlue
      commentId: P:UCT.ColorEx.LightBlue
      language: CSharp
      name:
        CSharp: LightBlue
        VB: LightBlue
      nameWithType:
        CSharp: ColorEx.LightBlue
        VB: ColorEx.LightBlue
      qualifiedName:
        CSharp: UCT.ColorEx.LightBlue
        VB: UCT.ColorEx.LightBlue
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: LightBlue
        path: ''
        startLine: 18580
      syntax:
        content:
          CSharp: public static Color LightBlue { get; }
          VB: Public Shared ReadOnly Property LightBlue As Color
        parameters: []
        return:
          type: Global.Color
      overload: UCT.ColorEx.LightBlue*
  - id: UCT.Debug
    commentId: T:UCT.Debug
    language: CSharp
    name:
      CSharp: Debug
      VB: Debug
    nameWithType:
      CSharp: Debug
      VB: Debug
    qualifiedName:
      CSharp: UCT.Debug
      VB: UCT.Debug
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT
    source:
      id: Debug
      path: ''
      startLine: 18592
    summary: "\nDebug控制器\n"
    example: []
    syntax:
      content:
        CSharp: public static class Debug
        VB: Public Module Debug
    inheritance:
    - System.Object
    items:
    - id: UCT.Debug.Log(System.Object,System.String)
      commentId: M:UCT.Debug.Log(System.Object,System.String)
      language: CSharp
      name:
        CSharp: Log(object, string)
        VB: Log(Object, String)
      nameWithType:
        CSharp: Debug.Log(object, string)
        VB: Debug.Log(Object, String)
      qualifiedName:
        CSharp: UCT.Debug.Log(object, string)
        VB: UCT.Debug.Log(Object, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: Log
        path: ''
        startLine: 18594
      syntax:
        content:
          CSharp: public static void Log(object content, string color = "#FFFFFF")
          VB: Public Shared Sub Log(content As Object, color As String = "#FFFFFF")
        parameters:
        - id: content
          type: System.Object
        - id: color
          type: System.String
      overload: UCT.Debug.Log*
    - id: UCT.Debug.Log(System.Object,System.Object,System.String)
      commentId: M:UCT.Debug.Log(System.Object,System.Object,System.String)
      language: CSharp
      name:
        CSharp: Log(object, object, string)
        VB: Log(Object, Object, String)
      nameWithType:
        CSharp: Debug.Log(object, object, string)
        VB: Debug.Log(Object, Object, String)
      qualifiedName:
        CSharp: UCT.Debug.Log(object, object, string)
        VB: UCT.Debug.Log(Object, Object, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: Log
        path: ''
        startLine: 18602
      syntax:
        content:
          CSharp: public static void Log(object content, object context, string color = "#FFFFFF")
          VB: Public Shared Sub Log(content As Object, context As Object, color As String = "#FFFFFF")
        parameters:
        - id: content
          type: System.Object
        - id: context
          type: System.Object
        - id: color
          type: System.String
      overload: UCT.Debug.Log*
    - id: UCT.Debug.LogWarning(System.Object,System.String)
      commentId: M:UCT.Debug.LogWarning(System.Object,System.String)
      language: CSharp
      name:
        CSharp: LogWarning(object, string)
        VB: LogWarning(Object, String)
      nameWithType:
        CSharp: Debug.LogWarning(object, string)
        VB: Debug.LogWarning(Object, String)
      qualifiedName:
        CSharp: UCT.Debug.LogWarning(object, string)
        VB: UCT.Debug.LogWarning(Object, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: LogWarning
        path: ''
        startLine: 18609
      syntax:
        content:
          CSharp: public static void LogWarning(object content, string color = "#FFFF00")
          VB: Public Shared Sub LogWarning(content As Object, color As String = "#FFFF00")
        parameters:
        - id: content
          type: System.Object
        - id: color
          type: System.String
      overload: UCT.Debug.LogWarning*
    - id: UCT.Debug.LogWarning(System.Object,System.Object,System.String)
      commentId: M:UCT.Debug.LogWarning(System.Object,System.Object,System.String)
      language: CSharp
      name:
        CSharp: LogWarning(object, object, string)
        VB: LogWarning(Object, Object, String)
      nameWithType:
        CSharp: Debug.LogWarning(object, object, string)
        VB: Debug.LogWarning(Object, Object, String)
      qualifiedName:
        CSharp: UCT.Debug.LogWarning(object, object, string)
        VB: UCT.Debug.LogWarning(Object, Object, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: LogWarning
        path: ''
        startLine: 18617
      syntax:
        content:
          CSharp: public static void LogWarning(object content, object context, string color = "#FFFF00")
          VB: Public Shared Sub LogWarning(content As Object, context As Object, color As String = "#FFFF00")
        parameters:
        - id: content
          type: System.Object
        - id: context
          type: System.Object
        - id: color
          type: System.String
      overload: UCT.Debug.LogWarning*
    - id: UCT.Debug.LogError(System.Object,System.String)
      commentId: M:UCT.Debug.LogError(System.Object,System.String)
      language: CSharp
      name:
        CSharp: LogError(object, string)
        VB: LogError(Object, String)
      nameWithType:
        CSharp: Debug.LogError(object, string)
        VB: Debug.LogError(Object, String)
      qualifiedName:
        CSharp: UCT.Debug.LogError(object, string)
        VB: UCT.Debug.LogError(Object, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: LogError
        path: ''
        startLine: 18626
      syntax:
        content:
          CSharp: public static void LogError(object content, string color = "#FF6666")
          VB: Public Shared Sub LogError(content As Object, color As String = "#FF6666")
        parameters:
        - id: content
          type: System.Object
        - id: color
          type: System.String
      overload: UCT.Debug.LogError*
    - id: UCT.Debug.LogError(System.Object,System.Object,System.String)
      commentId: M:UCT.Debug.LogError(System.Object,System.Object,System.String)
      language: CSharp
      name:
        CSharp: LogError(object, object, string)
        VB: LogError(Object, Object, String)
      nameWithType:
        CSharp: Debug.LogError(object, object, string)
        VB: Debug.LogError(Object, Object, String)
      qualifiedName:
        CSharp: UCT.Debug.LogError(object, object, string)
        VB: UCT.Debug.LogError(Object, Object, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: LogError
        path: ''
        startLine: 18634
      syntax:
        content:
          CSharp: public static void LogError(object content, object context, string color = "#FF6666")
          VB: Public Shared Sub LogError(content As Object, context As Object, color As String = "#FF6666")
        parameters:
        - id: content
          type: System.Object
        - id: context
          type: System.Object
        - id: color
          type: System.String
      overload: UCT.Debug.LogError*
    - id: UCT.Debug.DrawRay(Vector3,Vector3)
      commentId: M:UCT.Debug.DrawRay(Vector3,Vector3)
      language: CSharp
      name:
        CSharp: DrawRay(Vector3, Vector3)
        VB: DrawRay(Vector3, Vector3)
      nameWithType:
        CSharp: Debug.DrawRay(Vector3, Vector3)
        VB: Debug.DrawRay(Vector3, Vector3)
      qualifiedName:
        CSharp: UCT.Debug.DrawRay(Vector3, Vector3)
        VB: UCT.Debug.DrawRay(Vector3, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: DrawRay
        path: ''
        startLine: 18642
      syntax:
        content:
          CSharp: public static void DrawRay(Vector3 start, Vector3 direction)
          VB: Public Shared Sub DrawRay(start As Vector3, direction As Vector3)
        parameters:
        - id: start
          type: Global.Vector3
        - id: direction
          type: Global.Vector3
      overload: UCT.Debug.DrawRay*
    - id: UCT.Debug.DrawRay(Vector3,Vector3,Color)
      commentId: M:UCT.Debug.DrawRay(Vector3,Vector3,Color)
      language: CSharp
      name:
        CSharp: DrawRay(Vector3, Vector3, Color)
        VB: DrawRay(Vector3, Vector3, Color)
      nameWithType:
        CSharp: Debug.DrawRay(Vector3, Vector3, Color)
        VB: Debug.DrawRay(Vector3, Vector3, Color)
      qualifiedName:
        CSharp: UCT.Debug.DrawRay(Vector3, Vector3, Color)
        VB: UCT.Debug.DrawRay(Vector3, Vector3, Color)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: DrawRay
        path: ''
        startLine: 18649
      syntax:
        content:
          CSharp: public static void DrawRay(Vector3 start, Vector3 direction, Color color)
          VB: Public Shared Sub DrawRay(start As Vector3, direction As Vector3, color As Color)
        parameters:
        - id: start
          type: Global.Vector3
        - id: direction
          type: Global.Vector3
        - id: color
          type: Global.Color
      overload: UCT.Debug.DrawRay*
    - id: UCT.Debug.DrawRay(Vector3,Vector3,Color,System.Single)
      commentId: M:UCT.Debug.DrawRay(Vector3,Vector3,Color,System.Single)
      language: CSharp
      name:
        CSharp: DrawRay(Vector3, Vector3, Color, float)
        VB: DrawRay(Vector3, Vector3, Color, Single)
      nameWithType:
        CSharp: Debug.DrawRay(Vector3, Vector3, Color, float)
        VB: Debug.DrawRay(Vector3, Vector3, Color, Single)
      qualifiedName:
        CSharp: UCT.Debug.DrawRay(Vector3, Vector3, Color, float)
        VB: UCT.Debug.DrawRay(Vector3, Vector3, Color, Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: DrawRay
        path: ''
        startLine: 18656
      syntax:
        content:
          CSharp: public static void DrawRay(Vector3 start, Vector3 direction, Color color, float duration)
          VB: Public Shared Sub DrawRay(start As Vector3, direction As Vector3, color As Color, duration As Single)
        parameters:
        - id: start
          type: Global.Vector3
        - id: direction
          type: Global.Vector3
        - id: color
          type: Global.Color
        - id: duration
          type: System.Single
      overload: UCT.Debug.DrawRay*
    - id: UCT.Debug.DrawRay(Vector3,Vector3,Color,System.Single,System.Boolean)
      commentId: M:UCT.Debug.DrawRay(Vector3,Vector3,Color,System.Single,System.Boolean)
      language: CSharp
      name:
        CSharp: DrawRay(Vector3, Vector3, Color, float, bool)
        VB: DrawRay(Vector3, Vector3, Color, Single, Boolean)
      nameWithType:
        CSharp: Debug.DrawRay(Vector3, Vector3, Color, float, bool)
        VB: Debug.DrawRay(Vector3, Vector3, Color, Single, Boolean)
      qualifiedName:
        CSharp: UCT.Debug.DrawRay(Vector3, Vector3, Color, float, bool)
        VB: UCT.Debug.DrawRay(Vector3, Vector3, Color, Single, Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT
      source:
        id: DrawRay
        path: ''
        startLine: 18663
      syntax:
        content:
          CSharp: public static void DrawRay(Vector3 start, Vector3 direction, Color color, float duration, bool depthTest)
          VB: Public Shared Sub DrawRay(start As Vector3, direction As Vector3, color As Color, duration As Single, depthTest As Boolean)
        parameters:
        - id: start
          type: Global.Vector3
        - id: direction
          type: Global.Vector3
        - id: color
          type: Global.Color
        - id: duration
          type: System.Single
        - id: depthTest
          type: System.Boolean
      overload: UCT.Debug.DrawRay*
- id: UCT.Service
  commentId: N:UCT.Service
  language: CSharp
  name:
    CSharp: UCT.Service
    VB: UCT.Service
  nameWithType:
    CSharp: UCT.Service
    VB: UCT.Service
  qualifiedName:
    CSharp: UCT.Service
    VB: UCT.Service
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.Service.TextMeshProRichTextChecker
    commentId: T:UCT.Service.TextMeshProRichTextChecker
    language: CSharp
    name:
      CSharp: TextMeshProRichTextChecker
      VB: TextMeshProRichTextChecker
    nameWithType:
      CSharp: TextMeshProRichTextChecker
      VB: TextMeshProRichTextChecker
    qualifiedName:
      CSharp: UCT.Service.TextMeshProRichTextChecker
      VB: UCT.Service.TextMeshProRichTextChecker
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: TextMeshProRichTextChecker
      path: ''
      startLine: 4388
    syntax:
      content:
        CSharp: public static class TextMeshProRichTextChecker
        VB: Public Module TextMeshProRichTextChecker
    inheritance:
    - System.Object
    items:
    - id: UCT.Service.TextMeshProRichTextChecker.ContainsRichText(System.String)
      commentId: M:UCT.Service.TextMeshProRichTextChecker.ContainsRichText(System.String)
      language: CSharp
      name:
        CSharp: ContainsRichText(string)
        VB: ContainsRichText(String)
      nameWithType:
        CSharp: TextMeshProRichTextChecker.ContainsRichText(string)
        VB: TextMeshProRichTextChecker.ContainsRichText(String)
      qualifiedName:
        CSharp: UCT.Service.TextMeshProRichTextChecker.ContainsRichText(string)
        VB: UCT.Service.TextMeshProRichTextChecker.ContainsRichText(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ContainsRichText
        path: ''
        startLine: 4409
      summary: "\n检测字符串是否包含富文本标签\n"
      example: []
      syntax:
        content:
          CSharp: public static bool ContainsRichText(string input)
          VB: Public Shared Function ContainsRichText(input As String) As Boolean
        parameters:
        - id: input
          type: System.String
          description: 输入字符串
        return:
          type: System.Boolean
          description: 如果包含富文本标签，则返回 true，否则返回 false
      overload: UCT.Service.TextMeshProRichTextChecker.ContainsRichText*
  - id: UCT.Service.ListManipulationService
    commentId: T:UCT.Service.ListManipulationService
    language: CSharp
    name:
      CSharp: ListManipulationService
      VB: ListManipulationService
    nameWithType:
      CSharp: ListManipulationService
      VB: ListManipulationService
    qualifiedName:
      CSharp: UCT.Service.ListManipulationService
      VB: UCT.Service.ListManipulationService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: ListManipulationService
      path: ''
      startLine: 4424
    summary: "\n数组，列表相关函数\n"
    example: []
    syntax:
      content:
        CSharp: public static class ListManipulationService
        VB: Public Module ListManipulationService
    inheritance:
    - System.Object
    items:
    - id: UCT.Service.ListManipulationService.FindFirstNullOrEmptyIndex(System.Collections.Generic.List{System.String})
      commentId: M:UCT.Service.ListManipulationService.FindFirstNullOrEmptyIndex(System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: FindFirstNullOrEmptyIndex(List<string>)
        VB: FindFirstNullOrEmptyIndex(List(Of String))
      nameWithType:
        CSharp: ListManipulationService.FindFirstNullOrEmptyIndex(List<string>)
        VB: ListManipulationService.FindFirstNullOrEmptyIndex(List(Of String))
      qualifiedName:
        CSharp: UCT.Service.ListManipulationService.FindFirstNullOrEmptyIndex(System.Collections.Generic.List<string>)
        VB: UCT.Service.ListManipulationService.FindFirstNullOrEmptyIndex(System.Collections.Generic.List(Of String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: FindFirstNullOrEmptyIndex
        path: ''
        startLine: 4431
      summary: "\n找到列表中第一个 null 或空字符串的索引。如果列表中没有，则返回列表的长度。\n"
      example: []
      syntax:
        content:
          CSharp: public static int FindFirstNullOrEmptyIndex(List<string> list)
          VB: Public Shared Function FindFirstNullOrEmptyIndex(list As List(Of String)) As Integer
        parameters:
        - id: list
          type: System.Collections.Generic.List{System.String}
          description: 字符串列表
        return:
          type: System.Int32
          description: 第一个 null 或空字符串的索引，或列表的长度
      overload: UCT.Service.ListManipulationService.FindFirstNullOrEmptyIndex*
    - id: UCT.Service.ListManipulationService.MoveNullOrEmptyToEnd(System.Collections.Generic.List{System.String})
      commentId: M:UCT.Service.ListManipulationService.MoveNullOrEmptyToEnd(System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: MoveNullOrEmptyToEnd(List<string>)
        VB: MoveNullOrEmptyToEnd(List(Of String))
      nameWithType:
        CSharp: ListManipulationService.MoveNullOrEmptyToEnd(List<string>)
        VB: ListManipulationService.MoveNullOrEmptyToEnd(List(Of String))
      qualifiedName:
        CSharp: UCT.Service.ListManipulationService.MoveNullOrEmptyToEnd(System.Collections.Generic.List<string>)
        VB: UCT.Service.ListManipulationService.MoveNullOrEmptyToEnd(System.Collections.Generic.List(Of String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: MoveNullOrEmptyToEnd
        path: ''
        startLine: 4451
      summary: "\n重排列表，将所有Null或空字符串排在最后。\n"
      example: []
      syntax:
        content:
          CSharp: public static List<string> MoveNullOrEmptyToEnd(List<string> inputList)
          VB: Public Shared Function MoveNullOrEmptyToEnd(inputList As List(Of String)) As List(Of String)
        parameters:
        - id: inputList
          type: System.Collections.Generic.List{System.String}
        return:
          type: System.Collections.Generic.List{System.String}
      overload: UCT.Service.ListManipulationService.MoveNullOrEmptyToEnd*
    - id: UCT.Service.ListManipulationService.CheckAllDataNamesInItemList(System.Collections.Generic.List{System.String})
      commentId: M:UCT.Service.ListManipulationService.CheckAllDataNamesInItemList(System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: CheckAllDataNamesInItemList(List<string>)
        VB: CheckAllDataNamesInItemList(List(Of String))
      nameWithType:
        CSharp: ListManipulationService.CheckAllDataNamesInItemList(List<string>)
        VB: ListManipulationService.CheckAllDataNamesInItemList(List(Of String))
      qualifiedName:
        CSharp: UCT.Service.ListManipulationService.CheckAllDataNamesInItemList(System.Collections.Generic.List<string>)
        VB: UCT.Service.ListManipulationService.CheckAllDataNamesInItemList(System.Collections.Generic.List(Of String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: CheckAllDataNamesInItemList
        path: ''
        startLine: 4475
      summary: "\n检查列表内的项是否都是item字典内注册过的dataName。如果不是，对应项会设为null。\n"
      example: []
      syntax:
        content:
          CSharp: public static List<string> CheckAllDataNamesInItemList(List<string> inputList)
          VB: Public Shared Function CheckAllDataNamesInItemList(inputList As List(Of String)) As List(Of String)
        parameters:
        - id: inputList
          type: System.Collections.Generic.List{System.String}
        return:
          type: System.Collections.Generic.List{System.String}
      overload: UCT.Service.ListManipulationService.CheckAllDataNamesInItemList*
  - id: UCT.Service.InkService
    commentId: T:UCT.Service.InkService
    language: CSharp
    name:
      CSharp: InkService
      VB: InkService
    nameWithType:
      CSharp: InkService
      VB: InkService
    qualifiedName:
      CSharp: UCT.Service.InkService
      VB: UCT.Service.InkService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: InkService
      path: ''
      startLine: 4498
    summary: "\nUCT对Ink语言的相关函数封装。\n关于Ink，请参阅：https://www.inklestudios.com/ink/\n"
    example: []
    syntax:
      content:
        CSharp: public static class InkService
        VB: Public Module InkService
    inheritance:
    - System.Object
    items:
    - id: UCT.Service.InkService.ReadInkJsonFileFromLocalPath(System.String)
      commentId: M:UCT.Service.InkService.ReadInkJsonFileFromLocalPath(System.String)
      language: CSharp
      name:
        CSharp: ReadInkJsonFileFromLocalPath(string)
        VB: ReadInkJsonFileFromLocalPath(String)
      nameWithType:
        CSharp: InkService.ReadInkJsonFileFromLocalPath(string)
        VB: InkService.ReadInkJsonFileFromLocalPath(String)
      qualifiedName:
        CSharp: UCT.Service.InkService.ReadInkJsonFileFromLocalPath(string)
        VB: UCT.Service.InkService.ReadInkJsonFileFromLocalPath(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ReadInkJsonFileFromLocalPath
        path: ''
        startLine: 4504
      summary: "\n从指定路径读取ink文件生成的json文件中包含的Story。\n如果没有json文件或json文件旧于ink文件，会生成新的json文件。\n"
      example: []
      syntax:
        content:
          CSharp: public static Story ReadInkJsonFileFromLocalPath(string path)
          VB: Public Shared Function ReadInkJsonFileFromLocalPath(path As String) As Story
        parameters:
        - id: path
          type: System.String
        return:
          type: Global.Story
      overload: UCT.Service.InkService.ReadInkJsonFileFromLocalPath*
    - id: UCT.Service.InkService.ReadInkJsonFileFromResources(System.String)
      commentId: M:UCT.Service.InkService.ReadInkJsonFileFromResources(System.String)
      language: CSharp
      name:
        CSharp: ReadInkJsonFileFromResources(string)
        VB: ReadInkJsonFileFromResources(String)
      nameWithType:
        CSharp: InkService.ReadInkJsonFileFromResources(string)
        VB: InkService.ReadInkJsonFileFromResources(String)
      qualifiedName:
        CSharp: UCT.Service.InkService.ReadInkJsonFileFromResources(string)
        VB: UCT.Service.InkService.ReadInkJsonFileFromResources(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ReadInkJsonFileFromResources
        path: ''
        startLine: 4532
      syntax:
        content:
          CSharp: public static Story ReadInkJsonFileFromResources(string path)
          VB: Public Shared Function ReadInkJsonFileFromResources(path As String) As Story
        parameters:
        - id: path
          type: System.String
        return:
          type: Global.Story
      overload: UCT.Service.InkService.ReadInkJsonFileFromResources*
  - id: UCT.Service.DataHandlerService
    commentId: T:UCT.Service.DataHandlerService
    language: CSharp
    name:
      CSharp: DataHandlerService
      VB: DataHandlerService
    nameWithType:
      CSharp: DataHandlerService
      VB: DataHandlerService
    qualifiedName:
      CSharp: UCT.Service.DataHandlerService
      VB: UCT.Service.DataHandlerService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: DataHandlerService
      path: ''
      startLine: 4555
    summary: "\n数据处理相关函数\n"
    example: []
    syntax:
      content:
        CSharp: public static class DataHandlerService
        VB: Public Module DataHandlerService
    inheritance:
    - System.Object
    items:
    - id: UCT.Service.DataHandlerService.GetItemFormDataName(System.String)
      commentId: M:UCT.Service.DataHandlerService.GetItemFormDataName(System.String)
      language: CSharp
      name:
        CSharp: GetItemFormDataName(string)
        VB: GetItemFormDataName(String)
      nameWithType:
        CSharp: DataHandlerService.GetItemFormDataName(string)
        VB: DataHandlerService.GetItemFormDataName(String)
      qualifiedName:
        CSharp: UCT.Service.DataHandlerService.GetItemFormDataName(string)
        VB: UCT.Service.DataHandlerService.GetItemFormDataName(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetItemFormDataName
        path: ''
        startLine: 4557
      syntax:
        content:
          CSharp: public static GameItem GetItemFormDataName(string dataName)
          VB: Public Shared Function GetItemFormDataName(dataName As String) As GameItem
        parameters:
        - id: dataName
          type: System.String
        return:
          type: Global.GameItem
      overload: UCT.Service.DataHandlerService.GetItemFormDataName*
    - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackName(System.String)
      commentId: M:UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackName(System.String)
      language: CSharp
      name:
        CSharp: ItemDataNameGetLanguagePackName(string)
        VB: ItemDataNameGetLanguagePackName(String)
      nameWithType:
        CSharp: DataHandlerService.ItemDataNameGetLanguagePackName(string)
        VB: DataHandlerService.ItemDataNameGetLanguagePackName(String)
      qualifiedName:
        CSharp: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackName(string)
        VB: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackName(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ItemDataNameGetLanguagePackName
        path: ''
        startLine: 4566
      summary: "\n通过DataName获取Item语言包名称\n"
      example: []
      syntax:
        content:
          CSharp: public static string ItemDataNameGetLanguagePackName(string dataName)
          VB: Public Shared Function ItemDataNameGetLanguagePackName(dataName As String) As String
        parameters:
        - id: dataName
          type: System.String
        return:
          type: System.String
      overload: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackName*
    - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackUseText(System.String)
      commentId: M:UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackUseText(System.String)
      language: CSharp
      name:
        CSharp: ItemDataNameGetLanguagePackUseText(string)
        VB: ItemDataNameGetLanguagePackUseText(String)
      nameWithType:
        CSharp: DataHandlerService.ItemDataNameGetLanguagePackUseText(string)
        VB: DataHandlerService.ItemDataNameGetLanguagePackUseText(String)
      qualifiedName:
        CSharp: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackUseText(string)
        VB: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackUseText(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ItemDataNameGetLanguagePackUseText
        path: ''
        startLine: 4574
      summary: "\n通过DataName获取Item UseText\n"
      example: []
      syntax:
        content:
          CSharp: public static string ItemDataNameGetLanguagePackUseText(string dataName)
          VB: Public Shared Function ItemDataNameGetLanguagePackUseText(dataName As String) As String
        parameters:
        - id: dataName
          type: System.String
        return:
          type: System.String
      overload: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackUseText*
    - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackInfoText(System.String)
      commentId: M:UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackInfoText(System.String)
      language: CSharp
      name:
        CSharp: ItemDataNameGetLanguagePackInfoText(string)
        VB: ItemDataNameGetLanguagePackInfoText(String)
      nameWithType:
        CSharp: DataHandlerService.ItemDataNameGetLanguagePackInfoText(string)
        VB: DataHandlerService.ItemDataNameGetLanguagePackInfoText(String)
      qualifiedName:
        CSharp: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackInfoText(string)
        VB: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackInfoText(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ItemDataNameGetLanguagePackInfoText
        path: ''
        startLine: 4582
      summary: "\n通过DataName获取Item InfoText\n"
      example: []
      syntax:
        content:
          CSharp: public static string ItemDataNameGetLanguagePackInfoText(string dataName)
          VB: Public Shared Function ItemDataNameGetLanguagePackInfoText(dataName As String) As String
        parameters:
        - id: dataName
          type: System.String
        return:
          type: System.String
      overload: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackInfoText*
    - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackDropText(System.String)
      commentId: M:UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackDropText(System.String)
      language: CSharp
      name:
        CSharp: ItemDataNameGetLanguagePackDropText(string)
        VB: ItemDataNameGetLanguagePackDropText(String)
      nameWithType:
        CSharp: DataHandlerService.ItemDataNameGetLanguagePackDropText(string)
        VB: DataHandlerService.ItemDataNameGetLanguagePackDropText(String)
      qualifiedName:
        CSharp: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackDropText(string)
        VB: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackDropText(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ItemDataNameGetLanguagePackDropText
        path: ''
        startLine: 4590
      summary: "\n通过DataName获取Item DropText\n"
      example: []
      syntax:
        content:
          CSharp: public static string ItemDataNameGetLanguagePackDropText(string dataName)
          VB: Public Shared Function ItemDataNameGetLanguagePackDropText(dataName As String) As String
        parameters:
        - id: dataName
          type: System.String
        return:
          type: System.String
      overload: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackDropText*
    - id: UCT.Service.DataHandlerService.LoadItemData(System.String)
      commentId: M:UCT.Service.DataHandlerService.LoadItemData(System.String)
      language: CSharp
      name:
        CSharp: LoadItemData(string)
        VB: LoadItemData(String)
      nameWithType:
        CSharp: DataHandlerService.LoadItemData(string)
        VB: DataHandlerService.LoadItemData(String)
      qualifiedName:
        CSharp: UCT.Service.DataHandlerService.LoadItemData(string)
        VB: UCT.Service.DataHandlerService.LoadItemData(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: LoadItemData
        path: ''
        startLine: 4613
      summary: "\n从 string 加载并解析数据，返回新列表\n"
      example: []
      syntax:
        content:
          CSharp: public static List<string> LoadItemData(string inputText)
          VB: Public Shared Function LoadItemData(inputText As String) As List(Of String)
        parameters:
        - id: inputText
          type: System.String
        return:
          type: System.Collections.Generic.List{System.String}
      overload: UCT.Service.DataHandlerService.LoadItemData*
    - id: UCT.Service.DataHandlerService.ChangeItemData(System.String,System.Boolean,System.Collections.Generic.List{System.String})
      commentId: M:UCT.Service.DataHandlerService.ChangeItemData(System.String,System.Boolean,System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: ChangeItemData(string, bool, List<string>)
        VB: ChangeItemData(String, Boolean, List(Of String))
      nameWithType:
        CSharp: DataHandlerService.ChangeItemData(string, bool, List<string>)
        VB: DataHandlerService.ChangeItemData(String, Boolean, List(Of String))
      qualifiedName:
        CSharp: UCT.Service.DataHandlerService.ChangeItemData(string, bool, System.Collections.Generic.List<string>)
        VB: UCT.Service.DataHandlerService.ChangeItemData(String, Boolean, System.Collections.Generic.List(Of String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ChangeItemData
        path: ''
        startLine: 4684
      summary: "\n转换单个字符串中的特殊字符\n"
      example: []
      syntax:
        content:
          CSharp: public static string ChangeItemData(string input, bool isData, List<string> ex)
          VB: Public Shared Function ChangeItemData(input As String, isData As Boolean, ex As List(Of String)) As String
        parameters:
        - id: input
          type: System.String
        - id: isData
          type: System.Boolean
        - id: ex
          type: System.Collections.Generic.List{System.String}
        return:
          type: System.String
      overload: UCT.Service.DataHandlerService.ChangeItemData*
    - id: UCT.Service.DataHandlerService.ChangeItemData(System.Collections.Generic.List{System.String},System.Boolean,System.Collections.Generic.List{System.String})
      commentId: M:UCT.Service.DataHandlerService.ChangeItemData(System.Collections.Generic.List{System.String},System.Boolean,System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: ChangeItemData(List<string>, bool, List<string>)
        VB: ChangeItemData(List(Of String), Boolean, List(Of String))
      nameWithType:
        CSharp: DataHandlerService.ChangeItemData(List<string>, bool, List<string>)
        VB: DataHandlerService.ChangeItemData(List(Of String), Boolean, List(Of String))
      qualifiedName:
        CSharp: UCT.Service.DataHandlerService.ChangeItemData(System.Collections.Generic.List<string>, bool, System.Collections.Generic.List<string>)
        VB: UCT.Service.DataHandlerService.ChangeItemData(System.Collections.Generic.List(Of String), Boolean, System.Collections.Generic.List(Of String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ChangeItemData
        path: ''
        startLine: 4721
      summary: "\n转换特殊字符\n"
      example: []
      syntax:
        content:
          CSharp: public static List<string> ChangeItemData(List<string> list, bool isData, List<string> ex)
          VB: Public Shared Function ChangeItemData(list As List(Of String), isData As Boolean, ex As List(Of String)) As List(Of String)
        parameters:
        - id: list
          type: System.Collections.Generic.List{System.String}
        - id: isData
          type: System.Boolean
        - id: ex
          type: System.Collections.Generic.List{System.String}
        return:
          type: System.Collections.Generic.List{System.String}
      overload: UCT.Service.DataHandlerService.ChangeItemData*
    - id: UCT.Service.DataHandlerService.GetLanguageInsideId(System.Int32)
      commentId: M:UCT.Service.DataHandlerService.GetLanguageInsideId(System.Int32)
      language: CSharp
      name:
        CSharp: GetLanguageInsideId(int)
        VB: GetLanguageInsideId(Integer)
      nameWithType:
        CSharp: DataHandlerService.GetLanguageInsideId(int)
        VB: DataHandlerService.GetLanguageInsideId(Integer)
      qualifiedName:
        CSharp: UCT.Service.DataHandlerService.GetLanguageInsideId(int)
        VB: UCT.Service.DataHandlerService.GetLanguageInsideId(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetLanguageInsideId
        path: ''
        startLine: 4816
      summary: "\n获取内置语言包ID\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetLanguageInsideId(int id)
          VB: Public Shared Function GetLanguageInsideId(id As Integer) As String
        parameters:
        - id: id
          type: System.Int32
        return:
          type: System.String
      overload: UCT.Service.DataHandlerService.GetLanguageInsideId*
    - id: UCT.Service.DataHandlerService.LanguagePackDetection(System.Int32)
      commentId: M:UCT.Service.DataHandlerService.LanguagePackDetection(System.Int32)
      language: CSharp
      name:
        CSharp: LanguagePackDetection(int)
        VB: LanguagePackDetection(Integer)
      nameWithType:
        CSharp: DataHandlerService.LanguagePackDetection(int)
        VB: DataHandlerService.LanguagePackDetection(Integer)
      qualifiedName:
        CSharp: UCT.Service.DataHandlerService.LanguagePackDetection(int)
        VB: UCT.Service.DataHandlerService.LanguagePackDetection(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: LanguagePackDetection
        path: ''
        startLine: 4831
      summary: "\n检测当前语言包ID是否在有效范围内。如果不在有效范围内，\n则将语言包ID设置为默认值2。\n"
      example: []
      syntax:
        content:
          CSharp: public static int LanguagePackDetection(int id)
          VB: Public Shared Function LanguagePackDetection(id As Integer) As Integer
        parameters:
        - id: id
          type: System.Int32
          description: 语言包ID
        return:
          type: System.Int32
      overload: UCT.Service.DataHandlerService.LanguagePackDetection*
    - id: UCT.Service.DataHandlerService.LoadLanguageData(System.String,System.Int32)
      commentId: M:UCT.Service.DataHandlerService.LoadLanguageData(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: LoadLanguageData(string, int)
        VB: LoadLanguageData(String, Integer)
      nameWithType:
        CSharp: DataHandlerService.LoadLanguageData(string, int)
        VB: DataHandlerService.LoadLanguageData(String, Integer)
      qualifiedName:
        CSharp: UCT.Service.DataHandlerService.LoadLanguageData(string, int)
        VB: UCT.Service.DataHandlerService.LoadLanguageData(String, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: LoadLanguageData
        path: ''
        startLine: 4845
      summary: "\n加载对应语言包的数据\n"
      example: []
      syntax:
        content:
          CSharp: public static string LoadLanguageData(string path, int id)
          VB: Public Shared Function LoadLanguageData(path As String, id As Integer) As String
        parameters:
        - id: path
          type: System.String
        - id: id
          type: System.Int32
        return:
          type: System.String
      overload: UCT.Service.DataHandlerService.LoadLanguageData*
    - id: UCT.Service.DataHandlerService.InitializationLanguagePackFullWidth
      commentId: M:UCT.Service.DataHandlerService.InitializationLanguagePackFullWidth
      language: CSharp
      name:
        CSharp: InitializationLanguagePackFullWidth()
        VB: InitializationLanguagePackFullWidth()
      nameWithType:
        CSharp: DataHandlerService.InitializationLanguagePackFullWidth()
        VB: DataHandlerService.InitializationLanguagePackFullWidth()
      qualifiedName:
        CSharp: UCT.Service.DataHandlerService.InitializationLanguagePackFullWidth()
        VB: UCT.Service.DataHandlerService.InitializationLanguagePackFullWidth()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: InitializationLanguagePackFullWidth
        path: ''
        startLine: 4856
      summary: "\n检测语言包全半角\n"
      example: []
      syntax:
        content:
          CSharp: public static void InitializationLanguagePackFullWidth()
          VB: Public Shared Sub InitializationLanguagePackFullWidth()
      overload: UCT.Service.DataHandlerService.InitializationLanguagePackFullWidth*
    - id: UCT.Service.DataHandlerService.SetPlayerControl(PlayerControl)
      commentId: M:UCT.Service.DataHandlerService.SetPlayerControl(PlayerControl)
      language: CSharp
      name:
        CSharp: SetPlayerControl(PlayerControl)
        VB: SetPlayerControl(PlayerControl)
      nameWithType:
        CSharp: DataHandlerService.SetPlayerControl(PlayerControl)
        VB: DataHandlerService.SetPlayerControl(PlayerControl)
      qualifiedName:
        CSharp: UCT.Service.DataHandlerService.SetPlayerControl(PlayerControl)
        VB: UCT.Service.DataHandlerService.SetPlayerControl(PlayerControl)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: SetPlayerControl
        path: ''
        startLine: 4884
      summary: "\n设置PlayerControl\n"
      example: []
      syntax:
        content:
          CSharp: public static PlayerControl SetPlayerControl(PlayerControl inputPlayerControl)
          VB: Public Shared Function SetPlayerControl(inputPlayerControl As PlayerControl) As PlayerControl
        parameters:
        - id: inputPlayerControl
          type: Global.PlayerControl
        return:
          type: Global.PlayerControl
      overload: UCT.Service.DataHandlerService.SetPlayerControl*
  - id: UCT.Service.TextProcessingService
    commentId: T:UCT.Service.TextProcessingService
    language: CSharp
    name:
      CSharp: TextProcessingService
      VB: TextProcessingService
    nameWithType:
      CSharp: TextProcessingService
      VB: TextProcessingService
    qualifiedName:
      CSharp: UCT.Service.TextProcessingService
      VB: UCT.Service.TextProcessingService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: TextProcessingService
      path: ''
      startLine: 4913
    summary: "\n字符串、文本处理相关函数\n"
    example: []
    syntax:
      content:
        CSharp: public static class TextProcessingService
        VB: Public Module TextProcessingService
    inheritance:
    - System.Object
    items:
    - id: UCT.Service.TextProcessingService.SplitStringToListWithDelimiter(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
      commentId: M:UCT.Service.TextProcessingService.SplitStringToListWithDelimiter(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: SplitStringToListWithDelimiter(List<string>, List<string>)
        VB: SplitStringToListWithDelimiter(List(Of String), List(Of String))
      nameWithType:
        CSharp: TextProcessingService.SplitStringToListWithDelimiter(List<string>, List<string>)
        VB: TextProcessingService.SplitStringToListWithDelimiter(List(Of String), List(Of String))
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.SplitStringToListWithDelimiter(System.Collections.Generic.List<string>, System.Collections.Generic.List<string>)
        VB: UCT.Service.TextProcessingService.SplitStringToListWithDelimiter(System.Collections.Generic.List(Of String), System.Collections.Generic.List(Of String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: SplitStringToListWithDelimiter
        path: ''
        startLine: 4919
      summary: "\n检测 &apos;\\&apos;字符然后分割文本到子List\n批量处理List string\n"
      example: []
      syntax:
        content:
          CSharp: public static void SplitStringToListWithDelimiter(List<string> parentList, List<string> sonList)
          VB: Public Shared Sub SplitStringToListWithDelimiter(parentList As List(Of String), sonList As List(Of String))
        parameters:
        - id: parentList
          type: System.Collections.Generic.List{System.String}
        - id: sonList
          type: System.Collections.Generic.List{System.String}
      overload: UCT.Service.TextProcessingService.SplitStringToListWithDelimiter*
    - id: UCT.Service.TextProcessingService.SplitStringToListWithDelimiter(System.String,System.Char)
      commentId: M:UCT.Service.TextProcessingService.SplitStringToListWithDelimiter(System.String,System.Char)
      language: CSharp
      name:
        CSharp: SplitStringToListWithDelimiter(string, char)
        VB: SplitStringToListWithDelimiter(String, Char)
      nameWithType:
        CSharp: TextProcessingService.SplitStringToListWithDelimiter(string, char)
        VB: TextProcessingService.SplitStringToListWithDelimiter(String, Char)
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.SplitStringToListWithDelimiter(string, char)
        VB: UCT.Service.TextProcessingService.SplitStringToListWithDelimiter(String, Char)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: SplitStringToListWithDelimiter
        path: ''
        startLine: 4953
      summary: "\n检测 &apos;\\&apos;字符然后分割文本到子List\n传入一个string\n"
      example: []
      syntax:
        content:
          CSharp: public static List<string> SplitStringToListWithDelimiter(string parentString, char delimiter = '\\')
          VB: Public Shared Function SplitStringToListWithDelimiter(parentString As String, delimiter As Char = "\"c) As List(Of String)
        parameters:
        - id: parentString
          type: System.String
        - id: delimiter
          type: System.Char
        return:
          type: System.Collections.Generic.List{System.String}
      overload: UCT.Service.TextProcessingService.SplitStringToListWithDelimiter*
    - id: UCT.Service.TextProcessingService.BatchGetFirstChildStringByPrefix(System.Collections.Generic.List{System.String},System.String)
      commentId: M:UCT.Service.TextProcessingService.BatchGetFirstChildStringByPrefix(System.Collections.Generic.List{System.String},System.String)
      language: CSharp
      name:
        CSharp: BatchGetFirstChildStringByPrefix(List<string>, string)
        VB: BatchGetFirstChildStringByPrefix(List(Of String), String)
      nameWithType:
        CSharp: TextProcessingService.BatchGetFirstChildStringByPrefix(List<string>, string)
        VB: TextProcessingService.BatchGetFirstChildStringByPrefix(List(Of String), String)
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.BatchGetFirstChildStringByPrefix(System.Collections.Generic.List<string>, string)
        VB: UCT.Service.TextProcessingService.BatchGetFirstChildStringByPrefix(System.Collections.Generic.List(Of String), String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: BatchGetFirstChildStringByPrefix
        path: ''
        startLine: 5000
      summary: "\n检测list的前几个字符是否与传入的string screen相同。\n若相同则分割文本到子List\n"
      example: []
      syntax:
        content:
          CSharp: public static List<string> BatchGetFirstChildStringByPrefix(List<string> parentList, string screen)
          VB: Public Shared Function BatchGetFirstChildStringByPrefix(parentList As List(Of String), screen As String) As List(Of String)
        parameters:
        - id: parentList
          type: System.Collections.Generic.List{System.String}
        - id: screen
          type: System.String
        return:
          type: System.Collections.Generic.List{System.String}
      overload: UCT.Service.TextProcessingService.BatchGetFirstChildStringByPrefix*
    - id: UCT.Service.TextProcessingService.GetFirstChildStringByPrefix(System.Collections.Generic.List{System.String},System.String,System.Boolean)
      commentId: M:UCT.Service.TextProcessingService.GetFirstChildStringByPrefix(System.Collections.Generic.List{System.String},System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: GetFirstChildStringByPrefix(List<string>, string, bool)
        VB: GetFirstChildStringByPrefix(List(Of String), String, Boolean)
      nameWithType:
        CSharp: TextProcessingService.GetFirstChildStringByPrefix(List<string>, string, bool)
        VB: TextProcessingService.GetFirstChildStringByPrefix(List(Of String), String, Boolean)
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.GetFirstChildStringByPrefix(System.Collections.Generic.List<string>, string, bool)
        VB: UCT.Service.TextProcessingService.GetFirstChildStringByPrefix(System.Collections.Generic.List(Of String), String, Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetFirstChildStringByPrefix
        path: ''
        startLine: 5011
      summary: "\n传入数据名称返回文本包文本\n"
      example: []
      syntax:
        content:
          CSharp: public static string GetFirstChildStringByPrefix(List<string> parentList, string screen, bool isIgnoreMiss = false)
          VB: Public Shared Function GetFirstChildStringByPrefix(parentList As List(Of String), screen As String, isIgnoreMiss As Boolean = False) As String
        parameters:
        - id: parentList
          type: System.Collections.Generic.List{System.String}
        - id: screen
          type: System.String
        - id: isIgnoreMiss
          type: System.Boolean
        return:
          type: System.String
      overload: UCT.Service.TextProcessingService.GetFirstChildStringByPrefix*
    - id: UCT.Service.TextProcessingService.GetAllChildStringsByPrefix(System.Collections.Generic.List{System.String},System.String)
      commentId: M:UCT.Service.TextProcessingService.GetAllChildStringsByPrefix(System.Collections.Generic.List{System.String},System.String)
      language: CSharp
      name:
        CSharp: GetAllChildStringsByPrefix(List<string>, string)
        VB: GetAllChildStringsByPrefix(List(Of String), String)
      nameWithType:
        CSharp: TextProcessingService.GetAllChildStringsByPrefix(List<string>, string)
        VB: TextProcessingService.GetAllChildStringsByPrefix(List(Of String), String)
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.GetAllChildStringsByPrefix(System.Collections.Generic.List<string>, string)
        VB: UCT.Service.TextProcessingService.GetAllChildStringsByPrefix(System.Collections.Generic.List(Of String), String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetAllChildStringsByPrefix
        path: ''
        startLine: 5043
      summary: "\n用于游戏内文本读取\n传入数据名称返回所有同名的文本包文本\n"
      example: []
      syntax:
        content:
          CSharp: public static List<string> GetAllChildStringsByPrefix(List<string> parentList, string screen)
          VB: Public Shared Function GetAllChildStringsByPrefix(parentList As List(Of String), screen As String) As List(Of String)
        parameters:
        - id: parentList
          type: System.Collections.Generic.List{System.String}
        - id: screen
          type: System.String
        return:
          type: System.Collections.Generic.List{System.String}
      overload: UCT.Service.TextProcessingService.GetAllChildStringsByPrefix*
    - id: UCT.Service.TextProcessingService.ClassifyStringsByPrefix(System.Collections.Generic.List{System.String},System.String[])
      commentId: M:UCT.Service.TextProcessingService.ClassifyStringsByPrefix(System.Collections.Generic.List{System.String},System.String[])
      language: CSharp
      name:
        CSharp: ClassifyStringsByPrefix(List<string>, string[])
        VB: ClassifyStringsByPrefix(List(Of String), String())
      nameWithType:
        CSharp: TextProcessingService.ClassifyStringsByPrefix(List<string>, string[])
        VB: TextProcessingService.ClassifyStringsByPrefix(List(Of String), String())
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.ClassifyStringsByPrefix(System.Collections.Generic.List<string>, string[])
        VB: UCT.Service.TextProcessingService.ClassifyStringsByPrefix(System.Collections.Generic.List(Of String), String())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ClassifyStringsByPrefix
        path: ''
        startLine: 5057
      summary: "\n再分配文本包\n"
      example: []
      syntax:
        content:
          CSharp: public static List<string>[] ClassifyStringsByPrefix(List<string> sourceStrings, string[] prefixes)
          VB: Public Shared Function ClassifyStringsByPrefix(sourceStrings As List(Of String), prefixes As String()) As List(Of String)()
        parameters:
        - id: sourceStrings
          type: System.Collections.Generic.List{System.String}
        - id: prefixes
          type: System.String[]
        return:
          type: System.Collections.Generic.List{System.String}[]
      overload: UCT.Service.TextProcessingService.ClassifyStringsByPrefix*
    - id: UCT.Service.TextProcessingService.FormatTimeToHoursMinutes(System.Int32)
      commentId: M:UCT.Service.TextProcessingService.FormatTimeToHoursMinutes(System.Int32)
      language: CSharp
      name:
        CSharp: FormatTimeToHoursMinutes(int)
        VB: FormatTimeToHoursMinutes(Integer)
      nameWithType:
        CSharp: TextProcessingService.FormatTimeToHoursMinutes(int)
        VB: TextProcessingService.FormatTimeToHoursMinutes(Integer)
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.FormatTimeToHoursMinutes(int)
        VB: UCT.Service.TextProcessingService.FormatTimeToHoursMinutes(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: FormatTimeToHoursMinutes
        path: ''
        startLine: 5096
      summary: "\n将给定的秒数转换为 &quot;hh:mm&quot; 格式的时间字符串。\n"
      example: []
      syntax:
        content:
          CSharp: public static string FormatTimeToHoursMinutes(int totalSeconds)
          VB: Public Shared Function FormatTimeToHoursMinutes(totalSeconds As Integer) As String
        parameters:
        - id: totalSeconds
          type: System.Int32
          description: 总秒数，将被转换为小时和分钟。
        return:
          type: System.String
          description: 格式化的时间字符串，格式为 &quot;hh:mm&quot;。
      overload: UCT.Service.TextProcessingService.FormatTimeToHoursMinutes*
    - id: UCT.Service.TextProcessingService.FormatTimeToMinutesSeconds(System.Int32)
      commentId: M:UCT.Service.TextProcessingService.FormatTimeToMinutesSeconds(System.Int32)
      language: CSharp
      name:
        CSharp: FormatTimeToMinutesSeconds(int)
        VB: FormatTimeToMinutesSeconds(Integer)
      nameWithType:
        CSharp: TextProcessingService.FormatTimeToMinutesSeconds(int)
        VB: TextProcessingService.FormatTimeToMinutesSeconds(Integer)
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.FormatTimeToMinutesSeconds(int)
        VB: UCT.Service.TextProcessingService.FormatTimeToMinutesSeconds(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: FormatTimeToMinutesSeconds
        path: ''
        startLine: 5118
      summary: "\n将给定的秒数转换为 &quot;mm:ss&quot; 格式的时间字符串。\n"
      example: []
      syntax:
        content:
          CSharp: public static string FormatTimeToMinutesSeconds(int totalSeconds)
          VB: Public Shared Function FormatTimeToMinutesSeconds(totalSeconds As Integer) As String
        parameters:
        - id: totalSeconds
          type: System.Int32
          description: 总秒数，将被转换为分钟和秒。
        return:
          type: System.String
          description: 格式化的时间字符串，格式为 &quot;mm:ss&quot;。
      overload: UCT.Service.TextProcessingService.FormatTimeToMinutesSeconds*
    - id: UCT.Service.TextProcessingService.RemoveSubstring(System.String,System.Int32,System.Int32,System.String)
      commentId: M:UCT.Service.TextProcessingService.RemoveSubstring(System.String,System.Int32,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: RemoveSubstring(string, int, int, string)
        VB: RemoveSubstring(String, Integer, Integer, String)
      nameWithType:
        CSharp: TextProcessingService.RemoveSubstring(string, int, int, string)
        VB: TextProcessingService.RemoveSubstring(String, Integer, Integer, String)
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.RemoveSubstring(string, int, int, string)
        VB: UCT.Service.TextProcessingService.RemoveSubstring(String, Integer, Integer, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: RemoveSubstring
        path: ''
        startLine: 5135
      summary: "\n从字符串中移除指定位置的子字符串。\n"
      example: []
      syntax:
        content:
          CSharp: public static string RemoveSubstring(string inputString, int startIndex, int endIndex, string add = "")
          VB: Public Shared Function RemoveSubstring(inputString As String, startIndex As Integer, endIndex As Integer, add As String = "") As String
        parameters:
        - id: inputString
          type: System.String
        - id: startIndex
          type: System.Int32
        - id: endIndex
          type: System.Int32
        - id: add
          type: System.String
        return:
          type: System.String
      overload: UCT.Service.TextProcessingService.RemoveSubstring*
    - id: UCT.Service.TextProcessingService.RandomString(System.Int32,System.String)
      commentId: M:UCT.Service.TextProcessingService.RandomString(System.Int32,System.String)
      language: CSharp
      name:
        CSharp: RandomString(int, string)
        VB: RandomString(Integer, String)
      nameWithType:
        CSharp: TextProcessingService.RandomString(int, string)
        VB: TextProcessingService.RandomString(Integer, String)
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.RandomString(int, string)
        VB: UCT.Service.TextProcessingService.RandomString(Integer, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: RandomString
        path: ''
        startLine: 5152
      summary: "\n随机生成一串英文字符串。\n"
      example: []
      syntax:
        content:
          CSharp: public static string RandomString(int length = 6, string alphabet = "qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM")
          VB: Public Shared Function RandomString(length As Integer = 6, alphabet As String = "qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM") As String
        parameters:
        - id: length
          type: System.Int32
        - id: alphabet
          type: System.String
        return:
          type: System.String
      overload: UCT.Service.TextProcessingService.RandomString*
    - id: UCT.Service.TextProcessingService.StringColor(Color,System.String)
      commentId: M:UCT.Service.TextProcessingService.StringColor(Color,System.String)
      language: CSharp
      name:
        CSharp: StringColor(Color, string)
        VB: StringColor(Color, String)
      nameWithType:
        CSharp: TextProcessingService.StringColor(Color, string)
        VB: TextProcessingService.StringColor(Color, String)
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.StringColor(Color, string)
        VB: UCT.Service.TextProcessingService.StringColor(Color, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: StringColor
        path: ''
        startLine: 5171
      summary: "\n生成指定Color的字符串形式，并包含原始文本。\n"
      example: []
      syntax:
        content:
          CSharp: public static string StringColor(Color color, string inputString)
          VB: Public Shared Function StringColor(color As Color, inputString As String) As String
        parameters:
        - id: color
          type: Global.Color
          description: 目标颜色。
        - id: inputString
          type: System.String
          description: 原始文本。
        return:
          type: System.String
          description: 带有指定颜色的字符串格式
      overload: UCT.Service.TextProcessingService.StringColor*
    - id: UCT.Service.TextProcessingService.RandomStringColor
      commentId: M:UCT.Service.TextProcessingService.RandomStringColor
      language: CSharp
      name:
        CSharp: RandomStringColor()
        VB: RandomStringColor()
      nameWithType:
        CSharp: TextProcessingService.RandomStringColor()
        VB: TextProcessingService.RandomStringColor()
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.RandomStringColor()
        VB: UCT.Service.TextProcessingService.RandomStringColor()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: RandomStringColor
        path: ''
        startLine: 5180
      summary: "\n生成字符串形式的随机颜色。\n"
      example: []
      syntax:
        content:
          CSharp: public static string RandomStringColor()
          VB: Public Shared Function RandomStringColor() As String
        return:
          type: System.String
      overload: UCT.Service.TextProcessingService.RandomStringColor*
    - id: UCT.Service.TextProcessingService.RandomStringColor(System.String)
      commentId: M:UCT.Service.TextProcessingService.RandomStringColor(System.String)
      language: CSharp
      name:
        CSharp: RandomStringColor(string)
        VB: RandomStringColor(String)
      nameWithType:
        CSharp: TextProcessingService.RandomStringColor(string)
        VB: TextProcessingService.RandomStringColor(String)
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.RandomStringColor(string)
        VB: UCT.Service.TextProcessingService.RandomStringColor(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: RandomStringColor
        path: ''
        startLine: 5195
      summary: "\n生成字符串形式的随机颜色。\n"
      example: []
      syntax:
        content:
          CSharp: public static string RandomStringColor(string inputString)
          VB: Public Shared Function RandomStringColor(inputString As String) As String
        parameters:
        - id: inputString
          type: System.String
        return:
          type: System.String
      overload: UCT.Service.TextProcessingService.RandomStringColor*
    - id: UCT.Service.TextProcessingService.ConvertLettersCase(System.String,System.Boolean)
      commentId: M:UCT.Service.TextProcessingService.ConvertLettersCase(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: ConvertLettersCase(string, bool)
        VB: ConvertLettersCase(String, Boolean)
      nameWithType:
        CSharp: TextProcessingService.ConvertLettersCase(string, bool)
        VB: TextProcessingService.ConvertLettersCase(String, Boolean)
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.ConvertLettersCase(string, bool)
        VB: UCT.Service.TextProcessingService.ConvertLettersCase(String, Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ConvertLettersCase
        path: ''
        startLine: 5206
      summary: "\n将输入文本中的字母转换为指定的大小写。\n"
      example: []
      syntax:
        content:
          CSharp: public static string ConvertLettersCase(string input, bool toLowercase)
          VB: Public Shared Function ConvertLettersCase(input As String, toLowercase As Boolean) As String
        parameters:
        - id: input
          type: System.String
          description: 输入字符串
        - id: toLowercase
          type: System.Boolean
          description: 是否转换为小写
        return:
          type: System.String
          description: 转换后的字符串
      overload: UCT.Service.TextProcessingService.ConvertLettersCase*
    - id: UCT.Service.TextProcessingService.RealVector2ToStringVector2(Vector2)
      commentId: M:UCT.Service.TextProcessingService.RealVector2ToStringVector2(Vector2)
      language: CSharp
      name:
        CSharp: RealVector2ToStringVector2(Vector2)
        VB: RealVector2ToStringVector2(Vector2)
      nameWithType:
        CSharp: TextProcessingService.RealVector2ToStringVector2(Vector2)
        VB: TextProcessingService.RealVector2ToStringVector2(Vector2)
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.RealVector2ToStringVector2(Vector2)
        VB: UCT.Service.TextProcessingService.RealVector2ToStringVector2(Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: RealVector2ToStringVector2
        path: ''
        startLine: 5309
      summary: "\n将 Vector2 转换为形如 (x,y) 的字符串表示\n"
      example: []
      syntax:
        content:
          CSharp: public static string RealVector2ToStringVector2(Vector2 vector2)
          VB: Public Shared Function RealVector2ToStringVector2(vector2 As Vector2) As String
        parameters:
        - id: vector2
          type: Global.Vector2
        return:
          type: System.String
      overload: UCT.Service.TextProcessingService.RealVector2ToStringVector2*
    - id: UCT.Service.TextProcessingService.StringVector2ToRealVector2(System.String)
      commentId: M:UCT.Service.TextProcessingService.StringVector2ToRealVector2(System.String)
      language: CSharp
      name:
        CSharp: StringVector2ToRealVector2(string)
        VB: StringVector2ToRealVector2(String)
      nameWithType:
        CSharp: TextProcessingService.StringVector2ToRealVector2(string)
        VB: TextProcessingService.StringVector2ToRealVector2(String)
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.StringVector2ToRealVector2(string)
        VB: UCT.Service.TextProcessingService.StringVector2ToRealVector2(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: StringVector2ToRealVector2
        path: ''
        startLine: 5317
      summary: "\n输入形如(x,y)的字符串向量，返回Vector2\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 StringVector2ToRealVector2(string stringVector2)
          VB: Public Shared Function StringVector2ToRealVector2(stringVector2 As String) As Vector2
        parameters:
        - id: stringVector2
          type: System.String
        return:
          type: Global.Vector2
      overload: UCT.Service.TextProcessingService.StringVector2ToRealVector2*
    - id: UCT.Service.TextProcessingService.StringVector2ToRealVector2(System.String,Vector3)
      commentId: M:UCT.Service.TextProcessingService.StringVector2ToRealVector2(System.String,Vector3)
      language: CSharp
      name:
        CSharp: StringVector2ToRealVector2(string, Vector3)
        VB: StringVector2ToRealVector2(String, Vector3)
      nameWithType:
        CSharp: TextProcessingService.StringVector2ToRealVector2(string, Vector3)
        VB: TextProcessingService.StringVector2ToRealVector2(String, Vector3)
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.StringVector2ToRealVector2(string, Vector3)
        VB: UCT.Service.TextProcessingService.StringVector2ToRealVector2(String, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: StringVector2ToRealVector2
        path: ''
        startLine: 5337
      summary: "\n输入形如(x,y)的字符串向量，返回Vector2\n使用ParseFloatWithSpecialCharacters进行转换。\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 StringVector2ToRealVector2(string stringVector2, Vector3 origin)
          VB: Public Shared Function StringVector2ToRealVector2(stringVector2 As String, origin As Vector3) As Vector2
        parameters:
        - id: stringVector2
          type: System.String
        - id: origin
          type: Global.Vector3
        return:
          type: Global.Vector2
      overload: UCT.Service.TextProcessingService.StringVector2ToRealVector2*
    - id: UCT.Service.TextProcessingService.ToFirstLetterUpperCase(System.String)
      commentId: M:UCT.Service.TextProcessingService.ToFirstLetterUpperCase(System.String)
      language: CSharp
      name:
        CSharp: ToFirstLetterUpperCase(string)
        VB: ToFirstLetterUpperCase(String)
      nameWithType:
        CSharp: TextProcessingService.ToFirstLetterUpperCase(string)
        VB: TextProcessingService.ToFirstLetterUpperCase(String)
      qualifiedName:
        CSharp: UCT.Service.TextProcessingService.ToFirstLetterUpperCase(string)
        VB: UCT.Service.TextProcessingService.ToFirstLetterUpperCase(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ToFirstLetterUpperCase
        path: ''
        startLine: 5368
      syntax:
        content:
          CSharp: public static string ToFirstLetterUpperCase(string input)
          VB: Public Shared Function ToFirstLetterUpperCase(input As String) As String
        parameters:
        - id: input
          type: System.String
        return:
          type: System.String
      overload: UCT.Service.TextProcessingService.ToFirstLetterUpperCase*
  - id: UCT.Service.BoxService
    commentId: T:UCT.Service.BoxService
    language: CSharp
    name:
      CSharp: BoxService
      VB: BoxService
    nameWithType:
      CSharp: BoxService
      VB: BoxService
    qualifiedName:
      CSharp: UCT.Service.BoxService
      VB: UCT.Service.BoxService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: BoxService
      path: ''
      startLine: 5390
    summary: "\n战斗框生成相关函数\n"
    example: []
    syntax:
      content:
        CSharp: public static class BoxService
        VB: Public Module BoxService
    inheritance:
    - System.Object
    items:
    - id: UCT.Service.BoxService.SummonBox(System.Collections.Generic.List{Vector2},Quaternion,Transform,System.Single,LineRenderer,EdgeCollider2D,MeshFilter)
      commentId: M:UCT.Service.BoxService.SummonBox(System.Collections.Generic.List{Vector2},Quaternion,Transform,System.Single,LineRenderer,EdgeCollider2D,MeshFilter)
      language: CSharp
      name:
        CSharp: SummonBox(List<Vector2>, Quaternion, Transform, float, LineRenderer, EdgeCollider2D, MeshFilter)
        VB: SummonBox(List(Of Vector2), Quaternion, Transform, Single, LineRenderer, EdgeCollider2D, MeshFilter)
      nameWithType:
        CSharp: BoxService.SummonBox(List<Vector2>, Quaternion, Transform, float, LineRenderer, EdgeCollider2D, MeshFilter)
        VB: BoxService.SummonBox(List(Of Vector2), Quaternion, Transform, Single, LineRenderer, EdgeCollider2D, MeshFilter)
      qualifiedName:
        CSharp: UCT.Service.BoxService.SummonBox(System.Collections.Generic.List<Vector2>, Quaternion, Transform, float, LineRenderer, EdgeCollider2D, MeshFilter)
        VB: UCT.Service.BoxService.SummonBox(System.Collections.Generic.List(Of Vector2), Quaternion, Transform, Single, LineRenderer, EdgeCollider2D, MeshFilter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: SummonBox
        path: ''
        startLine: 5395
      summary: "\n生成框\n"
      example: []
      syntax:
        content:
          CSharp: public static void SummonBox(List<Vector2> list, Quaternion rotation, Transform inputTransform, float inputWidth = 0.15, LineRenderer lineRenderer = null, EdgeCollider2D edgeCollider2D = null, MeshFilter meshFilter = null)
          VB: Public Shared Sub SummonBox(list As List(Of Vector2), rotation As Quaternion, inputTransform As Transform, inputWidth As Single = 0.15, lineRenderer As LineRenderer = Nothing, edgeCollider2D As EdgeCollider2D = Nothing, meshFilter As MeshFilter = Nothing)
        parameters:
        - id: list
          type: System.Collections.Generic.List{Vector2}
        - id: rotation
          type: Global.Quaternion
        - id: inputTransform
          type: Global.Transform
        - id: inputWidth
          type: System.Single
        - id: lineRenderer
          type: Global.LineRenderer
        - id: edgeCollider2D
          type: Global.EdgeCollider2D
        - id: meshFilter
          type: Global.MeshFilter
      overload: UCT.Service.BoxService.SummonBox*
    - id: UCT.Service.BoxService.GetRealPoints(System.Collections.Generic.List{Vector2},Quaternion,Transform,System.Boolean)
      commentId: M:UCT.Service.BoxService.GetRealPoints(System.Collections.Generic.List{Vector2},Quaternion,Transform,System.Boolean)
      language: CSharp
      name:
        CSharp: GetRealPoints(List<Vector2>, Quaternion, Transform, bool)
        VB: GetRealPoints(List(Of Vector2), Quaternion, Transform, Boolean)
      nameWithType:
        CSharp: BoxService.GetRealPoints(List<Vector2>, Quaternion, Transform, bool)
        VB: BoxService.GetRealPoints(List(Of Vector2), Quaternion, Transform, Boolean)
      qualifiedName:
        CSharp: UCT.Service.BoxService.GetRealPoints(System.Collections.Generic.List<Vector2>, Quaternion, Transform, bool)
        VB: UCT.Service.BoxService.GetRealPoints(System.Collections.Generic.List(Of Vector2), Quaternion, Transform, Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetRealPoints
        path: ''
        startLine: 5466
      summary: "\n计算坐标获取RealPoints\n"
      example: []
      syntax:
        content:
          CSharp: public static List<Vector2> GetRealPoints(List<Vector2> list, Quaternion rotation, Transform inputTransform, bool isLocal = true)
          VB: Public Shared Function GetRealPoints(list As List(Of Vector2), rotation As Quaternion, inputTransform As Transform, isLocal As Boolean = True) As List(Of Vector2)
        parameters:
        - id: list
          type: System.Collections.Generic.List{Vector2}
        - id: rotation
          type: Global.Quaternion
        - id: inputTransform
          type: Global.Transform
        - id: isLocal
          type: System.Boolean
        return:
          type: System.Collections.Generic.List{Vector2}
      overload: UCT.Service.BoxService.GetRealPoints*
    - id: UCT.Service.BoxService.FindIntersections(System.Collections.Generic.List{Vector2},System.Collections.Generic.List{Vector2})
      commentId: M:UCT.Service.BoxService.FindIntersections(System.Collections.Generic.List{Vector2},System.Collections.Generic.List{Vector2})
      language: CSharp
      name:
        CSharp: FindIntersections(List<Vector2>, List<Vector2>)
        VB: FindIntersections(List(Of Vector2), List(Of Vector2))
      nameWithType:
        CSharp: BoxService.FindIntersections(List<Vector2>, List<Vector2>)
        VB: BoxService.FindIntersections(List(Of Vector2), List(Of Vector2))
      qualifiedName:
        CSharp: UCT.Service.BoxService.FindIntersections(System.Collections.Generic.List<Vector2>, System.Collections.Generic.List<Vector2>)
        VB: UCT.Service.BoxService.FindIntersections(System.Collections.Generic.List(Of Vector2), System.Collections.Generic.List(Of Vector2))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: FindIntersections
        path: ''
        startLine: 5556
      summary: "\n主函数，计算两组线段的所有交点\n"
      example: []
      syntax:
        content:
          CSharp: public static List<Vector2> FindIntersections(List<Vector2> poly1, List<Vector2> poly2)
          VB: Public Shared Function FindIntersections(poly1 As List(Of Vector2), poly2 As List(Of Vector2)) As List(Of Vector2)
        parameters:
        - id: poly1
          type: System.Collections.Generic.List{Vector2}
        - id: poly2
          type: System.Collections.Generic.List{Vector2}
        return:
          type: System.Collections.Generic.List{Vector2}
      overload: UCT.Service.BoxService.FindIntersections*
    - id: UCT.Service.BoxService.ProcessPolygons(System.Collections.Generic.List{Vector2},System.Collections.Generic.List{Vector2})
      commentId: M:UCT.Service.BoxService.ProcessPolygons(System.Collections.Generic.List{Vector2},System.Collections.Generic.List{Vector2})
      language: CSharp
      name:
        CSharp: ProcessPolygons(List<Vector2>, List<Vector2>)
        VB: ProcessPolygons(List(Of Vector2), List(Of Vector2))
      nameWithType:
        CSharp: BoxService.ProcessPolygons(List<Vector2>, List<Vector2>)
        VB: BoxService.ProcessPolygons(List(Of Vector2), List(Of Vector2))
      qualifiedName:
        CSharp: UCT.Service.BoxService.ProcessPolygons(System.Collections.Generic.List<Vector2>, System.Collections.Generic.List<Vector2>)
        VB: UCT.Service.BoxService.ProcessPolygons(System.Collections.Generic.List(Of Vector2), System.Collections.Generic.List(Of Vector2))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ProcessPolygons
        path: ''
        startLine: 5654
      summary: "\n计算非重合点\n"
      example: []
      syntax:
        content:
          CSharp: public static List<Vector2> ProcessPolygons(List<Vector2> box1, List<Vector2> box2)
          VB: Public Shared Function ProcessPolygons(box1 As List(Of Vector2), box2 As List(Of Vector2)) As List(Of Vector2)
        parameters:
        - id: box1
          type: System.Collections.Generic.List{Vector2}
        - id: box2
          type: System.Collections.Generic.List{Vector2}
        return:
          type: System.Collections.Generic.List{Vector2}
      overload: UCT.Service.BoxService.ProcessPolygons*
    - id: UCT.Service.BoxService.AddAndSubLists(System.Collections.Generic.List{Vector2},System.Collections.Generic.List{Vector2},System.Collections.Generic.List{Vector2},System.Collections.Generic.List{Vector2})
      commentId: M:UCT.Service.BoxService.AddAndSubLists(System.Collections.Generic.List{Vector2},System.Collections.Generic.List{Vector2},System.Collections.Generic.List{Vector2},System.Collections.Generic.List{Vector2})
      language: CSharp
      name:
        CSharp: AddAndSubLists(List<Vector2>, List<Vector2>, List<Vector2>, List<Vector2>)
        VB: AddAndSubLists(List(Of Vector2), List(Of Vector2), List(Of Vector2), List(Of Vector2))
      nameWithType:
        CSharp: BoxService.AddAndSubLists(List<Vector2>, List<Vector2>, List<Vector2>, List<Vector2>)
        VB: BoxService.AddAndSubLists(List(Of Vector2), List(Of Vector2), List(Of Vector2), List(Of Vector2))
      qualifiedName:
        CSharp: UCT.Service.BoxService.AddAndSubLists(System.Collections.Generic.List<Vector2>, System.Collections.Generic.List<Vector2>, System.Collections.Generic.List<Vector2>, System.Collections.Generic.List<Vector2>)
        VB: UCT.Service.BoxService.AddAndSubLists(System.Collections.Generic.List(Of Vector2), System.Collections.Generic.List(Of Vector2), System.Collections.Generic.List(Of Vector2), System.Collections.Generic.List(Of Vector2))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: AddAndSubLists
        path: ''
        startLine: 5692
      summary: "\n前面两个相加，减去后面两个\n"
      example: []
      syntax:
        content:
          CSharp: public static List<Vector2> AddAndSubLists(List<Vector2> list1, List<Vector2> list2, List<Vector2> list3, List<Vector2> list4)
          VB: Public Shared Function AddAndSubLists(list1 As List(Of Vector2), list2 As List(Of Vector2), list3 As List(Of Vector2), list4 As List(Of Vector2)) As List(Of Vector2)
        parameters:
        - id: list1
          type: System.Collections.Generic.List{Vector2}
        - id: list2
          type: System.Collections.Generic.List{Vector2}
        - id: list3
          type: System.Collections.Generic.List{Vector2}
        - id: list4
          type: System.Collections.Generic.List{Vector2}
        return:
          type: System.Collections.Generic.List{Vector2}
      overload: UCT.Service.BoxService.AddAndSubLists*
    - id: UCT.Service.BoxService.AddLists``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{``0})
      commentId: M:UCT.Service.BoxService.AddLists``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{``0})
      language: CSharp
      name:
        CSharp: AddLists<T>(List<T>, List<T>)
        VB: AddLists(Of T)(List(Of T), List(Of T))
      nameWithType:
        CSharp: BoxService.AddLists<T>(List<T>, List<T>)
        VB: BoxService.AddLists(Of T)(List(Of T), List(Of T))
      qualifiedName:
        CSharp: UCT.Service.BoxService.AddLists<T>(System.Collections.Generic.List<T>, System.Collections.Generic.List<T>)
        VB: UCT.Service.BoxService.AddLists(Of T)(System.Collections.Generic.List(Of T), System.Collections.Generic.List(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: AddLists
        path: ''
        startLine: 5707
      summary: "\n把List相加\n"
      example: []
      syntax:
        content:
          CSharp: public static List<T> AddLists<T>(List<T> list1, List<T> list2)
          VB: Public Shared Function AddLists(Of T)(list1 As List(Of T), list2 As List(Of T)) As List(Of T)
        parameters:
        - id: list1
          type: System.Collections.Generic.List{{T}}
        - id: list2
          type: System.Collections.Generic.List{{T}}
        typeParameters:
        - id: T
        return:
          type: System.Collections.Generic.List{{T}}
      overload: UCT.Service.BoxService.AddLists*
    - id: UCT.Service.BoxService.GetUnion(System.Collections.Generic.List{Vector2},System.Collections.Generic.List{Vector2})
      commentId: M:UCT.Service.BoxService.GetUnion(System.Collections.Generic.List{Vector2},System.Collections.Generic.List{Vector2})
      language: CSharp
      name:
        CSharp: GetUnion(List<Vector2>, List<Vector2>)
        VB: GetUnion(List(Of Vector2), List(Of Vector2))
      nameWithType:
        CSharp: BoxService.GetUnion(List<Vector2>, List<Vector2>)
        VB: BoxService.GetUnion(List(Of Vector2), List(Of Vector2))
      qualifiedName:
        CSharp: UCT.Service.BoxService.GetUnion(System.Collections.Generic.List<Vector2>, System.Collections.Generic.List<Vector2>)
        VB: UCT.Service.BoxService.GetUnion(System.Collections.Generic.List(Of Vector2), System.Collections.Generic.List(Of Vector2))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetUnion
        path: ''
        startLine: 5763
      summary: "\n取交集\n"
      example: []
      syntax:
        content:
          CSharp: public static List<Vector2> GetUnion(List<Vector2> a, List<Vector2> b)
          VB: Public Shared Function GetUnion(a As List(Of Vector2), b As List(Of Vector2)) As List(Of Vector2)
        parameters:
        - id: a
          type: System.Collections.Generic.List{Vector2}
        - id: b
          type: System.Collections.Generic.List{Vector2}
        return:
          type: System.Collections.Generic.List{Vector2}
      overload: UCT.Service.BoxService.GetUnion*
    - id: UCT.Service.BoxService.GetDifference(System.Collections.Generic.List{Vector2},System.Collections.Generic.List{Vector2})
      commentId: M:UCT.Service.BoxService.GetDifference(System.Collections.Generic.List{Vector2},System.Collections.Generic.List{Vector2})
      language: CSharp
      name:
        CSharp: GetDifference(List<Vector2>, List<Vector2>)
        VB: GetDifference(List(Of Vector2), List(Of Vector2))
      nameWithType:
        CSharp: BoxService.GetDifference(List<Vector2>, List<Vector2>)
        VB: BoxService.GetDifference(List(Of Vector2), List(Of Vector2))
      qualifiedName:
        CSharp: UCT.Service.BoxService.GetDifference(System.Collections.Generic.List<Vector2>, System.Collections.Generic.List<Vector2>)
        VB: UCT.Service.BoxService.GetDifference(System.Collections.Generic.List(Of Vector2), System.Collections.Generic.List(Of Vector2))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetDifference
        path: ''
        startLine: 5772
      syntax:
        content:
          CSharp: public static List<Vector2> GetDifference(List<Vector2> origin, List<Vector2> sub)
          VB: Public Shared Function GetDifference(origin As List(Of Vector2), [sub] As List(Of Vector2)) As List(Of Vector2)
        parameters:
        - id: origin
          type: System.Collections.Generic.List{Vector2}
        - id: sub
          type: System.Collections.Generic.List{Vector2}
        return:
          type: System.Collections.Generic.List{Vector2}
      overload: UCT.Service.BoxService.GetDifference*
  - id: UCT.Service.HangulComposerService
    commentId: T:UCT.Service.HangulComposerService
    language: CSharp
    name:
      CSharp: HangulComposerService
      VB: HangulComposerService
    nameWithType:
      CSharp: HangulComposerService
      VB: HangulComposerService
    qualifiedName:
      CSharp: UCT.Service.HangulComposerService
      VB: UCT.Service.HangulComposerService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: HangulComposerService
      path: ''
      startLine: 5788
    summary: "\n韩语拼写相关函数\n"
    example: []
    syntax:
      content:
        CSharp: public static class HangulComposerService
        VB: Public Module HangulComposerService
    inheritance:
    - System.Object
    items:
    - id: UCT.Service.HangulComposerService.ComposeHangul(System.String)
      commentId: M:UCT.Service.HangulComposerService.ComposeHangul(System.String)
      language: CSharp
      name:
        CSharp: ComposeHangul(string)
        VB: ComposeHangul(String)
      nameWithType:
        CSharp: HangulComposerService.ComposeHangul(string)
        VB: HangulComposerService.ComposeHangul(String)
      qualifiedName:
        CSharp: UCT.Service.HangulComposerService.ComposeHangul(string)
        VB: UCT.Service.HangulComposerService.ComposeHangul(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ComposeHangul
        path: ''
        startLine: 5805
      syntax:
        content:
          CSharp: public static char ComposeHangul(string syllable)
          VB: Public Shared Function ComposeHangul(syllable As String) As Char
        parameters:
        - id: syllable
          type: System.String
        return:
          type: System.Char
      overload: UCT.Service.HangulComposerService.ComposeHangul*
  - id: UCT.Service.GameUtilityService
    commentId: T:UCT.Service.GameUtilityService
    language: CSharp
    name:
      CSharp: GameUtilityService
      VB: GameUtilityService
    nameWithType:
      CSharp: GameUtilityService
      VB: GameUtilityService
    qualifiedName:
      CSharp: UCT.Service.GameUtilityService
      VB: UCT.Service.GameUtilityService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: GameUtilityService
      path: ''
      startLine: 5870
    summary: "\n提供一些较为全局的，与游戏内容相关的函数。\n"
    example: []
    syntax:
      content:
        CSharp: public static class GameUtilityService
        VB: Public Module GameUtilityService
    inheritance:
    - System.Object
    items:
    - id: UCT.Service.GameUtilityService.SetCanvasFrameSprite(System.Int32)
      commentId: M:UCT.Service.GameUtilityService.SetCanvasFrameSprite(System.Int32)
      language: CSharp
      name:
        CSharp: SetCanvasFrameSprite(int)
        VB: SetCanvasFrameSprite(Integer)
      nameWithType:
        CSharp: GameUtilityService.SetCanvasFrameSprite(int)
        VB: GameUtilityService.SetCanvasFrameSprite(Integer)
      qualifiedName:
        CSharp: UCT.Service.GameUtilityService.SetCanvasFrameSprite(int)
        VB: UCT.Service.GameUtilityService.SetCanvasFrameSprite(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: SetCanvasFrameSprite
        path: ''
        startLine: 5885
      summary: "\n设置16:9边框的Sprite\n"
      example: []
      syntax:
        content:
          CSharp: public static void SetCanvasFrameSprite(int framePic = 2)
          VB: Public Shared Sub SetCanvasFrameSprite(framePic As Integer = 2)
        parameters:
        - id: framePic
          type: System.Int32
          description: ''
      overload: UCT.Service.GameUtilityService.SetCanvasFrameSprite*
    - id: UCT.Service.GameUtilityService.SetResolution(System.Int32)
      commentId: M:UCT.Service.GameUtilityService.SetResolution(System.Int32)
      language: CSharp
      name:
        CSharp: SetResolution(int)
        VB: SetResolution(Integer)
      nameWithType:
        CSharp: GameUtilityService.SetResolution(int)
        VB: GameUtilityService.SetResolution(Integer)
      qualifiedName:
        CSharp: UCT.Service.GameUtilityService.SetResolution(int)
        VB: UCT.Service.GameUtilityService.SetResolution(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: SetResolution
        path: ''
        startLine: 5894
      summary: "\n分辨率设置\n"
      example: []
      syntax:
        content:
          CSharp: public static void SetResolution(int resolution)
          VB: Public Shared Sub SetResolution(resolution As Integer)
        parameters:
        - id: resolution
          type: System.Int32
      overload: UCT.Service.GameUtilityService.SetResolution*
    - id: UCT.Service.GameUtilityService.SwitchScene(System.String,System.Boolean)
      commentId: M:UCT.Service.GameUtilityService.SwitchScene(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: SwitchScene(string, bool)
        VB: SwitchScene(String, Boolean)
      nameWithType:
        CSharp: GameUtilityService.SwitchScene(string, bool)
        VB: GameUtilityService.SwitchScene(String, Boolean)
      qualifiedName:
        CSharp: UCT.Service.GameUtilityService.SwitchScene(string, bool)
        VB: UCT.Service.GameUtilityService.SwitchScene(String, Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: SwitchScene
        path: ''
        startLine: 5995
      summary: "\n切换场景。\n优先在此项目中使用这个封装后的方法进行场景切换操作。\n"
      example: []
      syntax:
        content:
          CSharp: public static void SwitchScene(string sceneName, bool isAsync = true)
          VB: Public Shared Sub SwitchScene(sceneName As String, isAsync As Boolean = True)
        parameters:
        - id: sceneName
          type: System.String
        - id: isAsync
          type: System.Boolean
      overload: UCT.Service.GameUtilityService.SwitchScene*
    - id: UCT.Service.GameUtilityService.FadeOutToWhiteAndSwitchScene(System.String)
      commentId: M:UCT.Service.GameUtilityService.FadeOutToWhiteAndSwitchScene(System.String)
      language: CSharp
      name:
        CSharp: FadeOutToWhiteAndSwitchScene(string)
        VB: FadeOutToWhiteAndSwitchScene(String)
      nameWithType:
        CSharp: GameUtilityService.FadeOutToWhiteAndSwitchScene(string)
        VB: GameUtilityService.FadeOutToWhiteAndSwitchScene(String)
      qualifiedName:
        CSharp: UCT.Service.GameUtilityService.FadeOutToWhiteAndSwitchScene(string)
        VB: UCT.Service.GameUtilityService.FadeOutToWhiteAndSwitchScene(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: FadeOutToWhiteAndSwitchScene
        path: ''
        startLine: 6023
      syntax:
        content:
          CSharp: public static void FadeOutToWhiteAndSwitchScene(string scene)
          VB: Public Shared Sub FadeOutToWhiteAndSwitchScene(scene As String)
        parameters:
        - id: scene
          type: System.String
      overload: UCT.Service.GameUtilityService.FadeOutToWhiteAndSwitchScene*
    - id: UCT.Service.GameUtilityService.FadeOutAndSwitchScene(System.String,Color,System.Action,System.Boolean,System.Single,System.Boolean)
      commentId: M:UCT.Service.GameUtilityService.FadeOutAndSwitchScene(System.String,Color,System.Action,System.Boolean,System.Single,System.Boolean)
      language: CSharp
      name:
        CSharp: FadeOutAndSwitchScene(string, Color, Action, bool, float, bool)
        VB: FadeOutAndSwitchScene(String, Color, Action, Boolean, Single, Boolean)
      nameWithType:
        CSharp: GameUtilityService.FadeOutAndSwitchScene(string, Color, Action, bool, float, bool)
        VB: GameUtilityService.FadeOutAndSwitchScene(String, Color, Action, Boolean, Single, Boolean)
      qualifiedName:
        CSharp: UCT.Service.GameUtilityService.FadeOutAndSwitchScene(string, Color, System.Action, bool, float, bool)
        VB: UCT.Service.GameUtilityService.FadeOutAndSwitchScene(String, Color, System.Action, Boolean, Single, Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: FadeOutAndSwitchScene
        path: ''
        startLine: 6041
      summary: "\n淡出并切换场景。\n"
      example: []
      syntax:
        content:
          CSharp: public static void FadeOutAndSwitchScene(string scene, Color fadeColor, Action action = null, bool isBgmMuted = false, float fadeTime = 0.5, bool isAsync = true)
          VB: Public Shared Sub FadeOutAndSwitchScene(scene As String, fadeColor As Color, action As Action = Nothing, isBgmMuted As Boolean = False, fadeTime As Single = 0.5, isAsync As Boolean = True)
        parameters:
        - id: scene
          type: System.String
          description: 要切换到的场景名称
        - id: fadeColor
          type: Global.Color
          description: 淡出的颜色
        - id: action
          type: System.Action
          description: ''
        - id: isBgmMuted
          type: System.Boolean
          description: 是否静音背景音乐
        - id: fadeTime
          type: System.Single
          description: 淡出时间，默认为0.5秒
        - id: isAsync
          type: System.Boolean
          description: 是否异步切换场景，默认为true
      overload: UCT.Service.GameUtilityService.FadeOutAndSwitchScene*
    - id: UCT.Service.GameUtilityService.UpdateResolutionSettings(System.Boolean,System.Int32)
      commentId: M:UCT.Service.GameUtilityService.UpdateResolutionSettings(System.Boolean,System.Int32)
      language: CSharp
      name:
        CSharp: UpdateResolutionSettings(bool, int)
        VB: UpdateResolutionSettings(Boolean, Integer)
      nameWithType:
        CSharp: GameUtilityService.UpdateResolutionSettings(bool, int)
        VB: GameUtilityService.UpdateResolutionSettings(Boolean, Integer)
      qualifiedName:
        CSharp: UCT.Service.GameUtilityService.UpdateResolutionSettings(bool, int)
        VB: UCT.Service.GameUtilityService.UpdateResolutionSettings(Boolean, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: UpdateResolutionSettings
        path: ''
        startLine: 6104
      summary: "\n更新游戏的分辨率并返回更改后的resolutionLevel值。\n"
      example: []
      syntax:
        content:
          CSharp: public static int UpdateResolutionSettings(bool isUsingHdFrame, int resolutionLevel)
          VB: Public Shared Function UpdateResolutionSettings(isUsingHdFrame As Boolean, resolutionLevel As Integer) As Integer
        parameters:
        - id: isUsingHdFrame
          type: System.Boolean
        - id: resolutionLevel
          type: System.Int32
        return:
          type: System.Int32
      overload: UCT.Service.GameUtilityService.UpdateResolutionSettings*
    - id: UCT.Service.GameUtilityService.ToggleAllSfx(System.Boolean)
      commentId: M:UCT.Service.GameUtilityService.ToggleAllSfx(System.Boolean)
      language: CSharp
      name:
        CSharp: ToggleAllSfx(bool)
        VB: ToggleAllSfx(Boolean)
      nameWithType:
        CSharp: GameUtilityService.ToggleAllSfx(bool)
        VB: GameUtilityService.ToggleAllSfx(Boolean)
      qualifiedName:
        CSharp: UCT.Service.GameUtilityService.ToggleAllSfx(bool)
        VB: UCT.Service.GameUtilityService.ToggleAllSfx(Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ToggleAllSfx
        path: ''
        startLine: 6137
      summary: "\n开/关 SFX\n"
      example: []
      syntax:
        content:
          CSharp: public static void ToggleAllSfx(bool isClose)
          VB: Public Shared Sub ToggleAllSfx(isClose As Boolean)
        parameters:
        - id: isClose
          type: System.Boolean
      overload: UCT.Service.GameUtilityService.ToggleAllSfx*
    - id: UCT.Service.GameUtilityService.GetRandomColor
      commentId: M:UCT.Service.GameUtilityService.GetRandomColor
      language: CSharp
      name:
        CSharp: GetRandomColor()
        VB: GetRandomColor()
      nameWithType:
        CSharp: GameUtilityService.GetRandomColor()
        VB: GameUtilityService.GetRandomColor()
      qualifiedName:
        CSharp: UCT.Service.GameUtilityService.GetRandomColor()
        VB: UCT.Service.GameUtilityService.GetRandomColor()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetRandomColor
        path: ''
        startLine: 6168
      syntax:
        content:
          CSharp: public static Color GetRandomColor()
          VB: Public Shared Function GetRandomColor() As Color
        return:
          type: Global.Color
      overload: UCT.Service.GameUtilityService.GetRandomColor*
    - id: UCT.Service.GameUtilityService.GetDifferentRandomColor(Color)
      commentId: M:UCT.Service.GameUtilityService.GetDifferentRandomColor(Color)
      language: CSharp
      name:
        CSharp: GetDifferentRandomColor(Color)
        VB: GetDifferentRandomColor(Color)
      nameWithType:
        CSharp: GameUtilityService.GetDifferentRandomColor(Color)
        VB: GameUtilityService.GetDifferentRandomColor(Color)
      qualifiedName:
        CSharp: UCT.Service.GameUtilityService.GetDifferentRandomColor(Color)
        VB: UCT.Service.GameUtilityService.GetDifferentRandomColor(Color)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetDifferentRandomColor
        path: ''
        startLine: 6181
      syntax:
        content:
          CSharp: public static Color GetDifferentRandomColor(Color colorToAvoid)
          VB: Public Shared Function GetDifferentRandomColor(colorToAvoid As Color) As Color
        parameters:
        - id: colorToAvoid
          type: Global.Color
        return:
          type: Global.Color
      overload: UCT.Service.GameUtilityService.GetDifferentRandomColor*
    - id: UCT.Service.GameUtilityService.GetSimilarButDifferentColor(Color,System.Single,System.Single,System.Single)
      commentId: M:UCT.Service.GameUtilityService.GetSimilarButDifferentColor(Color,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: GetSimilarButDifferentColor(Color, float, float, float)
        VB: GetSimilarButDifferentColor(Color, Single, Single, Single)
      nameWithType:
        CSharp: GameUtilityService.GetSimilarButDifferentColor(Color, float, float, float)
        VB: GameUtilityService.GetSimilarButDifferentColor(Color, Single, Single, Single)
      qualifiedName:
        CSharp: UCT.Service.GameUtilityService.GetSimilarButDifferentColor(Color, float, float, float)
        VB: UCT.Service.GameUtilityService.GetSimilarButDifferentColor(Color, Single, Single, Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetSimilarButDifferentColor
        path: ''
        startLine: 6192
      syntax:
        content:
          CSharp: public static Color GetSimilarButDifferentColor(Color originalColor, float hueOffset = 0.05, float saturationOffset = 0.1, float valueOffset = 0.1)
          VB: Public Shared Function GetSimilarButDifferentColor(originalColor As Color, hueOffset As Single = 0.05, saturationOffset As Single = 0.1, valueOffset As Single = 0.1) As Color
        parameters:
        - id: originalColor
          type: Global.Color
        - id: hueOffset
          type: System.Single
        - id: saturationOffset
          type: System.Single
        - id: valueOffset
          type: System.Single
        return:
          type: Global.Color
      overload: UCT.Service.GameUtilityService.GetSimilarButDifferentColor*
    - id: UCT.Service.GameUtilityService.RefreshTheScene
      commentId: M:UCT.Service.GameUtilityService.RefreshTheScene
      language: CSharp
      name:
        CSharp: RefreshTheScene()
        VB: RefreshTheScene()
      nameWithType:
        CSharp: GameUtilityService.RefreshTheScene()
        VB: GameUtilityService.RefreshTheScene()
      qualifiedName:
        CSharp: UCT.Service.GameUtilityService.RefreshTheScene()
        VB: UCT.Service.GameUtilityService.RefreshTheScene()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: RefreshTheScene
        path: ''
        startLine: 6209
      syntax:
        content:
          CSharp: public static void RefreshTheScene()
          VB: Public Shared Sub RefreshTheScene()
      overload: UCT.Service.GameUtilityService.RefreshTheScene*
    - id: UCT.Service.GameUtilityService.IsGamePausedOrSetting
      commentId: M:UCT.Service.GameUtilityService.IsGamePausedOrSetting
      language: CSharp
      name:
        CSharp: IsGamePausedOrSetting()
        VB: IsGamePausedOrSetting()
      nameWithType:
        CSharp: GameUtilityService.IsGamePausedOrSetting()
        VB: GameUtilityService.IsGamePausedOrSetting()
      qualifiedName:
        CSharp: UCT.Service.GameUtilityService.IsGamePausedOrSetting()
        VB: UCT.Service.GameUtilityService.IsGamePausedOrSetting()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: IsGamePausedOrSetting
        path: ''
        startLine: 6214
      syntax:
        content:
          CSharp: public static bool IsGamePausedOrSetting()
          VB: Public Shared Function IsGamePausedOrSetting() As Boolean
        return:
          type: System.Boolean
      overload: UCT.Service.GameUtilityService.IsGamePausedOrSetting*
    - id: UCT.Service.GameUtilityService.FormatWithLeadingZero(System.Int32)
      commentId: M:UCT.Service.GameUtilityService.FormatWithLeadingZero(System.Int32)
      language: CSharp
      name:
        CSharp: FormatWithLeadingZero(int)
        VB: FormatWithLeadingZero(Integer)
      nameWithType:
        CSharp: GameUtilityService.FormatWithLeadingZero(int)
        VB: GameUtilityService.FormatWithLeadingZero(Integer)
      qualifiedName:
        CSharp: UCT.Service.GameUtilityService.FormatWithLeadingZero(int)
        VB: UCT.Service.GameUtilityService.FormatWithLeadingZero(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: FormatWithLeadingZero
        path: ''
        startLine: 6222
      summary: "\n将数字格式化为两位数（前导零）显示，例如将 1 显示为 01。\n"
      example: []
      syntax:
        content:
          CSharp: public static string FormatWithLeadingZero(int i)
          VB: Public Shared Function FormatWithLeadingZero(i As Integer) As String
        parameters:
        - id: i
          type: System.Int32
        return:
          type: System.String
      overload: UCT.Service.GameUtilityService.FormatWithLeadingZero*
  - id: UCT.Service.InputService
    commentId: T:UCT.Service.InputService
    language: CSharp
    name:
      CSharp: InputService
      VB: InputService
    nameWithType:
      CSharp: InputService
      VB: InputService
    qualifiedName:
      CSharp: UCT.Service.InputService
      VB: UCT.Service.InputService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: InputService
      path: ''
      startLine: 6239
    summary: "\n输入相关函数\n"
    example: []
    syntax:
      content:
        CSharp: public static class InputService
        VB: Public Module InputService
    inheritance:
    - System.Object
    items:
    - id: UCT.Service.InputService.GetKeyDown(KeyCode)
      commentId: M:UCT.Service.InputService.GetKeyDown(KeyCode)
      language: CSharp
      name:
        CSharp: GetKeyDown(KeyCode)
        VB: GetKeyDown(KeyCode)
      nameWithType:
        CSharp: InputService.GetKeyDown(KeyCode)
        VB: InputService.GetKeyDown(KeyCode)
      qualifiedName:
        CSharp: UCT.Service.InputService.GetKeyDown(KeyCode)
        VB: UCT.Service.InputService.GetKeyDown(KeyCode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetKeyDown
        path: ''
        startLine: 6241
      syntax:
        content:
          CSharp: public static bool GetKeyDown(KeyCode key)
          VB: Public Shared Function GetKeyDown(key As KeyCode) As Boolean
        parameters:
        - id: key
          type: Global.KeyCode
        return:
          type: System.Boolean
      overload: UCT.Service.InputService.GetKeyDown*
    - id: UCT.Service.InputService.GetKey(KeyCode)
      commentId: M:UCT.Service.InputService.GetKey(KeyCode)
      language: CSharp
      name:
        CSharp: GetKey(KeyCode)
        VB: GetKey(KeyCode)
      nameWithType:
        CSharp: InputService.GetKey(KeyCode)
        VB: InputService.GetKey(KeyCode)
      qualifiedName:
        CSharp: UCT.Service.InputService.GetKey(KeyCode)
        VB: UCT.Service.InputService.GetKey(KeyCode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetKey
        path: ''
        startLine: 6271
      syntax:
        content:
          CSharp: public static bool GetKey(KeyCode key)
          VB: Public Shared Function GetKey(key As KeyCode) As Boolean
        parameters:
        - id: key
          type: Global.KeyCode
        return:
          type: System.Boolean
      overload: UCT.Service.InputService.GetKey*
    - id: UCT.Service.InputService.GetKeyUp(KeyCode)
      commentId: M:UCT.Service.InputService.GetKeyUp(KeyCode)
      language: CSharp
      name:
        CSharp: GetKeyUp(KeyCode)
        VB: GetKeyUp(KeyCode)
      nameWithType:
        CSharp: InputService.GetKeyUp(KeyCode)
        VB: InputService.GetKeyUp(KeyCode)
      qualifiedName:
        CSharp: UCT.Service.InputService.GetKeyUp(KeyCode)
        VB: UCT.Service.InputService.GetKeyUp(KeyCode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetKeyUp
        path: ''
        startLine: 6300
      syntax:
        content:
          CSharp: public static bool GetKeyUp(KeyCode key)
          VB: Public Shared Function GetKeyUp(key As KeyCode) As Boolean
        parameters:
        - id: key
          type: Global.KeyCode
        return:
          type: System.Boolean
      overload: UCT.Service.InputService.GetKeyUp*
  - id: UCT.Service.IMethodWrapper
    commentId: T:UCT.Service.IMethodWrapper
    language: CSharp
    name:
      CSharp: IMethodWrapper
      VB: IMethodWrapper
    nameWithType:
      CSharp: IMethodWrapper
      VB: IMethodWrapper
    qualifiedName:
      CSharp: UCT.Service.IMethodWrapper
      VB: UCT.Service.IMethodWrapper
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: IMethodWrapper
      path: ''
      startLine: 6334
    syntax:
      content:
        CSharp: public interface IMethodWrapper
        VB: Public Interface IMethodWrapper
    items:
    - id: UCT.Service.IMethodWrapper.Invoke(System.Object[])
      commentId: M:UCT.Service.IMethodWrapper.Invoke(System.Object[])
      language: CSharp
      name:
        CSharp: Invoke(params object[])
        VB: Invoke(ParamArray Object())
      nameWithType:
        CSharp: IMethodWrapper.Invoke(params object[])
        VB: IMethodWrapper.Invoke(ParamArray Object())
      qualifiedName:
        CSharp: UCT.Service.IMethodWrapper.Invoke(params object[])
        VB: UCT.Service.IMethodWrapper.Invoke(ParamArray Object())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Invoke
        path: ''
        startLine: 6336
      syntax:
        content:
          CSharp: void Invoke(params object[] args)
          VB: Sub Invoke(ParamArray args As Object())
        parameters:
        - id: args
          type: System.Object[]
      overload: UCT.Service.IMethodWrapper.Invoke*
  - id: UCT.Service.MethodWrapper
    commentId: T:UCT.Service.MethodWrapper
    language: CSharp
    name:
      CSharp: MethodWrapper
      VB: MethodWrapper
    nameWithType:
      CSharp: MethodWrapper
      VB: MethodWrapper
    qualifiedName:
      CSharp: UCT.Service.MethodWrapper
      VB: UCT.Service.MethodWrapper
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: MethodWrapper
      path: ''
      startLine: 6339
    syntax:
      content:
        CSharp: 'public class MethodWrapper : IMethodWrapper'
        VB: Public Class MethodWrapper Implements IMethodWrapper
    inheritance:
    - System.Object
    implements:
    - UCT.Service.IMethodWrapper
    items:
    - id: UCT.Service.MethodWrapper.#ctor(System.Action{System.Object[]})
      commentId: M:UCT.Service.MethodWrapper.#ctor(System.Action{System.Object[]})
      language: CSharp
      name:
        CSharp: MethodWrapper(Action<object[]>)
        VB: New(Action(Of Object()))
      nameWithType:
        CSharp: MethodWrapper.MethodWrapper(Action<object[]>)
        VB: MethodWrapper.New(Action(Of Object()))
      qualifiedName:
        CSharp: UCT.Service.MethodWrapper.MethodWrapper(System.Action<object[]>)
        VB: UCT.Service.MethodWrapper.New(System.Action(Of Object()))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: .ctor
        path: ''
        startLine: 6343
      syntax:
        content:
          CSharp: public MethodWrapper(Action<object[]> method)
          VB: Public Sub New(method As Action(Of Object()))
        parameters:
        - id: method
          type: System.Action{System.Object[]}
      overload: UCT.Service.MethodWrapper.#ctor*
    - id: UCT.Service.MethodWrapper.Invoke(System.Object[])
      commentId: M:UCT.Service.MethodWrapper.Invoke(System.Object[])
      language: CSharp
      name:
        CSharp: Invoke(params object[])
        VB: Invoke(ParamArray Object())
      nameWithType:
        CSharp: MethodWrapper.Invoke(params object[])
        VB: MethodWrapper.Invoke(ParamArray Object())
      qualifiedName:
        CSharp: UCT.Service.MethodWrapper.Invoke(params object[])
        VB: UCT.Service.MethodWrapper.Invoke(ParamArray Object())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Invoke
        path: ''
        startLine: 6348
      syntax:
        content:
          CSharp: public void Invoke(params object[] args)
          VB: Public Sub Invoke(ParamArray args As Object())
        parameters:
        - id: args
          type: System.Object[]
      overload: UCT.Service.MethodWrapper.Invoke*
      implements:
      - UCT.Service.IMethodWrapper.Invoke(System.Object[])
  - id: UCT.Service.IMethodWrapper`1
    commentId: T:UCT.Service.IMethodWrapper`1
    language: CSharp
    name:
      CSharp: IMethodWrapper<TResult>
      VB: IMethodWrapper(Of TResult)
    nameWithType:
      CSharp: IMethodWrapper<TResult>
      VB: IMethodWrapper(Of TResult)
    qualifiedName:
      CSharp: UCT.Service.IMethodWrapper<TResult>
      VB: UCT.Service.IMethodWrapper(Of TResult)
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: IMethodWrapper
      path: ''
      startLine: 6354
    syntax:
      content:
        CSharp: public interface IMethodWrapper<out TResult>
        VB: Public Interface IMethodWrapper(Of Out TResult)
      typeParameters:
      - id: TResult
    items:
    - id: UCT.Service.IMethodWrapper`1.Invoke(System.Object[])
      commentId: M:UCT.Service.IMethodWrapper`1.Invoke(System.Object[])
      language: CSharp
      name:
        CSharp: Invoke(params object[])
        VB: Invoke(ParamArray Object())
      nameWithType:
        CSharp: IMethodWrapper<TResult>.Invoke(params object[])
        VB: IMethodWrapper(Of TResult).Invoke(ParamArray Object())
      qualifiedName:
        CSharp: UCT.Service.IMethodWrapper<TResult>.Invoke(params object[])
        VB: UCT.Service.IMethodWrapper(Of TResult).Invoke(ParamArray Object())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Invoke
        path: ''
        startLine: 6356
      syntax:
        content:
          CSharp: TResult Invoke(params object[] args)
          VB: Function Invoke(ParamArray args As Object()) As TResult
        parameters:
        - id: args
          type: System.Object[]
        return:
          type: '{TResult}'
      overload: UCT.Service.IMethodWrapper`1.Invoke*
  - id: UCT.Service.MethodWrapper`1
    commentId: T:UCT.Service.MethodWrapper`1
    language: CSharp
    name:
      CSharp: MethodWrapper<TResult>
      VB: MethodWrapper(Of TResult)
    nameWithType:
      CSharp: MethodWrapper<TResult>
      VB: MethodWrapper(Of TResult)
    qualifiedName:
      CSharp: UCT.Service.MethodWrapper<TResult>
      VB: UCT.Service.MethodWrapper(Of TResult)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: MethodWrapper
      path: ''
      startLine: 6359
    syntax:
      content:
        CSharp: 'public class MethodWrapper<TResult> : IMethodWrapper<TResult>'
        VB: Public Class MethodWrapper(Of TResult) Implements IMethodWrapper(Of TResult)
      typeParameters:
      - id: TResult
    inheritance:
    - System.Object
    implements:
    - UCT.Service.IMethodWrapper{{TResult}}
    items:
    - id: UCT.Service.MethodWrapper`1.#ctor(System.Func{System.Object[],`0})
      commentId: M:UCT.Service.MethodWrapper`1.#ctor(System.Func{System.Object[],`0})
      language: CSharp
      name:
        CSharp: MethodWrapper(Func<object[], TResult>)
        VB: New(Func(Of Object(), TResult))
      nameWithType:
        CSharp: MethodWrapper<TResult>.MethodWrapper(Func<object[], TResult>)
        VB: MethodWrapper(Of TResult).New(Func(Of Object(), TResult))
      qualifiedName:
        CSharp: UCT.Service.MethodWrapper<TResult>.MethodWrapper(System.Func<object[], TResult>)
        VB: UCT.Service.MethodWrapper(Of TResult).New(System.Func(Of Object(), TResult))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: .ctor
        path: ''
        startLine: 6363
      syntax:
        content:
          CSharp: public MethodWrapper(Func<object[], TResult> method)
          VB: Public Sub New(method As Func(Of Object(), TResult))
        parameters:
        - id: method
          type: System.Func{System.Object[],{TResult}}
      overload: UCT.Service.MethodWrapper`1.#ctor*
    - id: UCT.Service.MethodWrapper`1.Invoke(System.Object[])
      commentId: M:UCT.Service.MethodWrapper`1.Invoke(System.Object[])
      language: CSharp
      name:
        CSharp: Invoke(params object[])
        VB: Invoke(ParamArray Object())
      nameWithType:
        CSharp: MethodWrapper<TResult>.Invoke(params object[])
        VB: MethodWrapper(Of TResult).Invoke(ParamArray Object())
      qualifiedName:
        CSharp: UCT.Service.MethodWrapper<TResult>.Invoke(params object[])
        VB: UCT.Service.MethodWrapper(Of TResult).Invoke(ParamArray Object())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Invoke
        path: ''
        startLine: 6368
      syntax:
        content:
          CSharp: public TResult Invoke(params object[] args)
          VB: Public Function Invoke(ParamArray args As Object()) As TResult
        parameters:
        - id: args
          type: System.Object[]
        return:
          type: '{TResult}'
      overload: UCT.Service.MethodWrapper`1.Invoke*
      implements:
      - UCT.Service.IMethodWrapper{{TResult}}.Invoke(System.Object[])
  - id: UCT.Service.EnumService
    commentId: T:UCT.Service.EnumService
    language: CSharp
    name:
      CSharp: EnumService
      VB: EnumService
    nameWithType:
      CSharp: EnumService
      VB: EnumService
    qualifiedName:
      CSharp: UCT.Service.EnumService
      VB: UCT.Service.EnumService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: EnumService
      path: ''
      startLine: 6381
    summary: "\n提供与枚举相关的函数。\n"
    example: []
    syntax:
      content:
        CSharp: public static class EnumService
        VB: Public Module EnumService
    inheritance:
    - System.Object
    items:
    - id: UCT.Service.EnumService.GetMaxEnumValue``1
      commentId: M:UCT.Service.EnumService.GetMaxEnumValue``1
      language: CSharp
      name:
        CSharp: GetMaxEnumValue<T>()
        VB: GetMaxEnumValue(Of T)()
      nameWithType:
        CSharp: EnumService.GetMaxEnumValue<T>()
        VB: EnumService.GetMaxEnumValue(Of T)()
      qualifiedName:
        CSharp: UCT.Service.EnumService.GetMaxEnumValue<T>()
        VB: UCT.Service.EnumService.GetMaxEnumValue(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetMaxEnumValue
        path: ''
        startLine: 6386
      summary: "\n获取枚举的最大项\n"
      example: []
      syntax:
        content:
          CSharp: 'public static T GetMaxEnumValue<T>() where T : Enum'
          VB: Public Shared Function GetMaxEnumValue(Of T As [Enum])() As T
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: UCT.Service.EnumService.GetMaxEnumValue*
    - id: UCT.Service.EnumService.GetMinEnumValue``1
      commentId: M:UCT.Service.EnumService.GetMinEnumValue``1
      language: CSharp
      name:
        CSharp: GetMinEnumValue<T>()
        VB: GetMinEnumValue(Of T)()
      nameWithType:
        CSharp: EnumService.GetMinEnumValue<T>()
        VB: EnumService.GetMinEnumValue(Of T)()
      qualifiedName:
        CSharp: UCT.Service.EnumService.GetMinEnumValue<T>()
        VB: UCT.Service.EnumService.GetMinEnumValue(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetMinEnumValue
        path: ''
        startLine: 6405
      summary: "\n获取枚举的最小项\n"
      example: []
      syntax:
        content:
          CSharp: 'public static T GetMinEnumValue<T>() where T : Enum'
          VB: Public Shared Function GetMinEnumValue(Of T As [Enum])() As T
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: UCT.Service.EnumService.GetMinEnumValue*
    - id: UCT.Service.EnumService.IncrementEnum``1(``0)
      commentId: M:UCT.Service.EnumService.IncrementEnum``1(``0)
      language: CSharp
      name:
        CSharp: IncrementEnum<T>(T)
        VB: IncrementEnum(Of T)(T)
      nameWithType:
        CSharp: EnumService.IncrementEnum<T>(T)
        VB: EnumService.IncrementEnum(Of T)(T)
      qualifiedName:
        CSharp: UCT.Service.EnumService.IncrementEnum<T>(T)
        VB: UCT.Service.EnumService.IncrementEnum(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: IncrementEnum
        path: ''
        startLine: 6424
      summary: "\n将枚举值自增，若达到最大值，则回到最小值。\n"
      example: []
      syntax:
        content:
          CSharp: 'public static T IncrementEnum<T>(T value) where T : Enum'
          VB: Public Shared Function IncrementEnum(Of T As [Enum])(value As T) As T
        parameters:
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: UCT.Service.EnumService.IncrementEnum*
    - id: UCT.Service.EnumService.DecrementEnum``1(``0)
      commentId: M:UCT.Service.EnumService.DecrementEnum``1(``0)
      language: CSharp
      name:
        CSharp: DecrementEnum<T>(T)
        VB: DecrementEnum(Of T)(T)
      nameWithType:
        CSharp: EnumService.DecrementEnum<T>(T)
        VB: EnumService.DecrementEnum(Of T)(T)
      qualifiedName:
        CSharp: UCT.Service.EnumService.DecrementEnum<T>(T)
        VB: UCT.Service.EnumService.DecrementEnum(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: DecrementEnum
        path: ''
        startLine: 6435
      summary: "\n将枚举值自减，若达到最小值，则回到最大值。\n"
      example: []
      syntax:
        content:
          CSharp: 'public static T DecrementEnum<T>(T value) where T : Enum'
          VB: Public Shared Function DecrementEnum(Of T As [Enum])(value As T) As T
        parameters:
        - id: value
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: UCT.Service.EnumService.DecrementEnum*
  - id: UCT.Service.EnemiesXmlDialogParser
    commentId: T:UCT.Service.EnemiesXmlDialogParser
    language: CSharp
    name:
      CSharp: EnemiesXmlDialogParser
      VB: EnemiesXmlDialogParser
    nameWithType:
      CSharp: EnemiesXmlDialogParser
      VB: EnemiesXmlDialogParser
    qualifiedName:
      CSharp: UCT.Service.EnemiesXmlDialogParser
      VB: UCT.Service.EnemiesXmlDialogParser
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: EnemiesXmlDialogParser
      path: ''
      startLine: 6452
    syntax:
      content:
        CSharp: public static class EnemiesXmlDialogParser
        VB: Public Module EnemiesXmlDialogParser
    inheritance:
    - System.Object
    items:
    - id: UCT.Service.EnemiesXmlDialogParser.GetDialogInfo(System.String)
      commentId: M:UCT.Service.EnemiesXmlDialogParser.GetDialogInfo(System.String)
      language: CSharp
      name:
        CSharp: GetDialogInfo(string)
        VB: GetDialogInfo(String)
      nameWithType:
        CSharp: EnemiesXmlDialogParser.GetDialogInfo(string)
        VB: EnemiesXmlDialogParser.GetDialogInfo(String)
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.GetDialogInfo(string)
        VB: UCT.Service.EnemiesXmlDialogParser.GetDialogInfo(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetDialogInfo
        path: ''
        startLine: 6469
      summary: "\n获取 Dialog 的基本信息\n"
      example: []
      syntax:
        content:
          CSharp: public static EnemiesXmlDialogParser.Dialog GetDialogInfo(string xmlContent)
          VB: Public Shared Function GetDialogInfo(xmlContent As String) As EnemiesXmlDialogParser.Dialog
        parameters:
        - id: xmlContent
          type: System.String
        return:
          type: UCT.Service.EnemiesXmlDialogParser.Dialog
      overload: UCT.Service.EnemiesXmlDialogParser.GetDialogInfo*
    - id: UCT.Service.EnemiesXmlDialogParser.GetMessagesInDialog(System.String,System.String)
      commentId: M:UCT.Service.EnemiesXmlDialogParser.GetMessagesInDialog(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetMessagesInDialog(string, string)
        VB: GetMessagesInDialog(String, String)
      nameWithType:
        CSharp: EnemiesXmlDialogParser.GetMessagesInDialog(string, string)
        VB: EnemiesXmlDialogParser.GetMessagesInDialog(String, String)
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.GetMessagesInDialog(string, string)
        VB: UCT.Service.EnemiesXmlDialogParser.GetMessagesInDialog(String, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetMessagesInDialog
        path: ''
        startLine: 6500
      summary: "\n获取指定 Dialog 下的所有 Message\n"
      example: []
      syntax:
        content:
          CSharp: public static List<EnemiesXmlDialogParser.Message> GetMessagesInDialog(string xmlContent, string dialogName)
          VB: Public Shared Function GetMessagesInDialog(xmlContent As String, dialogName As String) As List(Of EnemiesXmlDialogParser.Message)
        parameters:
        - id: xmlContent
          type: System.String
        - id: dialogName
          type: System.String
        return:
          type: System.Collections.Generic.List{UCT.Service.EnemiesXmlDialogParser.Message}
      overload: UCT.Service.EnemiesXmlDialogParser.GetMessagesInDialog*
    - id: UCT.Service.EnemiesXmlDialogParser.GetMessageInfo(System.String,System.String,System.String)
      commentId: M:UCT.Service.EnemiesXmlDialogParser.GetMessageInfo(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: GetMessageInfo(string, string, string)
        VB: GetMessageInfo(String, String, String)
      nameWithType:
        CSharp: EnemiesXmlDialogParser.GetMessageInfo(string, string, string)
        VB: EnemiesXmlDialogParser.GetMessageInfo(String, String, String)
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.GetMessageInfo(string, string, string)
        VB: UCT.Service.EnemiesXmlDialogParser.GetMessageInfo(String, String, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetMessageInfo
        path: ''
        startLine: 6551
      summary: "\n获取特定 Message 的信息\n"
      example: []
      syntax:
        content:
          CSharp: public static EnemiesXmlDialogParser.Message GetMessageInfo(string xmlContent, string dialogName, string messageName)
          VB: Public Shared Function GetMessageInfo(xmlContent As String, dialogName As String, messageName As String) As EnemiesXmlDialogParser.Message
        parameters:
        - id: xmlContent
          type: System.String
        - id: dialogName
          type: System.String
        - id: messageName
          type: System.String
        return:
          type: UCT.Service.EnemiesXmlDialogParser.Message
      overload: UCT.Service.EnemiesXmlDialogParser.GetMessageInfo*
    - id: UCT.Service.EnemiesXmlDialogParser.GetBubbles(System.String,System.String)
      commentId: M:UCT.Service.EnemiesXmlDialogParser.GetBubbles(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetBubbles(string, string)
        VB: GetBubbles(String, String)
      nameWithType:
        CSharp: EnemiesXmlDialogParser.GetBubbles(string, string)
        VB: EnemiesXmlDialogParser.GetBubbles(String, String)
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.GetBubbles(string, string)
        VB: UCT.Service.EnemiesXmlDialogParser.GetBubbles(String, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetBubbles
        path: ''
        startLine: 6593
      summary: "\n获取特定 Message 下的所有 Bubble 信息\n"
      example: []
      syntax:
        content:
          CSharp: public static List<EnemiesXmlDialogParser.Bubble> GetBubbles(string xmlContent, string messageName)
          VB: Public Shared Function GetBubbles(xmlContent As String, messageName As String) As List(Of EnemiesXmlDialogParser.Bubble)
        parameters:
        - id: xmlContent
          type: System.String
        - id: messageName
          type: System.String
        return:
          type: System.Collections.Generic.List{UCT.Service.EnemiesXmlDialogParser.Bubble}
      overload: UCT.Service.EnemiesXmlDialogParser.GetBubbles*
  - id: UCT.Service.EnemiesXmlDialogParser.DialogType
    commentId: T:UCT.Service.EnemiesXmlDialogParser.DialogType
    language: CSharp
    name:
      CSharp: EnemiesXmlDialogParser.DialogType
      VB: EnemiesXmlDialogParser.DialogType
    nameWithType:
      CSharp: EnemiesXmlDialogParser.DialogType
      VB: EnemiesXmlDialogParser.DialogType
    qualifiedName:
      CSharp: UCT.Service.EnemiesXmlDialogParser.DialogType
      VB: UCT.Service.EnemiesXmlDialogParser.DialogType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: DialogType
      path: ''
      startLine: 6454
    syntax:
      content:
        CSharp: public enum EnemiesXmlDialogParser.DialogType
        VB: Public Enum EnemiesXmlDialogParser.DialogType
    items:
    - id: UCT.Service.EnemiesXmlDialogParser.DialogType.Fixed
      commentId: F:UCT.Service.EnemiesXmlDialogParser.DialogType.Fixed
      language: CSharp
      name:
        CSharp: Fixed
        VB: Fixed
      nameWithType:
        CSharp: EnemiesXmlDialogParser.DialogType.Fixed
        VB: EnemiesXmlDialogParser.DialogType.Fixed
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.DialogType.Fixed
        VB: UCT.Service.EnemiesXmlDialogParser.DialogType.Fixed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Fixed
        path: ''
        startLine: 6456
      syntax:
        content:
          CSharp: Fixed = 0
          VB: Fixed = 0
        return:
          type: UCT.Service.EnemiesXmlDialogParser.DialogType
    - id: UCT.Service.EnemiesXmlDialogParser.DialogType.Random
      commentId: F:UCT.Service.EnemiesXmlDialogParser.DialogType.Random
      language: CSharp
      name:
        CSharp: Random
        VB: Random
      nameWithType:
        CSharp: EnemiesXmlDialogParser.DialogType.Random
        VB: EnemiesXmlDialogParser.DialogType.Random
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.DialogType.Random
        VB: UCT.Service.EnemiesXmlDialogParser.DialogType.Random
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Random
        path: ''
        startLine: 6457
      syntax:
        content:
          CSharp: Random = 1
          VB: Random = 1
        return:
          type: UCT.Service.EnemiesXmlDialogParser.DialogType
  - id: UCT.Service.EnemiesXmlDialogParser.MessageMode
    commentId: T:UCT.Service.EnemiesXmlDialogParser.MessageMode
    language: CSharp
    name:
      CSharp: EnemiesXmlDialogParser.MessageMode
      VB: EnemiesXmlDialogParser.MessageMode
    nameWithType:
      CSharp: EnemiesXmlDialogParser.MessageMode
      VB: EnemiesXmlDialogParser.MessageMode
    qualifiedName:
      CSharp: UCT.Service.EnemiesXmlDialogParser.MessageMode
      VB: UCT.Service.EnemiesXmlDialogParser.MessageMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: MessageMode
      path: ''
      startLine: 6460
    syntax:
      content:
        CSharp: public enum EnemiesXmlDialogParser.MessageMode
        VB: Public Enum EnemiesXmlDialogParser.MessageMode
    items:
    - id: UCT.Service.EnemiesXmlDialogParser.MessageMode.Confirm
      commentId: F:UCT.Service.EnemiesXmlDialogParser.MessageMode.Confirm
      language: CSharp
      name:
        CSharp: Confirm
        VB: Confirm
      nameWithType:
        CSharp: EnemiesXmlDialogParser.MessageMode.Confirm
        VB: EnemiesXmlDialogParser.MessageMode.Confirm
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.MessageMode.Confirm
        VB: UCT.Service.EnemiesXmlDialogParser.MessageMode.Confirm
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Confirm
        path: ''
        startLine: 6462
      syntax:
        content:
          CSharp: Confirm = 0
          VB: Confirm = 0
        return:
          type: UCT.Service.EnemiesXmlDialogParser.MessageMode
    - id: UCT.Service.EnemiesXmlDialogParser.MessageMode.Delay
      commentId: F:UCT.Service.EnemiesXmlDialogParser.MessageMode.Delay
      language: CSharp
      name:
        CSharp: Delay
        VB: Delay
      nameWithType:
        CSharp: EnemiesXmlDialogParser.MessageMode.Delay
        VB: EnemiesXmlDialogParser.MessageMode.Delay
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.MessageMode.Delay
        VB: UCT.Service.EnemiesXmlDialogParser.MessageMode.Delay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Delay
        path: ''
        startLine: 6463
      syntax:
        content:
          CSharp: Delay = 1
          VB: Delay = 1
        return:
          type: UCT.Service.EnemiesXmlDialogParser.MessageMode
  - id: UCT.Service.EnemiesXmlDialogParser.Dialog
    commentId: T:UCT.Service.EnemiesXmlDialogParser.Dialog
    language: CSharp
    name:
      CSharp: EnemiesXmlDialogParser.Dialog
      VB: EnemiesXmlDialogParser.Dialog
    nameWithType:
      CSharp: EnemiesXmlDialogParser.Dialog
      VB: EnemiesXmlDialogParser.Dialog
    qualifiedName:
      CSharp: UCT.Service.EnemiesXmlDialogParser.Dialog
      VB: UCT.Service.EnemiesXmlDialogParser.Dialog
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: Dialog
      path: ''
      startLine: 6650
    syntax:
      content:
        CSharp: public struct EnemiesXmlDialogParser.Dialog
        VB: Public Structure EnemiesXmlDialogParser.Dialog
    items:
    - id: UCT.Service.EnemiesXmlDialogParser.Dialog.Name
      commentId: F:UCT.Service.EnemiesXmlDialogParser.Dialog.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Dialog.Name
        VB: EnemiesXmlDialogParser.Dialog.Name
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Dialog.Name
        VB: UCT.Service.EnemiesXmlDialogParser.Dialog.Name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Name
        path: ''
        startLine: 6652
      syntax:
        content:
          CSharp: public string Name
          VB: Public Name As String
        return:
          type: System.String
    - id: UCT.Service.EnemiesXmlDialogParser.Dialog.Type
      commentId: F:UCT.Service.EnemiesXmlDialogParser.Dialog.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Dialog.Type
        VB: EnemiesXmlDialogParser.Dialog.Type
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Dialog.Type
        VB: UCT.Service.EnemiesXmlDialogParser.Dialog.Type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Type
        path: ''
        startLine: 6653
      syntax:
        content:
          CSharp: public EnemiesXmlDialogParser.DialogType Type
          VB: Public Type As EnemiesXmlDialogParser.DialogType
        return:
          type: UCT.Service.EnemiesXmlDialogParser.DialogType
    - id: UCT.Service.EnemiesXmlDialogParser.Dialog.Turn
      commentId: F:UCT.Service.EnemiesXmlDialogParser.Dialog.Turn
      language: CSharp
      name:
        CSharp: Turn
        VB: Turn
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Dialog.Turn
        VB: EnemiesXmlDialogParser.Dialog.Turn
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Dialog.Turn
        VB: UCT.Service.EnemiesXmlDialogParser.Dialog.Turn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Turn
        path: ''
        startLine: 6654
      syntax:
        content:
          CSharp: public int Turn
          VB: Public Turn As Integer
        return:
          type: System.Int32
  - id: UCT.Service.EnemiesXmlDialogParser.Message
    commentId: T:UCT.Service.EnemiesXmlDialogParser.Message
    language: CSharp
    name:
      CSharp: EnemiesXmlDialogParser.Message
      VB: EnemiesXmlDialogParser.Message
    nameWithType:
      CSharp: EnemiesXmlDialogParser.Message
      VB: EnemiesXmlDialogParser.Message
    qualifiedName:
      CSharp: UCT.Service.EnemiesXmlDialogParser.Message
      VB: UCT.Service.EnemiesXmlDialogParser.Message
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: Message
      path: ''
      startLine: 6657
    syntax:
      content:
        CSharp: public struct EnemiesXmlDialogParser.Message
        VB: Public Structure EnemiesXmlDialogParser.Message
    items:
    - id: UCT.Service.EnemiesXmlDialogParser.Message.Name
      commentId: F:UCT.Service.EnemiesXmlDialogParser.Message.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Message.Name
        VB: EnemiesXmlDialogParser.Message.Name
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Message.Name
        VB: UCT.Service.EnemiesXmlDialogParser.Message.Name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Name
        path: ''
        startLine: 6659
      syntax:
        content:
          CSharp: public string Name
          VB: Public Name As String
        return:
          type: System.String
    - id: UCT.Service.EnemiesXmlDialogParser.Message.Mode
      commentId: F:UCT.Service.EnemiesXmlDialogParser.Message.Mode
      language: CSharp
      name:
        CSharp: Mode
        VB: Mode
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Message.Mode
        VB: EnemiesXmlDialogParser.Message.Mode
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Message.Mode
        VB: UCT.Service.EnemiesXmlDialogParser.Message.Mode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Mode
        path: ''
        startLine: 6660
      syntax:
        content:
          CSharp: public EnemiesXmlDialogParser.MessageMode Mode
          VB: Public Mode As EnemiesXmlDialogParser.MessageMode
        return:
          type: UCT.Service.EnemiesXmlDialogParser.MessageMode
    - id: UCT.Service.EnemiesXmlDialogParser.Message.Target
      commentId: F:UCT.Service.EnemiesXmlDialogParser.Message.Target
      language: CSharp
      name:
        CSharp: Target
        VB: Target
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Message.Target
        VB: EnemiesXmlDialogParser.Message.Target
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Message.Target
        VB: UCT.Service.EnemiesXmlDialogParser.Message.Target
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Target
        path: ''
        startLine: 6661
      syntax:
        content:
          CSharp: public string[] Target
          VB: Public Target As String()
        return:
          type: System.String[]
    - id: UCT.Service.EnemiesXmlDialogParser.Message.AutoDelay
      commentId: F:UCT.Service.EnemiesXmlDialogParser.Message.AutoDelay
      language: CSharp
      name:
        CSharp: AutoDelay
        VB: AutoDelay
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Message.AutoDelay
        VB: EnemiesXmlDialogParser.Message.AutoDelay
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Message.AutoDelay
        VB: UCT.Service.EnemiesXmlDialogParser.Message.AutoDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: AutoDelay
        path: ''
        startLine: 6662
      syntax:
        content:
          CSharp: public float AutoDelay
          VB: Public AutoDelay As Single
        return:
          type: System.Single
    - id: UCT.Service.EnemiesXmlDialogParser.Message.IsDelaying
      commentId: F:UCT.Service.EnemiesXmlDialogParser.Message.IsDelaying
      language: CSharp
      name:
        CSharp: IsDelaying
        VB: IsDelaying
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Message.IsDelaying
        VB: EnemiesXmlDialogParser.Message.IsDelaying
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Message.IsDelaying
        VB: UCT.Service.EnemiesXmlDialogParser.Message.IsDelaying
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: IsDelaying
        path: ''
        startLine: 6663
      syntax:
        content:
          CSharp: public bool IsDelaying
          VB: Public IsDelaying As Boolean
        return:
          type: System.Boolean
    - id: UCT.Service.EnemiesXmlDialogParser.Message.Equals(UCT.Service.EnemiesXmlDialogParser.Message)
      commentId: M:UCT.Service.EnemiesXmlDialogParser.Message.Equals(UCT.Service.EnemiesXmlDialogParser.Message)
      language: CSharp
      name:
        CSharp: Equals(Message)
        VB: Equals(Message)
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Message.Equals(EnemiesXmlDialogParser.Message)
        VB: EnemiesXmlDialogParser.Message.Equals(EnemiesXmlDialogParser.Message)
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Message.Equals(UCT.Service.EnemiesXmlDialogParser.Message)
        VB: UCT.Service.EnemiesXmlDialogParser.Message.Equals(UCT.Service.EnemiesXmlDialogParser.Message)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Equals
        path: ''
        startLine: 6665
      syntax:
        content:
          CSharp: public bool Equals(EnemiesXmlDialogParser.Message other)
          VB: Public Function Equals(other As EnemiesXmlDialogParser.Message) As Boolean
        parameters:
        - id: other
          type: UCT.Service.EnemiesXmlDialogParser.Message
        return:
          type: System.Boolean
      overload: UCT.Service.EnemiesXmlDialogParser.Message.Equals*
    - id: UCT.Service.EnemiesXmlDialogParser.Message.Equals(System.Object)
      commentId: M:UCT.Service.EnemiesXmlDialogParser.Message.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(object)
        VB: Equals(Object)
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Message.Equals(object)
        VB: EnemiesXmlDialogParser.Message.Equals(Object)
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Message.Equals(object)
        VB: UCT.Service.EnemiesXmlDialogParser.Message.Equals(Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Equals
        path: ''
        startLine: 6670
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: UCT.Service.EnemiesXmlDialogParser.Message.Equals*
      overridden: System.ValueType.Equals(System.Object)
    - id: UCT.Service.EnemiesXmlDialogParser.Message.GetHashCode
      commentId: M:UCT.Service.EnemiesXmlDialogParser.Message.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Message.GetHashCode()
        VB: EnemiesXmlDialogParser.Message.GetHashCode()
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Message.GetHashCode()
        VB: UCT.Service.EnemiesXmlDialogParser.Message.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetHashCode
        path: ''
        startLine: 6675
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode() As Integer
        return:
          type: System.Int32
      overload: UCT.Service.EnemiesXmlDialogParser.Message.GetHashCode*
      overridden: System.ValueType.GetHashCode
  - id: UCT.Service.EnemiesXmlDialogParser.Bubble
    commentId: T:UCT.Service.EnemiesXmlDialogParser.Bubble
    language: CSharp
    name:
      CSharp: EnemiesXmlDialogParser.Bubble
      VB: EnemiesXmlDialogParser.Bubble
    nameWithType:
      CSharp: EnemiesXmlDialogParser.Bubble
      VB: EnemiesXmlDialogParser.Bubble
    qualifiedName:
      CSharp: UCT.Service.EnemiesXmlDialogParser.Bubble
      VB: UCT.Service.EnemiesXmlDialogParser.Bubble
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: Bubble
      path: ''
      startLine: 6681
    syntax:
      content:
        CSharp: public struct EnemiesXmlDialogParser.Bubble
        VB: Public Structure EnemiesXmlDialogParser.Bubble
    items:
    - id: UCT.Service.EnemiesXmlDialogParser.Bubble.Size
      commentId: F:UCT.Service.EnemiesXmlDialogParser.Bubble.Size
      language: CSharp
      name:
        CSharp: Size
        VB: Size
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Bubble.Size
        VB: EnemiesXmlDialogParser.Bubble.Size
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Bubble.Size
        VB: UCT.Service.EnemiesXmlDialogParser.Bubble.Size
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Size
        path: ''
        startLine: 6683
      syntax:
        content:
          CSharp: public Vector2 Size
          VB: Public Size As Vector2
        return:
          type: Global.Vector2
    - id: UCT.Service.EnemiesXmlDialogParser.Bubble.Offset
      commentId: F:UCT.Service.EnemiesXmlDialogParser.Bubble.Offset
      language: CSharp
      name:
        CSharp: Offset
        VB: Offset
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Bubble.Offset
        VB: EnemiesXmlDialogParser.Bubble.Offset
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Bubble.Offset
        VB: UCT.Service.EnemiesXmlDialogParser.Bubble.Offset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Offset
        path: ''
        startLine: 6684
      syntax:
        content:
          CSharp: public Vector2 Offset
          VB: Public Offset As Vector2
        return:
          type: Global.Vector2
    - id: UCT.Service.EnemiesXmlDialogParser.Bubble.Character
      commentId: F:UCT.Service.EnemiesXmlDialogParser.Bubble.Character
      language: CSharp
      name:
        CSharp: Character
        VB: Character
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Bubble.Character
        VB: EnemiesXmlDialogParser.Bubble.Character
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Bubble.Character
        VB: UCT.Service.EnemiesXmlDialogParser.Bubble.Character
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Character
        path: ''
        startLine: 6685
      syntax:
        content:
          CSharp: public string Character
          VB: Public Character As String
        return:
          type: System.String
    - id: UCT.Service.EnemiesXmlDialogParser.Bubble.ArrowOffset
      commentId: F:UCT.Service.EnemiesXmlDialogParser.Bubble.ArrowOffset
      language: CSharp
      name:
        CSharp: ArrowOffset
        VB: ArrowOffset
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Bubble.ArrowOffset
        VB: EnemiesXmlDialogParser.Bubble.ArrowOffset
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Bubble.ArrowOffset
        VB: UCT.Service.EnemiesXmlDialogParser.Bubble.ArrowOffset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: ArrowOffset
        path: ''
        startLine: 6686
      syntax:
        content:
          CSharp: public float ArrowOffset
          VB: Public ArrowOffset As Single
        return:
          type: System.Single
    - id: UCT.Service.EnemiesXmlDialogParser.Bubble.Direction
      commentId: F:UCT.Service.EnemiesXmlDialogParser.Bubble.Direction
      language: CSharp
      name:
        CSharp: Direction
        VB: Direction
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Bubble.Direction
        VB: EnemiesXmlDialogParser.Bubble.Direction
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Bubble.Direction
        VB: UCT.Service.EnemiesXmlDialogParser.Bubble.Direction
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Direction
        path: ''
        startLine: 6687
      syntax:
        content:
          CSharp: public bool Direction
          VB: Public Direction As Boolean
        return:
          type: System.Boolean
    - id: UCT.Service.EnemiesXmlDialogParser.Bubble.Text
      commentId: F:UCT.Service.EnemiesXmlDialogParser.Bubble.Text
      language: CSharp
      name:
        CSharp: Text
        VB: Text
      nameWithType:
        CSharp: EnemiesXmlDialogParser.Bubble.Text
        VB: EnemiesXmlDialogParser.Bubble.Text
      qualifiedName:
        CSharp: UCT.Service.EnemiesXmlDialogParser.Bubble.Text
        VB: UCT.Service.EnemiesXmlDialogParser.Bubble.Text
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: Text
        path: ''
        startLine: 6688
      syntax:
        content:
          CSharp: public string Text
          VB: Public Text As String
        return:
          type: System.String
  - id: UCT.Service.MathUtilityService
    commentId: T:UCT.Service.MathUtilityService
    language: CSharp
    name:
      CSharp: MathUtilityService
      VB: MathUtilityService
    nameWithType:
      CSharp: MathUtilityService
      VB: MathUtilityService
    qualifiedName:
      CSharp: UCT.Service.MathUtilityService
      VB: UCT.Service.MathUtilityService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: MathUtilityService
      path: ''
      startLine: 6703
    summary: "\n数学计算相关函数\n"
    example: []
    syntax:
      content:
        CSharp: public static class MathUtilityService
        VB: Public Module MathUtilityService
    inheritance:
    - System.Object
    items:
    - id: UCT.Service.MathUtilityService.WeightedRandom(System.Single)
      commentId: M:UCT.Service.MathUtilityService.WeightedRandom(System.Single)
      language: CSharp
      name:
        CSharp: WeightedRandom(float)
        VB: WeightedRandom(Single)
      nameWithType:
        CSharp: MathUtilityService.WeightedRandom(float)
        VB: MathUtilityService.WeightedRandom(Single)
      qualifiedName:
        CSharp: UCT.Service.MathUtilityService.WeightedRandom(float)
        VB: UCT.Service.MathUtilityService.WeightedRandom(Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: WeightedRandom
        path: ''
        startLine: 6711
      summary: "\n根据给定的权重（0到1之间）随机返回true或false。\n"
      example: []
      syntax:
        content:
          CSharp: public static bool WeightedRandom(float weight)
          VB: Public Shared Function WeightedRandom(weight As Single) As Boolean
        parameters:
        - id: weight
          type: System.Single
          description: 0到1之间的浮点数，表示返回true的概率
        return:
          type: System.Boolean
          description: 根据权重随机返回true或false
      overload: UCT.Service.MathUtilityService.WeightedRandom*
    - id: UCT.Service.MathUtilityService.GetRandomUnit
      commentId: M:UCT.Service.MathUtilityService.GetRandomUnit
      language: CSharp
      name:
        CSharp: GetRandomUnit()
        VB: GetRandomUnit()
      nameWithType:
        CSharp: MathUtilityService.GetRandomUnit()
        VB: MathUtilityService.GetRandomUnit()
      qualifiedName:
        CSharp: UCT.Service.MathUtilityService.GetRandomUnit()
        VB: UCT.Service.MathUtilityService.GetRandomUnit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetRandomUnit
        path: ''
        startLine: 6723
      summary: "\n随机获取-1或1\n"
      example: []
      syntax:
        content:
          CSharp: public static int GetRandomUnit()
          VB: Public Shared Function GetRandomUnit() As Integer
        return:
          type: System.Int32
      overload: UCT.Service.MathUtilityService.GetRandomUnit*
    - id: UCT.Service.MathUtilityService.RandomPointOnSphereSurface(System.Single,Vector3)
      commentId: M:UCT.Service.MathUtilityService.RandomPointOnSphereSurface(System.Single,Vector3)
      language: CSharp
      name:
        CSharp: RandomPointOnSphereSurface(float, Vector3)
        VB: RandomPointOnSphereSurface(Single, Vector3)
      nameWithType:
        CSharp: MathUtilityService.RandomPointOnSphereSurface(float, Vector3)
        VB: MathUtilityService.RandomPointOnSphereSurface(Single, Vector3)
      qualifiedName:
        CSharp: UCT.Service.MathUtilityService.RandomPointOnSphereSurface(float, Vector3)
        VB: UCT.Service.MathUtilityService.RandomPointOnSphereSurface(Single, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: RandomPointOnSphereSurface
        path: ''
        startLine: 6737
      summary: "\n在球体表面上生成随机点\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector3 RandomPointOnSphereSurface(float sphereRadius, Vector3 sphereCenter)
          VB: Public Shared Function RandomPointOnSphereSurface(sphereRadius As Single, sphereCenter As Vector3) As Vector3
        parameters:
        - id: sphereRadius
          type: System.Single
        - id: sphereCenter
          type: Global.Vector3
        return:
          type: Global.Vector3
      overload: UCT.Service.MathUtilityService.RandomPointOnSphereSurface*
    - id: UCT.Service.MathUtilityService.GetGreaterNumber(System.Single,System.Single)
      commentId: M:UCT.Service.MathUtilityService.GetGreaterNumber(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: GetGreaterNumber(float, float)
        VB: GetGreaterNumber(Single, Single)
      nameWithType:
        CSharp: MathUtilityService.GetGreaterNumber(float, float)
        VB: MathUtilityService.GetGreaterNumber(Single, Single)
      qualifiedName:
        CSharp: UCT.Service.MathUtilityService.GetGreaterNumber(float, float)
        VB: UCT.Service.MathUtilityService.GetGreaterNumber(Single, Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetGreaterNumber
        path: ''
        startLine: 6749
      summary: "\n返回两个数中更大的数\n"
      example: []
      syntax:
        content:
          CSharp: public static float GetGreaterNumber(float number1, float number2)
          VB: Public Shared Function GetGreaterNumber(number1 As Single, number2 As Single) As Single
        parameters:
        - id: number1
          type: System.Single
        - id: number2
          type: System.Single
        return:
          type: System.Single
      overload: UCT.Service.MathUtilityService.GetGreaterNumber*
    - id: UCT.Service.MathUtilityService.GetSmallerNumber(System.Single,System.Single)
      commentId: M:UCT.Service.MathUtilityService.GetSmallerNumber(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: GetSmallerNumber(float, float)
        VB: GetSmallerNumber(Single, Single)
      nameWithType:
        CSharp: MathUtilityService.GetSmallerNumber(float, float)
        VB: MathUtilityService.GetSmallerNumber(Single, Single)
      qualifiedName:
        CSharp: UCT.Service.MathUtilityService.GetSmallerNumber(float, float)
        VB: UCT.Service.MathUtilityService.GetSmallerNumber(Single, Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetSmallerNumber
        path: ''
        startLine: 6757
      summary: "\n返回两个数中更小的数\n"
      example: []
      syntax:
        content:
          CSharp: public static float GetSmallerNumber(float number1, float number2)
          VB: Public Shared Function GetSmallerNumber(number1 As Single, number2 As Single) As Single
        parameters:
        - id: number1
          type: System.Single
        - id: number2
          type: System.Single
        return:
          type: System.Single
      overload: UCT.Service.MathUtilityService.GetSmallerNumber*
    - id: UCT.Service.MathUtilityService.GetResolutionWidthsWithHeights(System.Collections.Generic.List{System.Int32},System.Int32)
      commentId: M:UCT.Service.MathUtilityService.GetResolutionWidthsWithHeights(System.Collections.Generic.List{System.Int32},System.Int32)
      language: CSharp
      name:
        CSharp: GetResolutionWidthsWithHeights(List<int>, int)
        VB: GetResolutionWidthsWithHeights(List(Of Integer), Integer)
      nameWithType:
        CSharp: MathUtilityService.GetResolutionWidthsWithHeights(List<int>, int)
        VB: MathUtilityService.GetResolutionWidthsWithHeights(List(Of Integer), Integer)
      qualifiedName:
        CSharp: UCT.Service.MathUtilityService.GetResolutionWidthsWithHeights(System.Collections.Generic.List<int>, int)
        VB: UCT.Service.MathUtilityService.GetResolutionWidthsWithHeights(System.Collections.Generic.List(Of Integer), Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetResolutionWidthsWithHeights
        path: ''
        startLine: 6768
      summary: "\n通过分辨率的高度转换得到宽度\n"
      example: []
      syntax:
        content:
          CSharp: public static List<int> GetResolutionWidthsWithHeights(List<int> resolutionHeights, int resolutionCutPoint)
          VB: Public Shared Function GetResolutionWidthsWithHeights(resolutionHeights As List(Of Integer), resolutionCutPoint As Integer) As List(Of Integer)
        parameters:
        - id: resolutionHeights
          type: System.Collections.Generic.List{System.Int32}
          description: 分辨率高度列表
        - id: resolutionCutPoint
          type: System.Int32
          description: 分辨率的切换点，列表中此值之前使用4:3的比例，之后使用16:9的比例
        return:
          type: System.Collections.Generic.List{System.Int32}
          description: ''
      overload: UCT.Service.MathUtilityService.GetResolutionWidthsWithHeights*
    - id: UCT.Service.MathUtilityService.DbToNormalizedValue(System.Single)
      commentId: M:UCT.Service.MathUtilityService.DbToNormalizedValue(System.Single)
      language: CSharp
      name:
        CSharp: DbToNormalizedValue(float)
        VB: DbToNormalizedValue(Single)
      nameWithType:
        CSharp: MathUtilityService.DbToNormalizedValue(float)
        VB: MathUtilityService.DbToNormalizedValue(Single)
      qualifiedName:
        CSharp: UCT.Service.MathUtilityService.DbToNormalizedValue(float)
        VB: UCT.Service.MathUtilityService.DbToNormalizedValue(Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: DbToNormalizedValue
        path: ''
        startLine: 6792
      summary: "\n将 AudioMixer 的 dB 值（范围：-80 到 0）转换为归一化值（范围：0 到 1）。\n"
      example: []
      syntax:
        content:
          CSharp: public static float DbToNormalizedValue(float mixerDbValue)
          VB: Public Shared Function DbToNormalizedValue(mixerDbValue As Single) As Single
        parameters:
        - id: mixerDbValue
          type: System.Single
          description: AudioMixer 的 dB 值（范围：-80 到 0）。
        return:
          type: System.Single
          description: 归一化的 0 到 1 的值。
      overload: UCT.Service.MathUtilityService.DbToNormalizedValue*
    - id: UCT.Service.MathUtilityService.NormalizedValueToDb(System.Single)
      commentId: M:UCT.Service.MathUtilityService.NormalizedValueToDb(System.Single)
      language: CSharp
      name:
        CSharp: NormalizedValueToDb(float)
        VB: NormalizedValueToDb(Single)
      nameWithType:
        CSharp: MathUtilityService.NormalizedValueToDb(float)
        VB: MathUtilityService.NormalizedValueToDb(Single)
      qualifiedName:
        CSharp: UCT.Service.MathUtilityService.NormalizedValueToDb(float)
        VB: UCT.Service.MathUtilityService.NormalizedValueToDb(Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: NormalizedValueToDb
        path: ''
        startLine: 6802
      summary: "\n将归一化值（范围：0 到 1）转换为 AudioMixer 的 dB 值（范围：-80 到 0）。\n"
      example: []
      syntax:
        content:
          CSharp: public static float NormalizedValueToDb(float normalizedValue)
          VB: Public Shared Function NormalizedValueToDb(normalizedValue As Single) As Single
        parameters:
        - id: normalizedValue
          type: System.Single
          description: 归一化的 0 到 1 的值。
        return:
          type: System.Single
          description: 对应的 dB 值（范围：-80 到 0）。
      overload: UCT.Service.MathUtilityService.NormalizedValueToDb*
    - id: UCT.Service.MathUtilityService.IsPointInPolygon(Vector2,System.Collections.Generic.List{Vector2})
      commentId: M:UCT.Service.MathUtilityService.IsPointInPolygon(Vector2,System.Collections.Generic.List{Vector2})
      language: CSharp
      name:
        CSharp: IsPointInPolygon(Vector2, List<Vector2>)
        VB: IsPointInPolygon(Vector2, List(Of Vector2))
      nameWithType:
        CSharp: MathUtilityService.IsPointInPolygon(Vector2, List<Vector2>)
        VB: MathUtilityService.IsPointInPolygon(Vector2, List(Of Vector2))
      qualifiedName:
        CSharp: UCT.Service.MathUtilityService.IsPointInPolygon(Vector2, System.Collections.Generic.List<Vector2>)
        VB: UCT.Service.MathUtilityService.IsPointInPolygon(Vector2, System.Collections.Generic.List(Of Vector2))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: IsPointInPolygon
        path: ''
        startLine: 6810
      summary: "\n判断点是否在多边形内\n"
      example: []
      syntax:
        content:
          CSharp: public static bool IsPointInPolygon(Vector2 point, List<Vector2> polygon)
          VB: Public Shared Function IsPointInPolygon(point As Vector2, polygon As List(Of Vector2)) As Boolean
        parameters:
        - id: point
          type: Global.Vector2
        - id: polygon
          type: System.Collections.Generic.List{Vector2}
        return:
          type: System.Boolean
      overload: UCT.Service.MathUtilityService.IsPointInPolygon*
    - id: UCT.Service.MathUtilityService.CalculateDisplacedPoint(Vector2,Vector2,Vector2,System.Single)
      commentId: M:UCT.Service.MathUtilityService.CalculateDisplacedPoint(Vector2,Vector2,Vector2,System.Single)
      language: CSharp
      name:
        CSharp: CalculateDisplacedPoint(Vector2, Vector2, Vector2, float)
        VB: CalculateDisplacedPoint(Vector2, Vector2, Vector2, Single)
      nameWithType:
        CSharp: MathUtilityService.CalculateDisplacedPoint(Vector2, Vector2, Vector2, float)
        VB: MathUtilityService.CalculateDisplacedPoint(Vector2, Vector2, Vector2, Single)
      qualifiedName:
        CSharp: UCT.Service.MathUtilityService.CalculateDisplacedPoint(Vector2, Vector2, Vector2, float)
        VB: UCT.Service.MathUtilityService.CalculateDisplacedPoint(Vector2, Vector2, Vector2, Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: CalculateDisplacedPoint
        path: ''
        startLine: 6844
      summary: "\n计算位移后垂点位置\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 CalculateDisplacedPoint(Vector2 nearestPoint, Vector2 lineStart, Vector2 lineEnd, float displacement)
          VB: Public Shared Function CalculateDisplacedPoint(nearestPoint As Vector2, lineStart As Vector2, lineEnd As Vector2, displacement As Single) As Vector2
        parameters:
        - id: nearestPoint
          type: Global.Vector2
        - id: lineStart
          type: Global.Vector2
        - id: lineEnd
          type: Global.Vector2
        - id: displacement
          type: System.Single
        return:
          type: Global.Vector2
      overload: UCT.Service.MathUtilityService.CalculateDisplacedPoint*
    - id: UCT.Service.MathUtilityService.CalculateInwardOffset(System.Collections.Generic.List{Vector2},System.Single)
      commentId: M:UCT.Service.MathUtilityService.CalculateInwardOffset(System.Collections.Generic.List{Vector2},System.Single)
      language: CSharp
      name:
        CSharp: CalculateInwardOffset(List<Vector2>, float)
        VB: CalculateInwardOffset(List(Of Vector2), Single)
      nameWithType:
        CSharp: MathUtilityService.CalculateInwardOffset(List<Vector2>, float)
        VB: MathUtilityService.CalculateInwardOffset(List(Of Vector2), Single)
      qualifiedName:
        CSharp: UCT.Service.MathUtilityService.CalculateInwardOffset(System.Collections.Generic.List<Vector2>, float)
        VB: UCT.Service.MathUtilityService.CalculateInwardOffset(System.Collections.Generic.List(Of Vector2), Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: CalculateInwardOffset
        path: ''
        startLine: 6858
      summary: "\n计算缩放多边形顶点\n"
      example: []
      syntax:
        content:
          CSharp: public static List<Vector2> CalculateInwardOffset(List<Vector2> vertices, float offset)
          VB: Public Shared Function CalculateInwardOffset(vertices As List(Of Vector2), offset As Single) As List(Of Vector2)
        parameters:
        - id: vertices
          type: System.Collections.Generic.List{Vector2}
        - id: offset
          type: System.Single
        return:
          type: System.Collections.Generic.List{Vector2}
      overload: UCT.Service.MathUtilityService.CalculateInwardOffset*
    - id: UCT.Service.MathUtilityService.CheckPointBeyondPolygon(Vector3,System.Single,Vector2@,Vector2@,Vector2@,System.Boolean@,Vector3@)
      commentId: M:UCT.Service.MathUtilityService.CheckPointBeyondPolygon(Vector3,System.Single,Vector2@,Vector2@,Vector2@,System.Boolean@,Vector3@)
      language: CSharp
      name:
        CSharp: CheckPointBeyondPolygon(Vector3, float, out Vector2, out Vector2, out Vector2, out bool, out Vector3)
        VB: CheckPointBeyondPolygon(Vector3, Single, Vector2, Vector2, Vector2, Boolean, Vector3)
      nameWithType:
        CSharp: MathUtilityService.CheckPointBeyondPolygon(Vector3, float, out Vector2, out Vector2, out Vector2, out bool, out Vector3)
        VB: MathUtilityService.CheckPointBeyondPolygon(Vector3, Single, Vector2, Vector2, Vector2, Boolean, Vector3)
      qualifiedName:
        CSharp: UCT.Service.MathUtilityService.CheckPointBeyondPolygon(Vector3, float, out Vector2, out Vector2, out Vector2, out bool, out Vector3)
        VB: UCT.Service.MathUtilityService.CheckPointBeyondPolygon(Vector3, Single, Vector2, Vector2, Vector2, Boolean, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: CheckPointBeyondPolygon
        path: ''
        startLine: 6931
      syntax:
        content:
          CSharp: public static bool CheckPointBeyondPolygon(Vector3 point, float z, out Vector2 nearestPoint, out Vector2 lineStart, out Vector2 lineEnd, out bool isParent, out Vector3 checkPoint)
          VB: Public Shared Function CheckPointBeyondPolygon(point As Vector3, z As Single, nearestPoint As Vector2, lineStart As Vector2, lineEnd As Vector2, isParent As Boolean, checkPoint As Vector3) As Boolean
        parameters:
        - id: point
          type: Global.Vector3
        - id: z
          type: System.Single
        - id: nearestPoint
          type: Global.Vector2
        - id: lineStart
          type: Global.Vector2
        - id: lineEnd
          type: Global.Vector2
        - id: isParent
          type: System.Boolean
        - id: checkPoint
          type: Global.Vector3
        return:
          type: System.Boolean
      overload: UCT.Service.MathUtilityService.CheckPointBeyondPolygon*
  - id: UCT.Service.ChineseCharacterStrokesService
    commentId: T:UCT.Service.ChineseCharacterStrokesService
    language: CSharp
    name:
      CSharp: ChineseCharacterStrokesService
      VB: ChineseCharacterStrokesService
    nameWithType:
      CSharp: ChineseCharacterStrokesService
      VB: ChineseCharacterStrokesService
    qualifiedName:
      CSharp: UCT.Service.ChineseCharacterStrokesService
      VB: UCT.Service.ChineseCharacterStrokesService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Service
    source:
      id: ChineseCharacterStrokesService
      path: ''
      startLine: 6984
    syntax:
      content:
        CSharp: public static class ChineseCharacterStrokesService
        VB: Public Module ChineseCharacterStrokesService
    inheritance:
    - System.Object
    items:
    - id: UCT.Service.ChineseCharacterStrokesService.GetCharactersByStrokeCount(System.String[])
      commentId: M:UCT.Service.ChineseCharacterStrokesService.GetCharactersByStrokeCount(System.String[])
      language: CSharp
      name:
        CSharp: GetCharactersByStrokeCount(string[])
        VB: GetCharactersByStrokeCount(String())
      nameWithType:
        CSharp: ChineseCharacterStrokesService.GetCharactersByStrokeCount(string[])
        VB: ChineseCharacterStrokesService.GetCharactersByStrokeCount(String())
      qualifiedName:
        CSharp: UCT.Service.ChineseCharacterStrokesService.GetCharactersByStrokeCount(string[])
        VB: UCT.Service.ChineseCharacterStrokesService.GetCharactersByStrokeCount(String())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Service
      source:
        id: GetCharactersByStrokeCount
        path: ''
        startLine: 7024
      syntax:
        content:
          CSharp: public static string[] GetCharactersByStrokeCount(string[] characters)
          VB: Public Shared Function GetCharactersByStrokeCount(characters As String()) As String()
        parameters:
        - id: characters
          type: System.String[]
        return:
          type: System.String[]
      overload: UCT.Service.ChineseCharacterStrokesService.GetCharactersByStrokeCount*
- id: UCT.Battle
  commentId: N:UCT.Battle
  language: CSharp
  name:
    CSharp: UCT.Battle
    VB: UCT.Battle
  nameWithType:
    CSharp: UCT.Battle
    VB: UCT.Battle
  qualifiedName:
    CSharp: UCT.Battle
    VB: UCT.Battle
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.Battle.TargetController
    commentId: T:UCT.Battle.TargetController
    language: CSharp
    name:
      CSharp: TargetController
      VB: TargetController
    nameWithType:
      CSharp: TargetController
      VB: TargetController
    qualifiedName:
      CSharp: UCT.Battle.TargetController
      VB: UCT.Battle.TargetController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: TargetController
      path: ''
      startLine: 7054
    summary: "\n控制Target\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TargetController : MonoBehaviour'
        VB: Public Class TargetController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.TargetController.hitDamage
      commentId: F:UCT.Battle.TargetController.hitDamage
      language: CSharp
      name:
        CSharp: hitDamage
        VB: hitDamage
      nameWithType:
        CSharp: TargetController.hitDamage
        VB: TargetController.hitDamage
      qualifiedName:
        CSharp: UCT.Battle.TargetController.hitDamage
        VB: UCT.Battle.TargetController.hitDamage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: hitDamage
        path: ''
        startLine: 7060
      syntax:
        content:
          CSharp: public int hitDamage
          VB: Public hitDamage As Integer
        return:
          type: System.Int32
    - id: UCT.Battle.TargetController.hpBar
      commentId: F:UCT.Battle.TargetController.hpBar
      language: CSharp
      name:
        CSharp: hpBar
        VB: hpBar
      nameWithType:
        CSharp: TargetController.hpBar
        VB: TargetController.hpBar
      qualifiedName:
        CSharp: UCT.Battle.TargetController.hpBar
        VB: UCT.Battle.TargetController.hpBar
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: hpBar
        path: ''
        startLine: 7062
      syntax:
        content:
          CSharp: public GameObject hpBar
          VB: Public hpBar As GameObject
        return:
          type: Global.GameObject
    - id: UCT.Battle.TargetController.select
      commentId: F:UCT.Battle.TargetController.select
      language: CSharp
      name:
        CSharp: select
        VB: select
      nameWithType:
        CSharp: TargetController.select
        VB: TargetController.select
      qualifiedName:
        CSharp: UCT.Battle.TargetController.select
        VB: UCT.Battle.TargetController.select
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: select
        path: ''
        startLine: 7065
      syntax:
        content:
          CSharp: public int select
          VB: Public [select] As Integer
        return:
          type: System.Int32
    - id: UCT.Battle.TargetController.hitMonster
      commentId: F:UCT.Battle.TargetController.hitMonster
      language: CSharp
      name:
        CSharp: hitMonster
        VB: hitMonster
      nameWithType:
        CSharp: TargetController.hitMonster
        VB: TargetController.hitMonster
      qualifiedName:
        CSharp: UCT.Battle.TargetController.hitMonster
        VB: UCT.Battle.TargetController.hitMonster
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: hitMonster
        path: ''
        startLine: 7068
      syntax:
        content:
          CSharp: public EnemiesController hitMonster
          VB: Public hitMonster As EnemiesController
        return:
          type: UCT.Battle.EnemiesController
  - id: UCT.Battle.TurnController
    commentId: T:UCT.Battle.TurnController
    language: CSharp
    name:
      CSharp: TurnController
      VB: TurnController
    nameWithType:
      CSharp: TurnController
      VB: TurnController
    qualifiedName:
      CSharp: UCT.Battle.TurnController
      VB: UCT.Battle.TurnController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: TurnController
      path: ''
      startLine: 7212
    summary: "\n回合控制，同时也是弹幕的对象池\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TurnController : MonoBehaviour'
        VB: Public Class TurnController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.TurnController.turn
      commentId: F:UCT.Battle.TurnController.turn
      language: CSharp
      name:
        CSharp: turn
        VB: turn
      nameWithType:
        CSharp: TurnController.turn
        VB: TurnController.turn
      qualifiedName:
        CSharp: UCT.Battle.TurnController.turn
        VB: UCT.Battle.TurnController.turn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: turn
        path: ''
        startLine: 7214
      syntax:
        content:
          CSharp: public int turn
          VB: Public turn As Integer
        return:
          type: System.Int32
    - id: UCT.Battle.TurnController.isMyTurn
      commentId: F:UCT.Battle.TurnController.isMyTurn
      language: CSharp
      name:
        CSharp: isMyTurn
        VB: isMyTurn
      nameWithType:
        CSharp: TurnController.isMyTurn
        VB: TurnController.isMyTurn
      qualifiedName:
        CSharp: UCT.Battle.TurnController.isMyTurn
        VB: UCT.Battle.TurnController.isMyTurn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: isMyTurn
        path: ''
        startLine: 7215
      syntax:
        content:
          CSharp: public bool isMyTurn
          VB: Public isMyTurn As Boolean
        return:
          type: System.Boolean
    - id: UCT.Battle.TurnController.Instance
      commentId: P:UCT.Battle.TurnController.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: TurnController.Instance
        VB: TurnController.Instance
      qualifiedName:
        CSharp: UCT.Battle.TurnController.Instance
        VB: UCT.Battle.TurnController.Instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Instance
        path: ''
        startLine: 7227
      syntax:
        content:
          CSharp: public static TurnController Instance { get; }
          VB: Public Shared Property Instance As TurnController
        parameters: []
        return:
          type: UCT.Battle.TurnController
      overload: UCT.Battle.TurnController.Instance*
    - id: UCT.Battle.TurnController.EnterEnemyTurn
      commentId: M:UCT.Battle.TurnController.EnterEnemyTurn
      language: CSharp
      name:
        CSharp: EnterEnemyTurn()
        VB: EnterEnemyTurn()
      nameWithType:
        CSharp: TurnController.EnterEnemyTurn()
        VB: TurnController.EnterEnemyTurn()
      qualifiedName:
        CSharp: UCT.Battle.TurnController.EnterEnemyTurn()
        VB: UCT.Battle.TurnController.EnterEnemyTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: EnterEnemyTurn
        path: ''
        startLine: 7265
      summary: "\n进入敌方回合\n"
      example: []
      syntax:
        content:
          CSharp: public void EnterEnemyTurn()
          VB: Public Sub EnterEnemyTurn()
      overload: UCT.Battle.TurnController.EnterEnemyTurn*
    - id: UCT.Battle.TurnController.GetYellowBullet(Vector3)
      commentId: M:UCT.Battle.TurnController.GetYellowBullet(Vector3)
      language: CSharp
      name:
        CSharp: GetYellowBullet(Vector3)
        VB: GetYellowBullet(Vector3)
      nameWithType:
        CSharp: TurnController.GetYellowBullet(Vector3)
        VB: TurnController.GetYellowBullet(Vector3)
      qualifiedName:
        CSharp: UCT.Battle.TurnController.GetYellowBullet(Vector3)
        VB: UCT.Battle.TurnController.GetYellowBullet(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: GetYellowBullet
        path: ''
        startLine: 7349
      syntax:
        content:
          CSharp: public void GetYellowBullet(Vector3 playerPosition)
          VB: Public Sub GetYellowBullet(playerPosition As Vector3)
        parameters:
        - id: playerPosition
          type: Global.Vector3
      overload: UCT.Battle.TurnController.GetYellowBullet*
  - id: UCT.Battle.BulletController
    commentId: T:UCT.Battle.BulletController
    language: CSharp
    name:
      CSharp: BulletController
      VB: BulletController
    nameWithType:
      CSharp: BulletController
      VB: BulletController
    qualifiedName:
      CSharp: UCT.Battle.BulletController
      VB: UCT.Battle.BulletController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: BulletController
      path: ''
      startLine: 7373
    summary: "\n弹幕控制器\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BulletController : MonoBehaviour'
        VB: Public Class BulletController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.BulletController.typeName
      commentId: F:UCT.Battle.BulletController.typeName
      language: CSharp
      name:
        CSharp: typeName
        VB: typeName
      nameWithType:
        CSharp: BulletController.typeName
        VB: BulletController.typeName
      qualifiedName:
        CSharp: UCT.Battle.BulletController.typeName
        VB: UCT.Battle.BulletController.typeName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: typeName
        path: ''
        startLine: 7388
      syntax:
        content:
          CSharp: public string typeName
          VB: Public typeName As String
        return:
          type: System.String
    - id: UCT.Battle.BulletController.spriteRenderer
      commentId: F:UCT.Battle.BulletController.spriteRenderer
      language: CSharp
      name:
        CSharp: spriteRenderer
        VB: spriteRenderer
      nameWithType:
        CSharp: BulletController.spriteRenderer
        VB: BulletController.spriteRenderer
      qualifiedName:
        CSharp: UCT.Battle.BulletController.spriteRenderer
        VB: UCT.Battle.BulletController.spriteRenderer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: spriteRenderer
        path: ''
        startLine: 7390
      syntax:
        content:
          CSharp: public SpriteRenderer spriteRenderer
          VB: Public spriteRenderer As SpriteRenderer
        return:
          type: Global.SpriteRenderer
    - id: UCT.Battle.BulletController.boxColliderList
      commentId: F:UCT.Battle.BulletController.boxColliderList
      language: CSharp
      name:
        CSharp: boxColliderList
        VB: boxColliderList
      nameWithType:
        CSharp: BulletController.boxColliderList
        VB: BulletController.boxColliderList
      qualifiedName:
        CSharp: UCT.Battle.BulletController.boxColliderList
        VB: UCT.Battle.BulletController.boxColliderList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: boxColliderList
        path: ''
        startLine: 7391
      syntax:
        content:
          CSharp: public List<BoxCollider2D> boxColliderList
          VB: Public boxColliderList As List(Of BoxCollider2D)
        return:
          type: System.Collections.Generic.List{BoxCollider2D}
    - id: UCT.Battle.BulletController.boxColliderSizes
      commentId: F:UCT.Battle.BulletController.boxColliderSizes
      language: CSharp
      name:
        CSharp: boxColliderSizes
        VB: boxColliderSizes
      nameWithType:
        CSharp: BulletController.boxColliderSizes
        VB: BulletController.boxColliderSizes
      qualifiedName:
        CSharp: UCT.Battle.BulletController.boxColliderSizes
        VB: UCT.Battle.BulletController.boxColliderSizes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: boxColliderSizes
        path: ''
        startLine: 7392
      syntax:
        content:
          CSharp: public List<Vector2> boxColliderSizes
          VB: Public boxColliderSizes As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.Battle.BulletController.boxHitList
      commentId: F:UCT.Battle.BulletController.boxHitList
      language: CSharp
      name:
        CSharp: boxHitList
        VB: boxHitList
      nameWithType:
        CSharp: BulletController.boxHitList
        VB: BulletController.boxHitList
      qualifiedName:
        CSharp: UCT.Battle.BulletController.boxHitList
        VB: UCT.Battle.BulletController.boxHitList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: boxHitList
        path: ''
        startLine: 7393
      syntax:
        content:
          CSharp: public List<int> boxHitList
          VB: Public boxHitList As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
    - id: UCT.Battle.BulletController.bulletColor
      commentId: F:UCT.Battle.BulletController.bulletColor
      language: CSharp
      name:
        CSharp: bulletColor
        VB: bulletColor
      nameWithType:
        CSharp: BulletController.bulletColor
        VB: BulletController.bulletColor
      qualifiedName:
        CSharp: UCT.Battle.BulletController.bulletColor
        VB: UCT.Battle.BulletController.bulletColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: bulletColor
        path: ''
        startLine: 7394
      syntax:
        content:
          CSharp: public BattleControl.BulletColor bulletColor
          VB: Public bulletColor As BattleControl.BulletColor
        return:
          type: Global.BattleControl.BulletColor
    - id: UCT.Battle.BulletController.followMode
      commentId: F:UCT.Battle.BulletController.followMode
      language: CSharp
      name:
        CSharp: followMode
        VB: followMode
      nameWithType:
        CSharp: BulletController.followMode
        VB: BulletController.followMode
      qualifiedName:
        CSharp: UCT.Battle.BulletController.followMode
        VB: UCT.Battle.BulletController.followMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: followMode
        path: ''
        startLine: 7396
      syntax:
        content:
          CSharp: public BulletController.FollowMode followMode
          VB: Public followMode As BulletController.FollowMode
        return:
          type: UCT.Battle.BulletController.FollowMode
    - id: UCT.Battle.BulletController.SetBullet(System.String,System.String,System.Nullable{UCT.Battle.InitialTransform},System.Nullable{BattleControl.BulletColor},System.Nullable{SpriteMaskInteraction})
      commentId: M:UCT.Battle.BulletController.SetBullet(System.String,System.String,System.Nullable{UCT.Battle.InitialTransform},System.Nullable{BattleControl.BulletColor},System.Nullable{SpriteMaskInteraction})
      language: CSharp
      name:
        CSharp: SetBullet(string, string, InitialTransform?, BulletColor?, SpriteMaskInteraction?)
        VB: SetBullet(String, String, InitialTransform?, BulletColor?, SpriteMaskInteraction?)
      nameWithType:
        CSharp: BulletController.SetBullet(string, string, InitialTransform?, BattleControl.BulletColor?, SpriteMaskInteraction?)
        VB: BulletController.SetBullet(String, String, InitialTransform?, BattleControl.BulletColor?, SpriteMaskInteraction?)
      qualifiedName:
        CSharp: UCT.Battle.BulletController.SetBullet(string, string, UCT.Battle.InitialTransform?, BattleControl.BulletColor?, SpriteMaskInteraction?)
        VB: UCT.Battle.BulletController.SetBullet(String, String, UCT.Battle.InitialTransform?, BattleControl.BulletColor?, SpriteMaskInteraction?)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: SetBullet
        path: ''
        startLine: 7505
      syntax:
        content:
          CSharp: public void SetBullet(string bulletPathName, string objName = null, InitialTransform? initialTransform = null, BattleControl.BulletColor? inputBulletColor = null, SpriteMaskInteraction? initialMask = null)
          VB: Public Sub SetBullet(bulletPathName As String, objName As String = Nothing, initialTransform As InitialTransform? = Nothing, inputBulletColor As BattleControl.BulletColor? = Nothing, initialMask As SpriteMaskInteraction? = Nothing)
        parameters:
        - id: bulletPathName
          type: System.String
        - id: objName
          type: System.String
        - id: initialTransform
          type: System.Nullable{UCT.Battle.InitialTransform}
        - id: inputBulletColor
          type: System.Nullable{BattleControl.BulletColor}
        - id: initialMask
          type: System.Nullable{SpriteMaskInteraction}
      overload: UCT.Battle.BulletController.SetBullet*
    - id: UCT.Battle.BulletController.SetYellowBulletHit(System.Action)
      commentId: M:UCT.Battle.BulletController.SetYellowBulletHit(System.Action)
      language: CSharp
      name:
        CSharp: SetYellowBulletHit(Action)
        VB: SetYellowBulletHit(Action)
      nameWithType:
        CSharp: BulletController.SetYellowBulletHit(Action)
        VB: BulletController.SetYellowBulletHit(Action)
      qualifiedName:
        CSharp: UCT.Battle.BulletController.SetYellowBulletHit(System.Action)
        VB: UCT.Battle.BulletController.SetYellowBulletHit(System.Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: SetYellowBulletHit
        path: ''
        startLine: 7602
      syntax:
        content:
          CSharp: public void SetYellowBulletHit(Action onYellowBulletHit)
          VB: Public Sub SetYellowBulletHit(onYellowBulletHit As Action)
        parameters:
        - id: onYellowBulletHit
          type: System.Action
      overload: UCT.Battle.BulletController.SetYellowBulletHit*
    - id: UCT.Battle.BulletController.SetGreenArrowHit(System.Action)
      commentId: M:UCT.Battle.BulletController.SetGreenArrowHit(System.Action)
      language: CSharp
      name:
        CSharp: SetGreenArrowHit(Action)
        VB: SetGreenArrowHit(Action)
      nameWithType:
        CSharp: BulletController.SetGreenArrowHit(Action)
        VB: BulletController.SetGreenArrowHit(Action)
      qualifiedName:
        CSharp: UCT.Battle.BulletController.SetGreenArrowHit(System.Action)
        VB: UCT.Battle.BulletController.SetGreenArrowHit(System.Action)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: SetGreenArrowHit
        path: ''
        startLine: 7607
      syntax:
        content:
          CSharp: public void SetGreenArrowHit(Action onGreenArrowHit)
          VB: Public Sub SetGreenArrowHit(onGreenArrowHit As Action)
        parameters:
        - id: onGreenArrowHit
          type: System.Action
      overload: UCT.Battle.BulletController.SetGreenArrowHit*
    - id: UCT.Battle.BulletController.SetMask(SpriteMaskInteraction)
      commentId: M:UCT.Battle.BulletController.SetMask(SpriteMaskInteraction)
      language: CSharp
      name:
        CSharp: SetMask(SpriteMaskInteraction)
        VB: SetMask(SpriteMaskInteraction)
      nameWithType:
        CSharp: BulletController.SetMask(SpriteMaskInteraction)
        VB: BulletController.SetMask(SpriteMaskInteraction)
      qualifiedName:
        CSharp: UCT.Battle.BulletController.SetMask(SpriteMaskInteraction)
        VB: UCT.Battle.BulletController.SetMask(SpriteMaskInteraction)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: SetMask
        path: ''
        startLine: 7653
      syntax:
        content:
          CSharp: public void SetMask(SpriteMaskInteraction spriteMaskInteraction)
          VB: Public Sub SetMask(spriteMaskInteraction As SpriteMaskInteraction)
        parameters:
        - id: spriteMaskInteraction
          type: Global.SpriteMaskInteraction
      overload: UCT.Battle.BulletController.SetMask*
  - id: UCT.Battle.BulletController.FollowMode
    commentId: T:UCT.Battle.BulletController.FollowMode
    language: CSharp
    name:
      CSharp: BulletController.FollowMode
      VB: BulletController.FollowMode
    nameWithType:
      CSharp: BulletController.FollowMode
      VB: BulletController.FollowMode
    qualifiedName:
      CSharp: UCT.Battle.BulletController.FollowMode
      VB: UCT.Battle.BulletController.FollowMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: FollowMode
      path: ''
      startLine: 7380
    summary: "\n设置碰撞箱跟随SpriteRenderer缩放的模式。\nCutFollow:切去boxColliderSizes内存储的数据；\nNoFollow:不跟随缩放。\n"
    example: []
    syntax:
      content:
        CSharp: public enum BulletController.FollowMode
        VB: Public Enum BulletController.FollowMode
    items:
    - id: UCT.Battle.BulletController.FollowMode.CutFollow
      commentId: F:UCT.Battle.BulletController.FollowMode.CutFollow
      language: CSharp
      name:
        CSharp: CutFollow
        VB: CutFollow
      nameWithType:
        CSharp: BulletController.FollowMode.CutFollow
        VB: BulletController.FollowMode.CutFollow
      qualifiedName:
        CSharp: UCT.Battle.BulletController.FollowMode.CutFollow
        VB: UCT.Battle.BulletController.FollowMode.CutFollow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: CutFollow
        path: ''
        startLine: 7382
      syntax:
        content:
          CSharp: CutFollow = 0
          VB: CutFollow = 0
        return:
          type: UCT.Battle.BulletController.FollowMode
    - id: UCT.Battle.BulletController.FollowMode.NoFollow
      commentId: F:UCT.Battle.BulletController.FollowMode.NoFollow
      language: CSharp
      name:
        CSharp: NoFollow
        VB: NoFollow
      nameWithType:
        CSharp: BulletController.FollowMode.NoFollow
        VB: BulletController.FollowMode.NoFollow
      qualifiedName:
        CSharp: UCT.Battle.BulletController.FollowMode.NoFollow
        VB: UCT.Battle.BulletController.FollowMode.NoFollow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: NoFollow
        path: ''
        startLine: 7383
      syntax:
        content:
          CSharp: NoFollow = 1
          VB: NoFollow = 1
        return:
          type: UCT.Battle.BulletController.FollowMode
  - id: UCT.Battle.CameraShake
    commentId: T:UCT.Battle.CameraShake
    language: CSharp
    name:
      CSharp: CameraShake
      VB: CameraShake
    nameWithType:
      CSharp: CameraShake
      VB: CameraShake
    qualifiedName:
      CSharp: UCT.Battle.CameraShake
      VB: UCT.Battle.CameraShake
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: CameraShake
      path: ''
      startLine: 7699
    syntax:
      content:
        CSharp: 'public class CameraShake : MonoBehaviour'
        VB: Public Class CameraShake Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.CameraShake.moveWithHeart
      commentId: F:UCT.Battle.CameraShake.moveWithHeart
      language: CSharp
      name:
        CSharp: moveWithHeart
        VB: moveWithHeart
      nameWithType:
        CSharp: CameraShake.moveWithHeart
        VB: CameraShake.moveWithHeart
      qualifiedName:
        CSharp: UCT.Battle.CameraShake.moveWithHeart
        VB: UCT.Battle.CameraShake.moveWithHeart
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: moveWithHeart
        path: ''
        startLine: 7701
      syntax:
        content:
          CSharp: public bool moveWithHeart
          VB: Public moveWithHeart As Boolean
        return:
          type: System.Boolean
    - id: UCT.Battle.CameraShake.heartBasicPos
      commentId: F:UCT.Battle.CameraShake.heartBasicPos
      language: CSharp
      name:
        CSharp: heartBasicPos
        VB: heartBasicPos
      nameWithType:
        CSharp: CameraShake.heartBasicPos
        VB: CameraShake.heartBasicPos
      qualifiedName:
        CSharp: UCT.Battle.CameraShake.heartBasicPos
        VB: UCT.Battle.CameraShake.heartBasicPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: heartBasicPos
        path: ''
        startLine: 7702
      syntax:
        content:
          CSharp: public Vector3 heartBasicPos
          VB: Public heartBasicPos As Vector3
        return:
          type: Global.Vector3
    - id: UCT.Battle.CameraShake.moveExtent
      commentId: F:UCT.Battle.CameraShake.moveExtent
      language: CSharp
      name:
        CSharp: moveExtent
        VB: moveExtent
      nameWithType:
        CSharp: CameraShake.moveExtent
        VB: CameraShake.moveExtent
      qualifiedName:
        CSharp: UCT.Battle.CameraShake.moveExtent
        VB: UCT.Battle.CameraShake.moveExtent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: moveExtent
        path: ''
        startLine: 7705
      syntax:
        content:
          CSharp: public Vector2 moveExtent
          VB: Public moveExtent As Vector2
        return:
          type: Global.Vector2
    - id: UCT.Battle.CameraShake.Shake(Vector3,Vector3,System.Int32,System.Single,System.String,Ease,Ease)
      commentId: M:UCT.Battle.CameraShake.Shake(Vector3,Vector3,System.Int32,System.Single,System.String,Ease,Ease)
      language: CSharp
      name:
        CSharp: Shake(Vector3, Vector3, int, float, string, Ease, Ease)
        VB: Shake(Vector3, Vector3, Integer, Single, String, Ease, Ease)
      nameWithType:
        CSharp: CameraShake.Shake(Vector3, Vector3, int, float, string, Ease, Ease)
        VB: CameraShake.Shake(Vector3, Vector3, Integer, Single, String, Ease, Ease)
      qualifiedName:
        CSharp: UCT.Battle.CameraShake.Shake(Vector3, Vector3, int, float, string, Ease, Ease)
        VB: UCT.Battle.CameraShake.Shake(Vector3, Vector3, Integer, Single, String, Ease, Ease)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Shake
        path: ''
        startLine: 7742
      summary: "\n摄像机摇晃\nloops会自动转换为偶数。\n"
      example: []
      syntax:
        content:
          CSharp: public void Shake(Vector3 v3Move, Vector3 v3Spin, int loops = 4, float shakeTime = 0.06666667, string getSon = "", Ease easeMove = null, Ease easeSpin = null)
          VB: Public Sub Shake(v3Move As Vector3, v3Spin As Vector3, loops As Integer = 4, shakeTime As Single = 0.06666667, getSon As String = "", easeMove As Ease = Nothing, easeSpin As Ease = Nothing)
        parameters:
        - id: v3Move
          type: Global.Vector3
        - id: v3Spin
          type: Global.Vector3
        - id: loops
          type: System.Int32
        - id: shakeTime
          type: System.Single
        - id: getSon
          type: System.String
        - id: easeMove
          type: Global.Ease
        - id: easeSpin
          type: Global.Ease
      overload: UCT.Battle.CameraShake.Shake*
  - id: UCT.Battle.DialogBubbleBehaviour
    commentId: T:UCT.Battle.DialogBubbleBehaviour
    language: CSharp
    name:
      CSharp: DialogBubbleBehaviour
      VB: DialogBubbleBehaviour
    nameWithType:
      CSharp: DialogBubbleBehaviour
      VB: DialogBubbleBehaviour
    qualifiedName:
      CSharp: UCT.Battle.DialogBubbleBehaviour
      VB: UCT.Battle.DialogBubbleBehaviour
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: DialogBubbleBehaviour
      path: ''
      startLine: 7785
    summary: "\n战斗内敌人对话气泡控制\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DialogBubbleBehaviour : MonoBehaviour'
        VB: Public Class DialogBubbleBehaviour Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.DialogBubbleBehaviour.position
      commentId: F:UCT.Battle.DialogBubbleBehaviour.position
      language: CSharp
      name:
        CSharp: position
        VB: position
      nameWithType:
        CSharp: DialogBubbleBehaviour.position
        VB: DialogBubbleBehaviour.position
      qualifiedName:
        CSharp: UCT.Battle.DialogBubbleBehaviour.position
        VB: UCT.Battle.DialogBubbleBehaviour.position
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: position
        path: ''
        startLine: 7788
      syntax:
        content:
          CSharp: public Vector2 position
          VB: Public position As Vector2
        return:
          type: Global.Vector2
    - id: UCT.Battle.DialogBubbleBehaviour.size
      commentId: F:UCT.Battle.DialogBubbleBehaviour.size
      language: CSharp
      name:
        CSharp: size
        VB: size
      nameWithType:
        CSharp: DialogBubbleBehaviour.size
        VB: DialogBubbleBehaviour.size
      qualifiedName:
        CSharp: UCT.Battle.DialogBubbleBehaviour.size
        VB: UCT.Battle.DialogBubbleBehaviour.size
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: size
        path: ''
        startLine: 7788
      syntax:
        content:
          CSharp: public Vector2 size
          VB: Public size As Vector2
        return:
          type: Global.Vector2
    - id: UCT.Battle.DialogBubbleBehaviour.isBackRight
      commentId: F:UCT.Battle.DialogBubbleBehaviour.isBackRight
      language: CSharp
      name:
        CSharp: isBackRight
        VB: isBackRight
      nameWithType:
        CSharp: DialogBubbleBehaviour.isBackRight
        VB: DialogBubbleBehaviour.isBackRight
      qualifiedName:
        CSharp: UCT.Battle.DialogBubbleBehaviour.isBackRight
        VB: UCT.Battle.DialogBubbleBehaviour.isBackRight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: isBackRight
        path: ''
        startLine: 7790
      syntax:
        content:
          CSharp: public bool isBackRight
          VB: Public isBackRight As Boolean
        return:
          type: System.Boolean
    - id: UCT.Battle.DialogBubbleBehaviour.backY
      commentId: F:UCT.Battle.DialogBubbleBehaviour.backY
      language: CSharp
      name:
        CSharp: backY
        VB: backY
      nameWithType:
        CSharp: DialogBubbleBehaviour.backY
        VB: DialogBubbleBehaviour.backY
      qualifiedName:
        CSharp: UCT.Battle.DialogBubbleBehaviour.backY
        VB: UCT.Battle.DialogBubbleBehaviour.backY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: backY
        path: ''
        startLine: 7792
      syntax:
        content:
          CSharp: public float backY
          VB: Public backY As Single
        return:
          type: System.Single
    - id: UCT.Battle.DialogBubbleBehaviour.typeWritter
      commentId: F:UCT.Battle.DialogBubbleBehaviour.typeWritter
      language: CSharp
      name:
        CSharp: typeWritter
        VB: typeWritter
      nameWithType:
        CSharp: DialogBubbleBehaviour.typeWritter
        VB: DialogBubbleBehaviour.typeWritter
      qualifiedName:
        CSharp: UCT.Battle.DialogBubbleBehaviour.typeWritter
        VB: UCT.Battle.DialogBubbleBehaviour.typeWritter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: typeWritter
        path: ''
        startLine: 7794
      syntax:
        content:
          CSharp: public TypeWritter typeWritter
          VB: Public typeWritter As TypeWritter
        return:
          type: Global.TypeWritter
    - id: UCT.Battle.DialogBubbleBehaviour.tmp
      commentId: F:UCT.Battle.DialogBubbleBehaviour.tmp
      language: CSharp
      name:
        CSharp: tmp
        VB: tmp
      nameWithType:
        CSharp: DialogBubbleBehaviour.tmp
        VB: DialogBubbleBehaviour.tmp
      qualifiedName:
        CSharp: UCT.Battle.DialogBubbleBehaviour.tmp
        VB: UCT.Battle.DialogBubbleBehaviour.tmp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: tmp
        path: ''
        startLine: 7796
      syntax:
        content:
          CSharp: public TextMeshPro tmp
          VB: Public tmp As TextMeshPro
        return:
          type: Global.TextMeshPro
    - id: UCT.Battle.DialogBubbleBehaviour.delay
      commentId: F:UCT.Battle.DialogBubbleBehaviour.delay
      language: CSharp
      name:
        CSharp: delay
        VB: delay
      nameWithType:
        CSharp: DialogBubbleBehaviour.delay
        VB: DialogBubbleBehaviour.delay
      qualifiedName:
        CSharp: UCT.Battle.DialogBubbleBehaviour.delay
        VB: UCT.Battle.DialogBubbleBehaviour.delay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: delay
        path: ''
        startLine: 7798
      syntax:
        content:
          CSharp: public float delay
          VB: Public delay As Single
        return:
          type: System.Single
    - id: UCT.Battle.DialogBubbleBehaviour.Message
      commentId: F:UCT.Battle.DialogBubbleBehaviour.Message
      language: CSharp
      name:
        CSharp: Message
        VB: Message
      nameWithType:
        CSharp: DialogBubbleBehaviour.Message
        VB: DialogBubbleBehaviour.Message
      qualifiedName:
        CSharp: UCT.Battle.DialogBubbleBehaviour.Message
        VB: UCT.Battle.DialogBubbleBehaviour.Message
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Message
        path: ''
        startLine: 7799
      syntax:
        content:
          CSharp: public EnemiesXmlDialogParser.Message Message
          VB: Public Message As EnemiesXmlDialogParser.Message
        return:
          type: Global.EnemiesXmlDialogParser.Message
    - id: UCT.Battle.DialogBubbleBehaviour.PositionChange
      commentId: M:UCT.Battle.DialogBubbleBehaviour.PositionChange
      language: CSharp
      name:
        CSharp: PositionChange()
        VB: PositionChange()
      nameWithType:
        CSharp: DialogBubbleBehaviour.PositionChange()
        VB: DialogBubbleBehaviour.PositionChange()
      qualifiedName:
        CSharp: UCT.Battle.DialogBubbleBehaviour.PositionChange()
        VB: UCT.Battle.DialogBubbleBehaviour.PositionChange()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: PositionChange
        path: ''
        startLine: 7818
      summary: "\n改变气泡的大小和左右箭头情况 进行赋值 之类的\n"
      example: []
      syntax:
        content:
          CSharp: public void PositionChange()
          VB: Public Sub PositionChange()
      overload: UCT.Battle.DialogBubbleBehaviour.PositionChange*
  - id: UCT.Battle.BulletResourceManager
    commentId: T:UCT.Battle.BulletResourceManager
    language: CSharp
    name:
      CSharp: BulletResourceManager
      VB: BulletResourceManager
    nameWithType:
      CSharp: BulletResourceManager
      VB: BulletResourceManager
    qualifiedName:
      CSharp: UCT.Battle.BulletResourceManager
      VB: UCT.Battle.BulletResourceManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: BulletResourceManager
      path: ''
      startLine: 7835
    syntax:
      content:
        CSharp: public static class BulletResourceManager
        VB: Public Module BulletResourceManager
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.BulletResourceManager.LoadBullet(System.String)
      commentId: M:UCT.Battle.BulletResourceManager.LoadBullet(System.String)
      language: CSharp
      name:
        CSharp: LoadBullet(string)
        VB: LoadBullet(String)
      nameWithType:
        CSharp: BulletResourceManager.LoadBullet(string)
        VB: BulletResourceManager.LoadBullet(String)
      qualifiedName:
        CSharp: UCT.Battle.BulletResourceManager.LoadBullet(string)
        VB: UCT.Battle.BulletResourceManager.LoadBullet(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: LoadBullet
        path: ''
        startLine: 7839
      syntax:
        content:
          CSharp: public static BulletControl LoadBullet(string bulletPathName)
          VB: Public Shared Function LoadBullet(bulletPathName As String) As BulletControl
        parameters:
        - id: bulletPathName
          type: System.String
        return:
          type: Global.BulletControl
      overload: UCT.Battle.BulletResourceManager.LoadBullet*
  - id: UCT.Battle.EnemiesHpLineController
    commentId: T:UCT.Battle.EnemiesHpLineController
    language: CSharp
    name:
      CSharp: EnemiesHpLineController
      VB: EnemiesHpLineController
    nameWithType:
      CSharp: EnemiesHpLineController
      VB: EnemiesHpLineController
    qualifiedName:
      CSharp: UCT.Battle.EnemiesHpLineController
      VB: UCT.Battle.EnemiesHpLineController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: EnemiesHpLineController
      path: ''
      startLine: 7867
    syntax:
      content:
        CSharp: 'public class EnemiesHpLineController : MonoBehaviour'
        VB: Public Class EnemiesHpLineController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.EnemiesHpLineController.enemyId
      commentId: F:UCT.Battle.EnemiesHpLineController.enemyId
      language: CSharp
      name:
        CSharp: enemyId
        VB: enemyId
      nameWithType:
        CSharp: EnemiesHpLineController.enemyId
        VB: EnemiesHpLineController.enemyId
      qualifiedName:
        CSharp: UCT.Battle.EnemiesHpLineController.enemyId
        VB: UCT.Battle.EnemiesHpLineController.enemyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: enemyId
        path: ''
        startLine: 7870
      syntax:
        content:
          CSharp: public int enemyId
          VB: Public enemyId As Integer
        return:
          type: System.Int32
  - id: UCT.Battle.YellowBulletController
    commentId: T:UCT.Battle.YellowBulletController
    language: CSharp
    name:
      CSharp: YellowBulletController
      VB: YellowBulletController
    nameWithType:
      CSharp: YellowBulletController
      VB: YellowBulletController
    qualifiedName:
      CSharp: UCT.Battle.YellowBulletController
      VB: UCT.Battle.YellowBulletController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: YellowBulletController
      path: ''
      startLine: 7926
    syntax:
      content:
        CSharp: 'public class YellowBulletController : MonoBehaviour'
        VB: Public Class YellowBulletController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.YellowBulletController.OnKill
      commentId: F:UCT.Battle.YellowBulletController.OnKill
      language: CSharp
      name:
        CSharp: OnKill
        VB: OnKill
      nameWithType:
        CSharp: YellowBulletController.OnKill
        VB: YellowBulletController.OnKill
      qualifiedName:
        CSharp: UCT.Battle.YellowBulletController.OnKill
        VB: UCT.Battle.YellowBulletController.OnKill
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: OnKill
        path: ''
        startLine: 7928
      syntax:
        content:
          CSharp: public Action OnKill
          VB: Public OnKill As Action
        return:
          type: System.Action
  - id: UCT.Battle.BoardController
    commentId: T:UCT.Battle.BoardController
    language: CSharp
    name:
      CSharp: BoardController
      VB: BoardController
    nameWithType:
      CSharp: BoardController
      VB: BoardController
    qualifiedName:
      CSharp: UCT.Battle.BoardController
      VB: UCT.Battle.BoardController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: BoardController
      path: ''
      startLine: 7950
    summary: "\n设定挡板，具体数据在BattlePlayerController内控制\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BoardController : MonoBehaviour'
        VB: Public Class BoardController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.BoardController.width
      commentId: F:UCT.Battle.BoardController.width
      language: CSharp
      name:
        CSharp: width
        VB: width
      nameWithType:
        CSharp: BoardController.width
        VB: BoardController.width
      qualifiedName:
        CSharp: UCT.Battle.BoardController.width
        VB: UCT.Battle.BoardController.width
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: width
        path: ''
        startLine: 7953
      syntax:
        content:
          CSharp: public float width
          VB: Public width As Single
        return:
          type: System.Single
    - id: UCT.Battle.BoardController.canMove
      commentId: F:UCT.Battle.BoardController.canMove
      language: CSharp
      name:
        CSharp: canMove
        VB: canMove
      nameWithType:
        CSharp: BoardController.canMove
        VB: BoardController.canMove
      qualifiedName:
        CSharp: UCT.Battle.BoardController.canMove
        VB: UCT.Battle.BoardController.canMove
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: canMove
        path: ''
        startLine: 7956
      syntax:
        content:
          CSharp: public bool canMove
          VB: Public canMove As Boolean
        return:
          type: System.Boolean
    - id: UCT.Battle.BoardController.keepEdge
      commentId: F:UCT.Battle.BoardController.keepEdge
      language: CSharp
      name:
        CSharp: keepEdge
        VB: keepEdge
      nameWithType:
        CSharp: BoardController.keepEdge
        VB: BoardController.keepEdge
      qualifiedName:
        CSharp: UCT.Battle.BoardController.keepEdge
        VB: UCT.Battle.BoardController.keepEdge
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: keepEdge
        path: ''
        startLine: 7959
      syntax:
        content:
          CSharp: public bool keepEdge
          VB: Public keepEdge As Boolean
        return:
          type: System.Boolean
    - id: UCT.Battle.BoardController.boardSprites
      commentId: F:UCT.Battle.BoardController.boardSprites
      language: CSharp
      name:
        CSharp: boardSprites
        VB: boardSprites
      nameWithType:
        CSharp: BoardController.boardSprites
        VB: BoardController.boardSprites
      qualifiedName:
        CSharp: UCT.Battle.BoardController.boardSprites
        VB: UCT.Battle.BoardController.boardSprites
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: boardSprites
        path: ''
        startLine: 7961
      syntax:
        content:
          CSharp: public List<Sprite> boardSprites
          VB: Public boardSprites As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
  - id: UCT.Battle.SelectUIController
    commentId: T:UCT.Battle.SelectUIController
    language: CSharp
    name:
      CSharp: SelectUIController
      VB: SelectUIController
    nameWithType:
      CSharp: SelectUIController
      VB: SelectUIController
    qualifiedName:
      CSharp: UCT.Battle.SelectUIController
      VB: UCT.Battle.SelectUIController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: SelectUIController
      path: ''
      startLine: 8085
    summary: "\nBattle场景中的UI控制器\n也负责玩家回合的控制\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SelectUIController : MonoBehaviour'
        VB: Public Class SelectUIController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.SelectUIController.hpColorUnder
      commentId: F:UCT.Battle.SelectUIController.hpColorUnder
      language: CSharp
      name:
        CSharp: hpColorUnder
        VB: hpColorUnder
      nameWithType:
        CSharp: SelectUIController.hpColorUnder
        VB: SelectUIController.hpColorUnder
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.hpColorUnder
        VB: UCT.Battle.SelectUIController.hpColorUnder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: hpColorUnder
        path: ''
        startLine: 8143
      syntax:
        content:
          CSharp: public Color hpColorUnder
          VB: Public hpColorUnder As Color
        return:
          type: Global.Color
    - id: UCT.Battle.SelectUIController.hpColorOn
      commentId: F:UCT.Battle.SelectUIController.hpColorOn
      language: CSharp
      name:
        CSharp: hpColorOn
        VB: hpColorOn
      nameWithType:
        CSharp: SelectUIController.hpColorOn
        VB: SelectUIController.hpColorOn
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.hpColorOn
        VB: UCT.Battle.SelectUIController.hpColorOn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: hpColorOn
        path: ''
        startLine: 8145
      syntax:
        content:
          CSharp: public Color hpColorOn
          VB: Public hpColorOn As Color
        return:
          type: Global.Color
    - id: UCT.Battle.SelectUIController.hpColorHit
      commentId: F:UCT.Battle.SelectUIController.hpColorHit
      language: CSharp
      name:
        CSharp: hpColorHit
        VB: hpColorHit
      nameWithType:
        CSharp: SelectUIController.hpColorHit
        VB: SelectUIController.hpColorHit
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.hpColorHit
        VB: UCT.Battle.SelectUIController.hpColorHit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: hpColorHit
        path: ''
        startLine: 8147
      syntax:
        content:
          CSharp: public Color hpColorHit
          VB: Public hpColorHit As Color
        return:
          type: Global.Color
    - id: UCT.Battle.SelectUIController.spriteUI
      commentId: F:UCT.Battle.SelectUIController.spriteUI
      language: CSharp
      name:
        CSharp: spriteUI
        VB: spriteUI
      nameWithType:
        CSharp: SelectUIController.spriteUI
        VB: SelectUIController.spriteUI
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.spriteUI
        VB: UCT.Battle.SelectUIController.spriteUI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: spriteUI
        path: ''
        startLine: 8150
      syntax:
        content:
          CSharp: public List<Sprite> spriteUI
          VB: Public spriteUI As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
    - id: UCT.Battle.SelectUIController.buttons
      commentId: F:UCT.Battle.SelectUIController.buttons
      language: CSharp
      name:
        CSharp: buttons
        VB: buttons
      nameWithType:
        CSharp: SelectUIController.buttons
        VB: SelectUIController.buttons
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.buttons
        VB: UCT.Battle.SelectUIController.buttons
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: buttons
        path: ''
        startLine: 8152
      syntax:
        content:
          CSharp: public List<SpriteRenderer> buttons
          VB: Public buttons As List(Of SpriteRenderer)
        return:
          type: System.Collections.Generic.List{SpriteRenderer}
    - id: UCT.Battle.SelectUIController.selectedButton
      commentId: F:UCT.Battle.SelectUIController.selectedButton
      language: CSharp
      name:
        CSharp: selectedButton
        VB: selectedButton
      nameWithType:
        CSharp: SelectUIController.selectedButton
        VB: SelectUIController.selectedButton
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.selectedButton
        VB: UCT.Battle.SelectUIController.selectedButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: selectedButton
        path: ''
        startLine: 8156
      syntax:
        content:
          CSharp: public SelectUIController.SelectedButton selectedButton
          VB: Public selectedButton As SelectUIController.SelectedButton
        return:
          type: UCT.Battle.SelectUIController.SelectedButton
    - id: UCT.Battle.SelectUIController.selectedLayer
      commentId: F:UCT.Battle.SelectUIController.selectedLayer
      language: CSharp
      name:
        CSharp: selectedLayer
        VB: selectedLayer
      nameWithType:
        CSharp: SelectUIController.selectedLayer
        VB: SelectUIController.selectedLayer
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.selectedLayer
        VB: UCT.Battle.SelectUIController.selectedLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: selectedLayer
        path: ''
        startLine: 8159
      syntax:
        content:
          CSharp: public SelectUIController.SelectedLayer selectedLayer
          VB: Public selectedLayer As SelectUIController.SelectedLayer
        return:
          type: UCT.Battle.SelectUIController.SelectedLayer
    - id: UCT.Battle.SelectUIController.nameLayerIndex
      commentId: F:UCT.Battle.SelectUIController.nameLayerIndex
      language: CSharp
      name:
        CSharp: nameLayerIndex
        VB: nameLayerIndex
      nameWithType:
        CSharp: SelectUIController.nameLayerIndex
        VB: SelectUIController.nameLayerIndex
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.nameLayerIndex
        VB: UCT.Battle.SelectUIController.nameLayerIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: nameLayerIndex
        path: ''
        startLine: 8162
      syntax:
        content:
          CSharp: public int nameLayerIndex
          VB: Public nameLayerIndex As Integer
        return:
          type: System.Int32
    - id: UCT.Battle.SelectUIController.optionLayerIndex
      commentId: F:UCT.Battle.SelectUIController.optionLayerIndex
      language: CSharp
      name:
        CSharp: optionLayerIndex
        VB: optionLayerIndex
      nameWithType:
        CSharp: SelectUIController.optionLayerIndex
        VB: SelectUIController.optionLayerIndex
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.optionLayerIndex
        VB: UCT.Battle.SelectUIController.optionLayerIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: optionLayerIndex
        path: ''
        startLine: 8165
      syntax:
        content:
          CSharp: public int optionLayerIndex
          VB: Public optionLayerIndex As Integer
        return:
          type: System.Int32
    - id: UCT.Battle.SelectUIController.optionsSave
      commentId: F:UCT.Battle.SelectUIController.optionsSave
      language: CSharp
      name:
        CSharp: optionsSave
        VB: optionsSave
      nameWithType:
        CSharp: SelectUIController.optionsSave
        VB: SelectUIController.optionsSave
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.optionsSave
        VB: UCT.Battle.SelectUIController.optionsSave
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: optionsSave
        path: ''
        startLine: 8167
      syntax:
        content:
          CSharp: public List<string> optionsSave
          VB: Public optionsSave As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.Battle.SelectUIController.enemiesControllers
      commentId: F:UCT.Battle.SelectUIController.enemiesControllers
      language: CSharp
      name:
        CSharp: enemiesControllers
        VB: enemiesControllers
      nameWithType:
        CSharp: SelectUIController.enemiesControllers
        VB: SelectUIController.enemiesControllers
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.enemiesControllers
        VB: UCT.Battle.SelectUIController.enemiesControllers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: enemiesControllers
        path: ''
        startLine: 8169
      syntax:
        content:
          CSharp: public List<EnemiesController> enemiesControllers
          VB: Public enemiesControllers As List(Of EnemiesController)
        return:
          type: System.Collections.Generic.List{UCT.Battle.EnemiesController}
    - id: UCT.Battle.SelectUIController.projectionBoxes
      commentId: F:UCT.Battle.SelectUIController.projectionBoxes
      language: CSharp
      name:
        CSharp: projectionBoxes
        VB: projectionBoxes
      nameWithType:
        CSharp: SelectUIController.projectionBoxes
        VB: SelectUIController.projectionBoxes
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.projectionBoxes
        VB: UCT.Battle.SelectUIController.projectionBoxes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: projectionBoxes
        path: ''
        startLine: 8171
      syntax:
        content:
          CSharp: public GameObject projectionBoxes
          VB: Public projectionBoxes As GameObject
        return:
          type: Global.GameObject
    - id: UCT.Battle.SelectUIController.PlayerLineController
      commentId: P:UCT.Battle.SelectUIController.PlayerLineController
      language: CSharp
      name:
        CSharp: PlayerLineController
        VB: PlayerLineController
      nameWithType:
        CSharp: SelectUIController.PlayerLineController
        VB: SelectUIController.PlayerLineController
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.PlayerLineController
        VB: UCT.Battle.SelectUIController.PlayerLineController
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: PlayerLineController
        path: ''
        startLine: 8196
      syntax:
        content:
          CSharp: public PlayerLineController PlayerLineController { get; }
          VB: Public Property PlayerLineController As PlayerLineController
        parameters: []
        return:
          type: UCT.Battle.PlayerLineController
      overload: UCT.Battle.SelectUIController.PlayerLineController*
    - id: UCT.Battle.SelectUIController.EnterPlayerTurn
      commentId: M:UCT.Battle.SelectUIController.EnterPlayerTurn
      language: CSharp
      name:
        CSharp: EnterPlayerTurn()
        VB: EnterPlayerTurn()
      nameWithType:
        CSharp: SelectUIController.EnterPlayerTurn()
        VB: SelectUIController.EnterPlayerTurn()
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.EnterPlayerTurn()
        VB: UCT.Battle.SelectUIController.EnterPlayerTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: EnterPlayerTurn
        path: ''
        startLine: 8556
      summary: "\n进我方回合\n"
      example: []
      syntax:
        content:
          CSharp: public void EnterPlayerTurn()
          VB: Public Sub EnterPlayerTurn()
      overload: UCT.Battle.SelectUIController.EnterPlayerTurn*
    - id: UCT.Battle.SelectUIController.UITextUpdate(UCT.Battle.SelectUIController.UITextMode,System.Int32)
      commentId: M:UCT.Battle.SelectUIController.UITextUpdate(UCT.Battle.SelectUIController.UITextMode,System.Int32)
      language: CSharp
      name:
        CSharp: UITextUpdate(UITextMode, int)
        VB: UITextUpdate(UITextMode, Integer)
      nameWithType:
        CSharp: SelectUIController.UITextUpdate(SelectUIController.UITextMode, int)
        VB: SelectUIController.UITextUpdate(SelectUIController.UITextMode, Integer)
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.UITextUpdate(UCT.Battle.SelectUIController.UITextMode, int)
        VB: UCT.Battle.SelectUIController.UITextUpdate(UCT.Battle.SelectUIController.UITextMode, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: UITextUpdate
        path: ''
        startLine: 9690
      summary: "\n更新UI文字与血条\n"
      example: []
      syntax:
        content:
          CSharp: public void UITextUpdate(SelectUIController.UITextMode uiTextMode = UITextMode.None, int foodValue = 0)
          VB: Public Sub UITextUpdate(uiTextMode As SelectUIController.UITextMode = UITextMode.None, foodValue As Integer = 0)
        parameters:
        - id: uiTextMode
          type: UCT.Battle.SelectUIController.UITextMode
        - id: foodValue
          type: System.Int32
      overload: UCT.Battle.SelectUIController.UITextUpdate*
  - id: UCT.Battle.SelectUIController.SelectedButton
    commentId: T:UCT.Battle.SelectUIController.SelectedButton
    language: CSharp
    name:
      CSharp: SelectUIController.SelectedButton
      VB: SelectUIController.SelectedButton
    nameWithType:
      CSharp: SelectUIController.SelectedButton
      VB: SelectUIController.SelectedButton
    qualifiedName:
      CSharp: UCT.Battle.SelectUIController.SelectedButton
      VB: UCT.Battle.SelectUIController.SelectedButton
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: SelectedButton
      path: ''
      startLine: 8087
    syntax:
      content:
        CSharp: public enum SelectUIController.SelectedButton
        VB: Public Enum SelectUIController.SelectedButton
    items:
    - id: UCT.Battle.SelectUIController.SelectedButton.Fight
      commentId: F:UCT.Battle.SelectUIController.SelectedButton.Fight
      language: CSharp
      name:
        CSharp: Fight
        VB: Fight
      nameWithType:
        CSharp: SelectUIController.SelectedButton.Fight
        VB: SelectUIController.SelectedButton.Fight
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.SelectedButton.Fight
        VB: UCT.Battle.SelectUIController.SelectedButton.Fight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Fight
        path: ''
        startLine: 8089
      syntax:
        content:
          CSharp: Fight = 0
          VB: Fight = 0
        return:
          type: UCT.Battle.SelectUIController.SelectedButton
    - id: UCT.Battle.SelectUIController.SelectedButton.Act
      commentId: F:UCT.Battle.SelectUIController.SelectedButton.Act
      language: CSharp
      name:
        CSharp: Act
        VB: Act
      nameWithType:
        CSharp: SelectUIController.SelectedButton.Act
        VB: SelectUIController.SelectedButton.Act
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.SelectedButton.Act
        VB: UCT.Battle.SelectUIController.SelectedButton.Act
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Act
        path: ''
        startLine: 8090
      syntax:
        content:
          CSharp: Act = 1
          VB: Act = 1
        return:
          type: UCT.Battle.SelectUIController.SelectedButton
    - id: UCT.Battle.SelectUIController.SelectedButton.Item
      commentId: F:UCT.Battle.SelectUIController.SelectedButton.Item
      language: CSharp
      name:
        CSharp: Item
        VB: Item
      nameWithType:
        CSharp: SelectUIController.SelectedButton.Item
        VB: SelectUIController.SelectedButton.Item
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.SelectedButton.Item
        VB: UCT.Battle.SelectUIController.SelectedButton.Item
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Item
        path: ''
        startLine: 8091
      syntax:
        content:
          CSharp: Item = 2
          VB: Item = 2
        return:
          type: UCT.Battle.SelectUIController.SelectedButton
    - id: UCT.Battle.SelectUIController.SelectedButton.Mercy
      commentId: F:UCT.Battle.SelectUIController.SelectedButton.Mercy
      language: CSharp
      name:
        CSharp: Mercy
        VB: Mercy
      nameWithType:
        CSharp: SelectUIController.SelectedButton.Mercy
        VB: SelectUIController.SelectedButton.Mercy
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.SelectedButton.Mercy
        VB: UCT.Battle.SelectUIController.SelectedButton.Mercy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Mercy
        path: ''
        startLine: 8092
      syntax:
        content:
          CSharp: Mercy = 3
          VB: Mercy = 3
        return:
          type: UCT.Battle.SelectUIController.SelectedButton
  - id: UCT.Battle.SelectUIController.SelectedLayer
    commentId: T:UCT.Battle.SelectUIController.SelectedLayer
    language: CSharp
    name:
      CSharp: SelectUIController.SelectedLayer
      VB: SelectUIController.SelectedLayer
    nameWithType:
      CSharp: SelectUIController.SelectedLayer
      VB: SelectUIController.SelectedLayer
    qualifiedName:
      CSharp: UCT.Battle.SelectUIController.SelectedLayer
      VB: UCT.Battle.SelectUIController.SelectedLayer
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: SelectedLayer
      path: ''
      startLine: 8098
    summary: "\n表示当前选择的界面层。\n"
    example: []
    syntax:
      content:
        CSharp: public enum SelectUIController.SelectedLayer
        VB: Public Enum SelectUIController.SelectedLayer
    items:
    - id: UCT.Battle.SelectUIController.SelectedLayer.ButtonLayer
      commentId: F:UCT.Battle.SelectUIController.SelectedLayer.ButtonLayer
      language: CSharp
      name:
        CSharp: ButtonLayer
        VB: ButtonLayer
      nameWithType:
        CSharp: SelectUIController.SelectedLayer.ButtonLayer
        VB: SelectUIController.SelectedLayer.ButtonLayer
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.SelectedLayer.ButtonLayer
        VB: UCT.Battle.SelectUIController.SelectedLayer.ButtonLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: ButtonLayer
        path: ''
        startLine: 8103
      summary: "\n按钮层，仅能选择按钮。\n"
      example: []
      syntax:
        content:
          CSharp: ButtonLayer = 0
          VB: ButtonLayer = 0
        return:
          type: UCT.Battle.SelectUIController.SelectedLayer
    - id: UCT.Battle.SelectUIController.SelectedLayer.NameLayer
      commentId: F:UCT.Battle.SelectUIController.SelectedLayer.NameLayer
      language: CSharp
      name:
        CSharp: NameLayer
        VB: NameLayer
      nameWithType:
        CSharp: SelectUIController.SelectedLayer.NameLayer
        VB: SelectUIController.SelectedLayer.NameLayer
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.SelectedLayer.NameLayer
        VB: UCT.Battle.SelectUIController.SelectedLayer.NameLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: NameLayer
        path: ''
        startLine: 8108
      summary: "\n名称层，用于显示、选择怪物名称。\n"
      example: []
      syntax:
        content:
          CSharp: NameLayer = 1
          VB: NameLayer = 1
        return:
          type: UCT.Battle.SelectUIController.SelectedLayer
    - id: UCT.Battle.SelectUIController.SelectedLayer.OptionLayer
      commentId: F:UCT.Battle.SelectUIController.SelectedLayer.OptionLayer
      language: CSharp
      name:
        CSharp: OptionLayer
        VB: OptionLayer
      nameWithType:
        CSharp: SelectUIController.SelectedLayer.OptionLayer
        VB: SelectUIController.SelectedLayer.OptionLayer
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.SelectedLayer.OptionLayer
        VB: UCT.Battle.SelectUIController.SelectedLayer.OptionLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: OptionLayer
        path: ''
        startLine: 8113
      summary: "\n选项层，用于选择选项。\n"
      example: []
      syntax:
        content:
          CSharp: OptionLayer = 2
          VB: OptionLayer = 2
        return:
          type: UCT.Battle.SelectUIController.SelectedLayer
    - id: UCT.Battle.SelectUIController.SelectedLayer.NarratorLayer
      commentId: F:UCT.Battle.SelectUIController.SelectedLayer.NarratorLayer
      language: CSharp
      name:
        CSharp: NarratorLayer
        VB: NarratorLayer
      nameWithType:
        CSharp: SelectUIController.SelectedLayer.NarratorLayer
        VB: SelectUIController.SelectedLayer.NarratorLayer
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.SelectedLayer.NarratorLayer
        VB: UCT.Battle.SelectUIController.SelectedLayer.NarratorLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: NarratorLayer
        path: ''
        startLine: 8118
      summary: "\n对话层，用于显示对话。\n"
      example: []
      syntax:
        content:
          CSharp: NarratorLayer = 3
          VB: NarratorLayer = 3
        return:
          type: UCT.Battle.SelectUIController.SelectedLayer
    - id: UCT.Battle.SelectUIController.SelectedLayer.TurnLayer
      commentId: F:UCT.Battle.SelectUIController.SelectedLayer.TurnLayer
      language: CSharp
      name:
        CSharp: TurnLayer
        VB: TurnLayer
      nameWithType:
        CSharp: SelectUIController.SelectedLayer.TurnLayer
        VB: SelectUIController.SelectedLayer.TurnLayer
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.SelectedLayer.TurnLayer
        VB: UCT.Battle.SelectUIController.SelectedLayer.TurnLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: TurnLayer
        path: ''
        startLine: 8123
      summary: "\n回合层，在此层时进入敌方回合。\n"
      example: []
      syntax:
        content:
          CSharp: TurnLayer = 4
          VB: TurnLayer = 4
        return:
          type: UCT.Battle.SelectUIController.SelectedLayer
  - id: UCT.Battle.SelectUIController.UITextMode
    commentId: T:UCT.Battle.SelectUIController.UITextMode
    language: CSharp
    name:
      CSharp: SelectUIController.UITextMode
      VB: SelectUIController.UITextMode
    nameWithType:
      CSharp: SelectUIController.UITextMode
      VB: SelectUIController.UITextMode
    qualifiedName:
      CSharp: UCT.Battle.SelectUIController.UITextMode
      VB: UCT.Battle.SelectUIController.UITextMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: UITextMode
      path: ''
      startLine: 8126
    syntax:
      content:
        CSharp: public enum SelectUIController.UITextMode
        VB: Public Enum SelectUIController.UITextMode
    items:
    - id: UCT.Battle.SelectUIController.UITextMode.None
      commentId: F:UCT.Battle.SelectUIController.UITextMode.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: SelectUIController.UITextMode.None
        VB: SelectUIController.UITextMode.None
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.UITextMode.None
        VB: UCT.Battle.SelectUIController.UITextMode.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: None
        path: ''
        startLine: 8128
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: UCT.Battle.SelectUIController.UITextMode
    - id: UCT.Battle.SelectUIController.UITextMode.Hit
      commentId: F:UCT.Battle.SelectUIController.UITextMode.Hit
      language: CSharp
      name:
        CSharp: Hit
        VB: Hit
      nameWithType:
        CSharp: SelectUIController.UITextMode.Hit
        VB: SelectUIController.UITextMode.Hit
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.UITextMode.Hit
        VB: UCT.Battle.SelectUIController.UITextMode.Hit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Hit
        path: ''
        startLine: 8129
      syntax:
        content:
          CSharp: Hit = 1
          VB: Hit = 1
        return:
          type: UCT.Battle.SelectUIController.UITextMode
    - id: UCT.Battle.SelectUIController.UITextMode.Food
      commentId: F:UCT.Battle.SelectUIController.UITextMode.Food
      language: CSharp
      name:
        CSharp: Food
        VB: Food
      nameWithType:
        CSharp: SelectUIController.UITextMode.Food
        VB: SelectUIController.UITextMode.Food
      qualifiedName:
        CSharp: UCT.Battle.SelectUIController.UITextMode.Food
        VB: UCT.Battle.SelectUIController.UITextMode.Food
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Food
        path: ''
        startLine: 8130
      syntax:
        content:
          CSharp: Food = 2
          VB: Food = 2
        return:
          type: UCT.Battle.SelectUIController.UITextMode
  - id: UCT.Battle.SpriteSplitFly
    commentId: T:UCT.Battle.SpriteSplitFly
    language: CSharp
    name:
      CSharp: SpriteSplitFly
      VB: SpriteSplitFly
    nameWithType:
      CSharp: SpriteSplitFly
      VB: SpriteSplitFly
    qualifiedName:
      CSharp: UCT.Battle.SpriteSplitFly
      VB: UCT.Battle.SpriteSplitFly
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: SpriteSplitFly
      path: ''
      startLine: 9807
    summary: "\nSpriteSplitController的子级控制器\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SpriteSplitFly : MonoBehaviour'
        VB: Public Class SpriteSplitFly Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: UCT.Battle.EnemiesController
    commentId: T:UCT.Battle.EnemiesController
    language: CSharp
    name:
      CSharp: EnemiesController
      VB: EnemiesController
    nameWithType:
      CSharp: EnemiesController
      VB: EnemiesController
    qualifiedName:
      CSharp: UCT.Battle.EnemiesController
      VB: UCT.Battle.EnemiesController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: EnemiesController
      path: ''
      startLine: 9849
    summary: "\n怪物控制脚本\n主要用于动画控制和存储ATK DEF\n"
    example: []
    syntax:
      content:
        CSharp: 'public class EnemiesController : MonoBehaviour'
        VB: Public Class EnemiesController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.EnemiesController.anim
      commentId: F:UCT.Battle.EnemiesController.anim
      language: CSharp
      name:
        CSharp: anim
        VB: anim
      nameWithType:
        CSharp: EnemiesController.anim
        VB: EnemiesController.anim
      qualifiedName:
        CSharp: UCT.Battle.EnemiesController.anim
        VB: UCT.Battle.EnemiesController.anim
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: anim
        path: ''
        startLine: 9852
      syntax:
        content:
          CSharp: public Animator anim
          VB: Public anim As Animator
        return:
          type: Global.Animator
    - id: UCT.Battle.EnemiesController.atk
      commentId: F:UCT.Battle.EnemiesController.atk
      language: CSharp
      name:
        CSharp: atk
        VB: atk
      nameWithType:
        CSharp: EnemiesController.atk
        VB: EnemiesController.atk
      qualifiedName:
        CSharp: UCT.Battle.EnemiesController.atk
        VB: UCT.Battle.EnemiesController.atk
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: atk
        path: ''
        startLine: 9853
      syntax:
        content:
          CSharp: public int atk
          VB: Public atk As Integer
        return:
          type: System.Int32
    - id: UCT.Battle.EnemiesController.def
      commentId: F:UCT.Battle.EnemiesController.def
      language: CSharp
      name:
        CSharp: def
        VB: def
      nameWithType:
        CSharp: EnemiesController.def
        VB: EnemiesController.def
      qualifiedName:
        CSharp: UCT.Battle.EnemiesController.def
        VB: UCT.Battle.EnemiesController.def
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: def
        path: ''
        startLine: 9853
      syntax:
        content:
          CSharp: public int def
          VB: Public def As Integer
        return:
          type: System.Int32
    - id: UCT.Battle.EnemiesController.hp
      commentId: F:UCT.Battle.EnemiesController.hp
      language: CSharp
      name:
        CSharp: hp
        VB: hp
      nameWithType:
        CSharp: EnemiesController.hp
        VB: EnemiesController.hp
      qualifiedName:
        CSharp: UCT.Battle.EnemiesController.hp
        VB: UCT.Battle.EnemiesController.hp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: hp
        path: ''
        startLine: 9854
      syntax:
        content:
          CSharp: public int hp
          VB: Public hp As Integer
        return:
          type: System.Int32
    - id: UCT.Battle.EnemiesController.hpMax
      commentId: F:UCT.Battle.EnemiesController.hpMax
      language: CSharp
      name:
        CSharp: hpMax
        VB: hpMax
      nameWithType:
        CSharp: EnemiesController.hpMax
        VB: EnemiesController.hpMax
      qualifiedName:
        CSharp: UCT.Battle.EnemiesController.hpMax
        VB: UCT.Battle.EnemiesController.hpMax
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: hpMax
        path: ''
        startLine: 9854
      syntax:
        content:
          CSharp: public int hpMax
          VB: Public hpMax As Integer
        return:
          type: System.Int32
    - id: UCT.Battle.EnemiesController.dustCloud
      commentId: F:UCT.Battle.EnemiesController.dustCloud
      language: CSharp
      name:
        CSharp: dustCloud
        VB: dustCloud
      nameWithType:
        CSharp: EnemiesController.dustCloud
        VB: EnemiesController.dustCloud
      qualifiedName:
        CSharp: UCT.Battle.EnemiesController.dustCloud
        VB: UCT.Battle.EnemiesController.dustCloud
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: dustCloud
        path: ''
        startLine: 9855
      syntax:
        content:
          CSharp: public GameObject dustCloud
          VB: Public dustCloud As GameObject
        return:
          type: Global.GameObject
    - id: UCT.Battle.EnemiesController.spriteSplitController
      commentId: F:UCT.Battle.EnemiesController.spriteSplitController
      language: CSharp
      name:
        CSharp: spriteSplitController
        VB: spriteSplitController
      nameWithType:
        CSharp: EnemiesController.spriteSplitController
        VB: EnemiesController.spriteSplitController
      qualifiedName:
        CSharp: UCT.Battle.EnemiesController.spriteSplitController
        VB: UCT.Battle.EnemiesController.spriteSplitController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: spriteSplitController
        path: ''
        startLine: 9857
      syntax:
        content:
          CSharp: public SpriteSplitController spriteSplitController
          VB: Public spriteSplitController As SpriteSplitController
        return:
          type: UCT.Battle.SpriteSplitController
    - id: UCT.Battle.EnemiesController.OnOptions
      commentId: F:UCT.Battle.EnemiesController.OnOptions
      language: CSharp
      name:
        CSharp: OnOptions
        VB: OnOptions
      nameWithType:
        CSharp: EnemiesController.OnOptions
        VB: EnemiesController.OnOptions
      qualifiedName:
        CSharp: UCT.Battle.EnemiesController.OnOptions
        VB: UCT.Battle.EnemiesController.OnOptions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: OnOptions
        path: ''
        startLine: 9859
      syntax:
        content:
          CSharp: public Action[] OnOptions
          VB: Public OnOptions As Action()
        return:
          type: System.Action[]
    - id: UCT.Battle.EnemiesController.Enemy
      commentId: P:UCT.Battle.EnemiesController.Enemy
      language: CSharp
      name:
        CSharp: Enemy
        VB: Enemy
      nameWithType:
        CSharp: EnemiesController.Enemy
        VB: EnemiesController.Enemy
      qualifiedName:
        CSharp: UCT.Battle.EnemiesController.Enemy
        VB: UCT.Battle.EnemiesController.Enemy
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Enemy
        path: ''
        startLine: 9860
      syntax:
        content:
          CSharp: public IEnemy Enemy { get; }
          VB: Public Property Enemy As IEnemy
        parameters: []
        return:
          type: Global.IEnemy
      overload: UCT.Battle.EnemiesController.Enemy*
  - id: UCT.Battle.EnemyState
    commentId: T:UCT.Battle.EnemyState
    language: CSharp
    name:
      CSharp: EnemyState
      VB: EnemyState
    nameWithType:
      CSharp: EnemyState
      VB: EnemyState
    qualifiedName:
      CSharp: UCT.Battle.EnemyState
      VB: UCT.Battle.EnemyState
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: EnemyState
      path: ''
      startLine: 9908
    syntax:
      content:
        CSharp: public enum EnemyState
        VB: Public Enum EnemyState
    items:
    - id: UCT.Battle.EnemyState.Default
      commentId: F:UCT.Battle.EnemyState.Default
      language: CSharp
      name:
        CSharp: Default
        VB: Default
      nameWithType:
        CSharp: EnemyState.Default
        VB: EnemyState.Default
      qualifiedName:
        CSharp: UCT.Battle.EnemyState.Default
        VB: UCT.Battle.EnemyState.Default
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Default
        path: ''
        startLine: 9910
      syntax:
        content:
          CSharp: Default = 0
          VB: Default = 0
        return:
          type: UCT.Battle.EnemyState
    - id: UCT.Battle.EnemyState.CanSpare
      commentId: F:UCT.Battle.EnemyState.CanSpare
      language: CSharp
      name:
        CSharp: CanSpare
        VB: CanSpare
      nameWithType:
        CSharp: EnemyState.CanSpare
        VB: EnemyState.CanSpare
      qualifiedName:
        CSharp: UCT.Battle.EnemyState.CanSpare
        VB: UCT.Battle.EnemyState.CanSpare
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: CanSpare
        path: ''
        startLine: 9911
      syntax:
        content:
          CSharp: CanSpare = 1
          VB: CanSpare = 1
        return:
          type: UCT.Battle.EnemyState
    - id: UCT.Battle.EnemyState.Spared
      commentId: F:UCT.Battle.EnemyState.Spared
      language: CSharp
      name:
        CSharp: Spared
        VB: Spared
      nameWithType:
        CSharp: EnemyState.Spared
        VB: EnemyState.Spared
      qualifiedName:
        CSharp: UCT.Battle.EnemyState.Spared
        VB: UCT.Battle.EnemyState.Spared
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Spared
        path: ''
        startLine: 9912
      syntax:
        content:
          CSharp: Spared = 2
          VB: Spared = 2
        return:
          type: UCT.Battle.EnemyState
    - id: UCT.Battle.EnemyState.Dead
      commentId: F:UCT.Battle.EnemyState.Dead
      language: CSharp
      name:
        CSharp: Dead
        VB: Dead
      nameWithType:
        CSharp: EnemyState.Dead
        VB: EnemyState.Dead
      qualifiedName:
        CSharp: UCT.Battle.EnemyState.Dead
        VB: UCT.Battle.EnemyState.Dead
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Dead
        path: ''
        startLine: 9913
      syntax:
        content:
          CSharp: Dead = 3
          VB: Dead = 3
        return:
          type: UCT.Battle.EnemyState
  - id: UCT.Battle.GameOverController
    commentId: T:UCT.Battle.GameOverController
    language: CSharp
    name:
      CSharp: GameOverController
      VB: GameOverController
    nameWithType:
      CSharp: GameOverController
      VB: GameOverController
    qualifiedName:
      CSharp: UCT.Battle.GameOverController
      VB: UCT.Battle.GameOverController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: GameOverController
      path: ''
      startLine: 9931
    summary: "\nGameOver控制器\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GameOverController : MonoBehaviour'
        VB: Public Class GameOverController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.GameOverController.clips
      commentId: F:UCT.Battle.GameOverController.clips
      language: CSharp
      name:
        CSharp: clips
        VB: clips
      nameWithType:
        CSharp: GameOverController.clips
        VB: GameOverController.clips
      qualifiedName:
        CSharp: UCT.Battle.GameOverController.clips
        VB: UCT.Battle.GameOverController.clips
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: clips
        path: ''
        startLine: 9933
      syntax:
        content:
          CSharp: public List<AudioClip> clips
          VB: Public clips As List(Of AudioClip)
        return:
          type: System.Collections.Generic.List{AudioClip}
    - id: UCT.Battle.GameOverController.canChangeScene
      commentId: F:UCT.Battle.GameOverController.canChangeScene
      language: CSharp
      name:
        CSharp: canChangeScene
        VB: canChangeScene
      nameWithType:
        CSharp: GameOverController.canChangeScene
        VB: GameOverController.canChangeScene
      qualifiedName:
        CSharp: UCT.Battle.GameOverController.canChangeScene
        VB: UCT.Battle.GameOverController.canChangeScene
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: canChangeScene
        path: ''
        startLine: 9934
      syntax:
        content:
          CSharp: public bool canChangeScene
          VB: Public canChangeScene As Boolean
        return:
          type: System.Boolean
    - id: UCT.Battle.GameOverController.canChangeSceneForC
      commentId: F:UCT.Battle.GameOverController.canChangeSceneForC
      language: CSharp
      name:
        CSharp: canChangeSceneForC
        VB: canChangeSceneForC
      nameWithType:
        CSharp: GameOverController.canChangeSceneForC
        VB: GameOverController.canChangeSceneForC
      qualifiedName:
        CSharp: UCT.Battle.GameOverController.canChangeSceneForC
        VB: UCT.Battle.GameOverController.canChangeSceneForC
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: canChangeSceneForC
        path: ''
        startLine: 9935
      syntax:
        content:
          CSharp: public bool canChangeSceneForC
          VB: Public canChangeSceneForC As Boolean
        return:
          type: System.Boolean
    - id: UCT.Battle.GameOverController.PlayFX(System.Int32)
      commentId: M:UCT.Battle.GameOverController.PlayFX(System.Int32)
      language: CSharp
      name:
        CSharp: PlayFX(int)
        VB: PlayFX(Integer)
      nameWithType:
        CSharp: GameOverController.PlayFX(int)
        VB: GameOverController.PlayFX(Integer)
      qualifiedName:
        CSharp: UCT.Battle.GameOverController.PlayFX(int)
        VB: UCT.Battle.GameOverController.PlayFX(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: PlayFX
        path: ''
        startLine: 9988
      syntax:
        content:
          CSharp: public void PlayFX(int i)
          VB: Public Sub PlayFX(i As Integer)
        parameters:
        - id: i
          type: System.Int32
      overload: UCT.Battle.GameOverController.PlayFX*
    - id: UCT.Battle.GameOverController.StartParticleSystem
      commentId: M:UCT.Battle.GameOverController.StartParticleSystem
      language: CSharp
      name:
        CSharp: StartParticleSystem()
        VB: StartParticleSystem()
      nameWithType:
        CSharp: GameOverController.StartParticleSystem()
        VB: GameOverController.StartParticleSystem()
      qualifiedName:
        CSharp: UCT.Battle.GameOverController.StartParticleSystem()
        VB: UCT.Battle.GameOverController.StartParticleSystem()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: StartParticleSystem
        path: ''
        startLine: 10000
      syntax:
        content:
          CSharp: public void StartParticleSystem()
          VB: Public Sub StartParticleSystem()
      overload: UCT.Battle.GameOverController.StartParticleSystem*
    - id: UCT.Battle.GameOverController.Type
      commentId: M:UCT.Battle.GameOverController.Type
      language: CSharp
      name:
        CSharp: Type()
        VB: Type()
      nameWithType:
        CSharp: GameOverController.Type()
        VB: GameOverController.Type()
      qualifiedName:
        CSharp: UCT.Battle.GameOverController.Type()
        VB: UCT.Battle.GameOverController.Type()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Type
        path: ''
        startLine: 10007
      syntax:
        content:
          CSharp: public void Type()
          VB: Public Sub Type()
      overload: UCT.Battle.GameOverController.Type*
    - id: UCT.Battle.GameOverController.Prank
      commentId: M:UCT.Battle.GameOverController.Prank
      language: CSharp
      name:
        CSharp: Prank()
        VB: Prank()
      nameWithType:
        CSharp: GameOverController.Prank()
        VB: GameOverController.Prank()
      qualifiedName:
        CSharp: UCT.Battle.GameOverController.Prank()
        VB: UCT.Battle.GameOverController.Prank()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Prank
        path: ''
        startLine: 10024
      syntax:
        content:
          CSharp: public void Prank()
          VB: Public Sub Prank()
      overload: UCT.Battle.GameOverController.Prank*
  - id: UCT.Battle.PlayerLineController
    commentId: T:UCT.Battle.PlayerLineController
    language: CSharp
    name:
      CSharp: PlayerLineController
      VB: PlayerLineController
    nameWithType:
      CSharp: PlayerLineController
      VB: PlayerLineController
    qualifiedName:
      CSharp: UCT.Battle.PlayerLineController
      VB: UCT.Battle.PlayerLineController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: PlayerLineController
      path: ''
      startLine: 10052
    syntax:
      content:
        CSharp: 'public class PlayerLineController : ObjectPool'
        VB: Public Class PlayerLineController Inherits ObjectPool
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.PlayerLineController.lines
      commentId: F:UCT.Battle.PlayerLineController.lines
      language: CSharp
      name:
        CSharp: lines
        VB: lines
      nameWithType:
        CSharp: PlayerLineController.lines
        VB: PlayerLineController.lines
      qualifiedName:
        CSharp: UCT.Battle.PlayerLineController.lines
        VB: UCT.Battle.PlayerLineController.lines
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: lines
        path: ''
        startLine: 10055
      syntax:
        content:
          CSharp: public List<LineRenderer> lines
          VB: Public lines As List(Of LineRenderer)
        return:
          type: System.Collections.Generic.List{LineRenderer}
    - id: UCT.Battle.PlayerLineController.GetFromPool``1
      commentId: M:UCT.Battle.PlayerLineController.GetFromPool``1
      language: CSharp
      name:
        CSharp: GetFromPool<T>()
        VB: GetFromPool(Of T)()
      nameWithType:
        CSharp: PlayerLineController.GetFromPool<T>()
        VB: PlayerLineController.GetFromPool(Of T)()
      qualifiedName:
        CSharp: UCT.Battle.PlayerLineController.GetFromPool<T>()
        VB: UCT.Battle.PlayerLineController.GetFromPool(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: GetFromPool
        path: ''
        startLine: 10078
      syntax:
        content:
          CSharp: public override T GetFromPool<T>()
          VB: Public Overrides Function GetFromPool(Of T)() As T
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: UCT.Battle.PlayerLineController.GetFromPool*
    - id: UCT.Battle.PlayerLineController.ReturnPool``1(GameObject,``0)
      commentId: M:UCT.Battle.PlayerLineController.ReturnPool``1(GameObject,``0)
      language: CSharp
      name:
        CSharp: ReturnPool<T>(GameObject, T)
        VB: ReturnPool(Of T)(GameObject, T)
      nameWithType:
        CSharp: PlayerLineController.ReturnPool<T>(GameObject, T)
        VB: PlayerLineController.ReturnPool(Of T)(GameObject, T)
      qualifiedName:
        CSharp: UCT.Battle.PlayerLineController.ReturnPool<T>(GameObject, T)
        VB: UCT.Battle.PlayerLineController.ReturnPool(Of T)(GameObject, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: ReturnPool
        path: ''
        startLine: 10093
      syntax:
        content:
          CSharp: public override void ReturnPool<T>(GameObject inputGameObject, T script)
          VB: Public Overrides Sub ReturnPool(Of T)(inputGameObject As GameObject, script As T)
        parameters:
        - id: inputGameObject
          type: Global.GameObject
        - id: script
          type: '{T}'
        typeParameters:
        - id: T
      overload: UCT.Battle.PlayerLineController.ReturnPool*
  - id: UCT.Battle.BattlePlayerController
    commentId: T:UCT.Battle.BattlePlayerController
    language: CSharp
    name:
      CSharp: BattlePlayerController
      VB: BattlePlayerController
    nameWithType:
      CSharp: BattlePlayerController
      VB: BattlePlayerController
    qualifiedName:
      CSharp: UCT.Battle.BattlePlayerController
      VB: UCT.Battle.BattlePlayerController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: BattlePlayerController
      path: ''
      startLine: 10127
    summary: "\n控制战斗内玩家(心)的相关属性\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattlePlayerController : MonoBehaviour'
        VB: Public Class BattlePlayerController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.BattlePlayerController.dingTime
      commentId: F:UCT.Battle.BattlePlayerController.dingTime
      language: CSharp
      name:
        CSharp: dingTime
        VB: dingTime
      nameWithType:
        CSharp: BattlePlayerController.dingTime
        VB: BattlePlayerController.dingTime
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.dingTime
        VB: UCT.Battle.BattlePlayerController.dingTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: dingTime
        path: ''
        startLine: 10143
      syntax:
        content:
          CSharp: public float dingTime
          VB: Public dingTime As Single
        return:
          type: System.Single
    - id: UCT.Battle.BattlePlayerController.gradientTime
      commentId: F:UCT.Battle.BattlePlayerController.gradientTime
      language: CSharp
      name:
        CSharp: gradientTime
        VB: gradientTime
      nameWithType:
        CSharp: BattlePlayerController.gradientTime
        VB: BattlePlayerController.gradientTime
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.gradientTime
        VB: UCT.Battle.BattlePlayerController.gradientTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: gradientTime
        path: ''
        startLine: 10146
      syntax:
        content:
          CSharp: public float gradientTime
          VB: Public gradientTime As Single
        return:
          type: System.Single
    - id: UCT.Battle.BattlePlayerController.speed
      commentId: F:UCT.Battle.BattlePlayerController.speed
      language: CSharp
      name:
        CSharp: speed
        VB: speed
      nameWithType:
        CSharp: BattlePlayerController.speed
        VB: BattlePlayerController.speed
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.speed
        VB: UCT.Battle.BattlePlayerController.speed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: speed
        path: ''
        startLine: 10149
      syntax:
        content:
          CSharp: public float speed
          VB: Public speed As Single
        return:
          type: System.Single
    - id: UCT.Battle.BattlePlayerController.speedWeightX
      commentId: F:UCT.Battle.BattlePlayerController.speedWeightX
      language: CSharp
      name:
        CSharp: speedWeightX
        VB: speedWeightX
      nameWithType:
        CSharp: BattlePlayerController.speedWeightX
        VB: BattlePlayerController.speedWeightX
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.speedWeightX
        VB: UCT.Battle.BattlePlayerController.speedWeightX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: speedWeightX
        path: ''
        startLine: 10154
      summary: "\n速度与权重(按X乘以倍数)，速度测试为3，权重0.5f\n"
      example: []
      syntax:
        content:
          CSharp: public float speedWeightX
          VB: Public speedWeightX As Single
        return:
          type: System.Single
    - id: UCT.Battle.BattlePlayerController.speedWeightY
      commentId: F:UCT.Battle.BattlePlayerController.speedWeightY
      language: CSharp
      name:
        CSharp: speedWeightY
        VB: speedWeightY
      nameWithType:
        CSharp: BattlePlayerController.speedWeightY
        VB: BattlePlayerController.speedWeightY
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.speedWeightY
        VB: UCT.Battle.BattlePlayerController.speedWeightY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: speedWeightY
        path: ''
        startLine: 10154
      summary: "\n速度与权重(按X乘以倍数)，速度测试为3，权重0.5f\n"
      example: []
      syntax:
        content:
          CSharp: public float speedWeightY
          VB: Public speedWeightY As Single
        return:
          type: System.Single
    - id: UCT.Battle.BattlePlayerController.displacement
      commentId: F:UCT.Battle.BattlePlayerController.displacement
      language: CSharp
      name:
        CSharp: displacement
        VB: displacement
      nameWithType:
        CSharp: BattlePlayerController.displacement
        VB: BattlePlayerController.displacement
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.displacement
        VB: UCT.Battle.BattlePlayerController.displacement
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: displacement
        path: ''
        startLine: 10159
      summary: "\n碰撞距离判定\n"
      example: []
      syntax:
        content:
          CSharp: public float displacement
          VB: Public displacement As Single
        return:
          type: System.Single
    - id: UCT.Battle.BattlePlayerController.isMoving
      commentId: F:UCT.Battle.BattlePlayerController.isMoving
      language: CSharp
      name:
        CSharp: isMoving
        VB: isMoving
      nameWithType:
        CSharp: BattlePlayerController.isMoving
        VB: BattlePlayerController.isMoving
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.isMoving
        VB: UCT.Battle.BattlePlayerController.isMoving
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: isMoving
        path: ''
        startLine: 10164
      summary: "\n用于蓝橙骨判断：玩家是否真的在移动\n"
      example: []
      syntax:
        content:
          CSharp: public bool isMoving
          VB: Public isMoving As Boolean
        return:
          type: System.Boolean
    - id: UCT.Battle.BattlePlayerController.timeInterpolation
      commentId: F:UCT.Battle.BattlePlayerController.timeInterpolation
      language: CSharp
      name:
        CSharp: timeInterpolation
        VB: timeInterpolation
      nameWithType:
        CSharp: BattlePlayerController.timeInterpolation
        VB: BattlePlayerController.timeInterpolation
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.timeInterpolation
        VB: UCT.Battle.BattlePlayerController.timeInterpolation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: timeInterpolation
        path: ''
        startLine: 10169
      summary: "\n时间插值\n"
      example: []
      syntax:
        content:
          CSharp: public float timeInterpolation
          VB: Public timeInterpolation As Single
        return:
          type: System.Single
    - id: UCT.Battle.BattlePlayerController.sceneDrift
      commentId: F:UCT.Battle.BattlePlayerController.sceneDrift
      language: CSharp
      name:
        CSharp: sceneDrift
        VB: sceneDrift
      nameWithType:
        CSharp: BattlePlayerController.sceneDrift
        VB: BattlePlayerController.sceneDrift
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.sceneDrift
        VB: UCT.Battle.BattlePlayerController.sceneDrift
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: sceneDrift
        path: ''
        startLine: 10174
      summary: "\n场景偏移\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 sceneDrift
          VB: Public sceneDrift As Vector2
        return:
          type: Global.Vector2
    - id: UCT.Battle.BattlePlayerController.playerDir
      commentId: F:UCT.Battle.BattlePlayerController.playerDir
      language: CSharp
      name:
        CSharp: playerDir
        VB: playerDir
      nameWithType:
        CSharp: BattlePlayerController.playerDir
        VB: BattlePlayerController.playerDir
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.playerDir
        VB: UCT.Battle.BattlePlayerController.playerDir
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: playerDir
        path: ''
        startLine: 10179
      summary: "\n玩家方向\n"
      example: []
      syntax:
        content:
          CSharp: public BattlePlayerController.PlayerDirection playerDir
          VB: Public playerDir As BattlePlayerController.PlayerDirection
        return:
          type: UCT.Battle.BattlePlayerController.PlayerDirection
    - id: UCT.Battle.BattlePlayerController.angle
      commentId: F:UCT.Battle.BattlePlayerController.angle
      language: CSharp
      name:
        CSharp: angle
        VB: angle
      nameWithType:
        CSharp: BattlePlayerController.angle
        VB: BattlePlayerController.angle
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.angle
        VB: UCT.Battle.BattlePlayerController.angle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: angle
        path: ''
        startLine: 10184
      summary: "\n玩家移动方向，用于橙心和绿心判断\n"
      example: []
      syntax:
        content:
          CSharp: public float angle
          VB: Public angle As Single
        return:
          type: System.Single
    - id: UCT.Battle.BattlePlayerController.orangeDash
      commentId: F:UCT.Battle.BattlePlayerController.orangeDash
      language: CSharp
      name:
        CSharp: orangeDash
        VB: orangeDash
      nameWithType:
        CSharp: BattlePlayerController.orangeDash
        VB: BattlePlayerController.orangeDash
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.orangeDash
        VB: UCT.Battle.BattlePlayerController.orangeDash
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: orangeDash
        path: ''
        startLine: 10192
      summary: "\n橙魂移动残影开关\n"
      example: []
      syntax:
        content:
          CSharp: public ParticleSystem orangeDash
          VB: Public orangeDash As ParticleSystem
        return:
          type: Global.ParticleSystem
    - id: UCT.Battle.BattlePlayerController.moving
      commentId: F:UCT.Battle.BattlePlayerController.moving
      language: CSharp
      name:
        CSharp: moving
        VB: moving
      nameWithType:
        CSharp: BattlePlayerController.moving
        VB: BattlePlayerController.moving
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.moving
        VB: UCT.Battle.BattlePlayerController.moving
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: moving
        path: ''
        startLine: 10197
      summary: "\n移动向量\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 moving
          VB: Public moving As Vector3
        return:
          type: Global.Vector3
    - id: UCT.Battle.BattlePlayerController.isJump
      commentId: F:UCT.Battle.BattlePlayerController.isJump
      language: CSharp
      name:
        CSharp: isJump
        VB: isJump
      nameWithType:
        CSharp: BattlePlayerController.isJump
        VB: BattlePlayerController.isJump
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.isJump
        VB: UCT.Battle.BattlePlayerController.isJump
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: isJump
        path: ''
        startLine: 10202
      summary: "\n是否处于“跳起”状态\n"
      example: []
      syntax:
        content:
          CSharp: public bool isJump
          VB: Public isJump As Boolean
        return:
          type: System.Boolean
    - id: UCT.Battle.BattlePlayerController.jumpAcceleration
      commentId: F:UCT.Battle.BattlePlayerController.jumpAcceleration
      language: CSharp
      name:
        CSharp: jumpAcceleration
        VB: jumpAcceleration
      nameWithType:
        CSharp: BattlePlayerController.jumpAcceleration
        VB: BattlePlayerController.jumpAcceleration
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.jumpAcceleration
        VB: UCT.Battle.BattlePlayerController.jumpAcceleration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: jumpAcceleration
        path: ''
        startLine: 10207
      summary: "\n跳跃的加速度\n"
      example: []
      syntax:
        content:
          CSharp: public float jumpAcceleration
          VB: Public jumpAcceleration As Single
        return:
          type: System.Single
    - id: UCT.Battle.BattlePlayerController.jumpRayDistance
      commentId: F:UCT.Battle.BattlePlayerController.jumpRayDistance
      language: CSharp
      name:
        CSharp: jumpRayDistance
        VB: jumpRayDistance
      nameWithType:
        CSharp: BattlePlayerController.jumpRayDistance
        VB: BattlePlayerController.jumpRayDistance
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.jumpRayDistance
        VB: UCT.Battle.BattlePlayerController.jumpRayDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: jumpRayDistance
        path: ''
        startLine: 10212
      summary: "\n跳跃射线距离\n"
      example: []
      syntax:
        content:
          CSharp: public float jumpRayDistance
          VB: Public jumpRayDistance As Single
        return:
          type: System.Single
    - id: UCT.Battle.BattlePlayerController.jumpRayDistanceForBoard
      commentId: F:UCT.Battle.BattlePlayerController.jumpRayDistanceForBoard
      language: CSharp
      name:
        CSharp: jumpRayDistanceForBoard
        VB: jumpRayDistanceForBoard
      nameWithType:
        CSharp: BattlePlayerController.jumpRayDistanceForBoard
        VB: BattlePlayerController.jumpRayDistanceForBoard
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.jumpRayDistanceForBoard
        VB: UCT.Battle.BattlePlayerController.jumpRayDistanceForBoard
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: jumpRayDistanceForBoard
        path: ''
        startLine: 10217
      summary: "\n板上的跳跃射线距离\n"
      example: []
      syntax:
        content:
          CSharp: public float jumpRayDistanceForBoard
          VB: Public jumpRayDistanceForBoard As Single
        return:
          type: System.Single
    - id: UCT.Battle.BattlePlayerController.collideCollider
      commentId: F:UCT.Battle.BattlePlayerController.collideCollider
      language: CSharp
      name:
        CSharp: collideCollider
        VB: collideCollider
      nameWithType:
        CSharp: BattlePlayerController.collideCollider
        VB: BattlePlayerController.collideCollider
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.collideCollider
        VB: UCT.Battle.BattlePlayerController.collideCollider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: collideCollider
        path: ''
        startLine: 10222
      summary: "\n圆形碰撞体\n"
      example: []
      syntax:
        content:
          CSharp: public CircleCollider2D collideCollider
          VB: Public collideCollider As CircleCollider2D
        return:
          type: Global.CircleCollider2D
    - id: UCT.Battle.BattlePlayerController.animator
      commentId: F:UCT.Battle.BattlePlayerController.animator
      language: CSharp
      name:
        CSharp: animator
        VB: animator
      nameWithType:
        CSharp: BattlePlayerController.animator
        VB: BattlePlayerController.animator
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.animator
        VB: UCT.Battle.BattlePlayerController.animator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: animator
        path: ''
        startLine: 10224
      syntax:
        content:
          CSharp: public Animator animator
          VB: Public animator As Animator
        return:
          type: Global.Animator
    - id: UCT.Battle.BattlePlayerController.playerColor
      commentId: F:UCT.Battle.BattlePlayerController.playerColor
      language: CSharp
      name:
        CSharp: playerColor
        VB: playerColor
      nameWithType:
        CSharp: BattlePlayerController.playerColor
        VB: BattlePlayerController.playerColor
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.playerColor
        VB: UCT.Battle.BattlePlayerController.playerColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: playerColor
        path: ''
        startLine: 10229
      summary: "\n含有属性的颜色，读取 <see cref=\"!:BattleControl.PlayerColor\"></see>，颜色变换通过具体变换的函数来执行\n"
      example: []
      syntax:
        content:
          CSharp: public BattleControl.PlayerColor playerColor
          VB: Public playerColor As BattleControl.PlayerColor
        return:
          type: Global.BattleControl.PlayerColor
    - id: UCT.Battle.BattlePlayerController.ChangePlayerColor(Color,BattleControl.PlayerColor,System.Single,UCT.Battle.BattlePlayerController.PlayerDirection,System.Single,System.Single,System.Int32)
      commentId: M:UCT.Battle.BattlePlayerController.ChangePlayerColor(Color,BattleControl.PlayerColor,System.Single,UCT.Battle.BattlePlayerController.PlayerDirection,System.Single,System.Single,System.Int32)
      language: CSharp
      name:
        CSharp: ChangePlayerColor(Color, PlayerColor, float, PlayerDirection, float, float, int)
        VB: ChangePlayerColor(Color, PlayerColor, Single, PlayerDirection, Single, Single, Integer)
      nameWithType:
        CSharp: BattlePlayerController.ChangePlayerColor(Color, BattleControl.PlayerColor, float, BattlePlayerController.PlayerDirection, float, float, int)
        VB: BattlePlayerController.ChangePlayerColor(Color, BattleControl.PlayerColor, Single, BattlePlayerController.PlayerDirection, Single, Single, Integer)
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.ChangePlayerColor(Color, BattleControl.PlayerColor, float, UCT.Battle.BattlePlayerController.PlayerDirection, float, float, int)
        VB: UCT.Battle.BattlePlayerController.ChangePlayerColor(Color, BattleControl.PlayerColor, Single, UCT.Battle.BattlePlayerController.PlayerDirection, Single, Single, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: ChangePlayerColor
        path: ''
        startLine: 11144
      summary: "\n通过渐变动画将玩家的颜色改变。\n若inputGradientTime/inputDingTime等于0 则不会有渐变动画/ding动画；\n若inputGradientTime/inputDingTime小于0 则使用该脚本内的gradientTime/dingTime变量。\n若PlayerColor输入为nullColor，则不会更改玩家的实际颜色属性。\n"
      example: []
      syntax:
        content:
          CSharp: public void ChangePlayerColor(Color aimColor, BattleControl.PlayerColor aimPlayerColor, float startForce = 0, BattlePlayerController.PlayerDirection dir = PlayerDirection.NullDir, float inputGradientTime = -1, float inputDingTime = -1, int fx = 2)
          VB: Public Sub ChangePlayerColor(aimColor As Color, aimPlayerColor As BattleControl.PlayerColor, startForce As Single = 0, dir As BattlePlayerController.PlayerDirection = PlayerDirection.NullDir, inputGradientTime As Single = -1, inputDingTime As Single = -1, fx As Integer = 2)
        parameters:
        - id: aimColor
          type: Global.Color
        - id: aimPlayerColor
          type: Global.BattleControl.PlayerColor
        - id: startForce
          type: System.Single
        - id: dir
          type: UCT.Battle.BattlePlayerController.PlayerDirection
        - id: inputGradientTime
          type: System.Single
        - id: inputDingTime
          type: System.Single
        - id: fx
          type: System.Int32
      overload: UCT.Battle.BattlePlayerController.ChangePlayerColor*
  - id: UCT.Battle.BattlePlayerController.PlayerDirection
    commentId: T:UCT.Battle.BattlePlayerController.PlayerDirection
    language: CSharp
    name:
      CSharp: BattlePlayerController.PlayerDirection
      VB: BattlePlayerController.PlayerDirection
    nameWithType:
      CSharp: BattlePlayerController.PlayerDirection
      VB: BattlePlayerController.PlayerDirection
    qualifiedName:
      CSharp: UCT.Battle.BattlePlayerController.PlayerDirection
      VB: UCT.Battle.BattlePlayerController.PlayerDirection
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: PlayerDirection
      path: ''
      startLine: 10129
    syntax:
      content:
        CSharp: public enum BattlePlayerController.PlayerDirection
        VB: Public Enum BattlePlayerController.PlayerDirection
    items:
    - id: UCT.Battle.BattlePlayerController.PlayerDirection.Up
      commentId: F:UCT.Battle.BattlePlayerController.PlayerDirection.Up
      language: CSharp
      name:
        CSharp: Up
        VB: Up
      nameWithType:
        CSharp: BattlePlayerController.PlayerDirection.Up
        VB: BattlePlayerController.PlayerDirection.Up
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.PlayerDirection.Up
        VB: UCT.Battle.BattlePlayerController.PlayerDirection.Up
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Up
        path: ''
        startLine: 10131
      syntax:
        content:
          CSharp: Up = 0
          VB: Up = 0
        return:
          type: UCT.Battle.BattlePlayerController.PlayerDirection
    - id: UCT.Battle.BattlePlayerController.PlayerDirection.Down
      commentId: F:UCT.Battle.BattlePlayerController.PlayerDirection.Down
      language: CSharp
      name:
        CSharp: Down
        VB: Down
      nameWithType:
        CSharp: BattlePlayerController.PlayerDirection.Down
        VB: BattlePlayerController.PlayerDirection.Down
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.PlayerDirection.Down
        VB: UCT.Battle.BattlePlayerController.PlayerDirection.Down
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Down
        path: ''
        startLine: 10132
      syntax:
        content:
          CSharp: Down = 1
          VB: Down = 1
        return:
          type: UCT.Battle.BattlePlayerController.PlayerDirection
    - id: UCT.Battle.BattlePlayerController.PlayerDirection.Left
      commentId: F:UCT.Battle.BattlePlayerController.PlayerDirection.Left
      language: CSharp
      name:
        CSharp: Left
        VB: Left
      nameWithType:
        CSharp: BattlePlayerController.PlayerDirection.Left
        VB: BattlePlayerController.PlayerDirection.Left
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.PlayerDirection.Left
        VB: UCT.Battle.BattlePlayerController.PlayerDirection.Left
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Left
        path: ''
        startLine: 10133
      syntax:
        content:
          CSharp: Left = 2
          VB: Left = 2
        return:
          type: UCT.Battle.BattlePlayerController.PlayerDirection
    - id: UCT.Battle.BattlePlayerController.PlayerDirection.Right
      commentId: F:UCT.Battle.BattlePlayerController.PlayerDirection.Right
      language: CSharp
      name:
        CSharp: Right
        VB: Right
      nameWithType:
        CSharp: BattlePlayerController.PlayerDirection.Right
        VB: BattlePlayerController.PlayerDirection.Right
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.PlayerDirection.Right
        VB: UCT.Battle.BattlePlayerController.PlayerDirection.Right
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Right
        path: ''
        startLine: 10134
      syntax:
        content:
          CSharp: Right = 3
          VB: Right = 3
        return:
          type: UCT.Battle.BattlePlayerController.PlayerDirection
    - id: UCT.Battle.BattlePlayerController.PlayerDirection.NullDir
      commentId: F:UCT.Battle.BattlePlayerController.PlayerDirection.NullDir
      language: CSharp
      name:
        CSharp: NullDir
        VB: NullDir
      nameWithType:
        CSharp: BattlePlayerController.PlayerDirection.NullDir
        VB: BattlePlayerController.PlayerDirection.NullDir
      qualifiedName:
        CSharp: UCT.Battle.BattlePlayerController.PlayerDirection.NullDir
        VB: UCT.Battle.BattlePlayerController.PlayerDirection.NullDir
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: NullDir
        path: ''
        startLine: 10135
      syntax:
        content:
          CSharp: NullDir = 4
          VB: NullDir = 4
        return:
          type: UCT.Battle.BattlePlayerController.PlayerDirection
  - id: UCT.Battle.InitialTransform
    commentId: T:UCT.Battle.InitialTransform
    language: CSharp
    name:
      CSharp: InitialTransform
      VB: InitialTransform
    nameWithType:
      CSharp: InitialTransform
      VB: InitialTransform
    qualifiedName:
      CSharp: UCT.Battle.InitialTransform
      VB: UCT.Battle.InitialTransform
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: InitialTransform
      path: ''
      startLine: 11354
    syntax:
      content:
        CSharp: public readonly struct InitialTransform
        VB: Public Structure InitialTransform
    items:
    - id: UCT.Battle.InitialTransform.Position
      commentId: P:UCT.Battle.InitialTransform.Position
      language: CSharp
      name:
        CSharp: Position
        VB: Position
      nameWithType:
        CSharp: InitialTransform.Position
        VB: InitialTransform.Position
      qualifiedName:
        CSharp: UCT.Battle.InitialTransform.Position
        VB: UCT.Battle.InitialTransform.Position
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Position
        path: ''
        startLine: 11356
      syntax:
        content:
          CSharp: public Vector3? Position { get; }
          VB: Public ReadOnly Property Position As Vector3?
        parameters: []
        return:
          type: System.Nullable{Vector3}
      overload: UCT.Battle.InitialTransform.Position*
    - id: UCT.Battle.InitialTransform.Rotation
      commentId: P:UCT.Battle.InitialTransform.Rotation
      language: CSharp
      name:
        CSharp: Rotation
        VB: Rotation
      nameWithType:
        CSharp: InitialTransform.Rotation
        VB: InitialTransform.Rotation
      qualifiedName:
        CSharp: UCT.Battle.InitialTransform.Rotation
        VB: UCT.Battle.InitialTransform.Rotation
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Rotation
        path: ''
        startLine: 11357
      syntax:
        content:
          CSharp: public Quaternion? Rotation { get; }
          VB: Public ReadOnly Property Rotation As Quaternion?
        parameters: []
        return:
          type: System.Nullable{Quaternion}
      overload: UCT.Battle.InitialTransform.Rotation*
    - id: UCT.Battle.InitialTransform.Scale
      commentId: P:UCT.Battle.InitialTransform.Scale
      language: CSharp
      name:
        CSharp: Scale
        VB: Scale
      nameWithType:
        CSharp: InitialTransform.Scale
        VB: InitialTransform.Scale
      qualifiedName:
        CSharp: UCT.Battle.InitialTransform.Scale
        VB: UCT.Battle.InitialTransform.Scale
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Scale
        path: ''
        startLine: 11358
      syntax:
        content:
          CSharp: public Vector3? Scale { get; }
          VB: Public ReadOnly Property Scale As Vector3?
        parameters: []
        return:
          type: System.Nullable{Vector3}
      overload: UCT.Battle.InitialTransform.Scale*
    - id: UCT.Battle.InitialTransform.#ctor(Vector3)
      commentId: M:UCT.Battle.InitialTransform.#ctor(Vector3)
      language: CSharp
      name:
        CSharp: InitialTransform(Vector3)
        VB: New(Vector3)
      nameWithType:
        CSharp: InitialTransform.InitialTransform(Vector3)
        VB: InitialTransform.New(Vector3)
      qualifiedName:
        CSharp: UCT.Battle.InitialTransform.InitialTransform(Vector3)
        VB: UCT.Battle.InitialTransform.New(Vector3)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: .ctor
        path: ''
        startLine: 11360
      syntax:
        content:
          CSharp: public InitialTransform(Vector3 position)
          VB: Public Sub New(position As Vector3)
        parameters:
        - id: position
          type: Global.Vector3
      overload: UCT.Battle.InitialTransform.#ctor*
    - id: UCT.Battle.InitialTransform.#ctor(Vector3,Quaternion)
      commentId: M:UCT.Battle.InitialTransform.#ctor(Vector3,Quaternion)
      language: CSharp
      name:
        CSharp: InitialTransform(Vector3, Quaternion)
        VB: New(Vector3, Quaternion)
      nameWithType:
        CSharp: InitialTransform.InitialTransform(Vector3, Quaternion)
        VB: InitialTransform.New(Vector3, Quaternion)
      qualifiedName:
        CSharp: UCT.Battle.InitialTransform.InitialTransform(Vector3, Quaternion)
        VB: UCT.Battle.InitialTransform.New(Vector3, Quaternion)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: .ctor
        path: ''
        startLine: 11367
      syntax:
        content:
          CSharp: public InitialTransform(Vector3 position, Quaternion rotation)
          VB: Public Sub New(position As Vector3, rotation As Quaternion)
        parameters:
        - id: position
          type: Global.Vector3
        - id: rotation
          type: Global.Quaternion
      overload: UCT.Battle.InitialTransform.#ctor*
    - id: UCT.Battle.InitialTransform.#ctor(Vector3,Vector3)
      commentId: M:UCT.Battle.InitialTransform.#ctor(Vector3,Vector3)
      language: CSharp
      name:
        CSharp: InitialTransform(Vector3, Vector3)
        VB: New(Vector3, Vector3)
      nameWithType:
        CSharp: InitialTransform.InitialTransform(Vector3, Vector3)
        VB: InitialTransform.New(Vector3, Vector3)
      qualifiedName:
        CSharp: UCT.Battle.InitialTransform.InitialTransform(Vector3, Vector3)
        VB: UCT.Battle.InitialTransform.New(Vector3, Vector3)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: .ctor
        path: ''
        startLine: 11374
      syntax:
        content:
          CSharp: public InitialTransform(Vector3 position, Vector3 scale)
          VB: Public Sub New(position As Vector3, scale As Vector3)
        parameters:
        - id: position
          type: Global.Vector3
        - id: scale
          type: Global.Vector3
      overload: UCT.Battle.InitialTransform.#ctor*
    - id: UCT.Battle.InitialTransform.#ctor(Vector3,Quaternion,Vector3)
      commentId: M:UCT.Battle.InitialTransform.#ctor(Vector3,Quaternion,Vector3)
      language: CSharp
      name:
        CSharp: InitialTransform(Vector3, Quaternion, Vector3)
        VB: New(Vector3, Quaternion, Vector3)
      nameWithType:
        CSharp: InitialTransform.InitialTransform(Vector3, Quaternion, Vector3)
        VB: InitialTransform.New(Vector3, Quaternion, Vector3)
      qualifiedName:
        CSharp: UCT.Battle.InitialTransform.InitialTransform(Vector3, Quaternion, Vector3)
        VB: UCT.Battle.InitialTransform.New(Vector3, Quaternion, Vector3)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: .ctor
        path: ''
        startLine: 11381
      syntax:
        content:
          CSharp: public InitialTransform(Vector3 position, Quaternion rotation, Vector3 scale)
          VB: Public Sub New(position As Vector3, rotation As Quaternion, scale As Vector3)
        parameters:
        - id: position
          type: Global.Vector3
        - id: rotation
          type: Global.Quaternion
        - id: scale
          type: Global.Vector3
      overload: UCT.Battle.InitialTransform.#ctor*
    - id: UCT.Battle.InitialTransform.Equals(UCT.Battle.InitialTransform)
      commentId: M:UCT.Battle.InitialTransform.Equals(UCT.Battle.InitialTransform)
      language: CSharp
      name:
        CSharp: Equals(InitialTransform)
        VB: Equals(InitialTransform)
      nameWithType:
        CSharp: InitialTransform.Equals(InitialTransform)
        VB: InitialTransform.Equals(InitialTransform)
      qualifiedName:
        CSharp: UCT.Battle.InitialTransform.Equals(UCT.Battle.InitialTransform)
        VB: UCT.Battle.InitialTransform.Equals(UCT.Battle.InitialTransform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Equals
        path: ''
        startLine: 11388
      syntax:
        content:
          CSharp: public bool Equals(InitialTransform other)
          VB: Public Function Equals(other As InitialTransform) As Boolean
        parameters:
        - id: other
          type: UCT.Battle.InitialTransform
        return:
          type: System.Boolean
      overload: UCT.Battle.InitialTransform.Equals*
    - id: UCT.Battle.InitialTransform.Equals(System.Object)
      commentId: M:UCT.Battle.InitialTransform.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(object)
        VB: Equals(Object)
      nameWithType:
        CSharp: InitialTransform.Equals(object)
        VB: InitialTransform.Equals(Object)
      qualifiedName:
        CSharp: UCT.Battle.InitialTransform.Equals(object)
        VB: UCT.Battle.InitialTransform.Equals(Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: Equals
        path: ''
        startLine: 11393
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: UCT.Battle.InitialTransform.Equals*
      overridden: System.ValueType.Equals(System.Object)
    - id: UCT.Battle.InitialTransform.GetHashCode
      commentId: M:UCT.Battle.InitialTransform.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: InitialTransform.GetHashCode()
        VB: InitialTransform.GetHashCode()
      qualifiedName:
        CSharp: UCT.Battle.InitialTransform.GetHashCode()
        VB: UCT.Battle.InitialTransform.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: GetHashCode
        path: ''
        startLine: 11398
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode() As Integer
        return:
          type: System.Int32
      overload: UCT.Battle.InitialTransform.GetHashCode*
      overridden: System.ValueType.GetHashCode
  - id: UCT.Battle.ProjectionBox
    commentId: T:UCT.Battle.ProjectionBox
    language: CSharp
    name:
      CSharp: ProjectionBox
      VB: ProjectionBox
    nameWithType:
      CSharp: ProjectionBox
      VB: ProjectionBox
    qualifiedName:
      CSharp: UCT.Battle.ProjectionBox
      VB: UCT.Battle.ProjectionBox
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: ProjectionBox
      path: ''
      startLine: 11408
    syntax:
      content:
        CSharp: 'public class ProjectionBox : MonoBehaviour'
        VB: Public Class ProjectionBox Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.ProjectionBox.scaleFactor
      commentId: F:UCT.Battle.ProjectionBox.scaleFactor
      language: CSharp
      name:
        CSharp: scaleFactor
        VB: scaleFactor
      nameWithType:
        CSharp: ProjectionBox.scaleFactor
        VB: ProjectionBox.scaleFactor
      qualifiedName:
        CSharp: UCT.Battle.ProjectionBox.scaleFactor
        VB: UCT.Battle.ProjectionBox.scaleFactor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: scaleFactor
        path: ''
        startLine: 11411
      syntax:
        content:
          CSharp: public float scaleFactor
          VB: Public scaleFactor As Single
        return:
          type: System.Single
  - id: UCT.Battle.SpriteSplitController
    commentId: T:UCT.Battle.SpriteSplitController
    language: CSharp
    name:
      CSharp: SpriteSplitController
      VB: SpriteSplitController
    nameWithType:
      CSharp: SpriteSplitController
      VB: SpriteSplitController
    qualifiedName:
      CSharp: UCT.Battle.SpriteSplitController
      VB: UCT.Battle.SpriteSplitController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: SpriteSplitController
      path: ''
      startLine: 11499
    summary: "\n内含Pool。\n实现精灵的碎片化效果。\n一行一行自上而下。\n启用本脚本后立刻生效。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SpriteSplitController : MonoBehaviour'
        VB: Public Class SpriteSplitController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Battle.SpriteSplitController.poolCount
      commentId: F:UCT.Battle.SpriteSplitController.poolCount
      language: CSharp
      name:
        CSharp: poolCount
        VB: poolCount
      nameWithType:
        CSharp: SpriteSplitController.poolCount
        VB: SpriteSplitController.poolCount
      qualifiedName:
        CSharp: UCT.Battle.SpriteSplitController.poolCount
        VB: UCT.Battle.SpriteSplitController.poolCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: poolCount
        path: ''
        startLine: 11501
      syntax:
        content:
          CSharp: public int poolCount
          VB: Public poolCount As Integer
        return:
          type: System.Int32
    - id: UCT.Battle.SpriteSplitController.colorExclude
      commentId: F:UCT.Battle.SpriteSplitController.colorExclude
      language: CSharp
      name:
        CSharp: colorExclude
        VB: colorExclude
      nameWithType:
        CSharp: SpriteSplitController.colorExclude
        VB: SpriteSplitController.colorExclude
      qualifiedName:
        CSharp: UCT.Battle.SpriteSplitController.colorExclude
        VB: UCT.Battle.SpriteSplitController.colorExclude
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: colorExclude
        path: ''
        startLine: 11502
      syntax:
        content:
          CSharp: public List<Color> colorExclude
          VB: Public colorExclude As List(Of Color)
        return:
          type: System.Collections.Generic.List{Color}
    - id: UCT.Battle.SpriteSplitController.startPos
      commentId: F:UCT.Battle.SpriteSplitController.startPos
      language: CSharp
      name:
        CSharp: startPos
        VB: startPos
      nameWithType:
        CSharp: SpriteSplitController.startPos
        VB: SpriteSplitController.startPos
      qualifiedName:
        CSharp: UCT.Battle.SpriteSplitController.startPos
        VB: UCT.Battle.SpriteSplitController.startPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: startPos
        path: ''
        startLine: 11503
      syntax:
        content:
          CSharp: public Vector2 startPos
          VB: Public startPos As Vector2
        return:
          type: Global.Vector2
    - id: UCT.Battle.SpriteSplitController.speed
      commentId: F:UCT.Battle.SpriteSplitController.speed
      language: CSharp
      name:
        CSharp: speed
        VB: speed
      nameWithType:
        CSharp: SpriteSplitController.speed
        VB: SpriteSplitController.speed
      qualifiedName:
        CSharp: UCT.Battle.SpriteSplitController.speed
        VB: UCT.Battle.SpriteSplitController.speed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: speed
        path: ''
        startLine: 11504
      syntax:
        content:
          CSharp: public float speed
          VB: Public speed As Single
        return:
          type: System.Single
    - id: UCT.Battle.SpriteSplitController.spriteRenderer
      commentId: P:UCT.Battle.SpriteSplitController.spriteRenderer
      language: CSharp
      name:
        CSharp: spriteRenderer
        VB: spriteRenderer
      nameWithType:
        CSharp: SpriteSplitController.spriteRenderer
        VB: SpriteSplitController.spriteRenderer
      qualifiedName:
        CSharp: UCT.Battle.SpriteSplitController.spriteRenderer
        VB: UCT.Battle.SpriteSplitController.spriteRenderer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: spriteRenderer
        path: ''
        startLine: 11508
      syntax:
        content:
          CSharp: public SpriteRenderer spriteRenderer { get; }
          VB: Public Property spriteRenderer As SpriteRenderer
        parameters: []
        return:
          type: Global.SpriteRenderer
      overload: UCT.Battle.SpriteSplitController.spriteRenderer*
    - id: UCT.Battle.SpriteSplitController.ReturnPool(GameObject)
      commentId: M:UCT.Battle.SpriteSplitController.ReturnPool(GameObject)
      language: CSharp
      name:
        CSharp: ReturnPool(GameObject)
        VB: ReturnPool(GameObject)
      nameWithType:
        CSharp: SpriteSplitController.ReturnPool(GameObject)
        VB: SpriteSplitController.ReturnPool(GameObject)
      qualifiedName:
        CSharp: UCT.Battle.SpriteSplitController.ReturnPool(GameObject)
        VB: UCT.Battle.SpriteSplitController.ReturnPool(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle
      source:
        id: ReturnPool
        path: ''
        startLine: 11653
      summary: "\n返回对象池\n"
      example: []
      syntax:
        content:
          CSharp: public void ReturnPool(GameObject inputObject)
          VB: Public Sub ReturnPool(inputObject As GameObject)
        parameters:
        - id: inputObject
          type: Global.GameObject
      overload: UCT.Battle.SpriteSplitController.ReturnPool*
  - id: UCT.Battle.PolygonMask
    commentId: T:UCT.Battle.PolygonMask
    language: CSharp
    name:
      CSharp: PolygonMask
      VB: PolygonMask
    nameWithType:
      CSharp: PolygonMask
      VB: PolygonMask
    qualifiedName:
      CSharp: UCT.Battle.PolygonMask
      VB: UCT.Battle.PolygonMask
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: PolygonMask
      path: ''
      startLine: 11687
    syntax:
      content:
        CSharp: 'public class PolygonMask : MonoBehaviour'
        VB: Public Class PolygonMask Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: UCT.Battle.ProjectionCheckCollider
    commentId: T:UCT.Battle.ProjectionCheckCollider
    language: CSharp
    name:
      CSharp: ProjectionCheckCollider
      VB: ProjectionCheckCollider
    nameWithType:
      CSharp: ProjectionCheckCollider
      VB: ProjectionCheckCollider
    qualifiedName:
      CSharp: UCT.Battle.ProjectionCheckCollider
      VB: UCT.Battle.ProjectionCheckCollider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle
    source:
      id: ProjectionCheckCollider
      path: ''
      startLine: 11941
    summary: "\n投影原先心的判定。\n如果你直接把弹幕放在原先心的位置（负一千），可能会导致显示问题。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ProjectionCheckCollider : ObjectPool'
        VB: Public Class ProjectionCheckCollider Inherits ObjectPool
    inheritance:
    - System.Object
    items: []
- id: UCT.Battle.MultiEnemiesConfigs
  commentId: N:UCT.Battle.MultiEnemiesConfigs
  language: CSharp
  name:
    CSharp: UCT.Battle.MultiEnemiesConfigs
    VB: UCT.Battle.MultiEnemiesConfigs
  nameWithType:
    CSharp: UCT.Battle.MultiEnemiesConfigs
    VB: UCT.Battle.MultiEnemiesConfigs
  qualifiedName:
    CSharp: UCT.Battle.MultiEnemiesConfigs
    VB: UCT.Battle.MultiEnemiesConfigs
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
    commentId: T:UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
    language: CSharp
    name:
      CSharp: IMultiEnemiesConfig
      VB: IMultiEnemiesConfig
    nameWithType:
      CSharp: IMultiEnemiesConfig
      VB: IMultiEnemiesConfig
    qualifiedName:
      CSharp: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
      VB: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle.MultiEnemiesConfigs
    source:
      id: IMultiEnemiesConfig
      path: ''
      startLine: 11992
    syntax:
      content:
        CSharp: public interface IMultiEnemiesConfig
        VB: Public Interface IMultiEnemiesConfig
    items:
    - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames
      commentId: P:UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames
      language: CSharp
      name:
        CSharp: EnemyNames
        VB: EnemyNames
      nameWithType:
        CSharp: IMultiEnemiesConfig.EnemyNames
        VB: IMultiEnemiesConfig.EnemyNames
      qualifiedName:
        CSharp: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames
        VB: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.MultiEnemiesConfigs
      source:
        id: EnemyNames
        path: ''
        startLine: 11994
      syntax:
        content:
          CSharp: string[] EnemyNames { get; }
          VB: ReadOnly Property EnemyNames As String()
        parameters: []
        return:
          type: System.String[]
      overload: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames*
    - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList
      commentId: P:UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList
      language: CSharp
      name:
        CSharp: validIndicesList
        VB: validIndicesList
      nameWithType:
        CSharp: IMultiEnemiesConfig.validIndicesList
        VB: IMultiEnemiesConfig.validIndicesList
      qualifiedName:
        CSharp: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList
        VB: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.MultiEnemiesConfigs
      source:
        id: validIndicesList
        path: ''
        startLine: 11995
      syntax:
        content:
          CSharp: List<int[]> validIndicesList { get; }
          VB: ReadOnly Property validIndicesList As List(Of Integer())
        parameters: []
        return:
          type: System.Collections.Generic.List{System.Int32[]}
      overload: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList*
    - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns(System.Int32[],ObjectPool,ObjectPool)
      commentId: M:UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns(System.Int32[],ObjectPool,ObjectPool)
      language: CSharp
      name:
        CSharp: _EnemyTurns(int[], ObjectPool, ObjectPool)
        VB: _EnemyTurns(Integer(), ObjectPool, ObjectPool)
      nameWithType:
        CSharp: IMultiEnemiesConfig._EnemyTurns(int[], ObjectPool, ObjectPool)
        VB: IMultiEnemiesConfig._EnemyTurns(Integer(), ObjectPool, ObjectPool)
      qualifiedName:
        CSharp: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns(int[], ObjectPool, ObjectPool)
        VB: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns(Integer(), ObjectPool, ObjectPool)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.MultiEnemiesConfigs
      source:
        id: _EnemyTurns
        path: ''
        startLine: 11996
      syntax:
        content:
          CSharp: IEnumerator<float> _EnemyTurns(int[] indices, ObjectPool bulletPool, ObjectPool boardPool)
          VB: Function _EnemyTurns(indices As Integer(), bulletPool As ObjectPool, boardPool As ObjectPool) As IEnumerator(Of Single)
        parameters:
        - id: indices
          type: System.Int32[]
        - id: bulletPool
          type: Global.ObjectPool
        - id: boardPool
          type: Global.ObjectPool
        return:
          type: System.Collections.Generic.IEnumerator{System.Single}
      overload: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns*
  - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config
    commentId: T:UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config
    language: CSharp
    name:
      CSharp: Npc1AndNpc2Config
      VB: Npc1AndNpc2Config
    nameWithType:
      CSharp: Npc1AndNpc2Config
      VB: Npc1AndNpc2Config
    qualifiedName:
      CSharp: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config
      VB: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle.MultiEnemiesConfigs
    source:
      id: Npc1AndNpc2Config
      path: ''
      startLine: 11999
    syntax:
      content:
        CSharp: 'public class Npc1AndNpc2Config : IMultiEnemiesConfig'
        VB: Public Class Npc1AndNpc2Config Implements IMultiEnemiesConfig
    inheritance:
    - System.Object
    implements:
    - UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
    items:
    - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.EnemyNames
      commentId: P:UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.EnemyNames
      language: CSharp
      name:
        CSharp: EnemyNames
        VB: EnemyNames
      nameWithType:
        CSharp: Npc1AndNpc2Config.EnemyNames
        VB: Npc1AndNpc2Config.EnemyNames
      qualifiedName:
        CSharp: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.EnemyNames
        VB: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.EnemyNames
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.MultiEnemiesConfigs
      source:
        id: EnemyNames
        path: ''
        startLine: 12001
      syntax:
        content:
          CSharp: public string[] EnemyNames { get; }
          VB: Public ReadOnly Property EnemyNames As String()
        parameters: []
        return:
          type: System.String[]
      overload: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.EnemyNames*
      implements:
      - UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames
    - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.validIndicesList
      commentId: P:UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.validIndicesList
      language: CSharp
      name:
        CSharp: validIndicesList
        VB: validIndicesList
      nameWithType:
        CSharp: Npc1AndNpc2Config.validIndicesList
        VB: Npc1AndNpc2Config.validIndicesList
      qualifiedName:
        CSharp: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.validIndicesList
        VB: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.validIndicesList
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.MultiEnemiesConfigs
      source:
        id: validIndicesList
        path: ''
        startLine: 12003
      syntax:
        content:
          CSharp: public List<int[]> validIndicesList { get; }
          VB: Public ReadOnly Property validIndicesList As List(Of Integer())
        parameters: []
        return:
          type: System.Collections.Generic.List{System.Int32[]}
      overload: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.validIndicesList*
      implements:
      - UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList
    - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config._EnemyTurns(System.Int32[],ObjectPool,ObjectPool)
      commentId: M:UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config._EnemyTurns(System.Int32[],ObjectPool,ObjectPool)
      language: CSharp
      name:
        CSharp: _EnemyTurns(int[], ObjectPool, ObjectPool)
        VB: _EnemyTurns(Integer(), ObjectPool, ObjectPool)
      nameWithType:
        CSharp: Npc1AndNpc2Config._EnemyTurns(int[], ObjectPool, ObjectPool)
        VB: Npc1AndNpc2Config._EnemyTurns(Integer(), ObjectPool, ObjectPool)
      qualifiedName:
        CSharp: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config._EnemyTurns(int[], ObjectPool, ObjectPool)
        VB: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config._EnemyTurns(Integer(), ObjectPool, ObjectPool)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.MultiEnemiesConfigs
      source:
        id: _EnemyTurns
        path: ''
        startLine: 12013
      syntax:
        content:
          CSharp: public IEnumerator<float> _EnemyTurns(int[] indices, ObjectPool bulletPool, ObjectPool boardPool)
          VB: Public Function _EnemyTurns(indices As Integer(), bulletPool As ObjectPool, boardPool As ObjectPool) As IEnumerator(Of Single)
        parameters:
        - id: indices
          type: System.Int32[]
        - id: bulletPool
          type: Global.ObjectPool
        - id: boardPool
          type: Global.ObjectPool
        return:
          type: System.Collections.Generic.IEnumerator{System.Single}
      overload: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config._EnemyTurns*
      implements:
      - UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns(System.Int32[],ObjectPool,ObjectPool)
- id: UCT.Battle.BattleConfigs
  commentId: N:UCT.Battle.BattleConfigs
  language: CSharp
  name:
    CSharp: UCT.Battle.BattleConfigs
    VB: UCT.Battle.BattleConfigs
  nameWithType:
    CSharp: UCT.Battle.BattleConfigs
    VB: UCT.Battle.BattleConfigs
  qualifiedName:
    CSharp: UCT.Battle.BattleConfigs
    VB: UCT.Battle.BattleConfigs
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.Battle.BattleConfigs.DemoBattle2
    commentId: T:UCT.Battle.BattleConfigs.DemoBattle2
    language: CSharp
    name:
      CSharp: DemoBattle2
      VB: DemoBattle2
    nameWithType:
      CSharp: DemoBattle2
      VB: DemoBattle2
    qualifiedName:
      CSharp: UCT.Battle.BattleConfigs.DemoBattle2
      VB: UCT.Battle.BattleConfigs.DemoBattle2
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle.BattleConfigs
    source:
      id: DemoBattle2
      path: ''
      startLine: 12072
    syntax:
      content:
        CSharp: 'public class DemoBattle2 : IBattleConfig'
        VB: Public Class DemoBattle2 Implements IBattleConfig
    inheritance:
    - System.Object
    implements:
    - UCT.Battle.BattleConfigs.IBattleConfig
    items:
    - id: UCT.Battle.BattleConfigs.DemoBattle2.enemies
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle2.enemies
      language: CSharp
      name:
        CSharp: enemies
        VB: enemies
      nameWithType:
        CSharp: DemoBattle2.enemies
        VB: DemoBattle2.enemies
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle2.enemies
        VB: UCT.Battle.BattleConfigs.DemoBattle2.enemies
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: enemies
        path: ''
        startLine: 12074
      syntax:
        content:
          CSharp: public GameObject[] enemies { get; }
          VB: Public ReadOnly Property enemies As GameObject()
        parameters: []
        return:
          type: Global.GameObject[]
      overload: UCT.Battle.BattleConfigs.DemoBattle2.enemies*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.enemies
    - id: UCT.Battle.BattleConfigs.DemoBattle2.enemiesStartPosition
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle2.enemiesStartPosition
      language: CSharp
      name:
        CSharp: enemiesStartPosition
        VB: enemiesStartPosition
      nameWithType:
        CSharp: DemoBattle2.enemiesStartPosition
        VB: DemoBattle2.enemiesStartPosition
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle2.enemiesStartPosition
        VB: UCT.Battle.BattleConfigs.DemoBattle2.enemiesStartPosition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: enemiesStartPosition
        path: ''
        startLine: 12080
      syntax:
        content:
          CSharp: public Vector3?[] enemiesStartPosition { get; }
          VB: Public ReadOnly Property enemiesStartPosition As Vector3?()
        parameters: []
        return:
          type: System.Nullable{Vector3}[]
      overload: UCT.Battle.BattleConfigs.DemoBattle2.enemiesStartPosition*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition
    - id: UCT.Battle.BattleConfigs.DemoBattle2.backGroundModel
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle2.backGroundModel
      language: CSharp
      name:
        CSharp: backGroundModel
        VB: backGroundModel
      nameWithType:
        CSharp: DemoBattle2.backGroundModel
        VB: DemoBattle2.backGroundModel
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle2.backGroundModel
        VB: UCT.Battle.BattleConfigs.DemoBattle2.backGroundModel
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: backGroundModel
        path: ''
        startLine: 12086
      syntax:
        content:
          CSharp: public GameObject backGroundModel { get; }
          VB: Public ReadOnly Property backGroundModel As GameObject
        parameters: []
        return:
          type: Global.GameObject
      overload: UCT.Battle.BattleConfigs.DemoBattle2.backGroundModel*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel
    - id: UCT.Battle.BattleConfigs.DemoBattle2.skyBox
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle2.skyBox
      language: CSharp
      name:
        CSharp: skyBox
        VB: skyBox
      nameWithType:
        CSharp: DemoBattle2.skyBox
        VB: DemoBattle2.skyBox
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle2.skyBox
        VB: UCT.Battle.BattleConfigs.DemoBattle2.skyBox
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: skyBox
        path: ''
        startLine: 12088
      syntax:
        content:
          CSharp: public Material skyBox { get; }
          VB: Public ReadOnly Property skyBox As Material
        parameters: []
        return:
          type: Global.Material
      overload: UCT.Battle.BattleConfigs.DemoBattle2.skyBox*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.skyBox
    - id: UCT.Battle.BattleConfigs.DemoBattle2.volumeProfile
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle2.volumeProfile
      language: CSharp
      name:
        CSharp: volumeProfile
        VB: volumeProfile
      nameWithType:
        CSharp: DemoBattle2.volumeProfile
        VB: DemoBattle2.volumeProfile
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle2.volumeProfile
        VB: UCT.Battle.BattleConfigs.DemoBattle2.volumeProfile
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: volumeProfile
        path: ''
        startLine: 12090
      syntax:
        content:
          CSharp: public VolumeProfile volumeProfile { get; }
          VB: Public ReadOnly Property volumeProfile As VolumeProfile
        parameters: []
        return:
          type: Global.VolumeProfile
      overload: UCT.Battle.BattleConfigs.DemoBattle2.volumeProfile*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile
    - id: UCT.Battle.BattleConfigs.DemoBattle2.bgmClip
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle2.bgmClip
      language: CSharp
      name:
        CSharp: bgmClip
        VB: bgmClip
      nameWithType:
        CSharp: DemoBattle2.bgmClip
        VB: DemoBattle2.bgmClip
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle2.bgmClip
        VB: UCT.Battle.BattleConfigs.DemoBattle2.bgmClip
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: bgmClip
        path: ''
        startLine: 12093
      syntax:
        content:
          CSharp: public AudioClip bgmClip { get; }
          VB: Public ReadOnly Property bgmClip As AudioClip
        parameters: []
        return:
          type: Global.AudioClip
      overload: UCT.Battle.BattleConfigs.DemoBattle2.bgmClip*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.bgmClip
    - id: UCT.Battle.BattleConfigs.DemoBattle2.volume
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle2.volume
      language: CSharp
      name:
        CSharp: volume
        VB: volume
      nameWithType:
        CSharp: DemoBattle2.volume
        VB: DemoBattle2.volume
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle2.volume
        VB: UCT.Battle.BattleConfigs.DemoBattle2.volume
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: volume
        path: ''
        startLine: 12094
      syntax:
        content:
          CSharp: public float volume { get; }
          VB: Public ReadOnly Property volume As Single
        parameters: []
        return:
          type: System.Single
      overload: UCT.Battle.BattleConfigs.DemoBattle2.volume*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.volume
    - id: UCT.Battle.BattleConfigs.DemoBattle2.pitch
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle2.pitch
      language: CSharp
      name:
        CSharp: pitch
        VB: pitch
      nameWithType:
        CSharp: DemoBattle2.pitch
        VB: DemoBattle2.pitch
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle2.pitch
        VB: UCT.Battle.BattleConfigs.DemoBattle2.pitch
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: pitch
        path: ''
        startLine: 12095
      syntax:
        content:
          CSharp: public float pitch { get; }
          VB: Public ReadOnly Property pitch As Single
        parameters: []
        return:
          type: System.Single
      overload: UCT.Battle.BattleConfigs.DemoBattle2.pitch*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.pitch
    - id: UCT.Battle.BattleConfigs.DemoBattle2.Turn(System.Int32,ObjectPool)
      commentId: M:UCT.Battle.BattleConfigs.DemoBattle2.Turn(System.Int32,ObjectPool)
      language: CSharp
      name:
        CSharp: Turn(int, ObjectPool)
        VB: Turn(Integer, ObjectPool)
      nameWithType:
        CSharp: DemoBattle2.Turn(int, ObjectPool)
        VB: DemoBattle2.Turn(Integer, ObjectPool)
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle2.Turn(int, ObjectPool)
        VB: UCT.Battle.BattleConfigs.DemoBattle2.Turn(Integer, ObjectPool)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: Turn
        path: ''
        startLine: 12097
      syntax:
        content:
          CSharp: public IEnumerator<float> Turn(int turnNumber, ObjectPool bulletPool)
          VB: Public Function Turn(turnNumber As Integer, bulletPool As ObjectPool) As IEnumerator(Of Single)
        parameters:
        - id: turnNumber
          type: System.Int32
        - id: bulletPool
          type: Global.ObjectPool
        return:
          type: System.Collections.Generic.IEnumerator{System.Single}
      overload: UCT.Battle.BattleConfigs.DemoBattle2.Turn*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.Turn(System.Int32,ObjectPool)
  - id: UCT.Battle.BattleConfigs.IBattleConfig
    commentId: T:UCT.Battle.BattleConfigs.IBattleConfig
    language: CSharp
    name:
      CSharp: IBattleConfig
      VB: IBattleConfig
    nameWithType:
      CSharp: IBattleConfig
      VB: IBattleConfig
    qualifiedName:
      CSharp: UCT.Battle.BattleConfigs.IBattleConfig
      VB: UCT.Battle.BattleConfigs.IBattleConfig
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle.BattleConfigs
    source:
      id: IBattleConfig
      path: ''
      startLine: 12170
    summary: "\n对战斗进行配置的接口类\n"
    example: []
    syntax:
      content:
        CSharp: public interface IBattleConfig
        VB: Public Interface IBattleConfig
    items:
    - id: UCT.Battle.BattleConfigs.IBattleConfig.enemies
      commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.enemies
      language: CSharp
      name:
        CSharp: enemies
        VB: enemies
      nameWithType:
        CSharp: IBattleConfig.enemies
        VB: IBattleConfig.enemies
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.IBattleConfig.enemies
        VB: UCT.Battle.BattleConfigs.IBattleConfig.enemies
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: enemies
        path: ''
        startLine: 12172
      syntax:
        content:
          CSharp: GameObject[] enemies { get; }
          VB: ReadOnly Property enemies As GameObject()
        parameters: []
        return:
          type: Global.GameObject[]
      overload: UCT.Battle.BattleConfigs.IBattleConfig.enemies*
    - id: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition
      commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition
      language: CSharp
      name:
        CSharp: enemiesStartPosition
        VB: enemiesStartPosition
      nameWithType:
        CSharp: IBattleConfig.enemiesStartPosition
        VB: IBattleConfig.enemiesStartPosition
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition
        VB: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: enemiesStartPosition
        path: ''
        startLine: 12173
      syntax:
        content:
          CSharp: Vector3?[] enemiesStartPosition { get; }
          VB: ReadOnly Property enemiesStartPosition As Vector3?()
        parameters: []
        return:
          type: System.Nullable{Vector3}[]
      overload: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition*
    - id: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel
      commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel
      language: CSharp
      name:
        CSharp: backGroundModel
        VB: backGroundModel
      nameWithType:
        CSharp: IBattleConfig.backGroundModel
        VB: IBattleConfig.backGroundModel
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel
        VB: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: backGroundModel
        path: ''
        startLine: 12174
      syntax:
        content:
          CSharp: GameObject backGroundModel { get; }
          VB: ReadOnly Property backGroundModel As GameObject
        parameters: []
        return:
          type: Global.GameObject
      overload: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel*
    - id: UCT.Battle.BattleConfigs.IBattleConfig.skyBox
      commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.skyBox
      language: CSharp
      name:
        CSharp: skyBox
        VB: skyBox
      nameWithType:
        CSharp: IBattleConfig.skyBox
        VB: IBattleConfig.skyBox
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.IBattleConfig.skyBox
        VB: UCT.Battle.BattleConfigs.IBattleConfig.skyBox
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: skyBox
        path: ''
        startLine: 12175
      syntax:
        content:
          CSharp: Material skyBox { get; }
          VB: ReadOnly Property skyBox As Material
        parameters: []
        return:
          type: Global.Material
      overload: UCT.Battle.BattleConfigs.IBattleConfig.skyBox*
    - id: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile
      commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile
      language: CSharp
      name:
        CSharp: volumeProfile
        VB: volumeProfile
      nameWithType:
        CSharp: IBattleConfig.volumeProfile
        VB: IBattleConfig.volumeProfile
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile
        VB: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: volumeProfile
        path: ''
        startLine: 12176
      syntax:
        content:
          CSharp: VolumeProfile volumeProfile { get; }
          VB: ReadOnly Property volumeProfile As VolumeProfile
        parameters: []
        return:
          type: Global.VolumeProfile
      overload: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile*
    - id: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip
      commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.bgmClip
      language: CSharp
      name:
        CSharp: bgmClip
        VB: bgmClip
      nameWithType:
        CSharp: IBattleConfig.bgmClip
        VB: IBattleConfig.bgmClip
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip
        VB: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: bgmClip
        path: ''
        startLine: 12177
      syntax:
        content:
          CSharp: AudioClip bgmClip { get; }
          VB: ReadOnly Property bgmClip As AudioClip
        parameters: []
        return:
          type: Global.AudioClip
      overload: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip*
    - id: UCT.Battle.BattleConfigs.IBattleConfig.volume
      commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.volume
      language: CSharp
      name:
        CSharp: volume
        VB: volume
      nameWithType:
        CSharp: IBattleConfig.volume
        VB: IBattleConfig.volume
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.IBattleConfig.volume
        VB: UCT.Battle.BattleConfigs.IBattleConfig.volume
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: volume
        path: ''
        startLine: 12178
      syntax:
        content:
          CSharp: float volume { get; }
          VB: ReadOnly Property volume As Single
        parameters: []
        return:
          type: System.Single
      overload: UCT.Battle.BattleConfigs.IBattleConfig.volume*
    - id: UCT.Battle.BattleConfigs.IBattleConfig.pitch
      commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.pitch
      language: CSharp
      name:
        CSharp: pitch
        VB: pitch
      nameWithType:
        CSharp: IBattleConfig.pitch
        VB: IBattleConfig.pitch
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.IBattleConfig.pitch
        VB: UCT.Battle.BattleConfigs.IBattleConfig.pitch
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: pitch
        path: ''
        startLine: 12179
      syntax:
        content:
          CSharp: float pitch { get; }
          VB: ReadOnly Property pitch As Single
        parameters: []
        return:
          type: System.Single
      overload: UCT.Battle.BattleConfigs.IBattleConfig.pitch*
    - id: UCT.Battle.BattleConfigs.IBattleConfig.Turn(System.Int32,ObjectPool)
      commentId: M:UCT.Battle.BattleConfigs.IBattleConfig.Turn(System.Int32,ObjectPool)
      language: CSharp
      name:
        CSharp: Turn(int, ObjectPool)
        VB: Turn(Integer, ObjectPool)
      nameWithType:
        CSharp: IBattleConfig.Turn(int, ObjectPool)
        VB: IBattleConfig.Turn(Integer, ObjectPool)
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.IBattleConfig.Turn(int, ObjectPool)
        VB: UCT.Battle.BattleConfigs.IBattleConfig.Turn(Integer, ObjectPool)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: Turn
        path: ''
        startLine: 12180
      syntax:
        content:
          CSharp: IEnumerator<float> Turn(int turnNumber, ObjectPool bulletPool)
          VB: Function Turn(turnNumber As Integer, bulletPool As ObjectPool) As IEnumerator(Of Single)
        parameters:
        - id: turnNumber
          type: System.Int32
        - id: bulletPool
          type: Global.ObjectPool
        return:
          type: System.Collections.Generic.IEnumerator{System.Single}
      overload: UCT.Battle.BattleConfigs.IBattleConfig.Turn*
  - id: UCT.Battle.BattleConfigs.DemoBattle
    commentId: T:UCT.Battle.BattleConfigs.DemoBattle
    language: CSharp
    name:
      CSharp: DemoBattle
      VB: DemoBattle
    nameWithType:
      CSharp: DemoBattle
      VB: DemoBattle
    qualifiedName:
      CSharp: UCT.Battle.BattleConfigs.DemoBattle
      VB: UCT.Battle.BattleConfigs.DemoBattle
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle.BattleConfigs
    source:
      id: DemoBattle
      path: ''
      startLine: 12194
    syntax:
      content:
        CSharp: 'public class DemoBattle : IBattleConfig'
        VB: Public Class DemoBattle Implements IBattleConfig
    inheritance:
    - System.Object
    implements:
    - UCT.Battle.BattleConfigs.IBattleConfig
    items:
    - id: UCT.Battle.BattleConfigs.DemoBattle.enemies
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle.enemies
      language: CSharp
      name:
        CSharp: enemies
        VB: enemies
      nameWithType:
        CSharp: DemoBattle.enemies
        VB: DemoBattle.enemies
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle.enemies
        VB: UCT.Battle.BattleConfigs.DemoBattle.enemies
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: enemies
        path: ''
        startLine: 12196
      syntax:
        content:
          CSharp: public GameObject[] enemies { get; }
          VB: Public ReadOnly Property enemies As GameObject()
        parameters: []
        return:
          type: Global.GameObject[]
      overload: UCT.Battle.BattleConfigs.DemoBattle.enemies*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.enemies
    - id: UCT.Battle.BattleConfigs.DemoBattle.enemiesStartPosition
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle.enemiesStartPosition
      language: CSharp
      name:
        CSharp: enemiesStartPosition
        VB: enemiesStartPosition
      nameWithType:
        CSharp: DemoBattle.enemiesStartPosition
        VB: DemoBattle.enemiesStartPosition
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle.enemiesStartPosition
        VB: UCT.Battle.BattleConfigs.DemoBattle.enemiesStartPosition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: enemiesStartPosition
        path: ''
        startLine: 12202
      syntax:
        content:
          CSharp: public Vector3?[] enemiesStartPosition { get; }
          VB: Public ReadOnly Property enemiesStartPosition As Vector3?()
        parameters: []
        return:
          type: System.Nullable{Vector3}[]
      overload: UCT.Battle.BattleConfigs.DemoBattle.enemiesStartPosition*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition
    - id: UCT.Battle.BattleConfigs.DemoBattle.backGroundModel
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle.backGroundModel
      language: CSharp
      name:
        CSharp: backGroundModel
        VB: backGroundModel
      nameWithType:
        CSharp: DemoBattle.backGroundModel
        VB: DemoBattle.backGroundModel
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle.backGroundModel
        VB: UCT.Battle.BattleConfigs.DemoBattle.backGroundModel
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: backGroundModel
        path: ''
        startLine: 12208
      syntax:
        content:
          CSharp: public GameObject backGroundModel { get; }
          VB: Public ReadOnly Property backGroundModel As GameObject
        parameters: []
        return:
          type: Global.GameObject
      overload: UCT.Battle.BattleConfigs.DemoBattle.backGroundModel*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel
    - id: UCT.Battle.BattleConfigs.DemoBattle.skyBox
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle.skyBox
      language: CSharp
      name:
        CSharp: skyBox
        VB: skyBox
      nameWithType:
        CSharp: DemoBattle.skyBox
        VB: DemoBattle.skyBox
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle.skyBox
        VB: UCT.Battle.BattleConfigs.DemoBattle.skyBox
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: skyBox
        path: ''
        startLine: 12210
      syntax:
        content:
          CSharp: public Material skyBox { get; }
          VB: Public ReadOnly Property skyBox As Material
        parameters: []
        return:
          type: Global.Material
      overload: UCT.Battle.BattleConfigs.DemoBattle.skyBox*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.skyBox
    - id: UCT.Battle.BattleConfigs.DemoBattle.volumeProfile
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle.volumeProfile
      language: CSharp
      name:
        CSharp: volumeProfile
        VB: volumeProfile
      nameWithType:
        CSharp: DemoBattle.volumeProfile
        VB: DemoBattle.volumeProfile
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle.volumeProfile
        VB: UCT.Battle.BattleConfigs.DemoBattle.volumeProfile
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: volumeProfile
        path: ''
        startLine: 12212
      syntax:
        content:
          CSharp: public VolumeProfile volumeProfile { get; }
          VB: Public ReadOnly Property volumeProfile As VolumeProfile
        parameters: []
        return:
          type: Global.VolumeProfile
      overload: UCT.Battle.BattleConfigs.DemoBattle.volumeProfile*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile
    - id: UCT.Battle.BattleConfigs.DemoBattle.bgmClip
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle.bgmClip
      language: CSharp
      name:
        CSharp: bgmClip
        VB: bgmClip
      nameWithType:
        CSharp: DemoBattle.bgmClip
        VB: DemoBattle.bgmClip
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle.bgmClip
        VB: UCT.Battle.BattleConfigs.DemoBattle.bgmClip
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: bgmClip
        path: ''
        startLine: 12215
      syntax:
        content:
          CSharp: public AudioClip bgmClip { get; }
          VB: Public ReadOnly Property bgmClip As AudioClip
        parameters: []
        return:
          type: Global.AudioClip
      overload: UCT.Battle.BattleConfigs.DemoBattle.bgmClip*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.bgmClip
    - id: UCT.Battle.BattleConfigs.DemoBattle.volume
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle.volume
      language: CSharp
      name:
        CSharp: volume
        VB: volume
      nameWithType:
        CSharp: DemoBattle.volume
        VB: DemoBattle.volume
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle.volume
        VB: UCT.Battle.BattleConfigs.DemoBattle.volume
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: volume
        path: ''
        startLine: 12216
      syntax:
        content:
          CSharp: public float volume { get; }
          VB: Public ReadOnly Property volume As Single
        parameters: []
        return:
          type: System.Single
      overload: UCT.Battle.BattleConfigs.DemoBattle.volume*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.volume
    - id: UCT.Battle.BattleConfigs.DemoBattle.pitch
      commentId: P:UCT.Battle.BattleConfigs.DemoBattle.pitch
      language: CSharp
      name:
        CSharp: pitch
        VB: pitch
      nameWithType:
        CSharp: DemoBattle.pitch
        VB: DemoBattle.pitch
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle.pitch
        VB: UCT.Battle.BattleConfigs.DemoBattle.pitch
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: pitch
        path: ''
        startLine: 12217
      syntax:
        content:
          CSharp: public float pitch { get; }
          VB: Public ReadOnly Property pitch As Single
        parameters: []
        return:
          type: System.Single
      overload: UCT.Battle.BattleConfigs.DemoBattle.pitch*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.pitch
    - id: UCT.Battle.BattleConfigs.DemoBattle.Turn(System.Int32,ObjectPool)
      commentId: M:UCT.Battle.BattleConfigs.DemoBattle.Turn(System.Int32,ObjectPool)
      language: CSharp
      name:
        CSharp: Turn(int, ObjectPool)
        VB: Turn(Integer, ObjectPool)
      nameWithType:
        CSharp: DemoBattle.Turn(int, ObjectPool)
        VB: DemoBattle.Turn(Integer, ObjectPool)
      qualifiedName:
        CSharp: UCT.Battle.BattleConfigs.DemoBattle.Turn(int, ObjectPool)
        VB: UCT.Battle.BattleConfigs.DemoBattle.Turn(Integer, ObjectPool)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.BattleConfigs
      source:
        id: Turn
        path: ''
        startLine: 12219
      syntax:
        content:
          CSharp: public IEnumerator<float> Turn(int turnNumber, ObjectPool bulletPool)
          VB: Public Function Turn(turnNumber As Integer, bulletPool As ObjectPool) As IEnumerator(Of Single)
        parameters:
        - id: turnNumber
          type: System.Int32
        - id: bulletPool
          type: Global.ObjectPool
        return:
          type: System.Collections.Generic.IEnumerator{System.Single}
      overload: UCT.Battle.BattleConfigs.DemoBattle.Turn*
      implements:
      - UCT.Battle.BattleConfigs.IBattleConfig.Turn(System.Int32,ObjectPool)
- id: UCT.Battle.Enemies
  commentId: N:UCT.Battle.Enemies
  language: CSharp
  name:
    CSharp: UCT.Battle.Enemies
    VB: UCT.Battle.Enemies
  nameWithType:
    CSharp: UCT.Battle.Enemies
    VB: UCT.Battle.Enemies
  qualifiedName:
    CSharp: UCT.Battle.Enemies
    VB: UCT.Battle.Enemies
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.Battle.Enemies.Npc2Enemy
    commentId: T:UCT.Battle.Enemies.Npc2Enemy
    language: CSharp
    name:
      CSharp: Npc2Enemy
      VB: Npc2Enemy
    nameWithType:
      CSharp: Npc2Enemy
      VB: Npc2Enemy
    qualifiedName:
      CSharp: UCT.Battle.Enemies.Npc2Enemy
      VB: UCT.Battle.Enemies.Npc2Enemy
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle.Enemies
    source:
      id: Npc2Enemy
      path: ''
      startLine: 12386
    syntax:
      content:
        CSharp: 'public class Npc2Enemy : MonoBehaviour, IEnemy'
        VB: Public Class Npc2Enemy Inherits MonoBehaviour Implements IEnemy
    inheritance:
    - System.Object
    implements:
    - UCT.Battle.Enemies.IEnemy
    items:
    - id: UCT.Battle.Enemies.Npc2Enemy.TurnGenerator
      commentId: P:UCT.Battle.Enemies.Npc2Enemy.TurnGenerator
      language: CSharp
      name:
        CSharp: TurnGenerator
        VB: TurnGenerator
      nameWithType:
        CSharp: Npc2Enemy.TurnGenerator
        VB: Npc2Enemy.TurnGenerator
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc2Enemy.TurnGenerator
        VB: UCT.Battle.Enemies.Npc2Enemy.TurnGenerator
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: TurnGenerator
        path: ''
        startLine: 12393
      syntax:
        content:
          CSharp: public IEnemyTurnNumber TurnGenerator { get; set; }
          VB: Public Property TurnGenerator As IEnemyTurnNumber
        parameters: []
        return:
          type: UCT.Battle.Enemies.IEnemyTurnNumber
      overload: UCT.Battle.Enemies.Npc2Enemy.TurnGenerator*
      implements:
      - UCT.Battle.Enemies.IEnemy.TurnGenerator
    - id: UCT.Battle.Enemies.Npc2Enemy.GetActOptions
      commentId: M:UCT.Battle.Enemies.Npc2Enemy.GetActOptions
      language: CSharp
      name:
        CSharp: GetActOptions()
        VB: GetActOptions()
      nameWithType:
        CSharp: Npc2Enemy.GetActOptions()
        VB: Npc2Enemy.GetActOptions()
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc2Enemy.GetActOptions()
        VB: UCT.Battle.Enemies.Npc2Enemy.GetActOptions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: GetActOptions
        path: ''
        startLine: 12395
      syntax:
        content:
          CSharp: public Action[] GetActOptions()
          VB: Public Function GetActOptions() As Action()
        return:
          type: System.Action[]
      overload: UCT.Battle.Enemies.Npc2Enemy.GetActOptions*
      implements:
      - UCT.Battle.Enemies.IEnemy.GetActOptions
    - id: UCT.Battle.Enemies.Npc2Enemy.MercyTypes
      commentId: P:UCT.Battle.Enemies.Npc2Enemy.MercyTypes
      language: CSharp
      name:
        CSharp: MercyTypes
        VB: MercyTypes
      nameWithType:
        CSharp: Npc2Enemy.MercyTypes
        VB: Npc2Enemy.MercyTypes
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc2Enemy.MercyTypes
        VB: UCT.Battle.Enemies.Npc2Enemy.MercyTypes
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: MercyTypes
        path: ''
        startLine: 12410
      syntax:
        content:
          CSharp: public MercyType[] MercyTypes { get; }
          VB: Public ReadOnly Property MercyTypes As MercyType()
        parameters: []
        return:
          type: UCT.Battle.Enemies.MercyType[]
      overload: UCT.Battle.Enemies.Npc2Enemy.MercyTypes*
      implements:
      - UCT.Battle.Enemies.IEnemy.MercyTypes
    - id: UCT.Battle.Enemies.Npc2Enemy.GetActLikeOptions
      commentId: M:UCT.Battle.Enemies.Npc2Enemy.GetActLikeOptions
      language: CSharp
      name:
        CSharp: GetActLikeOptions()
        VB: GetActLikeOptions()
      nameWithType:
        CSharp: Npc2Enemy.GetActLikeOptions()
        VB: Npc2Enemy.GetActLikeOptions()
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc2Enemy.GetActLikeOptions()
        VB: UCT.Battle.Enemies.Npc2Enemy.GetActLikeOptions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: GetActLikeOptions
        path: ''
        startLine: 12413
      syntax:
        content:
          CSharp: public Action[] GetActLikeOptions()
          VB: Public Function GetActLikeOptions() As Action()
        return:
          type: System.Action[]
      overload: UCT.Battle.Enemies.Npc2Enemy.GetActLikeOptions*
      implements:
      - UCT.Battle.Enemies.IEnemy.GetActLikeOptions
    - id: UCT.Battle.Enemies.Npc2Enemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool)
      commentId: M:UCT.Battle.Enemies.Npc2Enemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool)
      language: CSharp
      name:
        CSharp: _EnemyTurns(int, ObjectPool, ObjectPool)
        VB: _EnemyTurns(Integer, ObjectPool, ObjectPool)
      nameWithType:
        CSharp: Npc2Enemy._EnemyTurns(int, ObjectPool, ObjectPool)
        VB: Npc2Enemy._EnemyTurns(Integer, ObjectPool, ObjectPool)
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc2Enemy._EnemyTurns(int, ObjectPool, ObjectPool)
        VB: UCT.Battle.Enemies.Npc2Enemy._EnemyTurns(Integer, ObjectPool, ObjectPool)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: _EnemyTurns
        path: ''
        startLine: 12422
      syntax:
        content:
          CSharp: public IEnumerator<float> _EnemyTurns(int index, ObjectPool bulletPool, ObjectPool boardPool)
          VB: Public Function _EnemyTurns(index As Integer, bulletPool As ObjectPool, boardPool As ObjectPool) As IEnumerator(Of Single)
        parameters:
        - id: index
          type: System.Int32
        - id: bulletPool
          type: Global.ObjectPool
        - id: boardPool
          type: Global.ObjectPool
        return:
          type: System.Collections.Generic.IEnumerator{System.Single}
      overload: UCT.Battle.Enemies.Npc2Enemy._EnemyTurns*
      implements:
      - UCT.Battle.Enemies.IEnemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool)
    - id: UCT.Battle.Enemies.Npc2Enemy.state
      commentId: P:UCT.Battle.Enemies.Npc2Enemy.state
      language: CSharp
      name:
        CSharp: state
        VB: state
      nameWithType:
        CSharp: Npc2Enemy.state
        VB: Npc2Enemy.state
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc2Enemy.state
        VB: UCT.Battle.Enemies.Npc2Enemy.state
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: state
        path: ''
        startLine: 12467
      syntax:
        content:
          CSharp: public EnemyState state { get; set; }
          VB: Public Property state As EnemyState
        parameters: []
        return:
          type: UCT.Battle.EnemyState
      overload: UCT.Battle.Enemies.Npc2Enemy.state*
      implements:
      - UCT.Battle.Enemies.IEnemy.state
    - id: UCT.Battle.Enemies.Npc2Enemy.exp
      commentId: P:UCT.Battle.Enemies.Npc2Enemy.exp
      language: CSharp
      name:
        CSharp: exp
        VB: exp
      nameWithType:
        CSharp: Npc2Enemy.exp
        VB: Npc2Enemy.exp
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc2Enemy.exp
        VB: UCT.Battle.Enemies.Npc2Enemy.exp
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: exp
        path: ''
        startLine: 12468
      syntax:
        content:
          CSharp: public int exp { get; }
          VB: Public ReadOnly Property exp As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Battle.Enemies.Npc2Enemy.exp*
      implements:
      - UCT.Battle.Enemies.IEnemy.exp
    - id: UCT.Battle.Enemies.Npc2Enemy.gold
      commentId: P:UCT.Battle.Enemies.Npc2Enemy.gold
      language: CSharp
      name:
        CSharp: gold
        VB: gold
      nameWithType:
        CSharp: Npc2Enemy.gold
        VB: Npc2Enemy.gold
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc2Enemy.gold
        VB: UCT.Battle.Enemies.Npc2Enemy.gold
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: gold
        path: ''
        startLine: 12469
      syntax:
        content:
          CSharp: public int gold { get; }
          VB: Public ReadOnly Property gold As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Battle.Enemies.Npc2Enemy.gold*
      implements:
      - UCT.Battle.Enemies.IEnemy.gold
  - id: UCT.Battle.Enemies.IEnemy
    commentId: T:UCT.Battle.Enemies.IEnemy
    language: CSharp
    name:
      CSharp: IEnemy
      VB: IEnemy
    nameWithType:
      CSharp: IEnemy
      VB: IEnemy
    qualifiedName:
      CSharp: UCT.Battle.Enemies.IEnemy
      VB: UCT.Battle.Enemies.IEnemy
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle.Enemies
    source:
      id: IEnemy
      path: ''
      startLine: 12478
    syntax:
      content:
        CSharp: public interface IEnemy
        VB: Public Interface IEnemy
    items:
    - id: UCT.Battle.Enemies.IEnemy.TurnGenerator
      commentId: P:UCT.Battle.Enemies.IEnemy.TurnGenerator
      language: CSharp
      name:
        CSharp: TurnGenerator
        VB: TurnGenerator
      nameWithType:
        CSharp: IEnemy.TurnGenerator
        VB: IEnemy.TurnGenerator
      qualifiedName:
        CSharp: UCT.Battle.Enemies.IEnemy.TurnGenerator
        VB: UCT.Battle.Enemies.IEnemy.TurnGenerator
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: TurnGenerator
        path: ''
        startLine: 12480
      syntax:
        content:
          CSharp: IEnemyTurnNumber TurnGenerator { get; set; }
          VB: Property TurnGenerator As IEnemyTurnNumber
        parameters: []
        return:
          type: UCT.Battle.Enemies.IEnemyTurnNumber
      overload: UCT.Battle.Enemies.IEnemy.TurnGenerator*
    - id: UCT.Battle.Enemies.IEnemy.MercyTypes
      commentId: P:UCT.Battle.Enemies.IEnemy.MercyTypes
      language: CSharp
      name:
        CSharp: MercyTypes
        VB: MercyTypes
      nameWithType:
        CSharp: IEnemy.MercyTypes
        VB: IEnemy.MercyTypes
      qualifiedName:
        CSharp: UCT.Battle.Enemies.IEnemy.MercyTypes
        VB: UCT.Battle.Enemies.IEnemy.MercyTypes
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: MercyTypes
        path: ''
        startLine: 12481
      syntax:
        content:
          CSharp: MercyType[] MercyTypes { get; }
          VB: ReadOnly Property MercyTypes As MercyType()
        parameters: []
        return:
          type: UCT.Battle.Enemies.MercyType[]
      overload: UCT.Battle.Enemies.IEnemy.MercyTypes*
    - id: UCT.Battle.Enemies.IEnemy.state
      commentId: P:UCT.Battle.Enemies.IEnemy.state
      language: CSharp
      name:
        CSharp: state
        VB: state
      nameWithType:
        CSharp: IEnemy.state
        VB: IEnemy.state
      qualifiedName:
        CSharp: UCT.Battle.Enemies.IEnemy.state
        VB: UCT.Battle.Enemies.IEnemy.state
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: state
        path: ''
        startLine: 12482
      syntax:
        content:
          CSharp: EnemyState state { get; set; }
          VB: Property state As EnemyState
        parameters: []
        return:
          type: UCT.Battle.EnemyState
      overload: UCT.Battle.Enemies.IEnemy.state*
    - id: UCT.Battle.Enemies.IEnemy.exp
      commentId: P:UCT.Battle.Enemies.IEnemy.exp
      language: CSharp
      name:
        CSharp: exp
        VB: exp
      nameWithType:
        CSharp: IEnemy.exp
        VB: IEnemy.exp
      qualifiedName:
        CSharp: UCT.Battle.Enemies.IEnemy.exp
        VB: UCT.Battle.Enemies.IEnemy.exp
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: exp
        path: ''
        startLine: 12484
      syntax:
        content:
          CSharp: int exp { get; }
          VB: ReadOnly Property exp As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Battle.Enemies.IEnemy.exp*
    - id: UCT.Battle.Enemies.IEnemy.gold
      commentId: P:UCT.Battle.Enemies.IEnemy.gold
      language: CSharp
      name:
        CSharp: gold
        VB: gold
      nameWithType:
        CSharp: IEnemy.gold
        VB: IEnemy.gold
      qualifiedName:
        CSharp: UCT.Battle.Enemies.IEnemy.gold
        VB: UCT.Battle.Enemies.IEnemy.gold
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: gold
        path: ''
        startLine: 12485
      syntax:
        content:
          CSharp: int gold { get; }
          VB: ReadOnly Property gold As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Battle.Enemies.IEnemy.gold*
    - id: UCT.Battle.Enemies.IEnemy.GetActOptions
      commentId: M:UCT.Battle.Enemies.IEnemy.GetActOptions
      language: CSharp
      name:
        CSharp: GetActOptions()
        VB: GetActOptions()
      nameWithType:
        CSharp: IEnemy.GetActOptions()
        VB: IEnemy.GetActOptions()
      qualifiedName:
        CSharp: UCT.Battle.Enemies.IEnemy.GetActOptions()
        VB: UCT.Battle.Enemies.IEnemy.GetActOptions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: GetActOptions
        path: ''
        startLine: 12487
      syntax:
        content:
          CSharp: Action[] GetActOptions()
          VB: Function GetActOptions() As Action()
        return:
          type: System.Action[]
      overload: UCT.Battle.Enemies.IEnemy.GetActOptions*
    - id: UCT.Battle.Enemies.IEnemy.GetActLikeOptions
      commentId: M:UCT.Battle.Enemies.IEnemy.GetActLikeOptions
      language: CSharp
      name:
        CSharp: GetActLikeOptions()
        VB: GetActLikeOptions()
      nameWithType:
        CSharp: IEnemy.GetActLikeOptions()
        VB: IEnemy.GetActLikeOptions()
      qualifiedName:
        CSharp: UCT.Battle.Enemies.IEnemy.GetActLikeOptions()
        VB: UCT.Battle.Enemies.IEnemy.GetActLikeOptions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: GetActLikeOptions
        path: ''
        startLine: 12488
      syntax:
        content:
          CSharp: Action[] GetActLikeOptions()
          VB: Function GetActLikeOptions() As Action()
        return:
          type: System.Action[]
      overload: UCT.Battle.Enemies.IEnemy.GetActLikeOptions*
    - id: UCT.Battle.Enemies.IEnemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool)
      commentId: M:UCT.Battle.Enemies.IEnemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool)
      language: CSharp
      name:
        CSharp: _EnemyTurns(int, ObjectPool, ObjectPool)
        VB: _EnemyTurns(Integer, ObjectPool, ObjectPool)
      nameWithType:
        CSharp: IEnemy._EnemyTurns(int, ObjectPool, ObjectPool)
        VB: IEnemy._EnemyTurns(Integer, ObjectPool, ObjectPool)
      qualifiedName:
        CSharp: UCT.Battle.Enemies.IEnemy._EnemyTurns(int, ObjectPool, ObjectPool)
        VB: UCT.Battle.Enemies.IEnemy._EnemyTurns(Integer, ObjectPool, ObjectPool)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: _EnemyTurns
        path: ''
        startLine: 12490
      syntax:
        content:
          CSharp: IEnumerator<float> _EnemyTurns(int index, ObjectPool bulletPool, ObjectPool boardPool)
          VB: Function _EnemyTurns(index As Integer, bulletPool As ObjectPool, boardPool As ObjectPool) As IEnumerator(Of Single)
        parameters:
        - id: index
          type: System.Int32
        - id: bulletPool
          type: Global.ObjectPool
        - id: boardPool
          type: Global.ObjectPool
        return:
          type: System.Collections.Generic.IEnumerator{System.Single}
      overload: UCT.Battle.Enemies.IEnemy._EnemyTurns*
  - id: UCT.Battle.Enemies.MercyType
    commentId: T:UCT.Battle.Enemies.MercyType
    language: CSharp
    name:
      CSharp: MercyType
      VB: MercyType
    nameWithType:
      CSharp: MercyType
      VB: MercyType
    qualifiedName:
      CSharp: UCT.Battle.Enemies.MercyType
      VB: UCT.Battle.Enemies.MercyType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle.Enemies
    source:
      id: MercyType
      path: ''
      startLine: 12496
    summary: "\n针对Mercy的选项种类\n"
    example: []
    syntax:
      content:
        CSharp: public enum MercyType
        VB: Public Enum MercyType
    items:
    - id: UCT.Battle.Enemies.MercyType.Null
      commentId: F:UCT.Battle.Enemies.MercyType.Null
      language: CSharp
      name:
        CSharp: "Null"
        VB: "Null"
      nameWithType:
        CSharp: MercyType.Null
        VB: MercyType.Null
      qualifiedName:
        CSharp: UCT.Battle.Enemies.MercyType.Null
        VB: UCT.Battle.Enemies.MercyType.Null
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: "Null"
        path: ''
        startLine: 12501
      summary: "\n不会执行任何方法\n"
      example: []
      syntax:
        content:
          CSharp: Null = 0
          VB: Null = 0
        return:
          type: UCT.Battle.Enemies.MercyType
    - id: UCT.Battle.Enemies.MercyType.Mercy
      commentId: F:UCT.Battle.Enemies.MercyType.Mercy
      language: CSharp
      name:
        CSharp: Mercy
        VB: Mercy
      nameWithType:
        CSharp: MercyType.Mercy
        VB: MercyType.Mercy
      qualifiedName:
        CSharp: UCT.Battle.Enemies.MercyType.Mercy
        VB: UCT.Battle.Enemies.MercyType.Mercy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: Mercy
        path: ''
        startLine: 12506
      summary: "\n对可饶恕对象选择后饶恕\n"
      example: []
      syntax:
        content:
          CSharp: Mercy = 1
          VB: Mercy = 1
        return:
          type: UCT.Battle.Enemies.MercyType
    - id: UCT.Battle.Enemies.MercyType.Flee
      commentId: F:UCT.Battle.Enemies.MercyType.Flee
      language: CSharp
      name:
        CSharp: Flee
        VB: Flee
      nameWithType:
        CSharp: MercyType.Flee
        VB: MercyType.Flee
      qualifiedName:
        CSharp: UCT.Battle.Enemies.MercyType.Flee
        VB: UCT.Battle.Enemies.MercyType.Flee
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: Flee
        path: ''
        startLine: 12511
      summary: "\n概率执行逃跑方法\n"
      example: []
      syntax:
        content:
          CSharp: Flee = 2
          VB: Flee = 2
        return:
          type: UCT.Battle.Enemies.MercyType
    - id: UCT.Battle.Enemies.MercyType.ActLike
      commentId: F:UCT.Battle.Enemies.MercyType.ActLike
      language: CSharp
      name:
        CSharp: ActLike
        VB: ActLike
      nameWithType:
        CSharp: MercyType.ActLike
        VB: MercyType.ActLike
      qualifiedName:
        CSharp: UCT.Battle.Enemies.MercyType.ActLike
        VB: UCT.Battle.Enemies.MercyType.ActLike
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: ActLike
        path: ''
        startLine: 12516
      summary: "\n类似Act一样执行自定义方法\n"
      example: []
      syntax:
        content:
          CSharp: ActLike = 3
          VB: ActLike = 3
        return:
          type: UCT.Battle.Enemies.MercyType
  - id: UCT.Battle.Enemies.Npc1Enemy
    commentId: T:UCT.Battle.Enemies.Npc1Enemy
    language: CSharp
    name:
      CSharp: Npc1Enemy
      VB: Npc1Enemy
    nameWithType:
      CSharp: Npc1Enemy
      VB: Npc1Enemy
    qualifiedName:
      CSharp: UCT.Battle.Enemies.Npc1Enemy
      VB: UCT.Battle.Enemies.Npc1Enemy
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle.Enemies
    source:
      id: Npc1Enemy
      path: ''
      startLine: 12530
    syntax:
      content:
        CSharp: 'public class Npc1Enemy : MonoBehaviour, IEnemy'
        VB: Public Class Npc1Enemy Inherits MonoBehaviour Implements IEnemy
    inheritance:
    - System.Object
    implements:
    - UCT.Battle.Enemies.IEnemy
    items:
    - id: UCT.Battle.Enemies.Npc1Enemy.TurnGenerator
      commentId: P:UCT.Battle.Enemies.Npc1Enemy.TurnGenerator
      language: CSharp
      name:
        CSharp: TurnGenerator
        VB: TurnGenerator
      nameWithType:
        CSharp: Npc1Enemy.TurnGenerator
        VB: Npc1Enemy.TurnGenerator
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc1Enemy.TurnGenerator
        VB: UCT.Battle.Enemies.Npc1Enemy.TurnGenerator
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: TurnGenerator
        path: ''
        startLine: 12537
      syntax:
        content:
          CSharp: public IEnemyTurnNumber TurnGenerator { get; set; }
          VB: Public Property TurnGenerator As IEnemyTurnNumber
        parameters: []
        return:
          type: UCT.Battle.Enemies.IEnemyTurnNumber
      overload: UCT.Battle.Enemies.Npc1Enemy.TurnGenerator*
      implements:
      - UCT.Battle.Enemies.IEnemy.TurnGenerator
    - id: UCT.Battle.Enemies.Npc1Enemy.GetActOptions
      commentId: M:UCT.Battle.Enemies.Npc1Enemy.GetActOptions
      language: CSharp
      name:
        CSharp: GetActOptions()
        VB: GetActOptions()
      nameWithType:
        CSharp: Npc1Enemy.GetActOptions()
        VB: Npc1Enemy.GetActOptions()
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc1Enemy.GetActOptions()
        VB: UCT.Battle.Enemies.Npc1Enemy.GetActOptions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: GetActOptions
        path: ''
        startLine: 12539
      syntax:
        content:
          CSharp: public Action[] GetActOptions()
          VB: Public Function GetActOptions() As Action()
        return:
          type: System.Action[]
      overload: UCT.Battle.Enemies.Npc1Enemy.GetActOptions*
      implements:
      - UCT.Battle.Enemies.IEnemy.GetActOptions
    - id: UCT.Battle.Enemies.Npc1Enemy.MercyTypes
      commentId: P:UCT.Battle.Enemies.Npc1Enemy.MercyTypes
      language: CSharp
      name:
        CSharp: MercyTypes
        VB: MercyTypes
      nameWithType:
        CSharp: Npc1Enemy.MercyTypes
        VB: Npc1Enemy.MercyTypes
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc1Enemy.MercyTypes
        VB: UCT.Battle.Enemies.Npc1Enemy.MercyTypes
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: MercyTypes
        path: ''
        startLine: 12554
      syntax:
        content:
          CSharp: public MercyType[] MercyTypes { get; }
          VB: Public ReadOnly Property MercyTypes As MercyType()
        parameters: []
        return:
          type: UCT.Battle.Enemies.MercyType[]
      overload: UCT.Battle.Enemies.Npc1Enemy.MercyTypes*
      implements:
      - UCT.Battle.Enemies.IEnemy.MercyTypes
    - id: UCT.Battle.Enemies.Npc1Enemy.GetActLikeOptions
      commentId: M:UCT.Battle.Enemies.Npc1Enemy.GetActLikeOptions
      language: CSharp
      name:
        CSharp: GetActLikeOptions()
        VB: GetActLikeOptions()
      nameWithType:
        CSharp: Npc1Enemy.GetActLikeOptions()
        VB: Npc1Enemy.GetActLikeOptions()
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc1Enemy.GetActLikeOptions()
        VB: UCT.Battle.Enemies.Npc1Enemy.GetActLikeOptions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: GetActLikeOptions
        path: ''
        startLine: 12556
      syntax:
        content:
          CSharp: public Action[] GetActLikeOptions()
          VB: Public Function GetActLikeOptions() As Action()
        return:
          type: System.Action[]
      overload: UCT.Battle.Enemies.Npc1Enemy.GetActLikeOptions*
      implements:
      - UCT.Battle.Enemies.IEnemy.GetActLikeOptions
    - id: UCT.Battle.Enemies.Npc1Enemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool)
      commentId: M:UCT.Battle.Enemies.Npc1Enemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool)
      language: CSharp
      name:
        CSharp: _EnemyTurns(int, ObjectPool, ObjectPool)
        VB: _EnemyTurns(Integer, ObjectPool, ObjectPool)
      nameWithType:
        CSharp: Npc1Enemy._EnemyTurns(int, ObjectPool, ObjectPool)
        VB: Npc1Enemy._EnemyTurns(Integer, ObjectPool, ObjectPool)
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc1Enemy._EnemyTurns(int, ObjectPool, ObjectPool)
        VB: UCT.Battle.Enemies.Npc1Enemy._EnemyTurns(Integer, ObjectPool, ObjectPool)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: _EnemyTurns
        path: ''
        startLine: 12561
      syntax:
        content:
          CSharp: public IEnumerator<float> _EnemyTurns(int index, ObjectPool bulletPool, ObjectPool boardPool)
          VB: Public Function _EnemyTurns(index As Integer, bulletPool As ObjectPool, boardPool As ObjectPool) As IEnumerator(Of Single)
        parameters:
        - id: index
          type: System.Int32
        - id: bulletPool
          type: Global.ObjectPool
        - id: boardPool
          type: Global.ObjectPool
        return:
          type: System.Collections.Generic.IEnumerator{System.Single}
      overload: UCT.Battle.Enemies.Npc1Enemy._EnemyTurns*
      implements:
      - UCT.Battle.Enemies.IEnemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool)
    - id: UCT.Battle.Enemies.Npc1Enemy.state
      commentId: P:UCT.Battle.Enemies.Npc1Enemy.state
      language: CSharp
      name:
        CSharp: state
        VB: state
      nameWithType:
        CSharp: Npc1Enemy.state
        VB: Npc1Enemy.state
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc1Enemy.state
        VB: UCT.Battle.Enemies.Npc1Enemy.state
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: state
        path: ''
        startLine: 12605
      syntax:
        content:
          CSharp: public EnemyState state { get; set; }
          VB: Public Property state As EnemyState
        parameters: []
        return:
          type: UCT.Battle.EnemyState
      overload: UCT.Battle.Enemies.Npc1Enemy.state*
      implements:
      - UCT.Battle.Enemies.IEnemy.state
    - id: UCT.Battle.Enemies.Npc1Enemy.exp
      commentId: P:UCT.Battle.Enemies.Npc1Enemy.exp
      language: CSharp
      name:
        CSharp: exp
        VB: exp
      nameWithType:
        CSharp: Npc1Enemy.exp
        VB: Npc1Enemy.exp
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc1Enemy.exp
        VB: UCT.Battle.Enemies.Npc1Enemy.exp
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: exp
        path: ''
        startLine: 12606
      syntax:
        content:
          CSharp: public int exp { get; }
          VB: Public ReadOnly Property exp As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Battle.Enemies.Npc1Enemy.exp*
      implements:
      - UCT.Battle.Enemies.IEnemy.exp
    - id: UCT.Battle.Enemies.Npc1Enemy.gold
      commentId: P:UCT.Battle.Enemies.Npc1Enemy.gold
      language: CSharp
      name:
        CSharp: gold
        VB: gold
      nameWithType:
        CSharp: Npc1Enemy.gold
        VB: Npc1Enemy.gold
      qualifiedName:
        CSharp: UCT.Battle.Enemies.Npc1Enemy.gold
        VB: UCT.Battle.Enemies.Npc1Enemy.gold
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: gold
        path: ''
        startLine: 12607
      syntax:
        content:
          CSharp: public int gold { get; }
          VB: Public ReadOnly Property gold As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Battle.Enemies.Npc1Enemy.gold*
      implements:
      - UCT.Battle.Enemies.IEnemy.gold
  - id: UCT.Battle.Enemies.IEnemyTurnNumber
    commentId: T:UCT.Battle.Enemies.IEnemyTurnNumber
    language: CSharp
    name:
      CSharp: IEnemyTurnNumber
      VB: IEnemyTurnNumber
    nameWithType:
      CSharp: IEnemyTurnNumber
      VB: IEnemyTurnNumber
    qualifiedName:
      CSharp: UCT.Battle.Enemies.IEnemyTurnNumber
      VB: UCT.Battle.Enemies.IEnemyTurnNumber
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle.Enemies
    source:
      id: IEnemyTurnNumber
      path: ''
      startLine: 12619
    summary: "\n表示敌人回合数生成器的接口。\n"
    example: []
    syntax:
      content:
        CSharp: public interface IEnemyTurnNumber
        VB: Public Interface IEnemyTurnNumber
    items:
    - id: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue
      commentId: M:UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: IEnemyTurnNumber.GetNextValue()
        VB: IEnemyTurnNumber.GetNextValue()
      qualifiedName:
        CSharp: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue()
        VB: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: GetNextValue
        path: ''
        startLine: 12625
      summary: "\n获取下一个回合数值。\n"
      example: []
      syntax:
        content:
          CSharp: int GetNextValue()
          VB: Function GetNextValue() As Integer
        return:
          type: System.Int32
          description: 返回下一个回合数。
      overload: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue*
    - id: UCT.Battle.Enemies.IEnemyTurnNumber.value
      commentId: P:UCT.Battle.Enemies.IEnemyTurnNumber.value
      language: CSharp
      name:
        CSharp: value
        VB: value
      nameWithType:
        CSharp: IEnemyTurnNumber.value
        VB: IEnemyTurnNumber.value
      qualifiedName:
        CSharp: UCT.Battle.Enemies.IEnemyTurnNumber.value
        VB: UCT.Battle.Enemies.IEnemyTurnNumber.value
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: value
        path: ''
        startLine: 12627
      syntax:
        content:
          CSharp: int value { get; }
          VB: ReadOnly Property value As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Battle.Enemies.IEnemyTurnNumber.value*
  - id: UCT.Battle.Enemies.WeightedRandomTurnNumber
    commentId: T:UCT.Battle.Enemies.WeightedRandomTurnNumber
    language: CSharp
    name:
      CSharp: WeightedRandomTurnNumber
      VB: WeightedRandomTurnNumber
    nameWithType:
      CSharp: WeightedRandomTurnNumber
      VB: WeightedRandomTurnNumber
    qualifiedName:
      CSharp: UCT.Battle.Enemies.WeightedRandomTurnNumber
      VB: UCT.Battle.Enemies.WeightedRandomTurnNumber
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle.Enemies
    source:
      id: WeightedRandomTurnNumber
      path: ''
      startLine: 12633
    summary: "\n通过加权随机选择下一个回合数。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class WeightedRandomTurnNumber : IEnemyTurnNumber'
        VB: Public Class WeightedRandomTurnNumber Implements IEnemyTurnNumber
    inheritance:
    - System.Object
    implements:
    - UCT.Battle.Enemies.IEnemyTurnNumber
    items:
    - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.value
      commentId: P:UCT.Battle.Enemies.WeightedRandomTurnNumber.value
      language: CSharp
      name:
        CSharp: value
        VB: value
      nameWithType:
        CSharp: WeightedRandomTurnNumber.value
        VB: WeightedRandomTurnNumber.value
      qualifiedName:
        CSharp: UCT.Battle.Enemies.WeightedRandomTurnNumber.value
        VB: UCT.Battle.Enemies.WeightedRandomTurnNumber.value
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: value
        path: ''
        startLine: 12637
      syntax:
        content:
          CSharp: public int value { get; }
          VB: Public Property value As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Battle.Enemies.WeightedRandomTurnNumber.value*
      implements:
      - UCT.Battle.Enemies.IEnemyTurnNumber.value
    - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.#ctor(System.Collections.Generic.HashSet{System.Int32})
      commentId: M:UCT.Battle.Enemies.WeightedRandomTurnNumber.#ctor(System.Collections.Generic.HashSet{System.Int32})
      language: CSharp
      name:
        CSharp: WeightedRandomTurnNumber(HashSet<int>)
        VB: New(HashSet(Of Integer))
      nameWithType:
        CSharp: WeightedRandomTurnNumber.WeightedRandomTurnNumber(HashSet<int>)
        VB: WeightedRandomTurnNumber.New(HashSet(Of Integer))
      qualifiedName:
        CSharp: UCT.Battle.Enemies.WeightedRandomTurnNumber.WeightedRandomTurnNumber(System.Collections.Generic.HashSet<int>)
        VB: UCT.Battle.Enemies.WeightedRandomTurnNumber.New(System.Collections.Generic.HashSet(Of Integer))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: .ctor
        path: ''
        startLine: 12643
      summary: "\n初始化 <xref href=\"UCT.Battle.Enemies.WeightedRandomTurnNumber\" data-throw-if-not-resolved=\"false\"></xref> 类，默认所有值的权重为 1。\n"
      example: []
      syntax:
        content:
          CSharp: public WeightedRandomTurnNumber(HashSet<int> values)
          VB: Public Sub New(values As HashSet(Of Integer))
        parameters:
        - id: values
          type: System.Collections.Generic.HashSet{System.Int32}
          description: 可能的回合数列表。
      overload: UCT.Battle.Enemies.WeightedRandomTurnNumber.#ctor*
      references:
        UCT.Battle.Enemies.WeightedRandomTurnNumber: 
    - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.#ctor(System.Collections.Generic.Dictionary{System.Int32,System.Int32})
      commentId: M:UCT.Battle.Enemies.WeightedRandomTurnNumber.#ctor(System.Collections.Generic.Dictionary{System.Int32,System.Int32})
      language: CSharp
      name:
        CSharp: WeightedRandomTurnNumber(Dictionary<int, int>)
        VB: New(Dictionary(Of Integer, Integer))
      nameWithType:
        CSharp: WeightedRandomTurnNumber.WeightedRandomTurnNumber(Dictionary<int, int>)
        VB: WeightedRandomTurnNumber.New(Dictionary(Of Integer, Integer))
      qualifiedName:
        CSharp: UCT.Battle.Enemies.WeightedRandomTurnNumber.WeightedRandomTurnNumber(System.Collections.Generic.Dictionary<int, int>)
        VB: UCT.Battle.Enemies.WeightedRandomTurnNumber.New(System.Collections.Generic.Dictionary(Of Integer, Integer))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: .ctor
        path: ''
        startLine: 12652
      summary: "\n初始化 <xref href=\"UCT.Battle.Enemies.WeightedRandomTurnNumber\" data-throw-if-not-resolved=\"false\"></xref> 类，并设置各个值的权重。\n"
      example: []
      syntax:
        content:
          CSharp: public WeightedRandomTurnNumber(Dictionary<int, int> weights)
          VB: Public Sub New(weights As Dictionary(Of Integer, Integer))
        parameters:
        - id: weights
          type: System.Collections.Generic.Dictionary{System.Int32,System.Int32}
          description: 键值对，键为可能的回合数，值为其权重。
      overload: UCT.Battle.Enemies.WeightedRandomTurnNumber.#ctor*
      references:
        UCT.Battle.Enemies.WeightedRandomTurnNumber: 
    - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.GetNextValue
      commentId: M:UCT.Battle.Enemies.WeightedRandomTurnNumber.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: WeightedRandomTurnNumber.GetNextValue()
        VB: WeightedRandomTurnNumber.GetNextValue()
      qualifiedName:
        CSharp: UCT.Battle.Enemies.WeightedRandomTurnNumber.GetNextValue()
        VB: UCT.Battle.Enemies.WeightedRandomTurnNumber.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: GetNextValue
        path: ''
        startLine: 12661
      summary: "\n生成一个基于权重的随机回合数。\n"
      example: []
      syntax:
        content:
          CSharp: public int GetNextValue()
          VB: Public Function GetNextValue() As Integer
        return:
          type: System.Int32
          description: 返回生成的回合数。
      overload: UCT.Battle.Enemies.WeightedRandomTurnNumber.GetNextValue*
      implements:
      - UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue
  - id: UCT.Battle.Enemies.CyclicTurnNumber
    commentId: T:UCT.Battle.Enemies.CyclicTurnNumber
    language: CSharp
    name:
      CSharp: CyclicTurnNumber
      VB: CyclicTurnNumber
    nameWithType:
      CSharp: CyclicTurnNumber
      VB: CyclicTurnNumber
    qualifiedName:
      CSharp: UCT.Battle.Enemies.CyclicTurnNumber
      VB: UCT.Battle.Enemies.CyclicTurnNumber
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle.Enemies
    source:
      id: CyclicTurnNumber
      path: ''
      startLine: 12688
    summary: "\n按照固定顺序循环返回回合数。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CyclicTurnNumber : IEnemyTurnNumber'
        VB: Public Class CyclicTurnNumber Implements IEnemyTurnNumber
    inheritance:
    - System.Object
    implements:
    - UCT.Battle.Enemies.IEnemyTurnNumber
    items:
    - id: UCT.Battle.Enemies.CyclicTurnNumber.value
      commentId: P:UCT.Battle.Enemies.CyclicTurnNumber.value
      language: CSharp
      name:
        CSharp: value
        VB: value
      nameWithType:
        CSharp: CyclicTurnNumber.value
        VB: CyclicTurnNumber.value
      qualifiedName:
        CSharp: UCT.Battle.Enemies.CyclicTurnNumber.value
        VB: UCT.Battle.Enemies.CyclicTurnNumber.value
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: value
        path: ''
        startLine: 12692
      syntax:
        content:
          CSharp: public int value { get; }
          VB: Public Property value As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Battle.Enemies.CyclicTurnNumber.value*
      implements:
      - UCT.Battle.Enemies.IEnemyTurnNumber.value
    - id: UCT.Battle.Enemies.CyclicTurnNumber.#ctor(System.Collections.Generic.List{System.Int32})
      commentId: M:UCT.Battle.Enemies.CyclicTurnNumber.#ctor(System.Collections.Generic.List{System.Int32})
      language: CSharp
      name:
        CSharp: CyclicTurnNumber(List<int>)
        VB: New(List(Of Integer))
      nameWithType:
        CSharp: CyclicTurnNumber.CyclicTurnNumber(List<int>)
        VB: CyclicTurnNumber.New(List(Of Integer))
      qualifiedName:
        CSharp: UCT.Battle.Enemies.CyclicTurnNumber.CyclicTurnNumber(System.Collections.Generic.List<int>)
        VB: UCT.Battle.Enemies.CyclicTurnNumber.New(System.Collections.Generic.List(Of Integer))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: .ctor
        path: ''
        startLine: 12698
      summary: "\n初始化 <xref href=\"UCT.Battle.Enemies.CyclicTurnNumber\" data-throw-if-not-resolved=\"false\"></xref> 类。\n"
      example: []
      syntax:
        content:
          CSharp: public CyclicTurnNumber(List<int> values)
          VB: Public Sub New(values As List(Of Integer))
        parameters:
        - id: values
          type: System.Collections.Generic.List{System.Int32}
          description: 按顺序循环的回合数列表。
      overload: UCT.Battle.Enemies.CyclicTurnNumber.#ctor*
      references:
        UCT.Battle.Enemies.CyclicTurnNumber: 
    - id: UCT.Battle.Enemies.CyclicTurnNumber.GetNextValue
      commentId: M:UCT.Battle.Enemies.CyclicTurnNumber.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: CyclicTurnNumber.GetNextValue()
        VB: CyclicTurnNumber.GetNextValue()
      qualifiedName:
        CSharp: UCT.Battle.Enemies.CyclicTurnNumber.GetNextValue()
        VB: UCT.Battle.Enemies.CyclicTurnNumber.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: GetNextValue
        path: ''
        startLine: 12707
      summary: "\n获取下一个回合数，按照顺序循环。\n"
      example: []
      syntax:
        content:
          CSharp: public int GetNextValue()
          VB: Public Function GetNextValue() As Integer
        return:
          type: System.Int32
          description: 返回下一个回合数。
      overload: UCT.Battle.Enemies.CyclicTurnNumber.GetNextValue*
      implements:
      - UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue
  - id: UCT.Battle.Enemies.FixedTurnNumber
    commentId: T:UCT.Battle.Enemies.FixedTurnNumber
    language: CSharp
    name:
      CSharp: FixedTurnNumber
      VB: FixedTurnNumber
    nameWithType:
      CSharp: FixedTurnNumber
      VB: FixedTurnNumber
    qualifiedName:
      CSharp: UCT.Battle.Enemies.FixedTurnNumber
      VB: UCT.Battle.Enemies.FixedTurnNumber
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Battle.Enemies
    source:
      id: FixedTurnNumber
      path: ''
      startLine: 12719
    summary: "\n始终返回固定的回合数。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FixedTurnNumber : IEnemyTurnNumber'
        VB: Public Class FixedTurnNumber Implements IEnemyTurnNumber
    inheritance:
    - System.Object
    implements:
    - UCT.Battle.Enemies.IEnemyTurnNumber
    items:
    - id: UCT.Battle.Enemies.FixedTurnNumber.value
      commentId: P:UCT.Battle.Enemies.FixedTurnNumber.value
      language: CSharp
      name:
        CSharp: value
        VB: value
      nameWithType:
        CSharp: FixedTurnNumber.value
        VB: FixedTurnNumber.value
      qualifiedName:
        CSharp: UCT.Battle.Enemies.FixedTurnNumber.value
        VB: UCT.Battle.Enemies.FixedTurnNumber.value
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: value
        path: ''
        startLine: 12721
      syntax:
        content:
          CSharp: public int value { get; }
          VB: Public Property value As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Battle.Enemies.FixedTurnNumber.value*
      implements:
      - UCT.Battle.Enemies.IEnemyTurnNumber.value
    - id: UCT.Battle.Enemies.FixedTurnNumber.#ctor(System.Int32)
      commentId: M:UCT.Battle.Enemies.FixedTurnNumber.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: FixedTurnNumber(int)
        VB: New(Integer)
      nameWithType:
        CSharp: FixedTurnNumber.FixedTurnNumber(int)
        VB: FixedTurnNumber.New(Integer)
      qualifiedName:
        CSharp: UCT.Battle.Enemies.FixedTurnNumber.FixedTurnNumber(int)
        VB: UCT.Battle.Enemies.FixedTurnNumber.New(Integer)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: .ctor
        path: ''
        startLine: 12727
      summary: "\n初始化 <xref href=\"UCT.Battle.Enemies.FixedTurnNumber\" data-throw-if-not-resolved=\"false\"></xref> 类。\n"
      example: []
      syntax:
        content:
          CSharp: public FixedTurnNumber(int value)
          VB: Public Sub New(value As Integer)
        parameters:
        - id: value
          type: System.Int32
          description: 固定的回合数值。
      overload: UCT.Battle.Enemies.FixedTurnNumber.#ctor*
      references:
        UCT.Battle.Enemies.FixedTurnNumber: 
    - id: UCT.Battle.Enemies.FixedTurnNumber.GetNextValue
      commentId: M:UCT.Battle.Enemies.FixedTurnNumber.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: FixedTurnNumber.GetNextValue()
        VB: FixedTurnNumber.GetNextValue()
      qualifiedName:
        CSharp: UCT.Battle.Enemies.FixedTurnNumber.GetNextValue()
        VB: UCT.Battle.Enemies.FixedTurnNumber.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: GetNextValue
        path: ''
        startLine: 12736
      summary: "\n获取固定的回合数。\n"
      example: []
      syntax:
        content:
          CSharp: public int GetNextValue()
          VB: Public Function GetNextValue() As Integer
        return:
          type: System.Int32
          description: 返回固定的回合数。
      overload: UCT.Battle.Enemies.FixedTurnNumber.GetNextValue*
      implements:
      - UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue
    - id: UCT.Battle.Enemies.FixedTurnNumber.SetValue(System.Int32)
      commentId: M:UCT.Battle.Enemies.FixedTurnNumber.SetValue(System.Int32)
      language: CSharp
      name:
        CSharp: SetValue(int)
        VB: SetValue(Integer)
      nameWithType:
        CSharp: FixedTurnNumber.SetValue(int)
        VB: FixedTurnNumber.SetValue(Integer)
      qualifiedName:
        CSharp: UCT.Battle.Enemies.FixedTurnNumber.SetValue(int)
        VB: UCT.Battle.Enemies.FixedTurnNumber.SetValue(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Battle.Enemies
      source:
        id: SetValue
        path: ''
        startLine: 12745
      summary: "\n设置固定的回合数值。\n"
      example: []
      syntax:
        content:
          CSharp: public void SetValue(int inputValue)
          VB: Public Sub SetValue(inputValue As Integer)
        parameters:
        - id: inputValue
          type: System.Int32
          description: 要设置的回合数值。
      overload: UCT.Battle.Enemies.FixedTurnNumber.SetValue*
- id: UCT.Settings
  commentId: N:UCT.Settings
  language: CSharp
  name:
    CSharp: UCT.Settings
    VB: UCT.Settings
  nameWithType:
    CSharp: UCT.Settings
    VB: UCT.Settings
  qualifiedName:
    CSharp: UCT.Settings
    VB: UCT.Settings
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.Settings.SettingsOption
    commentId: T:UCT.Settings.SettingsOption
    language: CSharp
    name:
      CSharp: SettingsOption
      VB: SettingsOption
    nameWithType:
      CSharp: SettingsOption
      VB: SettingsOption
    qualifiedName:
      CSharp: UCT.Settings.SettingsOption
      VB: UCT.Settings.SettingsOption
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: SettingsOption
      path: ''
      startLine: 12759
    summary: "\n设置页面选项类\n"
    example: []
    syntax:
      content:
        CSharp: public class SettingsOption
        VB: Public Class SettingsOption
    inheritance:
    - System.Object
    items:
    - id: UCT.Settings.SettingsOption.#ctor(System.Object)
      commentId: M:UCT.Settings.SettingsOption.#ctor(System.Object)
      language: CSharp
      name:
        CSharp: SettingsOption(object)
        VB: New(Object)
      nameWithType:
        CSharp: SettingsOption.SettingsOption(object)
        VB: SettingsOption.New(Object)
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.SettingsOption(object)
        VB: UCT.Settings.SettingsOption.New(Object)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: .ctor
        path: ''
        startLine: 12770
      summary: "\n设置页面的选项类，可配置初始值。\n"
      example: []
      syntax:
        content:
          CSharp: public SettingsOption(object value)
          VB: Public Sub New(value As Object)
        parameters:
        - id: value
          type: System.Object
          description: 初始值
      overload: UCT.Settings.SettingsOption.#ctor*
    - id: UCT.Settings.SettingsOption.GetSpDataNameWithIndex
      commentId: P:UCT.Settings.SettingsOption.GetSpDataNameWithIndex
      language: CSharp
      name:
        CSharp: GetSpDataNameWithIndex
        VB: GetSpDataNameWithIndex
      nameWithType:
        CSharp: SettingsOption.GetSpDataNameWithIndex
        VB: SettingsOption.GetSpDataNameWithIndex
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.GetSpDataNameWithIndex
        VB: UCT.Settings.SettingsOption.GetSpDataNameWithIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: GetSpDataNameWithIndex
        path: ''
        startLine: 12778
      summary: "\n当该选项的int值与词典内的int值相同时，会在选项值文本上显示对应的dataName。\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<int, string> GetSpDataNameWithIndex { get; set; }
          VB: Public Property GetSpDataNameWithIndex As Dictionary(Of Integer, String)
        parameters: []
        return:
          type: System.Collections.Generic.Dictionary{System.Int32,System.String}
      overload: UCT.Settings.SettingsOption.GetSpDataNameWithIndex*
    - id: UCT.Settings.SettingsOption.NewSelectedOption
      commentId: P:UCT.Settings.SettingsOption.NewSelectedOption
      language: CSharp
      name:
        CSharp: NewSelectedOption
        VB: NewSelectedOption
      nameWithType:
        CSharp: SettingsOption.NewSelectedOption
        VB: SettingsOption.NewSelectedOption
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.NewSelectedOption
        VB: UCT.Settings.SettingsOption.NewSelectedOption
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: NewSelectedOption
        path: ''
        startLine: 12784
      summary: "\n进入新层级时的选项索引。\n如果该索引是负数，那么会视为倒数第X位。\n"
      example: []
      syntax:
        content:
          CSharp: public int NewSelectedOption { get; set; }
          VB: Public Property NewSelectedOption As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Settings.SettingsOption.NewSelectedOption*
    - id: UCT.Settings.SettingsOption.DataName
      commentId: P:UCT.Settings.SettingsOption.DataName
      language: CSharp
      name:
        CSharp: DataName
        VB: DataName
      nameWithType:
        CSharp: SettingsOption.DataName
        VB: SettingsOption.DataName
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.DataName
        VB: UCT.Settings.SettingsOption.DataName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: DataName
        path: ''
        startLine: 12789
      summary: "\n该选项自身的语言包数据名称。\n"
      example: []
      syntax:
        content:
          CSharp: public string DataName { get; set; }
          VB: Public Property DataName As String
        parameters: []
        return:
          type: System.String
      overload: UCT.Settings.SettingsOption.DataName*
    - id: UCT.Settings.SettingsOption.DescriptionDataName
      commentId: P:UCT.Settings.SettingsOption.DescriptionDataName
      language: CSharp
      name:
        CSharp: DescriptionDataName
        VB: DescriptionDataName
      nameWithType:
        CSharp: SettingsOption.DescriptionDataName
        VB: SettingsOption.DescriptionDataName
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.DescriptionDataName
        VB: UCT.Settings.SettingsOption.DescriptionDataName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: DescriptionDataName
        path: ''
        startLine: 12795
      summary: "\n该选项描述文本的语言包数据名称。\n若此选项的实际值为int，会尝试将其作为数组的索引。\n"
      example: []
      syntax:
        content:
          CSharp: public string[] DescriptionDataName { get; set; }
          VB: Public Property DescriptionDataName As String()
        parameters: []
        return:
          type: System.String[]
      overload: UCT.Settings.SettingsOption.DescriptionDataName*
    - id: UCT.Settings.SettingsOption.Type
      commentId: P:UCT.Settings.SettingsOption.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: SettingsOption.Type
        VB: SettingsOption.Type
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.Type
        VB: UCT.Settings.SettingsOption.Type
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Type
        path: ''
        startLine: 12800
      summary: "\n该选项的选项类型。\n"
      example: []
      syntax:
        content:
          CSharp: public OptionType Type { get; set; }
          VB: Public Property Type As OptionType
        parameters: []
        return:
          type: UCT.Settings.OptionType
      overload: UCT.Settings.SettingsOption.Type*
    - id: UCT.Settings.SettingsOption.OnSelected
      commentId: P:UCT.Settings.SettingsOption.OnSelected
      language: CSharp
      name:
        CSharp: OnSelected
        VB: OnSelected
      nameWithType:
        CSharp: SettingsOption.OnSelected
        VB: SettingsOption.OnSelected
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.OnSelected
        VB: UCT.Settings.SettingsOption.OnSelected
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: OnSelected
        path: ''
        startLine: 12805
      summary: "\n该选项在被选择后执行的方法。\n"
      example: []
      syntax:
        content:
          CSharp: public Action OnSelected { get; set; }
          VB: Public Property OnSelected As Action
        parameters: []
        return:
          type: System.Action
      overload: UCT.Settings.SettingsOption.OnSelected*
    - id: UCT.Settings.SettingsOption.SelectionBasedChangedValueSetter
      commentId: P:UCT.Settings.SettingsOption.SelectionBasedChangedValueSetter
      language: CSharp
      name:
        CSharp: SelectionBasedChangedValueSetter
        VB: SelectionBasedChangedValueSetter
      nameWithType:
        CSharp: SettingsOption.SelectionBasedChangedValueSetter
        VB: SettingsOption.SelectionBasedChangedValueSetter
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.SelectionBasedChangedValueSetter
        VB: UCT.Settings.SettingsOption.SelectionBasedChangedValueSetter
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: SelectionBasedChangedValueSetter
        path: ''
        startLine: 12811
      summary: "\n设定SelectionBased类型选项的实际值会联动更改的外部值。\n"
      example: []
      syntax:
        content:
          CSharp: public Action<object> SelectionBasedChangedValueSetter { get; set; }
          VB: Public Property SelectionBasedChangedValueSetter As Action(Of Object)
        parameters: []
        return:
          type: System.Action{System.Object}
      overload: UCT.Settings.SettingsOption.SelectionBasedChangedValueSetter*
    - id: UCT.Settings.SettingsOption.SelectionBasedChangedValueGetter
      commentId: P:UCT.Settings.SettingsOption.SelectionBasedChangedValueGetter
      language: CSharp
      name:
        CSharp: SelectionBasedChangedValueGetter
        VB: SelectionBasedChangedValueGetter
      nameWithType:
        CSharp: SettingsOption.SelectionBasedChangedValueGetter
        VB: SettingsOption.SelectionBasedChangedValueGetter
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.SelectionBasedChangedValueGetter
        VB: UCT.Settings.SettingsOption.SelectionBasedChangedValueGetter
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: SelectionBasedChangedValueGetter
        path: ''
        startLine: 12816
      summary: "\n获取SelectionBased类型选项的实际值联动的的外部值。\n"
      example: []
      syntax:
        content:
          CSharp: public Func<object> SelectionBasedChangedValueGetter { get; set; }
          VB: Public Property SelectionBasedChangedValueGetter As Func(Of Object)
        parameters: []
        return:
          type: System.Func{System.Object}
      overload: UCT.Settings.SettingsOption.SelectionBasedChangedValueGetter*
    - id: UCT.Settings.SettingsOption.SelectionBasedChangedUnit
      commentId: P:UCT.Settings.SettingsOption.SelectionBasedChangedUnit
      language: CSharp
      name:
        CSharp: SelectionBasedChangedUnit
        VB: SelectionBasedChangedUnit
      nameWithType:
        CSharp: SettingsOption.SelectionBasedChangedUnit
        VB: SettingsOption.SelectionBasedChangedUnit
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.SelectionBasedChangedUnit
        VB: UCT.Settings.SettingsOption.SelectionBasedChangedUnit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: SelectionBasedChangedUnit
        path: ''
        startLine: 12821
      summary: "\nSelectionBased类型选项值在常规情况下单次修改的单位。\n"
      example: []
      syntax:
        content:
          CSharp: public float SelectionBasedChangedUnit { get; set; }
          VB: Public Property SelectionBasedChangedUnit As Single
        parameters: []
        return:
          type: System.Single
      overload: UCT.Settings.SettingsOption.SelectionBasedChangedUnit*
    - id: UCT.Settings.SettingsOption.SelectionBasedChangedUnitWhenGetC
      commentId: P:UCT.Settings.SettingsOption.SelectionBasedChangedUnitWhenGetC
      language: CSharp
      name:
        CSharp: SelectionBasedChangedUnitWhenGetC
        VB: SelectionBasedChangedUnitWhenGetC
      nameWithType:
        CSharp: SettingsOption.SelectionBasedChangedUnitWhenGetC
        VB: SettingsOption.SelectionBasedChangedUnitWhenGetC
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.SelectionBasedChangedUnitWhenGetC
        VB: UCT.Settings.SettingsOption.SelectionBasedChangedUnitWhenGetC
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: SelectionBasedChangedUnitWhenGetC
        path: ''
        startLine: 12826
      summary: "\nSelectionBased类型选项值在按住C键时单次修改的单位。\n"
      example: []
      syntax:
        content:
          CSharp: public float SelectionBasedChangedUnitWhenGetC { get; set; }
          VB: Public Property SelectionBasedChangedUnitWhenGetC As Single
        parameters: []
        return:
          type: System.Single
      overload: UCT.Settings.SettingsOption.SelectionBasedChangedUnitWhenGetC*
    - id: UCT.Settings.SettingsOption.SelectionBasedChangedMax
      commentId: P:UCT.Settings.SettingsOption.SelectionBasedChangedMax
      language: CSharp
      name:
        CSharp: SelectionBasedChangedMax
        VB: SelectionBasedChangedMax
      nameWithType:
        CSharp: SettingsOption.SelectionBasedChangedMax
        VB: SettingsOption.SelectionBasedChangedMax
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.SelectionBasedChangedMax
        VB: UCT.Settings.SettingsOption.SelectionBasedChangedMax
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: SelectionBasedChangedMax
        path: ''
        startLine: 12831
      summary: "\nSelectionBased类型选项值的最大值。\n"
      example: []
      syntax:
        content:
          CSharp: public float SelectionBasedChangedMax { get; set; }
          VB: Public Property SelectionBasedChangedMax As Single
        parameters: []
        return:
          type: System.Single
      overload: UCT.Settings.SettingsOption.SelectionBasedChangedMax*
    - id: UCT.Settings.SettingsOption.SelectionBasedChangedMin
      commentId: P:UCT.Settings.SettingsOption.SelectionBasedChangedMin
      language: CSharp
      name:
        CSharp: SelectionBasedChangedMin
        VB: SelectionBasedChangedMin
      nameWithType:
        CSharp: SettingsOption.SelectionBasedChangedMin
        VB: SettingsOption.SelectionBasedChangedMin
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.SelectionBasedChangedMin
        VB: UCT.Settings.SettingsOption.SelectionBasedChangedMin
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: SelectionBasedChangedMin
        path: ''
        startLine: 12836
      summary: "\nSelectionBased类型选项值的最小值。\n"
      example: []
      syntax:
        content:
          CSharp: public float SelectionBasedChangedMin { get; set; }
          VB: Public Property SelectionBasedChangedMin As Single
        parameters: []
        return:
          type: System.Single
      overload: UCT.Settings.SettingsOption.SelectionBasedChangedMin*
    - id: UCT.Settings.SettingsOption.OptionDisplayMode
      commentId: P:UCT.Settings.SettingsOption.OptionDisplayMode
      language: CSharp
      name:
        CSharp: OptionDisplayMode
        VB: OptionDisplayMode
      nameWithType:
        CSharp: SettingsOption.OptionDisplayMode
        VB: SettingsOption.OptionDisplayMode
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.OptionDisplayMode
        VB: UCT.Settings.SettingsOption.OptionDisplayMode
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: OptionDisplayMode
        path: ''
        startLine: 12841
      summary: "\n该选项的展示方式。\n"
      example: []
      syntax:
        content:
          CSharp: public OptionDisplayMode OptionDisplayMode { get; set; }
          VB: Public Property OptionDisplayMode As OptionDisplayMode
        parameters: []
        return:
          type: UCT.Settings.OptionDisplayMode
      overload: UCT.Settings.SettingsOption.OptionDisplayMode*
    - id: UCT.Settings.SettingsOption.SetValue(System.Object)
      commentId: M:UCT.Settings.SettingsOption.SetValue(System.Object)
      language: CSharp
      name:
        CSharp: SetValue(object)
        VB: SetValue(Object)
      nameWithType:
        CSharp: SettingsOption.SetValue(object)
        VB: SettingsOption.SetValue(Object)
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.SetValue(object)
        VB: UCT.Settings.SettingsOption.SetValue(Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: SetValue
        path: ''
        startLine: 12847
      summary: "\n设定该选项的实际值。\n"
      example: []
      syntax:
        content:
          CSharp: public void SetValue(object newValue)
          VB: Public Sub SetValue(newValue As Object)
        parameters:
        - id: newValue
          type: System.Object
          description: 新的值
      overload: UCT.Settings.SettingsOption.SetValue*
    - id: UCT.Settings.SettingsOption.GetValue
      commentId: M:UCT.Settings.SettingsOption.GetValue
      language: CSharp
      name:
        CSharp: GetValue()
        VB: GetValue()
      nameWithType:
        CSharp: SettingsOption.GetValue()
        VB: SettingsOption.GetValue()
      qualifiedName:
        CSharp: UCT.Settings.SettingsOption.GetValue()
        VB: UCT.Settings.SettingsOption.GetValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: GetValue
        path: ''
        startLine: 12855
      summary: "\n获取该选项的实际值。\n"
      example: []
      syntax:
        content:
          CSharp: public object GetValue()
          VB: Public Function GetValue() As Object
        return:
          type: System.Object
      overload: UCT.Settings.SettingsOption.GetValue*
  - id: UCT.Settings.OptionType
    commentId: T:UCT.Settings.OptionType
    language: CSharp
    name:
      CSharp: OptionType
      VB: OptionType
    nameWithType:
      CSharp: OptionType
      VB: OptionType
    qualifiedName:
      CSharp: UCT.Settings.OptionType
      VB: UCT.Settings.OptionType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: OptionType
      path: ''
      startLine: 12864
    summary: "\n用于设置选项的选项类型，定义了选项的显示方式与具体功能。\n"
    example: []
    syntax:
      content:
        CSharp: public enum OptionType
        VB: Public Enum OptionType
    items:
    - id: UCT.Settings.OptionType.SelectionToggle
      commentId: F:UCT.Settings.OptionType.SelectionToggle
      language: CSharp
      name:
        CSharp: SelectionToggle
        VB: SelectionToggle
      nameWithType:
        CSharp: OptionType.SelectionToggle
        VB: OptionType.SelectionToggle
      qualifiedName:
        CSharp: UCT.Settings.OptionType.SelectionToggle
        VB: UCT.Settings.OptionType.SelectionToggle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: SelectionToggle
        path: ''
        startLine: 12866
      syntax:
        content:
          CSharp: SelectionToggle = 0
          VB: SelectionToggle = 0
        return:
          type: UCT.Settings.OptionType
    - id: UCT.Settings.OptionType.SelectionBasedFalse
      commentId: F:UCT.Settings.OptionType.SelectionBasedFalse
      language: CSharp
      name:
        CSharp: SelectionBasedFalse
        VB: SelectionBasedFalse
      nameWithType:
        CSharp: OptionType.SelectionBasedFalse
        VB: OptionType.SelectionBasedFalse
      qualifiedName:
        CSharp: UCT.Settings.OptionType.SelectionBasedFalse
        VB: UCT.Settings.OptionType.SelectionBasedFalse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: SelectionBasedFalse
        path: ''
        startLine: 12867
      syntax:
        content:
          CSharp: SelectionBasedFalse = 1
          VB: SelectionBasedFalse = 1
        return:
          type: UCT.Settings.OptionType
    - id: UCT.Settings.OptionType.SelectionBasedTrue
      commentId: F:UCT.Settings.OptionType.SelectionBasedTrue
      language: CSharp
      name:
        CSharp: SelectionBasedTrue
        VB: SelectionBasedTrue
      nameWithType:
        CSharp: OptionType.SelectionBasedTrue
        VB: OptionType.SelectionBasedTrue
      qualifiedName:
        CSharp: UCT.Settings.OptionType.SelectionBasedTrue
        VB: UCT.Settings.OptionType.SelectionBasedTrue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: SelectionBasedTrue
        path: ''
        startLine: 12868
      syntax:
        content:
          CSharp: SelectionBasedTrue = 2
          VB: SelectionBasedTrue = 2
        return:
          type: UCT.Settings.OptionType
    - id: UCT.Settings.OptionType.EnterLayer
      commentId: F:UCT.Settings.OptionType.EnterLayer
      language: CSharp
      name:
        CSharp: EnterLayer
        VB: EnterLayer
      nameWithType:
        CSharp: OptionType.EnterLayer
        VB: OptionType.EnterLayer
      qualifiedName:
        CSharp: UCT.Settings.OptionType.EnterLayer
        VB: UCT.Settings.OptionType.EnterLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: EnterLayer
        path: ''
        startLine: 12869
      syntax:
        content:
          CSharp: EnterLayer = 3
          VB: EnterLayer = 3
        return:
          type: UCT.Settings.OptionType
    - id: UCT.Settings.OptionType.EnterScene
      commentId: F:UCT.Settings.OptionType.EnterScene
      language: CSharp
      name:
        CSharp: EnterScene
        VB: EnterScene
      nameWithType:
        CSharp: OptionType.EnterScene
        VB: OptionType.EnterScene
      qualifiedName:
        CSharp: UCT.Settings.OptionType.EnterScene
        VB: UCT.Settings.OptionType.EnterScene
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: EnterScene
        path: ''
        startLine: 12870
      syntax:
        content:
          CSharp: EnterScene = 4
          VB: EnterScene = 4
        return:
          type: UCT.Settings.OptionType
    - id: UCT.Settings.OptionType.Back
      commentId: F:UCT.Settings.OptionType.Back
      language: CSharp
      name:
        CSharp: Back
        VB: Back
      nameWithType:
        CSharp: OptionType.Back
        VB: OptionType.Back
      qualifiedName:
        CSharp: UCT.Settings.OptionType.Back
        VB: UCT.Settings.OptionType.Back
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Back
        path: ''
        startLine: 12871
      syntax:
        content:
          CSharp: Back = 5
          VB: Back = 5
        return:
          type: UCT.Settings.OptionType
    - id: UCT.Settings.OptionType.ConfigurableKeyFalse
      commentId: F:UCT.Settings.OptionType.ConfigurableKeyFalse
      language: CSharp
      name:
        CSharp: ConfigurableKeyFalse
        VB: ConfigurableKeyFalse
      nameWithType:
        CSharp: OptionType.ConfigurableKeyFalse
        VB: OptionType.ConfigurableKeyFalse
      qualifiedName:
        CSharp: UCT.Settings.OptionType.ConfigurableKeyFalse
        VB: UCT.Settings.OptionType.ConfigurableKeyFalse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: ConfigurableKeyFalse
        path: ''
        startLine: 12872
      syntax:
        content:
          CSharp: ConfigurableKeyFalse = 6
          VB: ConfigurableKeyFalse = 6
        return:
          type: UCT.Settings.OptionType
    - id: UCT.Settings.OptionType.ConfigurableKeyTrue
      commentId: F:UCT.Settings.OptionType.ConfigurableKeyTrue
      language: CSharp
      name:
        CSharp: ConfigurableKeyTrue
        VB: ConfigurableKeyTrue
      nameWithType:
        CSharp: OptionType.ConfigurableKeyTrue
        VB: OptionType.ConfigurableKeyTrue
      qualifiedName:
        CSharp: UCT.Settings.OptionType.ConfigurableKeyTrue
        VB: UCT.Settings.OptionType.ConfigurableKeyTrue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: ConfigurableKeyTrue
        path: ''
        startLine: 12873
      syntax:
        content:
          CSharp: ConfigurableKeyTrue = 7
          VB: ConfigurableKeyTrue = 7
        return:
          type: UCT.Settings.OptionType
    - id: UCT.Settings.OptionType.KeyBindingsReset
      commentId: F:UCT.Settings.OptionType.KeyBindingsReset
      language: CSharp
      name:
        CSharp: KeyBindingsReset
        VB: KeyBindingsReset
      nameWithType:
        CSharp: OptionType.KeyBindingsReset
        VB: OptionType.KeyBindingsReset
      qualifiedName:
        CSharp: UCT.Settings.OptionType.KeyBindingsReset
        VB: UCT.Settings.OptionType.KeyBindingsReset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: KeyBindingsReset
        path: ''
        startLine: 12874
      syntax:
        content:
          CSharp: KeyBindingsReset = 8
          VB: KeyBindingsReset = 8
        return:
          type: UCT.Settings.OptionType
    - id: UCT.Settings.OptionType.SwitchPage
      commentId: F:UCT.Settings.OptionType.SwitchPage
      language: CSharp
      name:
        CSharp: SwitchPage
        VB: SwitchPage
      nameWithType:
        CSharp: OptionType.SwitchPage
        VB: OptionType.SwitchPage
      qualifiedName:
        CSharp: UCT.Settings.OptionType.SwitchPage
        VB: UCT.Settings.OptionType.SwitchPage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: SwitchPage
        path: ''
        startLine: 12875
      syntax:
        content:
          CSharp: SwitchPage = 9
          VB: SwitchPage = 9
        return:
          type: UCT.Settings.OptionType
    - id: UCT.Settings.OptionType.LanguagePackage
      commentId: F:UCT.Settings.OptionType.LanguagePackage
      language: CSharp
      name:
        CSharp: LanguagePackage
        VB: LanguagePackage
      nameWithType:
        CSharp: OptionType.LanguagePackage
        VB: OptionType.LanguagePackage
      qualifiedName:
        CSharp: UCT.Settings.OptionType.LanguagePackage
        VB: UCT.Settings.OptionType.LanguagePackage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: LanguagePackage
        path: ''
        startLine: 12876
      syntax:
        content:
          CSharp: LanguagePackage = 10
          VB: LanguagePackage = 10
        return:
          type: UCT.Settings.OptionType
  - id: UCT.Settings.OptionDisplayMode
    commentId: T:UCT.Settings.OptionDisplayMode
    language: CSharp
    name:
      CSharp: OptionDisplayMode
      VB: OptionDisplayMode
    nameWithType:
      CSharp: OptionDisplayMode
      VB: OptionDisplayMode
    qualifiedName:
      CSharp: UCT.Settings.OptionDisplayMode
      VB: UCT.Settings.OptionDisplayMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: OptionDisplayMode
      path: ''
      startLine: 12882
    summary: "\n用于设置选项的显示方式。\n"
    example: []
    syntax:
      content:
        CSharp: public enum OptionDisplayMode
        VB: Public Enum OptionDisplayMode
    items:
    - id: UCT.Settings.OptionDisplayMode.Default
      commentId: F:UCT.Settings.OptionDisplayMode.Default
      language: CSharp
      name:
        CSharp: Default
        VB: Default
      nameWithType:
        CSharp: OptionDisplayMode.Default
        VB: OptionDisplayMode.Default
      qualifiedName:
        CSharp: UCT.Settings.OptionDisplayMode.Default
        VB: UCT.Settings.OptionDisplayMode.Default
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Default
        path: ''
        startLine: 12884
      syntax:
        content:
          CSharp: Default = 0
          VB: Default = 0
        return:
          type: UCT.Settings.OptionDisplayMode
    - id: UCT.Settings.OptionDisplayMode.Percentage
      commentId: F:UCT.Settings.OptionDisplayMode.Percentage
      language: CSharp
      name:
        CSharp: Percentage
        VB: Percentage
      nameWithType:
        CSharp: OptionDisplayMode.Percentage
        VB: OptionDisplayMode.Percentage
      qualifiedName:
        CSharp: UCT.Settings.OptionDisplayMode.Percentage
        VB: UCT.Settings.OptionDisplayMode.Percentage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Percentage
        path: ''
        startLine: 12885
      syntax:
        content:
          CSharp: Percentage = 1
          VB: Percentage = 1
        return:
          type: UCT.Settings.OptionDisplayMode
    - id: UCT.Settings.OptionDisplayMode.Resolution
      commentId: F:UCT.Settings.OptionDisplayMode.Resolution
      language: CSharp
      name:
        CSharp: Resolution
        VB: Resolution
      nameWithType:
        CSharp: OptionDisplayMode.Resolution
        VB: OptionDisplayMode.Resolution
      qualifiedName:
        CSharp: UCT.Settings.OptionDisplayMode.Resolution
        VB: UCT.Settings.OptionDisplayMode.Resolution
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Resolution
        path: ''
        startLine: 12886
      syntax:
        content:
          CSharp: Resolution = 2
          VB: Resolution = 2
        return:
          type: UCT.Settings.OptionDisplayMode
    - id: UCT.Settings.OptionDisplayMode.DataName
      commentId: F:UCT.Settings.OptionDisplayMode.DataName
      language: CSharp
      name:
        CSharp: DataName
        VB: DataName
      nameWithType:
        CSharp: OptionDisplayMode.DataName
        VB: OptionDisplayMode.DataName
      qualifiedName:
        CSharp: UCT.Settings.OptionDisplayMode.DataName
        VB: UCT.Settings.OptionDisplayMode.DataName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: DataName
        path: ''
        startLine: 12887
      syntax:
        content:
          CSharp: DataName = 3
          VB: DataName = 3
        return:
          type: UCT.Settings.OptionDisplayMode
  - id: UCT.Settings.ISettingsLayer
    commentId: T:UCT.Settings.ISettingsLayer
    language: CSharp
    name:
      CSharp: ISettingsLayer
      VB: ISettingsLayer
    nameWithType:
      CSharp: ISettingsLayer
      VB: ISettingsLayer
    qualifiedName:
      CSharp: UCT.Settings.ISettingsLayer
      VB: UCT.Settings.ISettingsLayer
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: ISettingsLayer
      path: ''
      startLine: 12901
    summary: "\n设置页面层级接口\n"
    example: []
    syntax:
      content:
        CSharp: public interface ISettingsLayer
        VB: Public Interface ISettingsLayer
    items:
    - id: UCT.Settings.ISettingsLayer.AllSettingsOptions
      commentId: P:UCT.Settings.ISettingsLayer.AllSettingsOptions
      language: CSharp
      name:
        CSharp: AllSettingsOptions
        VB: AllSettingsOptions
      nameWithType:
        CSharp: ISettingsLayer.AllSettingsOptions
        VB: ISettingsLayer.AllSettingsOptions
      qualifiedName:
        CSharp: UCT.Settings.ISettingsLayer.AllSettingsOptions
        VB: UCT.Settings.ISettingsLayer.AllSettingsOptions
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AllSettingsOptions
        path: ''
        startLine: 12903
      syntax:
        content:
          CSharp: List<SettingsOption> AllSettingsOptions { get; }
          VB: ReadOnly Property AllSettingsOptions As List(Of SettingsOption)
        parameters: []
        return:
          type: System.Collections.Generic.List{UCT.Settings.SettingsOption}
      overload: UCT.Settings.ISettingsLayer.AllSettingsOptions*
    - id: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions
      commentId: P:UCT.Settings.ISettingsLayer.DisplayedSettingsOptions
      language: CSharp
      name:
        CSharp: DisplayedSettingsOptions
        VB: DisplayedSettingsOptions
      nameWithType:
        CSharp: ISettingsLayer.DisplayedSettingsOptions
        VB: ISettingsLayer.DisplayedSettingsOptions
      qualifiedName:
        CSharp: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions
        VB: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: DisplayedSettingsOptions
        path: ''
        startLine: 12904
      syntax:
        content:
          CSharp: List<SettingsOption> DisplayedSettingsOptions { get; set; }
          VB: Property DisplayedSettingsOptions As List(Of SettingsOption)
        parameters: []
        return:
          type: System.Collections.Generic.List{UCT.Settings.SettingsOption}
      overload: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions*
    - id: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay(System.String,System.String,System.String)
      commentId: M:UCT.Settings.ISettingsLayer.AddBackOptionForDisplay(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: AddBackOptionForDisplay(string, string, string)
        VB: AddBackOptionForDisplay(String, String, String)
      nameWithType:
        CSharp: ISettingsLayer.AddBackOptionForDisplay(string, string, string)
        VB: ISettingsLayer.AddBackOptionForDisplay(String, String, String)
      qualifiedName:
        CSharp: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay(string, string, string)
        VB: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay(String, String, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AddBackOptionForDisplay
        path: ''
        startLine: 12912
      summary: "\n添加退出层级/设置页面的选项\n"
      example: []
      syntax:
        content:
          CSharp: void AddBackOptionForDisplay(string layerName, string dataName = "SettingBack", string descriptionDataName = "SettingBackTip")
          VB: Sub AddBackOptionForDisplay(layerName As String, dataName As String = "SettingBack", descriptionDataName As String = "SettingBackTip")
        parameters:
        - id: layerName
          type: System.String
          description: 层级名称
        - id: dataName
          type: System.String
          description: 选项本身的数据名称
        - id: descriptionDataName
          type: System.String
          description: 描述文本的数据名称
      overload: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay*
    - id: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay(System.String,System.String)
      commentId: M:UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay(System.String,System.String)
      language: CSharp
      name:
        CSharp: AddSwitchPageOptionForDisplay(string, string)
        VB: AddSwitchPageOptionForDisplay(String, String)
      nameWithType:
        CSharp: ISettingsLayer.AddSwitchPageOptionForDisplay(string, string)
        VB: ISettingsLayer.AddSwitchPageOptionForDisplay(String, String)
      qualifiedName:
        CSharp: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay(string, string)
        VB: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay(String, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AddSwitchPageOptionForDisplay
        path: ''
        startLine: 12916
      syntax:
        content:
          CSharp: void AddSwitchPageOptionForDisplay(string dataName = "PageUp", string changedValue = "PageDown")
          VB: Sub AddSwitchPageOptionForDisplay(dataName As String = "PageUp", changedValue As String = "PageDown")
        parameters:
        - id: dataName
          type: System.String
        - id: changedValue
          type: System.String
      overload: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay*
    - id: UCT.Settings.ISettingsLayer.AddLanguagePackageOption
      commentId: M:UCT.Settings.ISettingsLayer.AddLanguagePackageOption
      language: CSharp
      name:
        CSharp: AddLanguagePackageOption()
        VB: AddLanguagePackageOption()
      nameWithType:
        CSharp: ISettingsLayer.AddLanguagePackageOption()
        VB: ISettingsLayer.AddLanguagePackageOption()
      qualifiedName:
        CSharp: UCT.Settings.ISettingsLayer.AddLanguagePackageOption()
        VB: UCT.Settings.ISettingsLayer.AddLanguagePackageOption()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AddLanguagePackageOption
        path: ''
        startLine: 12921
      summary: "\n添加语言包配置的选项\n"
      example: []
      syntax:
        content:
          CSharp: void AddLanguagePackageOption()
          VB: Sub AddLanguagePackageOption()
      overload: UCT.Settings.ISettingsLayer.AddLanguagePackageOption*
    - id: UCT.Settings.ISettingsLayer.Clear
      commentId: M:UCT.Settings.ISettingsLayer.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: ISettingsLayer.Clear()
        VB: ISettingsLayer.Clear()
      qualifiedName:
        CSharp: UCT.Settings.ISettingsLayer.Clear()
        VB: UCT.Settings.ISettingsLayer.Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Clear
        path: ''
        startLine: 12926
      summary: "\n清除所有设置项\n"
      example: []
      syntax:
        content:
          CSharp: void Clear()
          VB: Sub Clear()
      overload: UCT.Settings.ISettingsLayer.Clear*
  - id: UCT.Settings.SettingsLayerBase
    commentId: T:UCT.Settings.SettingsLayerBase
    language: CSharp
    name:
      CSharp: SettingsLayerBase
      VB: SettingsLayerBase
    nameWithType:
      CSharp: SettingsLayerBase
      VB: SettingsLayerBase
    qualifiedName:
      CSharp: UCT.Settings.SettingsLayerBase
      VB: UCT.Settings.SettingsLayerBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: SettingsLayerBase
      path: ''
      startLine: 12929
    syntax:
      content:
        CSharp: 'public abstract class SettingsLayerBase : ISettingsLayer'
        VB: Public MustInherit Class SettingsLayerBase Implements ISettingsLayer
    inheritance:
    - System.Object
    implements:
    - UCT.Settings.ISettingsLayer
    items:
    - id: UCT.Settings.SettingsLayerBase.AllSettingsOptions
      commentId: P:UCT.Settings.SettingsLayerBase.AllSettingsOptions
      language: CSharp
      name:
        CSharp: AllSettingsOptions
        VB: AllSettingsOptions
      nameWithType:
        CSharp: SettingsLayerBase.AllSettingsOptions
        VB: SettingsLayerBase.AllSettingsOptions
      qualifiedName:
        CSharp: UCT.Settings.SettingsLayerBase.AllSettingsOptions
        VB: UCT.Settings.SettingsLayerBase.AllSettingsOptions
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AllSettingsOptions
        path: ''
        startLine: 12931
      syntax:
        content:
          CSharp: public List<SettingsOption> AllSettingsOptions { get; }
          VB: Public Property AllSettingsOptions As List(Of SettingsOption)
        parameters: []
        return:
          type: System.Collections.Generic.List{UCT.Settings.SettingsOption}
      overload: UCT.Settings.SettingsLayerBase.AllSettingsOptions*
      implements:
      - UCT.Settings.ISettingsLayer.AllSettingsOptions
    - id: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
      commentId: P:UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
      language: CSharp
      name:
        CSharp: DisplayedSettingsOptions
        VB: DisplayedSettingsOptions
      nameWithType:
        CSharp: SettingsLayerBase.DisplayedSettingsOptions
        VB: SettingsLayerBase.DisplayedSettingsOptions
      qualifiedName:
        CSharp: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
        VB: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: DisplayedSettingsOptions
        path: ''
        startLine: 12932
      syntax:
        content:
          CSharp: public List<SettingsOption> DisplayedSettingsOptions { get; set; }
          VB: Public Property DisplayedSettingsOptions As List(Of SettingsOption)
        parameters: []
        return:
          type: System.Collections.Generic.List{UCT.Settings.SettingsOption}
      overload: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions*
      implements:
      - UCT.Settings.ISettingsLayer.DisplayedSettingsOptions
    - id: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
      commentId: M:UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: AddBackOptionForDisplay(string, string, string)
        VB: AddBackOptionForDisplay(String, String, String)
      nameWithType:
        CSharp: SettingsLayerBase.AddBackOptionForDisplay(string, string, string)
        VB: SettingsLayerBase.AddBackOptionForDisplay(String, String, String)
      qualifiedName:
        CSharp: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(string, string, string)
        VB: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(String, String, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AddBackOptionForDisplay
        path: ''
        startLine: 12943
      summary: "\n添加退出层级/设置页面的选项\n"
      example: []
      syntax:
        content:
          CSharp: public void AddBackOptionForDisplay(string layerName, string dataName = "SettingBack", string descriptionDataName = "SettingBackTip")
          VB: Public Sub AddBackOptionForDisplay(layerName As String, dataName As String = "SettingBack", descriptionDataName As String = "SettingBackTip")
        parameters:
        - id: layerName
          type: System.String
          description: 层级名称
        - id: dataName
          type: System.String
          description: 选项本身的数据名称
        - id: descriptionDataName
          type: System.String
          description: 描述文本的数据名称
      overload: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay*
      implements:
      - UCT.Settings.ISettingsLayer.AddBackOptionForDisplay(System.String,System.String,System.String)
    - id: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
      commentId: M:UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
      language: CSharp
      name:
        CSharp: AddSwitchPageOptionForDisplay(string, string)
        VB: AddSwitchPageOptionForDisplay(String, String)
      nameWithType:
        CSharp: SettingsLayerBase.AddSwitchPageOptionForDisplay(string, string)
        VB: SettingsLayerBase.AddSwitchPageOptionForDisplay(String, String)
      qualifiedName:
        CSharp: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(string, string)
        VB: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(String, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AddSwitchPageOptionForDisplay
        path: ''
        startLine: 12955
      syntax:
        content:
          CSharp: public void AddSwitchPageOptionForDisplay(string dataName = "PageUp", string changedValue = "PageDown")
          VB: Public Sub AddSwitchPageOptionForDisplay(dataName As String = "PageUp", changedValue As String = "PageDown")
        parameters:
        - id: dataName
          type: System.String
        - id: changedValue
          type: System.String
      overload: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay*
      implements:
      - UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay(System.String,System.String)
    - id: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
      commentId: M:UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
      language: CSharp
      name:
        CSharp: AddLanguagePackageOption()
        VB: AddLanguagePackageOption()
      nameWithType:
        CSharp: SettingsLayerBase.AddLanguagePackageOption()
        VB: SettingsLayerBase.AddLanguagePackageOption()
      qualifiedName:
        CSharp: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption()
        VB: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AddLanguagePackageOption
        path: ''
        startLine: 12970
      summary: "\n添加语言包配置的选项。\n特别地，它是加给AllSettingsOptions的。\n"
      example: []
      syntax:
        content:
          CSharp: public void AddLanguagePackageOption()
          VB: Public Sub AddLanguagePackageOption()
      overload: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption*
      implements:
      - UCT.Settings.ISettingsLayer.AddLanguagePackageOption
    - id: UCT.Settings.SettingsLayerBase.Clear
      commentId: M:UCT.Settings.SettingsLayerBase.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: SettingsLayerBase.Clear()
        VB: SettingsLayerBase.Clear()
      qualifiedName:
        CSharp: UCT.Settings.SettingsLayerBase.Clear()
        VB: UCT.Settings.SettingsLayerBase.Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Clear
        path: ''
        startLine: 12981
      summary: "\n清除所有设置项\n"
      example: []
      syntax:
        content:
          CSharp: public void Clear()
          VB: Public Sub Clear()
      overload: UCT.Settings.SettingsLayerBase.Clear*
      implements:
      - UCT.Settings.ISettingsLayer.Clear
    - id: UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
      commentId: M:UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
      language: CSharp
      name:
        CSharp: AddEnterLayerOption(string, string, string[], int)
        VB: AddEnterLayerOption(String, String, String(), Integer)
      nameWithType:
        CSharp: SettingsLayerBase.AddEnterLayerOption(string, string, string[], int)
        VB: SettingsLayerBase.AddEnterLayerOption(String, String, String(), Integer)
      qualifiedName:
        CSharp: UCT.Settings.SettingsLayerBase.AddEnterLayerOption(string, string, string[], int)
        VB: UCT.Settings.SettingsLayerBase.AddEnterLayerOption(String, String, String(), Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AddEnterLayerOption
        path: ''
        startLine: 12994
      summary: "\n添加进入层级的选项\n"
      example: []
      syntax:
        content:
          CSharp: protected void AddEnterLayerOption(string layerName, string dataName, string[] descriptionDataName, int newSelectedOption = 0)
          VB: Protected Sub AddEnterLayerOption(layerName As String, dataName As String, descriptionDataName As String(), newSelectedOption As Integer = 0)
        parameters:
        - id: layerName
          type: System.String
          description: 层级名称
        - id: dataName
          type: System.String
          description: 选项本身的数据名称
        - id: descriptionDataName
          type: System.String[]
          description: 描述文本的数据名称
        - id: newSelectedOption
          type: System.Int32
          description: 进入层级后的选项索引
      overload: UCT.Settings.SettingsLayerBase.AddEnterLayerOption*
    - id: UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
      commentId: M:UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
      language: CSharp
      name:
        CSharp: AddEnterSceneOption(string, string, string)
        VB: AddEnterSceneOption(String, String, String)
      nameWithType:
        CSharp: SettingsLayerBase.AddEnterSceneOption(string, string, string)
        VB: SettingsLayerBase.AddEnterSceneOption(String, String, String)
      qualifiedName:
        CSharp: UCT.Settings.SettingsLayerBase.AddEnterSceneOption(string, string, string)
        VB: UCT.Settings.SettingsLayerBase.AddEnterSceneOption(String, String, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AddEnterSceneOption
        path: ''
        startLine: 13014
      summary: "\n添加进入场景的选项\n"
      example: []
      syntax:
        content:
          CSharp: protected void AddEnterSceneOption(string sceneName, string dataName, string descriptionDataName)
          VB: Protected Sub AddEnterSceneOption(sceneName As String, dataName As String, descriptionDataName As String)
        parameters:
        - id: sceneName
          type: System.String
          description: 场景名称
        - id: dataName
          type: System.String
          description: 选项本身的数据名称
        - id: descriptionDataName
          type: System.String
          description: 描述文本的数据名称
      overload: UCT.Settings.SettingsLayerBase.AddEnterSceneOption*
    - id: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
      commentId: M:UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
      language: CSharp
      name:
        CSharp: AddConfigurableKeyOption(string)
        VB: AddConfigurableKeyOption(String)
      nameWithType:
        CSharp: SettingsLayerBase.AddConfigurableKeyOption(string)
        VB: SettingsLayerBase.AddConfigurableKeyOption(String)
      qualifiedName:
        CSharp: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(string)
        VB: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AddConfigurableKeyOption
        path: ''
        startLine: 13028
      summary: "\n添加按键设置的选项\n"
      example: []
      syntax:
        content:
          CSharp: protected void AddConfigurableKeyOption(string dataName)
          VB: Protected Sub AddConfigurableKeyOption(dataName As String)
        parameters:
        - id: dataName
          type: System.String
          description: 数据名称
      overload: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption*
    - id: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
      commentId: M:UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
      language: CSharp
      name:
        CSharp: AddKeyBindingsResetOption(string)
        VB: AddKeyBindingsResetOption(String)
      nameWithType:
        CSharp: SettingsLayerBase.AddKeyBindingsResetOption(string)
        VB: SettingsLayerBase.AddKeyBindingsResetOption(String)
      qualifiedName:
        CSharp: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(string)
        VB: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AddKeyBindingsResetOption
        path: ''
        startLine: 13045
      summary: "\n添加重置初始按键设置的选项\n"
      example: []
      syntax:
        content:
          CSharp: protected void AddKeyBindingsResetOption(string dataName = "KeyBindingsReset")
          VB: Protected Sub AddKeyBindingsResetOption(dataName As String = "KeyBindingsReset")
        parameters:
        - id: dataName
          type: System.String
          description: 数据名称
      overload: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption*
  - id: UCT.Settings.HomeSettingsLayer
    commentId: T:UCT.Settings.HomeSettingsLayer
    language: CSharp
    name:
      CSharp: HomeSettingsLayer
      VB: HomeSettingsLayer
    nameWithType:
      CSharp: HomeSettingsLayer
      VB: HomeSettingsLayer
    qualifiedName:
      CSharp: UCT.Settings.HomeSettingsLayer
      VB: UCT.Settings.HomeSettingsLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: HomeSettingsLayer
      path: ''
      startLine: 13059
    syntax:
      content:
        CSharp: 'public class HomeSettingsLayer : SettingsLayerBase, ISettingsLayer'
        VB: Public Class HomeSettingsLayer Inherits SettingsLayerBase Implements ISettingsLayer
    inheritance:
    - System.Object
    - UCT.Settings.SettingsLayerBase
    implements:
    - UCT.Settings.ISettingsLayer
    inheritedMembers:
    - UCT.Settings.SettingsLayerBase.AllSettingsOptions
    - UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
    - UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
    - UCT.Settings.SettingsLayerBase.Clear
    - UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
    - UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
    - UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
    items:
    - id: UCT.Settings.HomeSettingsLayer.#ctor
      commentId: M:UCT.Settings.HomeSettingsLayer.#ctor
      language: CSharp
      name:
        CSharp: HomeSettingsLayer()
        VB: New()
      nameWithType:
        CSharp: HomeSettingsLayer.HomeSettingsLayer()
        VB: HomeSettingsLayer.New()
      qualifiedName:
        CSharp: UCT.Settings.HomeSettingsLayer.HomeSettingsLayer()
        VB: UCT.Settings.HomeSettingsLayer.New()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: .ctor
        path: ''
        startLine: 13061
      syntax:
        content:
          CSharp: public HomeSettingsLayer()
          VB: Public Sub New()
      overload: UCT.Settings.HomeSettingsLayer.#ctor*
  - id: UCT.Settings.VideoSettingsLayer
    commentId: T:UCT.Settings.VideoSettingsLayer
    language: CSharp
    name:
      CSharp: VideoSettingsLayer
      VB: VideoSettingsLayer
    nameWithType:
      CSharp: VideoSettingsLayer
      VB: VideoSettingsLayer
    qualifiedName:
      CSharp: UCT.Settings.VideoSettingsLayer
      VB: UCT.Settings.VideoSettingsLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: VideoSettingsLayer
      path: ''
      startLine: 13077
    syntax:
      content:
        CSharp: 'public class VideoSettingsLayer : SettingsLayerBase, ISettingsLayer'
        VB: Public Class VideoSettingsLayer Inherits SettingsLayerBase Implements ISettingsLayer
    inheritance:
    - System.Object
    - UCT.Settings.SettingsLayerBase
    implements:
    - UCT.Settings.ISettingsLayer
    inheritedMembers:
    - UCT.Settings.SettingsLayerBase.AllSettingsOptions
    - UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
    - UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
    - UCT.Settings.SettingsLayerBase.Clear
    - UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
    - UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
    - UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
    items:
    - id: UCT.Settings.VideoSettingsLayer.#ctor
      commentId: M:UCT.Settings.VideoSettingsLayer.#ctor
      language: CSharp
      name:
        CSharp: VideoSettingsLayer()
        VB: New()
      nameWithType:
        CSharp: VideoSettingsLayer.VideoSettingsLayer()
        VB: VideoSettingsLayer.New()
      qualifiedName:
        CSharp: UCT.Settings.VideoSettingsLayer.VideoSettingsLayer()
        VB: UCT.Settings.VideoSettingsLayer.New()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: .ctor
        path: ''
        startLine: 13079
      syntax:
        content:
          CSharp: public VideoSettingsLayer()
          VB: Public Sub New()
      overload: UCT.Settings.VideoSettingsLayer.#ctor*
  - id: UCT.Settings.AudioSettingsLayer
    commentId: T:UCT.Settings.AudioSettingsLayer
    language: CSharp
    name:
      CSharp: AudioSettingsLayer
      VB: AudioSettingsLayer
    nameWithType:
      CSharp: AudioSettingsLayer
      VB: AudioSettingsLayer
    qualifiedName:
      CSharp: UCT.Settings.AudioSettingsLayer
      VB: UCT.Settings.AudioSettingsLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: AudioSettingsLayer
      path: ''
      startLine: 13213
    syntax:
      content:
        CSharp: 'public class AudioSettingsLayer : SettingsLayerBase, ISettingsLayer'
        VB: Public Class AudioSettingsLayer Inherits SettingsLayerBase Implements ISettingsLayer
    inheritance:
    - System.Object
    - UCT.Settings.SettingsLayerBase
    implements:
    - UCT.Settings.ISettingsLayer
    inheritedMembers:
    - UCT.Settings.SettingsLayerBase.AllSettingsOptions
    - UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
    - UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
    - UCT.Settings.SettingsLayerBase.Clear
    - UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
    - UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
    - UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
    items:
    - id: UCT.Settings.AudioSettingsLayer.#ctor
      commentId: M:UCT.Settings.AudioSettingsLayer.#ctor
      language: CSharp
      name:
        CSharp: AudioSettingsLayer()
        VB: New()
      nameWithType:
        CSharp: AudioSettingsLayer.AudioSettingsLayer()
        VB: AudioSettingsLayer.New()
      qualifiedName:
        CSharp: UCT.Settings.AudioSettingsLayer.AudioSettingsLayer()
        VB: UCT.Settings.AudioSettingsLayer.New()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: .ctor
        path: ''
        startLine: 13215
      syntax:
        content:
          CSharp: public AudioSettingsLayer()
          VB: Public Sub New()
      overload: UCT.Settings.AudioSettingsLayer.#ctor*
  - id: UCT.Settings.GraphicSettingsLayer
    commentId: T:UCT.Settings.GraphicSettingsLayer
    language: CSharp
    name:
      CSharp: GraphicSettingsLayer
      VB: GraphicSettingsLayer
    nameWithType:
      CSharp: GraphicSettingsLayer
      VB: GraphicSettingsLayer
    qualifiedName:
      CSharp: UCT.Settings.GraphicSettingsLayer
      VB: UCT.Settings.GraphicSettingsLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: GraphicSettingsLayer
      path: ''
      startLine: 13303
    syntax:
      content:
        CSharp: 'public class GraphicSettingsLayer : SettingsLayerBase, ISettingsLayer'
        VB: Public Class GraphicSettingsLayer Inherits SettingsLayerBase Implements ISettingsLayer
    inheritance:
    - System.Object
    - UCT.Settings.SettingsLayerBase
    implements:
    - UCT.Settings.ISettingsLayer
    inheritedMembers:
    - UCT.Settings.SettingsLayerBase.AllSettingsOptions
    - UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
    - UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
    - UCT.Settings.SettingsLayerBase.Clear
    - UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
    - UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
    - UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
    items:
    - id: UCT.Settings.GraphicSettingsLayer.#ctor
      commentId: M:UCT.Settings.GraphicSettingsLayer.#ctor
      language: CSharp
      name:
        CSharp: GraphicSettingsLayer()
        VB: New()
      nameWithType:
        CSharp: GraphicSettingsLayer.GraphicSettingsLayer()
        VB: GraphicSettingsLayer.New()
      qualifiedName:
        CSharp: UCT.Settings.GraphicSettingsLayer.GraphicSettingsLayer()
        VB: UCT.Settings.GraphicSettingsLayer.New()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: .ctor
        path: ''
        startLine: 13305
      syntax:
        content:
          CSharp: public GraphicSettingsLayer()
          VB: Public Sub New()
      overload: UCT.Settings.GraphicSettingsLayer.#ctor*
  - id: UCT.Settings.InputSettingsLayer
    commentId: T:UCT.Settings.InputSettingsLayer
    language: CSharp
    name:
      CSharp: InputSettingsLayer
      VB: InputSettingsLayer
    nameWithType:
      CSharp: InputSettingsLayer
      VB: InputSettingsLayer
    qualifiedName:
      CSharp: UCT.Settings.InputSettingsLayer
      VB: UCT.Settings.InputSettingsLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: InputSettingsLayer
      path: ''
      startLine: 13337
    syntax:
      content:
        CSharp: 'public class InputSettingsLayer : SettingsLayerBase, ISettingsLayer'
        VB: Public Class InputSettingsLayer Inherits SettingsLayerBase Implements ISettingsLayer
    inheritance:
    - System.Object
    - UCT.Settings.SettingsLayerBase
    implements:
    - UCT.Settings.ISettingsLayer
    inheritedMembers:
    - UCT.Settings.SettingsLayerBase.AllSettingsOptions
    - UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
    - UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
    - UCT.Settings.SettingsLayerBase.Clear
    - UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
    - UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
    - UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
    items:
    - id: UCT.Settings.InputSettingsLayer.#ctor
      commentId: M:UCT.Settings.InputSettingsLayer.#ctor
      language: CSharp
      name:
        CSharp: InputSettingsLayer()
        VB: New()
      nameWithType:
        CSharp: InputSettingsLayer.InputSettingsLayer()
        VB: InputSettingsLayer.New()
      qualifiedName:
        CSharp: UCT.Settings.InputSettingsLayer.InputSettingsLayer()
        VB: UCT.Settings.InputSettingsLayer.New()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: .ctor
        path: ''
        startLine: 13339
      syntax:
        content:
          CSharp: public InputSettingsLayer()
          VB: Public Sub New()
      overload: UCT.Settings.InputSettingsLayer.#ctor*
  - id: UCT.Settings.SettingKeyControlLayer
    commentId: T:UCT.Settings.SettingKeyControlLayer
    language: CSharp
    name:
      CSharp: SettingKeyControlLayer
      VB: SettingKeyControlLayer
    nameWithType:
      CSharp: SettingKeyControlLayer
      VB: SettingKeyControlLayer
    qualifiedName:
      CSharp: UCT.Settings.SettingKeyControlLayer
      VB: UCT.Settings.SettingKeyControlLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: SettingKeyControlLayer
      path: ''
      startLine: 13352
    syntax:
      content:
        CSharp: 'public class SettingKeyControlLayer : SettingsLayerBase, ISettingsLayer'
        VB: Public Class SettingKeyControlLayer Inherits SettingsLayerBase Implements ISettingsLayer
    inheritance:
    - System.Object
    - UCT.Settings.SettingsLayerBase
    implements:
    - UCT.Settings.ISettingsLayer
    inheritedMembers:
    - UCT.Settings.SettingsLayerBase.AllSettingsOptions
    - UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
    - UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
    - UCT.Settings.SettingsLayerBase.Clear
    - UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
    - UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
    - UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
    items:
    - id: UCT.Settings.SettingKeyControlLayer.#ctor
      commentId: M:UCT.Settings.SettingKeyControlLayer.#ctor
      language: CSharp
      name:
        CSharp: SettingKeyControlLayer()
        VB: New()
      nameWithType:
        CSharp: SettingKeyControlLayer.SettingKeyControlLayer()
        VB: SettingKeyControlLayer.New()
      qualifiedName:
        CSharp: UCT.Settings.SettingKeyControlLayer.SettingKeyControlLayer()
        VB: UCT.Settings.SettingKeyControlLayer.New()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: .ctor
        path: ''
        startLine: 13354
      syntax:
        content:
          CSharp: public SettingKeyControlLayer()
          VB: Public Sub New()
      overload: UCT.Settings.SettingKeyControlLayer.#ctor*
  - id: UCT.Settings.SettingLanguagePackageLayer
    commentId: T:UCT.Settings.SettingLanguagePackageLayer
    language: CSharp
    name:
      CSharp: SettingLanguagePackageLayer
      VB: SettingLanguagePackageLayer
    nameWithType:
      CSharp: SettingLanguagePackageLayer
      VB: SettingLanguagePackageLayer
    qualifiedName:
      CSharp: UCT.Settings.SettingLanguagePackageLayer
      VB: UCT.Settings.SettingLanguagePackageLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: SettingLanguagePackageLayer
      path: ''
      startLine: 13375
    syntax:
      content:
        CSharp: 'public class SettingLanguagePackageLayer : SettingsLayerBase, ISettingsLayer'
        VB: Public Class SettingLanguagePackageLayer Inherits SettingsLayerBase Implements ISettingsLayer
    inheritance:
    - System.Object
    - UCT.Settings.SettingsLayerBase
    implements:
    - UCT.Settings.ISettingsLayer
    inheritedMembers:
    - UCT.Settings.SettingsLayerBase.AllSettingsOptions
    - UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
    - UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
    - UCT.Settings.SettingsLayerBase.Clear
    - UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
    - UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
    - UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
    items: []
  - id: UCT.Settings.SubtitleSettingsLayer
    commentId: T:UCT.Settings.SubtitleSettingsLayer
    language: CSharp
    name:
      CSharp: SubtitleSettingsLayer
      VB: SubtitleSettingsLayer
    nameWithType:
      CSharp: SubtitleSettingsLayer
      VB: SubtitleSettingsLayer
    qualifiedName:
      CSharp: UCT.Settings.SubtitleSettingsLayer
      VB: UCT.Settings.SubtitleSettingsLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: SubtitleSettingsLayer
      path: ''
      startLine: 13388
    syntax:
      content:
        CSharp: 'public class SubtitleSettingsLayer : SettingsLayerBase, ISettingsLayer'
        VB: Public Class SubtitleSettingsLayer Inherits SettingsLayerBase Implements ISettingsLayer
    inheritance:
    - System.Object
    - UCT.Settings.SettingsLayerBase
    implements:
    - UCT.Settings.ISettingsLayer
    inheritedMembers:
    - UCT.Settings.SettingsLayerBase.AllSettingsOptions
    - UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
    - UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
    - UCT.Settings.SettingsLayerBase.Clear
    - UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
    - UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
    - UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
    - UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
    items:
    - id: UCT.Settings.SubtitleSettingsLayer.#ctor
      commentId: M:UCT.Settings.SubtitleSettingsLayer.#ctor
      language: CSharp
      name:
        CSharp: SubtitleSettingsLayer()
        VB: New()
      nameWithType:
        CSharp: SubtitleSettingsLayer.SubtitleSettingsLayer()
        VB: SubtitleSettingsLayer.New()
      qualifiedName:
        CSharp: UCT.Settings.SubtitleSettingsLayer.SubtitleSettingsLayer()
        VB: UCT.Settings.SubtitleSettingsLayer.New()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: .ctor
        path: ''
        startLine: 13390
      syntax:
        content:
          CSharp: public SubtitleSettingsLayer()
          VB: Public Sub New()
      overload: UCT.Settings.SubtitleSettingsLayer.#ctor*
  - id: UCT.Settings.EscKeyExitHandler
    commentId: T:UCT.Settings.EscKeyExitHandler
    language: CSharp
    name:
      CSharp: EscKeyExitHandler
      VB: EscKeyExitHandler
    nameWithType:
      CSharp: EscKeyExitHandler
      VB: EscKeyExitHandler
    qualifiedName:
      CSharp: UCT.Settings.EscKeyExitHandler
      VB: UCT.Settings.EscKeyExitHandler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: EscKeyExitHandler
      path: ''
      startLine: 13453
    summary: "\n处理长按ESC退出游戏的逻辑\n"
    example: []
    syntax:
      content:
        CSharp: 'public class EscKeyExitHandler : MonoBehaviour'
        VB: Public Class EscKeyExitHandler Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: UCT.Settings.SettingsStorage
    commentId: T:UCT.Settings.SettingsStorage
    language: CSharp
    name:
      CSharp: SettingsStorage
      VB: SettingsStorage
    nameWithType:
      CSharp: SettingsStorage
      VB: SettingsStorage
    qualifiedName:
      CSharp: UCT.Settings.SettingsStorage
      VB: UCT.Settings.SettingsStorage
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: SettingsStorage
      path: ''
      startLine: 13530
    syntax:
      content:
        CSharp: public static class SettingsStorage
        VB: Public Module SettingsStorage
    inheritance:
    - System.Object
    items:
    - id: UCT.Settings.SettingsStorage.Pause
      commentId: P:UCT.Settings.SettingsStorage.Pause
      language: CSharp
      name:
        CSharp: Pause
        VB: Pause
      nameWithType:
        CSharp: SettingsStorage.Pause
        VB: SettingsStorage.Pause
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.Pause
        VB: UCT.Settings.SettingsStorage.Pause
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Pause
        path: ''
        startLine: 13532
      syntax:
        content:
          CSharp: public static bool Pause { get; set; }
          VB: Public Shared Property Pause As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: UCT.Settings.SettingsStorage.Pause*
    - id: UCT.Settings.SettingsStorage.TextWidth
      commentId: P:UCT.Settings.SettingsStorage.TextWidth
      language: CSharp
      name:
        CSharp: TextWidth
        VB: TextWidth
      nameWithType:
        CSharp: SettingsStorage.TextWidth
        VB: SettingsStorage.TextWidth
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.TextWidth
        VB: UCT.Settings.SettingsStorage.TextWidth
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: TextWidth
        path: ''
        startLine: 13534
      syntax:
        content:
          CSharp: public static bool TextWidth { get; set; }
          VB: Public Shared Property TextWidth As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: UCT.Settings.SettingsStorage.TextWidth*
    - id: UCT.Settings.SettingsStorage.ResolutionLevel
      commentId: P:UCT.Settings.SettingsStorage.ResolutionLevel
      language: CSharp
      name:
        CSharp: ResolutionLevel
        VB: ResolutionLevel
      nameWithType:
        CSharp: SettingsStorage.ResolutionLevel
        VB: SettingsStorage.ResolutionLevel
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.ResolutionLevel
        VB: UCT.Settings.SettingsStorage.ResolutionLevel
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: ResolutionLevel
        path: ''
        startLine: 13536
      syntax:
        content:
          CSharp: public static int ResolutionLevel { get; set; }
          VB: Public Shared Property ResolutionLevel As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Settings.SettingsStorage.ResolutionLevel*
    - id: UCT.Settings.SettingsStorage.FrameRate
      commentId: P:UCT.Settings.SettingsStorage.FrameRate
      language: CSharp
      name:
        CSharp: FrameRate
        VB: FrameRate
      nameWithType:
        CSharp: SettingsStorage.FrameRate
        VB: SettingsStorage.FrameRate
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.FrameRate
        VB: UCT.Settings.SettingsStorage.FrameRate
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: FrameRate
        path: ''
        startLine: 13538
      syntax:
        content:
          CSharp: public static int FrameRate { get; set; }
          VB: Public Shared Property FrameRate As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Settings.SettingsStorage.FrameRate*
    - id: UCT.Settings.SettingsStorage.FullScreen
      commentId: P:UCT.Settings.SettingsStorage.FullScreen
      language: CSharp
      name:
        CSharp: FullScreen
        VB: FullScreen
      nameWithType:
        CSharp: SettingsStorage.FullScreen
        VB: SettingsStorage.FullScreen
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.FullScreen
        VB: UCT.Settings.SettingsStorage.FullScreen
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: FullScreen
        path: ''
        startLine: 13540
      syntax:
        content:
          CSharp: public static bool FullScreen { get; set; }
          VB: Public Shared Property FullScreen As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: UCT.Settings.SettingsStorage.FullScreen*
    - id: UCT.Settings.SettingsStorage.MainVolume
      commentId: P:UCT.Settings.SettingsStorage.MainVolume
      language: CSharp
      name:
        CSharp: MainVolume
        VB: MainVolume
      nameWithType:
        CSharp: SettingsStorage.MainVolume
        VB: SettingsStorage.MainVolume
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.MainVolume
        VB: UCT.Settings.SettingsStorage.MainVolume
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: MainVolume
        path: ''
        startLine: 13542
      syntax:
        content:
          CSharp: public static float MainVolume { get; set; }
          VB: Public Shared Property MainVolume As Single
        parameters: []
        return:
          type: System.Single
      overload: UCT.Settings.SettingsStorage.MainVolume*
    - id: UCT.Settings.SettingsStorage.BGMVolume
      commentId: P:UCT.Settings.SettingsStorage.BGMVolume
      language: CSharp
      name:
        CSharp: BGMVolume
        VB: BGMVolume
      nameWithType:
        CSharp: SettingsStorage.BGMVolume
        VB: SettingsStorage.BGMVolume
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.BGMVolume
        VB: UCT.Settings.SettingsStorage.BGMVolume
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: BGMVolume
        path: ''
        startLine: 13544
      syntax:
        content:
          CSharp: public static float BGMVolume { get; set; }
          VB: Public Shared Property BGMVolume As Single
        parameters: []
        return:
          type: System.Single
      overload: UCT.Settings.SettingsStorage.BGMVolume*
    - id: UCT.Settings.SettingsStorage.FXVolume
      commentId: P:UCT.Settings.SettingsStorage.FXVolume
      language: CSharp
      name:
        CSharp: FXVolume
        VB: FXVolume
      nameWithType:
        CSharp: SettingsStorage.FXVolume
        VB: SettingsStorage.FXVolume
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.FXVolume
        VB: UCT.Settings.SettingsStorage.FXVolume
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: FXVolume
        path: ''
        startLine: 13546
      syntax:
        content:
          CSharp: public static float FXVolume { get; set; }
          VB: Public Shared Property FXVolume As Single
        parameters: []
        return:
          type: System.Single
      overload: UCT.Settings.SettingsStorage.FXVolume*
    - id: UCT.Settings.SettingsStorage.IsSimplifySfx
      commentId: P:UCT.Settings.SettingsStorage.IsSimplifySfx
      language: CSharp
      name:
        CSharp: IsSimplifySfx
        VB: IsSimplifySfx
      nameWithType:
        CSharp: SettingsStorage.IsSimplifySfx
        VB: SettingsStorage.IsSimplifySfx
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.IsSimplifySfx
        VB: UCT.Settings.SettingsStorage.IsSimplifySfx
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: IsSimplifySfx
        path: ''
        startLine: 13548
      syntax:
        content:
          CSharp: public static bool IsSimplifySfx { get; set; }
          VB: Public Shared Property IsSimplifySfx As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: UCT.Settings.SettingsStorage.IsSimplifySfx*
    - id: UCT.Settings.SettingsStorage.IsDisplayFPS
      commentId: P:UCT.Settings.SettingsStorage.IsDisplayFPS
      language: CSharp
      name:
        CSharp: IsDisplayFPS
        VB: IsDisplayFPS
      nameWithType:
        CSharp: SettingsStorage.IsDisplayFPS
        VB: SettingsStorage.IsDisplayFPS
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.IsDisplayFPS
        VB: UCT.Settings.SettingsStorage.IsDisplayFPS
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: IsDisplayFPS
        path: ''
        startLine: 13550
      syntax:
        content:
          CSharp: public static bool IsDisplayFPS { get; set; }
          VB: Public Shared Property IsDisplayFPS As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: UCT.Settings.SettingsStorage.IsDisplayFPS*
    - id: UCT.Settings.SettingsStorage.Resolution
      commentId: P:UCT.Settings.SettingsStorage.Resolution
      language: CSharp
      name:
        CSharp: Resolution
        VB: Resolution
      nameWithType:
        CSharp: SettingsStorage.Resolution
        VB: SettingsStorage.Resolution
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.Resolution
        VB: UCT.Settings.SettingsStorage.Resolution
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Resolution
        path: ''
        startLine: 13552
      syntax:
        content:
          CSharp: public static Vector2 Resolution { get; set; }
          VB: Public Shared Property Resolution As Vector2
        parameters: []
        return:
          type: Global.Vector2
      overload: UCT.Settings.SettingsStorage.Resolution*
    - id: UCT.Settings.SettingsStorage.VsyncMode
      commentId: P:UCT.Settings.SettingsStorage.VsyncMode
      language: CSharp
      name:
        CSharp: VsyncMode
        VB: VsyncMode
      nameWithType:
        CSharp: SettingsStorage.VsyncMode
        VB: SettingsStorage.VsyncMode
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.VsyncMode
        VB: UCT.Settings.SettingsStorage.VsyncMode
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: VsyncMode
        path: ''
        startLine: 13554
      syntax:
        content:
          CSharp: public static VSyncMode VsyncMode { get; set; }
          VB: Public Shared Property VsyncMode As VSyncMode
        parameters: []
        return:
          type: UCT.Settings.VSyncMode
      overload: UCT.Settings.SettingsStorage.VsyncMode*
    - id: UCT.Settings.SettingsStorage.IsUsingHdFrame
      commentId: P:UCT.Settings.SettingsStorage.IsUsingHdFrame
      language: CSharp
      name:
        CSharp: IsUsingHdFrame
        VB: IsUsingHdFrame
      nameWithType:
        CSharp: SettingsStorage.IsUsingHdFrame
        VB: SettingsStorage.IsUsingHdFrame
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.IsUsingHdFrame
        VB: UCT.Settings.SettingsStorage.IsUsingHdFrame
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: IsUsingHdFrame
        path: ''
        startLine: 13556
      syntax:
        content:
          CSharp: public static bool IsUsingHdFrame { get; set; }
          VB: Public Shared Property IsUsingHdFrame As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: UCT.Settings.SettingsStorage.IsUsingHdFrame*
    - id: UCT.Settings.SettingsStorage.KeyBindingType
      commentId: P:UCT.Settings.SettingsStorage.KeyBindingType
      language: CSharp
      name:
        CSharp: KeyBindingType
        VB: KeyBindingType
      nameWithType:
        CSharp: SettingsStorage.KeyBindingType
        VB: SettingsStorage.KeyBindingType
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.KeyBindingType
        VB: UCT.Settings.SettingsStorage.KeyBindingType
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: KeyBindingType
        path: ''
        startLine: 13558
      syntax:
        content:
          CSharp: public static KeyBindingType KeyBindingType { get; set; }
          VB: Public Shared Property KeyBindingType As KeyBindingType
        parameters: []
        return:
          type: UCT.Settings.KeyBindingType
      overload: UCT.Settings.SettingsStorage.KeyBindingType*
    - id: UCT.Settings.SettingsStorage.TypingSpeed
      commentId: P:UCT.Settings.SettingsStorage.TypingSpeed
      language: CSharp
      name:
        CSharp: TypingSpeed
        VB: TypingSpeed
      nameWithType:
        CSharp: SettingsStorage.TypingSpeed
        VB: SettingsStorage.TypingSpeed
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.TypingSpeed
        VB: UCT.Settings.SettingsStorage.TypingSpeed
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: TypingSpeed
        path: ''
        startLine: 13560
      syntax:
        content:
          CSharp: public static TypingSpeed TypingSpeed { get; set; }
          VB: Public Shared Property TypingSpeed As TypingSpeed
        parameters: []
        return:
          type: UCT.Settings.TypingSpeed
      overload: UCT.Settings.SettingsStorage.TypingSpeed*
    - id: UCT.Settings.SettingsStorage.CubismSettingsLayers
      commentId: P:UCT.Settings.SettingsStorage.CubismSettingsLayers
      language: CSharp
      name:
        CSharp: CubismSettingsLayers
        VB: CubismSettingsLayers
      nameWithType:
        CSharp: SettingsStorage.CubismSettingsLayers
        VB: SettingsStorage.CubismSettingsLayers
      qualifiedName:
        CSharp: UCT.Settings.SettingsStorage.CubismSettingsLayers
        VB: UCT.Settings.SettingsStorage.CubismSettingsLayers
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: CubismSettingsLayers
        path: ''
        startLine: 13562
      syntax:
        content:
          CSharp: public static Dictionary<string, SettingsLayerBase> CubismSettingsLayers { get; }
          VB: Public Shared Property CubismSettingsLayers As Dictionary(Of String, SettingsLayerBase)
        parameters: []
        return:
          type: System.Collections.Generic.Dictionary{System.String,UCT.Settings.SettingsLayerBase}
      overload: UCT.Settings.SettingsStorage.CubismSettingsLayers*
  - id: UCT.Settings.VSyncMode
    commentId: T:UCT.Settings.VSyncMode
    language: CSharp
    name:
      CSharp: VSyncMode
      VB: VSyncMode
    nameWithType:
      CSharp: VSyncMode
      VB: VSyncMode
    qualifiedName:
      CSharp: UCT.Settings.VSyncMode
      VB: UCT.Settings.VSyncMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: VSyncMode
      path: ''
      startLine: 13575
    syntax:
      content:
        CSharp: public enum VSyncMode
        VB: Public Enum VSyncMode
    items:
    - id: UCT.Settings.VSyncMode.DonNotSync
      commentId: F:UCT.Settings.VSyncMode.DonNotSync
      language: CSharp
      name:
        CSharp: DonNotSync
        VB: DonNotSync
      nameWithType:
        CSharp: VSyncMode.DonNotSync
        VB: VSyncMode.DonNotSync
      qualifiedName:
        CSharp: UCT.Settings.VSyncMode.DonNotSync
        VB: UCT.Settings.VSyncMode.DonNotSync
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: DonNotSync
        path: ''
        startLine: 13577
      syntax:
        content:
          CSharp: DonNotSync = 0
          VB: DonNotSync = 0
        return:
          type: UCT.Settings.VSyncMode
    - id: UCT.Settings.VSyncMode.Sync
      commentId: F:UCT.Settings.VSyncMode.Sync
      language: CSharp
      name:
        CSharp: Sync
        VB: Sync
      nameWithType:
        CSharp: VSyncMode.Sync
        VB: VSyncMode.Sync
      qualifiedName:
        CSharp: UCT.Settings.VSyncMode.Sync
        VB: UCT.Settings.VSyncMode.Sync
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Sync
        path: ''
        startLine: 13578
      syntax:
        content:
          CSharp: Sync = 1
          VB: Sync = 1
        return:
          type: UCT.Settings.VSyncMode
    - id: UCT.Settings.VSyncMode.HalfSync
      commentId: F:UCT.Settings.VSyncMode.HalfSync
      language: CSharp
      name:
        CSharp: HalfSync
        VB: HalfSync
      nameWithType:
        CSharp: VSyncMode.HalfSync
        VB: VSyncMode.HalfSync
      qualifiedName:
        CSharp: UCT.Settings.VSyncMode.HalfSync
        VB: UCT.Settings.VSyncMode.HalfSync
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: HalfSync
        path: ''
        startLine: 13579
      syntax:
        content:
          CSharp: HalfSync = 2
          VB: HalfSync = 2
        return:
          type: UCT.Settings.VSyncMode
  - id: UCT.Settings.TypingSpeed
    commentId: T:UCT.Settings.TypingSpeed
    language: CSharp
    name:
      CSharp: TypingSpeed
      VB: TypingSpeed
    nameWithType:
      CSharp: TypingSpeed
      VB: TypingSpeed
    qualifiedName:
      CSharp: UCT.Settings.TypingSpeed
      VB: UCT.Settings.TypingSpeed
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: TypingSpeed
      path: ''
      startLine: 13582
    syntax:
      content:
        CSharp: public enum TypingSpeed
        VB: Public Enum TypingSpeed
    items:
    - id: UCT.Settings.TypingSpeed.Slow
      commentId: F:UCT.Settings.TypingSpeed.Slow
      language: CSharp
      name:
        CSharp: Slow
        VB: Slow
      nameWithType:
        CSharp: TypingSpeed.Slow
        VB: TypingSpeed.Slow
      qualifiedName:
        CSharp: UCT.Settings.TypingSpeed.Slow
        VB: UCT.Settings.TypingSpeed.Slow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Slow
        path: ''
        startLine: 13584
      syntax:
        content:
          CSharp: Slow = 0
          VB: Slow = 0
        return:
          type: UCT.Settings.TypingSpeed
    - id: UCT.Settings.TypingSpeed.Medium
      commentId: F:UCT.Settings.TypingSpeed.Medium
      language: CSharp
      name:
        CSharp: Medium
        VB: Medium
      nameWithType:
        CSharp: TypingSpeed.Medium
        VB: TypingSpeed.Medium
      qualifiedName:
        CSharp: UCT.Settings.TypingSpeed.Medium
        VB: UCT.Settings.TypingSpeed.Medium
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Medium
        path: ''
        startLine: 13585
      syntax:
        content:
          CSharp: Medium = 1
          VB: Medium = 1
        return:
          type: UCT.Settings.TypingSpeed
    - id: UCT.Settings.TypingSpeed.Fast
      commentId: F:UCT.Settings.TypingSpeed.Fast
      language: CSharp
      name:
        CSharp: Fast
        VB: Fast
      nameWithType:
        CSharp: TypingSpeed.Fast
        VB: TypingSpeed.Fast
      qualifiedName:
        CSharp: UCT.Settings.TypingSpeed.Fast
        VB: UCT.Settings.TypingSpeed.Fast
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Fast
        path: ''
        startLine: 13586
      syntax:
        content:
          CSharp: Fast = 2
          VB: Fast = 2
        return:
          type: UCT.Settings.TypingSpeed
  - id: UCT.Settings.KeyBindingType
    commentId: T:UCT.Settings.KeyBindingType
    language: CSharp
    name:
      CSharp: KeyBindingType
      VB: KeyBindingType
    nameWithType:
      CSharp: KeyBindingType
      VB: KeyBindingType
    qualifiedName:
      CSharp: UCT.Settings.KeyBindingType
      VB: UCT.Settings.KeyBindingType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: KeyBindingType
      path: ''
      startLine: 13596
    syntax:
      content:
        CSharp: public enum KeyBindingType
        VB: Public Enum KeyBindingType
    items:
    - id: UCT.Settings.KeyBindingType.Primary
      commentId: F:UCT.Settings.KeyBindingType.Primary
      language: CSharp
      name:
        CSharp: Primary
        VB: Primary
      nameWithType:
        CSharp: KeyBindingType.Primary
        VB: KeyBindingType.Primary
      qualifiedName:
        CSharp: UCT.Settings.KeyBindingType.Primary
        VB: UCT.Settings.KeyBindingType.Primary
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Primary
        path: ''
        startLine: 13598
      syntax:
        content:
          CSharp: Primary = 0
          VB: Primary = 0
        return:
          type: UCT.Settings.KeyBindingType
    - id: UCT.Settings.KeyBindingType.SecondaryA
      commentId: F:UCT.Settings.KeyBindingType.SecondaryA
      language: CSharp
      name:
        CSharp: SecondaryA
        VB: SecondaryA
      nameWithType:
        CSharp: KeyBindingType.SecondaryA
        VB: KeyBindingType.SecondaryA
      qualifiedName:
        CSharp: UCT.Settings.KeyBindingType.SecondaryA
        VB: UCT.Settings.KeyBindingType.SecondaryA
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: SecondaryA
        path: ''
        startLine: 13599
      syntax:
        content:
          CSharp: SecondaryA = 1
          VB: SecondaryA = 1
        return:
          type: UCT.Settings.KeyBindingType
    - id: UCT.Settings.KeyBindingType.SecondaryB
      commentId: F:UCT.Settings.KeyBindingType.SecondaryB
      language: CSharp
      name:
        CSharp: SecondaryB
        VB: SecondaryB
      nameWithType:
        CSharp: KeyBindingType.SecondaryB
        VB: KeyBindingType.SecondaryB
      qualifiedName:
        CSharp: UCT.Settings.KeyBindingType.SecondaryB
        VB: UCT.Settings.KeyBindingType.SecondaryB
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: SecondaryB
        path: ''
        startLine: 13600
      syntax:
        content:
          CSharp: SecondaryB = 2
          VB: SecondaryB = 2
        return:
          type: UCT.Settings.KeyBindingType
  - id: UCT.Settings.KeyBindings
    commentId: T:UCT.Settings.KeyBindings
    language: CSharp
    name:
      CSharp: KeyBindings
      VB: KeyBindings
    nameWithType:
      CSharp: KeyBindings
      VB: KeyBindings
    qualifiedName:
      CSharp: UCT.Settings.KeyBindings
      VB: UCT.Settings.KeyBindings
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: KeyBindings
      path: ''
      startLine: 13603
    syntax:
      content:
        CSharp: public static class KeyBindings
        VB: Public Module KeyBindings
    inheritance:
    - System.Object
    items:
    - id: UCT.Settings.KeyBindings.SetKeyCode(UCT.Settings.KeyBindingType,System.String,KeyCode)
      commentId: M:UCT.Settings.KeyBindings.SetKeyCode(UCT.Settings.KeyBindingType,System.String,KeyCode)
      language: CSharp
      name:
        CSharp: SetKeyCode(KeyBindingType, string, KeyCode)
        VB: SetKeyCode(KeyBindingType, String, KeyCode)
      nameWithType:
        CSharp: KeyBindings.SetKeyCode(KeyBindingType, string, KeyCode)
        VB: KeyBindings.SetKeyCode(KeyBindingType, String, KeyCode)
      qualifiedName:
        CSharp: UCT.Settings.KeyBindings.SetKeyCode(UCT.Settings.KeyBindingType, string, KeyCode)
        VB: UCT.Settings.KeyBindings.SetKeyCode(UCT.Settings.KeyBindingType, String, KeyCode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: SetKeyCode
        path: ''
        startLine: 13673
      syntax:
        content:
          CSharp: public static void SetKeyCode(KeyBindingType type, string dataName, KeyCode key)
          VB: Public Shared Sub SetKeyCode(type As KeyBindingType, dataName As String, key As KeyCode)
        parameters:
        - id: type
          type: UCT.Settings.KeyBindingType
        - id: dataName
          type: System.String
        - id: key
          type: Global.KeyCode
      overload: UCT.Settings.KeyBindings.SetKeyCode*
    - id: UCT.Settings.KeyBindings.SetKeyCodeAtIndex(UCT.Settings.KeyBindingType,System.Int32,KeyCode)
      commentId: M:UCT.Settings.KeyBindings.SetKeyCodeAtIndex(UCT.Settings.KeyBindingType,System.Int32,KeyCode)
      language: CSharp
      name:
        CSharp: SetKeyCodeAtIndex(KeyBindingType, int, KeyCode)
        VB: SetKeyCodeAtIndex(KeyBindingType, Integer, KeyCode)
      nameWithType:
        CSharp: KeyBindings.SetKeyCodeAtIndex(KeyBindingType, int, KeyCode)
        VB: KeyBindings.SetKeyCodeAtIndex(KeyBindingType, Integer, KeyCode)
      qualifiedName:
        CSharp: UCT.Settings.KeyBindings.SetKeyCodeAtIndex(UCT.Settings.KeyBindingType, int, KeyCode)
        VB: UCT.Settings.KeyBindings.SetKeyCodeAtIndex(UCT.Settings.KeyBindingType, Integer, KeyCode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: SetKeyCodeAtIndex
        path: ''
        startLine: 13686
      syntax:
        content:
          CSharp: public static void SetKeyCodeAtIndex(KeyBindingType type, int index, KeyCode key)
          VB: Public Shared Sub SetKeyCodeAtIndex(type As KeyBindingType, index As Integer, key As KeyCode)
        parameters:
        - id: type
          type: UCT.Settings.KeyBindingType
        - id: index
          type: System.Int32
        - id: key
          type: Global.KeyCode
      overload: UCT.Settings.KeyBindings.SetKeyCodeAtIndex*
    - id: UCT.Settings.KeyBindings.GetKeyCode(UCT.Settings.KeyBindingType,System.String)
      commentId: M:UCT.Settings.KeyBindings.GetKeyCode(UCT.Settings.KeyBindingType,System.String)
      language: CSharp
      name:
        CSharp: GetKeyCode(KeyBindingType, string)
        VB: GetKeyCode(KeyBindingType, String)
      nameWithType:
        CSharp: KeyBindings.GetKeyCode(KeyBindingType, string)
        VB: KeyBindings.GetKeyCode(KeyBindingType, String)
      qualifiedName:
        CSharp: UCT.Settings.KeyBindings.GetKeyCode(UCT.Settings.KeyBindingType, string)
        VB: UCT.Settings.KeyBindings.GetKeyCode(UCT.Settings.KeyBindingType, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: GetKeyCode
        path: ''
        startLine: 13699
      syntax:
        content:
          CSharp: public static KeyCode GetKeyCode(KeyBindingType type, string dataName)
          VB: Public Shared Function GetKeyCode(type As KeyBindingType, dataName As String) As KeyCode
        parameters:
        - id: type
          type: UCT.Settings.KeyBindingType
        - id: dataName
          type: System.String
        return:
          type: Global.KeyCode
      overload: UCT.Settings.KeyBindings.GetKeyCode*
    - id: UCT.Settings.KeyBindings.GetKeyCodeAtIndex(UCT.Settings.KeyBindingType,System.Int32)
      commentId: M:UCT.Settings.KeyBindings.GetKeyCodeAtIndex(UCT.Settings.KeyBindingType,System.Int32)
      language: CSharp
      name:
        CSharp: GetKeyCodeAtIndex(KeyBindingType, int)
        VB: GetKeyCodeAtIndex(KeyBindingType, Integer)
      nameWithType:
        CSharp: KeyBindings.GetKeyCodeAtIndex(KeyBindingType, int)
        VB: KeyBindings.GetKeyCodeAtIndex(KeyBindingType, Integer)
      qualifiedName:
        CSharp: UCT.Settings.KeyBindings.GetKeyCodeAtIndex(UCT.Settings.KeyBindingType, int)
        VB: UCT.Settings.KeyBindings.GetKeyCodeAtIndex(UCT.Settings.KeyBindingType, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: GetKeyCodeAtIndex
        path: ''
        startLine: 13705
      syntax:
        content:
          CSharp: public static KeyCode GetKeyCodeAtIndex(KeyBindingType type, int index)
          VB: Public Shared Function GetKeyCodeAtIndex(type As KeyBindingType, index As Integer) As KeyCode
        parameters:
        - id: type
          type: UCT.Settings.KeyBindingType
        - id: index
          type: System.Int32
        return:
          type: Global.KeyCode
      overload: UCT.Settings.KeyBindings.GetKeyCodeAtIndex*
    - id: UCT.Settings.KeyBindings.GetKeyCodes(UCT.Settings.KeyBindingType)
      commentId: M:UCT.Settings.KeyBindings.GetKeyCodes(UCT.Settings.KeyBindingType)
      language: CSharp
      name:
        CSharp: GetKeyCodes(KeyBindingType)
        VB: GetKeyCodes(KeyBindingType)
      nameWithType:
        CSharp: KeyBindings.GetKeyCodes(KeyBindingType)
        VB: KeyBindings.GetKeyCodes(KeyBindingType)
      qualifiedName:
        CSharp: UCT.Settings.KeyBindings.GetKeyCodes(UCT.Settings.KeyBindingType)
        VB: UCT.Settings.KeyBindings.GetKeyCodes(UCT.Settings.KeyBindingType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: GetKeyCodes
        path: ''
        startLine: 13717
      syntax:
        content:
          CSharp: public static Dictionary<string, KeyCode> GetKeyCodes(KeyBindingType type)
          VB: Public Shared Function GetKeyCodes(type As KeyBindingType) As Dictionary(Of String, KeyCode)
        parameters:
        - id: type
          type: UCT.Settings.KeyBindingType
        return:
          type: System.Collections.Generic.Dictionary{System.String,KeyCode}
      overload: UCT.Settings.KeyBindings.GetKeyCodes*
    - id: UCT.Settings.KeyBindings.GetDictionary
      commentId: M:UCT.Settings.KeyBindings.GetDictionary
      language: CSharp
      name:
        CSharp: GetDictionary()
        VB: GetDictionary()
      nameWithType:
        CSharp: KeyBindings.GetDictionary()
        VB: KeyBindings.GetDictionary()
      qualifiedName:
        CSharp: UCT.Settings.KeyBindings.GetDictionary()
        VB: UCT.Settings.KeyBindings.GetDictionary()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: GetDictionary
        path: ''
        startLine: 13722
      syntax:
        content:
          CSharp: public static Dictionary<KeyBindingType, Dictionary<string, KeyCode>> GetDictionary()
          VB: Public Shared Function GetDictionary() As Dictionary(Of KeyBindingType, Dictionary(Of String, KeyCode))
        return:
          type: System.Collections.Generic.Dictionary{UCT.Settings.KeyBindingType,System.Collections.Generic.Dictionary{System.String,KeyCode}}
      overload: UCT.Settings.KeyBindings.GetDictionary*
    - id: UCT.Settings.KeyBindings.ResetDictionary
      commentId: M:UCT.Settings.KeyBindings.ResetDictionary
      language: CSharp
      name:
        CSharp: ResetDictionary()
        VB: ResetDictionary()
      nameWithType:
        CSharp: KeyBindings.ResetDictionary()
        VB: KeyBindings.ResetDictionary()
      qualifiedName:
        CSharp: UCT.Settings.KeyBindings.ResetDictionary()
        VB: UCT.Settings.KeyBindings.ResetDictionary()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: ResetDictionary
        path: ''
        startLine: 13727
      syntax:
        content:
          CSharp: public static void ResetDictionary()
          VB: Public Shared Sub ResetDictionary()
      overload: UCT.Settings.KeyBindings.ResetDictionary*
    - id: UCT.Settings.KeyBindings.GetInputEveryKeyCodeAtIndex(System.Int32,System.Collections.Generic.KeyValuePair{UCT.Settings.KeyBindingType,System.Collections.Generic.Dictionary{System.String,KeyCode}},System.Func{KeyCode,System.Boolean})
      commentId: M:UCT.Settings.KeyBindings.GetInputEveryKeyCodeAtIndex(System.Int32,System.Collections.Generic.KeyValuePair{UCT.Settings.KeyBindingType,System.Collections.Generic.Dictionary{System.String,KeyCode}},System.Func{KeyCode,System.Boolean})
      language: CSharp
      name:
        CSharp: GetInputEveryKeyCodeAtIndex(int, KeyValuePair<KeyBindingType, Dictionary<string, KeyCode>>, Func<KeyCode, bool>)
        VB: GetInputEveryKeyCodeAtIndex(Integer, KeyValuePair(Of KeyBindingType, Dictionary(Of String, KeyCode)), Func(Of KeyCode, Boolean))
      nameWithType:
        CSharp: KeyBindings.GetInputEveryKeyCodeAtIndex(int, KeyValuePair<KeyBindingType, Dictionary<string, KeyCode>>, Func<KeyCode, bool>)
        VB: KeyBindings.GetInputEveryKeyCodeAtIndex(Integer, KeyValuePair(Of KeyBindingType, Dictionary(Of String, KeyCode)), Func(Of KeyCode, Boolean))
      qualifiedName:
        CSharp: UCT.Settings.KeyBindings.GetInputEveryKeyCodeAtIndex(int, System.Collections.Generic.KeyValuePair<UCT.Settings.KeyBindingType, System.Collections.Generic.Dictionary<string, KeyCode>>, System.Func<KeyCode, bool>)
        VB: UCT.Settings.KeyBindings.GetInputEveryKeyCodeAtIndex(Integer, System.Collections.Generic.KeyValuePair(Of UCT.Settings.KeyBindingType, System.Collections.Generic.Dictionary(Of String, KeyCode)), System.Func(Of KeyCode, Boolean))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: GetInputEveryKeyCodeAtIndex
        path: ''
        startLine: 13798
      syntax:
        content:
          CSharp: public static bool GetInputEveryKeyCodeAtIndex(int index, KeyValuePair<KeyBindingType, Dictionary<string, KeyCode>> keyBinding, Func<KeyCode, bool> inputMethod)
          VB: Public Shared Function GetInputEveryKeyCodeAtIndex(index As Integer, keyBinding As KeyValuePair(Of KeyBindingType, Dictionary(Of String, KeyCode)), inputMethod As Func(Of KeyCode, Boolean)) As Boolean
        parameters:
        - id: index
          type: System.Int32
        - id: keyBinding
          type: System.Collections.Generic.KeyValuePair{UCT.Settings.KeyBindingType,System.Collections.Generic.Dictionary{System.String,KeyCode}}
        - id: inputMethod
          type: System.Func{KeyCode,System.Boolean}
        return:
          type: System.Boolean
      overload: UCT.Settings.KeyBindings.GetInputEveryKeyCodeAtIndex*
  - id: UCT.Settings.FpsMonitor
    commentId: T:UCT.Settings.FpsMonitor
    language: CSharp
    name:
      CSharp: FpsMonitor
      VB: FpsMonitor
    nameWithType:
      CSharp: FpsMonitor
      VB: FpsMonitor
    qualifiedName:
      CSharp: UCT.Settings.FpsMonitor
      VB: UCT.Settings.FpsMonitor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: FpsMonitor
      path: ''
      startLine: 13815
    summary: "\n用于监视游戏内的FPS。\n它可被输出在脚本挂载物体的文本上。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FpsMonitor : MonoBehaviour'
        VB: Public Class FpsMonitor Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: UCT.Settings.SettingsAnimEventHelper
    commentId: T:UCT.Settings.SettingsAnimEventHelper
    language: CSharp
    name:
      CSharp: SettingsAnimEventHelper
      VB: SettingsAnimEventHelper
    nameWithType:
      CSharp: SettingsAnimEventHelper
      VB: SettingsAnimEventHelper
    qualifiedName:
      CSharp: UCT.Settings.SettingsAnimEventHelper
      VB: UCT.Settings.SettingsAnimEventHelper
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: SettingsAnimEventHelper
      path: ''
      startLine: 13869
    summary: "\n给设置页面的Animator提供事件脚本。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SettingsAnimEventHelper : MonoBehaviour'
        VB: Public Class SettingsAnimEventHelper Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartRed(System.Int32)
      commentId: M:UCT.Settings.SettingsAnimEventHelper.AnimSetHeartRed(System.Int32)
      language: CSharp
      name:
        CSharp: AnimSetHeartRed(int)
        VB: AnimSetHeartRed(Integer)
      nameWithType:
        CSharp: SettingsAnimEventHelper.AnimSetHeartRed(int)
        VB: SettingsAnimEventHelper.AnimSetHeartRed(Integer)
      qualifiedName:
        CSharp: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartRed(int)
        VB: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartRed(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AnimSetHeartRed
        path: ''
        startLine: 13878
      syntax:
        content:
          CSharp: public void AnimSetHeartRed(int isRed)
          VB: Public Sub AnimSetHeartRed(isRed As Integer)
        parameters:
        - id: isRed
          type: System.Int32
      overload: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartRed*
    - id: UCT.Settings.SettingsAnimEventHelper.AnimHeartGo
      commentId: M:UCT.Settings.SettingsAnimEventHelper.AnimHeartGo
      language: CSharp
      name:
        CSharp: AnimHeartGo()
        VB: AnimHeartGo()
      nameWithType:
        CSharp: SettingsAnimEventHelper.AnimHeartGo()
        VB: SettingsAnimEventHelper.AnimHeartGo()
      qualifiedName:
        CSharp: UCT.Settings.SettingsAnimEventHelper.AnimHeartGo()
        VB: UCT.Settings.SettingsAnimEventHelper.AnimHeartGo()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AnimHeartGo
        path: ''
        startLine: 13884
      syntax:
        content:
          CSharp: public void AnimHeartGo()
          VB: Public Sub AnimHeartGo()
      overload: UCT.Settings.SettingsAnimEventHelper.AnimHeartGo*
    - id: UCT.Settings.SettingsAnimEventHelper.AnimPlayFX(System.Int32)
      commentId: M:UCT.Settings.SettingsAnimEventHelper.AnimPlayFX(System.Int32)
      language: CSharp
      name:
        CSharp: AnimPlayFX(int)
        VB: AnimPlayFX(Integer)
      nameWithType:
        CSharp: SettingsAnimEventHelper.AnimPlayFX(int)
        VB: SettingsAnimEventHelper.AnimPlayFX(Integer)
      qualifiedName:
        CSharp: UCT.Settings.SettingsAnimEventHelper.AnimPlayFX(int)
        VB: UCT.Settings.SettingsAnimEventHelper.AnimPlayFX(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AnimPlayFX
        path: ''
        startLine: 13897
      syntax:
        content:
          CSharp: public void AnimPlayFX(int i)
          VB: Public Sub AnimPlayFX(i As Integer)
        parameters:
        - id: i
          type: System.Int32
      overload: UCT.Settings.SettingsAnimEventHelper.AnimPlayFX*
    - id: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartPos
      commentId: M:UCT.Settings.SettingsAnimEventHelper.AnimSetHeartPos
      language: CSharp
      name:
        CSharp: AnimSetHeartPos()
        VB: AnimSetHeartPos()
      nameWithType:
        CSharp: SettingsAnimEventHelper.AnimSetHeartPos()
        VB: SettingsAnimEventHelper.AnimSetHeartPos()
      qualifiedName:
        CSharp: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartPos()
        VB: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartPos()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: AnimSetHeartPos
        path: ''
        startLine: 13903
      syntax:
        content:
          CSharp: public void AnimSetHeartPos()
          VB: Public Sub AnimSetHeartPos()
      overload: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartPos*
  - id: UCT.Settings.SettingsController
    commentId: T:UCT.Settings.SettingsController
    language: CSharp
    name:
      CSharp: SettingsController
      VB: SettingsController
    nameWithType:
      CSharp: SettingsController
      VB: SettingsController
    qualifiedName:
      CSharp: UCT.Settings.SettingsController
      VB: UCT.Settings.SettingsController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Settings
    source:
      id: SettingsController
      path: ''
      startLine: 13933
    summary: "\n设置界面\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SettingsController : MonoBehaviour'
        VB: Public Class SettingsController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Settings.SettingsController.overworldControl
      commentId: F:UCT.Settings.SettingsController.overworldControl
      language: CSharp
      name:
        CSharp: overworldControl
        VB: overworldControl
      nameWithType:
        CSharp: SettingsController.overworldControl
        VB: SettingsController.overworldControl
      qualifiedName:
        CSharp: UCT.Settings.SettingsController.overworldControl
        VB: UCT.Settings.SettingsController.overworldControl
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: overworldControl
        path: ''
        startLine: 13941
      syntax:
        content:
          CSharp: public OverworldControl overworldControl
          VB: Public overworldControl As OverworldControl
        return:
          type: Global.OverworldControl
    - id: UCT.Settings.SettingsController.frameSpriteIndex
      commentId: F:UCT.Settings.SettingsController.frameSpriteIndex
      language: CSharp
      name:
        CSharp: frameSpriteIndex
        VB: frameSpriteIndex
      nameWithType:
        CSharp: SettingsController.frameSpriteIndex
        VB: SettingsController.frameSpriteIndex
      qualifiedName:
        CSharp: UCT.Settings.SettingsController.frameSpriteIndex
        VB: UCT.Settings.SettingsController.frameSpriteIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: frameSpriteIndex
        path: ''
        startLine: 13944
      syntax:
        content:
          CSharp: public int frameSpriteIndex
          VB: Public frameSpriteIndex As Integer
        return:
          type: System.Int32
    - id: UCT.Settings.SettingsController.settingsLayer
      commentId: F:UCT.Settings.SettingsController.settingsLayer
      language: CSharp
      name:
        CSharp: settingsLayer
        VB: settingsLayer
      nameWithType:
        CSharp: SettingsController.settingsLayer
        VB: SettingsController.settingsLayer
      qualifiedName:
        CSharp: UCT.Settings.SettingsController.settingsLayer
        VB: UCT.Settings.SettingsController.settingsLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: settingsLayer
        path: ''
        startLine: 13946
      syntax:
        content:
          CSharp: public string settingsLayer
          VB: Public settingsLayer As String
        return:
          type: System.String
    - id: UCT.Settings.SettingsController.renderMode
      commentId: F:UCT.Settings.SettingsController.renderMode
      language: CSharp
      name:
        CSharp: renderMode
        VB: renderMode
      nameWithType:
        CSharp: SettingsController.renderMode
        VB: SettingsController.renderMode
      qualifiedName:
        CSharp: UCT.Settings.SettingsController.renderMode
        VB: UCT.Settings.SettingsController.renderMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: renderMode
        path: ''
        startLine: 13950
      syntax:
        content:
          CSharp: public RenderMode renderMode
          VB: Public renderMode As RenderMode
        return:
          type: Global.RenderMode
    - id: UCT.Settings.SettingsController.Instance
      commentId: P:UCT.Settings.SettingsController.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: SettingsController.Instance
        VB: SettingsController.Instance
      qualifiedName:
        CSharp: UCT.Settings.SettingsController.Instance
        VB: UCT.Settings.SettingsController.Instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Instance
        path: ''
        startLine: 13988
      syntax:
        content:
          CSharp: public static SettingsController Instance { get; }
          VB: Public Shared Property Instance As SettingsController
        parameters: []
        return:
          type: UCT.Settings.SettingsController
      overload: UCT.Settings.SettingsController.Instance*
    - id: UCT.Settings.SettingsController.Frame
      commentId: P:UCT.Settings.SettingsController.Frame
      language: CSharp
      name:
        CSharp: Frame
        VB: Frame
      nameWithType:
        CSharp: SettingsController.Frame
        VB: SettingsController.Frame
      qualifiedName:
        CSharp: UCT.Settings.SettingsController.Frame
        VB: UCT.Settings.SettingsController.Frame
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Frame
        path: ''
        startLine: 13991
      syntax:
        content:
          CSharp: public Image Frame { get; }
          VB: Public Property Frame As Image
        parameters: []
        return:
          type: Global.Image
      overload: UCT.Settings.SettingsController.Frame*
    - id: UCT.Settings.SettingsController.Animator
      commentId: P:UCT.Settings.SettingsController.Animator
      language: CSharp
      name:
        CSharp: Animator
        VB: Animator
      nameWithType:
        CSharp: SettingsController.Animator
        VB: SettingsController.Animator
      qualifiedName:
        CSharp: UCT.Settings.SettingsController.Animator
        VB: UCT.Settings.SettingsController.Animator
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Animator
        path: ''
        startLine: 13992
      syntax:
        content:
          CSharp: public Animator Animator { get; }
          VB: Public Property Animator As Animator
        parameters: []
        return:
          type: Global.Animator
      overload: UCT.Settings.SettingsController.Animator*
    - id: UCT.Settings.SettingsController.Start
      commentId: M:UCT.Settings.SettingsController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: SettingsController.Start()
        VB: SettingsController.Start()
      qualifiedName:
        CSharp: UCT.Settings.SettingsController.Start()
        VB: UCT.Settings.SettingsController.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: Start
        path: ''
        startLine: 14008
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start()
      overload: UCT.Settings.SettingsController.Start*
    - id: UCT.Settings.SettingsController.OpenSetting(System.String)
      commentId: M:UCT.Settings.SettingsController.OpenSetting(System.String)
      language: CSharp
      name:
        CSharp: OpenSetting(string)
        VB: OpenSetting(String)
      nameWithType:
        CSharp: SettingsController.OpenSetting(string)
        VB: SettingsController.OpenSetting(String)
      qualifiedName:
        CSharp: UCT.Settings.SettingsController.OpenSetting(string)
        VB: UCT.Settings.SettingsController.OpenSetting(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: OpenSetting
        path: ''
        startLine: 14863
      summary: "\n进入设置页面\n"
      example: []
      syntax:
        content:
          CSharp: public void OpenSetting(string inputSettingsLayer = null)
          VB: Public Sub OpenSetting(inputSettingsLayer As String = Nothing)
        parameters:
        - id: inputSettingsLayer
          type: System.String
      overload: UCT.Settings.SettingsController.OpenSetting*
    - id: UCT.Settings.SettingsController.WorldPositionToUGUI(Vector3)
      commentId: M:UCT.Settings.SettingsController.WorldPositionToUGUI(Vector3)
      language: CSharp
      name:
        CSharp: WorldPositionToUGUI(Vector3)
        VB: WorldPositionToUGUI(Vector3)
      nameWithType:
        CSharp: SettingsController.WorldPositionToUGUI(Vector3)
        VB: SettingsController.WorldPositionToUGUI(Vector3)
      qualifiedName:
        CSharp: UCT.Settings.SettingsController.WorldPositionToUGUI(Vector3)
        VB: UCT.Settings.SettingsController.WorldPositionToUGUI(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Settings
      source:
        id: WorldPositionToUGUI
        path: ''
        startLine: 14944
      summary: "\n将世界坐标转换为UGUI坐标\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 WorldPositionToUGUI(Vector3 position)
          VB: Public Function WorldPositionToUGUI(position As Vector3) As Vector2
        parameters:
        - id: position
          type: Global.Vector3
          description: 世界坐标
        return:
          type: Global.Vector2
          description: 转换后的UGUI坐标
      overload: UCT.Settings.SettingsController.WorldPositionToUGUI*
- id: UCT.EventSystem
  commentId: N:UCT.EventSystem
  language: CSharp
  name:
    CSharp: UCT.EventSystem
    VB: UCT.EventSystem
  nameWithType:
    CSharp: UCT.EventSystem
    VB: UCT.EventSystem
  qualifiedName:
    CSharp: UCT.EventSystem
    VB: UCT.EventSystem
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.EventSystem.RuleTable
    commentId: T:UCT.EventSystem.RuleTable
    language: CSharp
    name:
      CSharp: RuleTable
      VB: RuleTable
    nameWithType:
      CSharp: RuleTable
      VB: RuleTable
    qualifiedName:
      CSharp: UCT.EventSystem.RuleTable
      VB: UCT.EventSystem.RuleTable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: RuleTable
      path: ''
      startLine: 14966
    syntax:
      content:
        CSharp: 'public class RuleTable : ScriptableObject'
        VB: Public Class RuleTable Inherits ScriptableObject
    inheritance:
    - System.Object
    items:
    - id: UCT.EventSystem.RuleTable.rules
      commentId: F:UCT.EventSystem.RuleTable.rules
      language: CSharp
      name:
        CSharp: rules
        VB: rules
      nameWithType:
        CSharp: RuleTable.rules
        VB: RuleTable.rules
      qualifiedName:
        CSharp: UCT.EventSystem.RuleTable.rules
        VB: UCT.EventSystem.RuleTable.rules
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: rules
        path: ''
        startLine: 14969
      syntax:
        content:
          CSharp: public List<RuleEntry> rules
          VB: Public rules As List(Of RuleEntry)
        return:
          type: System.Collections.Generic.List{UCT.EventSystem.RuleEntry}
  - id: UCT.EventSystem.FactTable
    commentId: T:UCT.EventSystem.FactTable
    language: CSharp
    name:
      CSharp: FactTable
      VB: FactTable
    nameWithType:
      CSharp: FactTable
      VB: FactTable
    qualifiedName:
      CSharp: UCT.EventSystem.FactTable
      VB: UCT.EventSystem.FactTable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: FactTable
      path: ''
      startLine: 14977
    syntax:
      content:
        CSharp: 'public class FactTable : ScriptableObject'
        VB: Public Class FactTable Inherits ScriptableObject
    inheritance:
    - System.Object
    items:
    - id: UCT.EventSystem.FactTable.facts
      commentId: F:UCT.EventSystem.FactTable.facts
      language: CSharp
      name:
        CSharp: facts
        VB: facts
      nameWithType:
        CSharp: FactTable.facts
        VB: FactTable.facts
      qualifiedName:
        CSharp: UCT.EventSystem.FactTable.facts
        VB: UCT.EventSystem.FactTable.facts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: facts
        path: ''
        startLine: 14980
      syntax:
        content:
          CSharp: public List<FactEntry> facts
          VB: Public facts As List(Of FactEntry)
        return:
          type: System.Collections.Generic.List{UCT.EventSystem.FactEntry}
  - id: UCT.EventSystem.OverworldStatusChanger
    commentId: T:UCT.EventSystem.OverworldStatusChanger
    language: CSharp
    name:
      CSharp: OverworldStatusChanger
      VB: OverworldStatusChanger
    nameWithType:
      CSharp: OverworldStatusChanger
      VB: OverworldStatusChanger
    qualifiedName:
      CSharp: UCT.EventSystem.OverworldStatusChanger
      VB: UCT.EventSystem.OverworldStatusChanger
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: OverworldStatusChanger
      path: ''
      startLine: 14992
    summary: "\nOW物体状态转换器，用于根据fact的变化更改物体的状态。\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class OverworldStatusChanger : MonoBehaviour
        VB: >-
          <Serializable>

          Public Class OverworldStatusChanger Inherits MonoBehaviour
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    items:
    - id: UCT.EventSystem.OverworldStatusChanger.ruleCriteria
      commentId: F:UCT.EventSystem.OverworldStatusChanger.ruleCriteria
      language: CSharp
      name:
        CSharp: ruleCriteria
        VB: ruleCriteria
      nameWithType:
        CSharp: OverworldStatusChanger.ruleCriteria
        VB: OverworldStatusChanger.ruleCriteria
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldStatusChanger.ruleCriteria
        VB: UCT.EventSystem.OverworldStatusChanger.ruleCriteria
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: ruleCriteria
        path: ''
        startLine: 15001
      syntax:
        content:
          CSharp: public List<RuleCriterion> ruleCriteria
          VB: Public ruleCriteria As List(Of RuleCriterion)
        return:
          type: System.Collections.Generic.List{UCT.EventSystem.RuleCriterion}
    - id: UCT.EventSystem.OverworldStatusChanger.methodTypes
      commentId: F:UCT.EventSystem.OverworldStatusChanger.methodTypes
      language: CSharp
      name:
        CSharp: methodTypes
        VB: methodTypes
      nameWithType:
        CSharp: OverworldStatusChanger.methodTypes
        VB: OverworldStatusChanger.methodTypes
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldStatusChanger.methodTypes
        VB: UCT.EventSystem.OverworldStatusChanger.methodTypes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: methodTypes
        path: ''
        startLine: 15003
      syntax:
        content:
          CSharp: public List<OverworldStatusChanger.MethodType> methodTypes
          VB: Public methodTypes As List(Of OverworldStatusChanger.MethodType)
        return:
          type: System.Collections.Generic.List{UCT.EventSystem.OverworldStatusChanger.MethodType}
    - id: UCT.EventSystem.OverworldStatusChanger.targetSprites
      commentId: F:UCT.EventSystem.OverworldStatusChanger.targetSprites
      language: CSharp
      name:
        CSharp: targetSprites
        VB: targetSprites
      nameWithType:
        CSharp: OverworldStatusChanger.targetSprites
        VB: OverworldStatusChanger.targetSprites
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldStatusChanger.targetSprites
        VB: UCT.EventSystem.OverworldStatusChanger.targetSprites
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: targetSprites
        path: ''
        startLine: 15004
      syntax:
        content:
          CSharp: public List<Sprite> targetSprites
          VB: Public targetSprites As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
    - id: UCT.EventSystem.OverworldStatusChanger.targetEnables
      commentId: F:UCT.EventSystem.OverworldStatusChanger.targetEnables
      language: CSharp
      name:
        CSharp: targetEnables
        VB: targetEnables
      nameWithType:
        CSharp: OverworldStatusChanger.targetEnables
        VB: OverworldStatusChanger.targetEnables
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldStatusChanger.targetEnables
        VB: UCT.EventSystem.OverworldStatusChanger.targetEnables
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: targetEnables
        path: ''
        startLine: 15005
      syntax:
        content:
          CSharp: public List<bool> targetEnables
          VB: Public targetEnables As List(Of Boolean)
        return:
          type: System.Collections.Generic.List{System.Boolean}
    - id: UCT.EventSystem.OverworldStatusChanger.SetCollidersEnabled(GameObject,System.Boolean)
      commentId: M:UCT.EventSystem.OverworldStatusChanger.SetCollidersEnabled(GameObject,System.Boolean)
      language: CSharp
      name:
        CSharp: SetCollidersEnabled(GameObject, bool)
        VB: SetCollidersEnabled(GameObject, Boolean)
      nameWithType:
        CSharp: OverworldStatusChanger.SetCollidersEnabled(GameObject, bool)
        VB: OverworldStatusChanger.SetCollidersEnabled(GameObject, Boolean)
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldStatusChanger.SetCollidersEnabled(GameObject, bool)
        VB: UCT.EventSystem.OverworldStatusChanger.SetCollidersEnabled(GameObject, Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: SetCollidersEnabled
        path: ''
        startLine: 15076
      syntax:
        content:
          CSharp: public static void SetCollidersEnabled(GameObject obj, bool input)
          VB: Public Shared Sub SetCollidersEnabled(obj As GameObject, input As Boolean)
        parameters:
        - id: obj
          type: Global.GameObject
        - id: input
          type: System.Boolean
      overload: UCT.EventSystem.OverworldStatusChanger.SetCollidersEnabled*
  - id: UCT.EventSystem.OverworldStatusChanger.MethodType
    commentId: T:UCT.EventSystem.OverworldStatusChanger.MethodType
    language: CSharp
    name:
      CSharp: OverworldStatusChanger.MethodType
      VB: OverworldStatusChanger.MethodType
    nameWithType:
      CSharp: OverworldStatusChanger.MethodType
      VB: OverworldStatusChanger.MethodType
    qualifiedName:
      CSharp: UCT.EventSystem.OverworldStatusChanger.MethodType
      VB: UCT.EventSystem.OverworldStatusChanger.MethodType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: MethodType
      path: ''
      startLine: 14995
    syntax:
      content:
        CSharp: public enum OverworldStatusChanger.MethodType
        VB: Public Enum OverworldStatusChanger.MethodType
    items:
    - id: UCT.EventSystem.OverworldStatusChanger.MethodType.ChangeSprite
      commentId: F:UCT.EventSystem.OverworldStatusChanger.MethodType.ChangeSprite
      language: CSharp
      name:
        CSharp: ChangeSprite
        VB: ChangeSprite
      nameWithType:
        CSharp: OverworldStatusChanger.MethodType.ChangeSprite
        VB: OverworldStatusChanger.MethodType.ChangeSprite
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldStatusChanger.MethodType.ChangeSprite
        VB: UCT.EventSystem.OverworldStatusChanger.MethodType.ChangeSprite
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: ChangeSprite
        path: ''
        startLine: 14997
      syntax:
        content:
          CSharp: ChangeSprite = 0
          VB: ChangeSprite = 0
        return:
          type: UCT.EventSystem.OverworldStatusChanger.MethodType
    - id: UCT.EventSystem.OverworldStatusChanger.MethodType.SetColliderEnable
      commentId: F:UCT.EventSystem.OverworldStatusChanger.MethodType.SetColliderEnable
      language: CSharp
      name:
        CSharp: SetColliderEnable
        VB: SetColliderEnable
      nameWithType:
        CSharp: OverworldStatusChanger.MethodType.SetColliderEnable
        VB: OverworldStatusChanger.MethodType.SetColliderEnable
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldStatusChanger.MethodType.SetColliderEnable
        VB: UCT.EventSystem.OverworldStatusChanger.MethodType.SetColliderEnable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: SetColliderEnable
        path: ''
        startLine: 14998
      syntax:
        content:
          CSharp: SetColliderEnable = 1
          VB: SetColliderEnable = 1
        return:
          type: UCT.EventSystem.OverworldStatusChanger.MethodType
  - id: UCT.EventSystem.EventTable
    commentId: T:UCT.EventSystem.EventTable
    language: CSharp
    name:
      CSharp: EventTable
      VB: EventTable
    nameWithType:
      CSharp: EventTable
      VB: EventTable
    qualifiedName:
      CSharp: UCT.EventSystem.EventTable
      VB: UCT.EventSystem.EventTable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: EventTable
      path: ''
      startLine: 15091
    syntax:
      content:
        CSharp: 'public class EventTable : ScriptableObject'
        VB: Public Class EventTable Inherits ScriptableObject
    inheritance:
    - System.Object
    items:
    - id: UCT.EventSystem.EventTable.events
      commentId: F:UCT.EventSystem.EventTable.events
      language: CSharp
      name:
        CSharp: events
        VB: events
      nameWithType:
        CSharp: EventTable.events
        VB: EventTable.events
      qualifiedName:
        CSharp: UCT.EventSystem.EventTable.events
        VB: UCT.EventSystem.EventTable.events
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: events
        path: ''
        startLine: 15094
      syntax:
        content:
          CSharp: public List<EventEntry> events
          VB: Public events As List(Of EventEntry)
        return:
          type: System.Collections.Generic.List{UCT.EventSystem.EventEntry}
  - id: UCT.EventSystem.EventController
    commentId: T:UCT.EventSystem.EventController
    language: CSharp
    name:
      CSharp: EventController
      VB: EventController
    nameWithType:
      CSharp: EventController
      VB: EventController
    qualifiedName:
      CSharp: UCT.EventSystem.EventController
      VB: UCT.EventSystem.EventController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: EventController
      path: ''
      startLine: 15120
    summary: "\n事件系统控制器，包含所有可以调用的函数。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class EventController : MonoBehaviour'
        VB: Public Class EventController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.EventSystem.EventController.MethodDictionary
      commentId: P:UCT.EventSystem.EventController.MethodDictionary
      language: CSharp
      name:
        CSharp: MethodDictionary
        VB: MethodDictionary
      nameWithType:
        CSharp: EventController.MethodDictionary
        VB: EventController.MethodDictionary
      qualifiedName:
        CSharp: UCT.EventSystem.EventController.MethodDictionary
        VB: UCT.EventSystem.EventController.MethodDictionary
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: MethodDictionary
        path: ''
        startLine: 15133
      syntax:
        content:
          CSharp: public static Dictionary<MethodNameData, IMethodWrapper> MethodDictionary { get; }
          VB: Public Shared ReadOnly Property MethodDictionary As Dictionary(Of MethodNameData, IMethodWrapper)
        parameters: []
        return:
          type: System.Collections.Generic.Dictionary{UCT.EventSystem.MethodNameData,IMethodWrapper}
      overload: UCT.EventSystem.EventController.MethodDictionary*
    - id: UCT.EventSystem.EventController.eventTable
      commentId: P:UCT.EventSystem.EventController.eventTable
      language: CSharp
      name:
        CSharp: eventTable
        VB: eventTable
      nameWithType:
        CSharp: EventController.eventTable
        VB: EventController.eventTable
      qualifiedName:
        CSharp: UCT.EventSystem.EventController.eventTable
        VB: UCT.EventSystem.EventController.eventTable
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: eventTable
        path: ''
        startLine: 15244
      syntax:
        content:
          CSharp: public static EventTable eventTable { get; }
          VB: Public Shared Property eventTable As EventTable
        parameters: []
        return:
          type: UCT.EventSystem.EventTable
      overload: UCT.EventSystem.EventController.eventTable*
    - id: UCT.EventSystem.EventController.factTable
      commentId: P:UCT.EventSystem.EventController.factTable
      language: CSharp
      name:
        CSharp: factTable
        VB: factTable
      nameWithType:
        CSharp: EventController.factTable
        VB: EventController.factTable
      qualifiedName:
        CSharp: UCT.EventSystem.EventController.factTable
        VB: UCT.EventSystem.EventController.factTable
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: factTable
        path: ''
        startLine: 15245
      syntax:
        content:
          CSharp: public static FactTable factTable { get; }
          VB: Public Shared Property factTable As FactTable
        parameters: []
        return:
          type: UCT.EventSystem.FactTable
      overload: UCT.EventSystem.EventController.factTable*
    - id: UCT.EventSystem.EventController.globalEventTable
      commentId: P:UCT.EventSystem.EventController.globalEventTable
      language: CSharp
      name:
        CSharp: globalEventTable
        VB: globalEventTable
      nameWithType:
        CSharp: EventController.globalEventTable
        VB: EventController.globalEventTable
      qualifiedName:
        CSharp: UCT.EventSystem.EventController.globalEventTable
        VB: UCT.EventSystem.EventController.globalEventTable
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: globalEventTable
        path: ''
        startLine: 15247
      syntax:
        content:
          CSharp: public static EventTable globalEventTable { get; }
          VB: Public Shared Property globalEventTable As EventTable
        parameters: []
        return:
          type: UCT.EventSystem.EventTable
      overload: UCT.EventSystem.EventController.globalEventTable*
    - id: UCT.EventSystem.EventController.globalFactTable
      commentId: P:UCT.EventSystem.EventController.globalFactTable
      language: CSharp
      name:
        CSharp: globalFactTable
        VB: globalFactTable
      nameWithType:
        CSharp: EventController.globalFactTable
        VB: EventController.globalFactTable
      qualifiedName:
        CSharp: UCT.EventSystem.EventController.globalFactTable
        VB: UCT.EventSystem.EventController.globalFactTable
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: globalFactTable
        path: ''
        startLine: 15248
      syntax:
        content:
          CSharp: public static FactTable globalFactTable { get; }
          VB: Public Shared Property globalFactTable As FactTable
        parameters: []
        return:
          type: UCT.EventSystem.FactTable
      overload: UCT.EventSystem.EventController.globalFactTable*
    - id: UCT.EventSystem.EventController.LoadTables(System.Boolean)
      commentId: M:UCT.EventSystem.EventController.LoadTables(System.Boolean)
      language: CSharp
      name:
        CSharp: LoadTables(bool)
        VB: LoadTables(Boolean)
      nameWithType:
        CSharp: EventController.LoadTables(bool)
        VB: EventController.LoadTables(Boolean)
      qualifiedName:
        CSharp: UCT.EventSystem.EventController.LoadTables(bool)
        VB: UCT.EventSystem.EventController.LoadTables(Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: LoadTables
        path: ''
        startLine: 15281
      syntax:
        content:
          CSharp: public static bool LoadTables(bool force = false)
          VB: Public Shared Function LoadTables(force As Boolean = False) As Boolean
        parameters:
        - id: force
          type: System.Boolean
        return:
          type: System.Boolean
      overload: UCT.EventSystem.EventController.LoadTables*
    - id: UCT.EventSystem.EventController.DetectionRule(UCT.EventSystem.EventEntry,UCT.EventSystem.RuleEntry,System.Boolean@,System.Boolean)
      commentId: M:UCT.EventSystem.EventController.DetectionRule(UCT.EventSystem.EventEntry,UCT.EventSystem.RuleEntry,System.Boolean@,System.Boolean)
      language: CSharp
      name:
        CSharp: DetectionRule(EventEntry, RuleEntry, out bool, bool)
        VB: DetectionRule(EventEntry, RuleEntry, Boolean, Boolean)
      nameWithType:
        CSharp: EventController.DetectionRule(EventEntry, RuleEntry, out bool, bool)
        VB: EventController.DetectionRule(EventEntry, RuleEntry, Boolean, Boolean)
      qualifiedName:
        CSharp: UCT.EventSystem.EventController.DetectionRule(UCT.EventSystem.EventEntry, UCT.EventSystem.RuleEntry, out bool, bool)
        VB: UCT.EventSystem.EventController.DetectionRule(UCT.EventSystem.EventEntry, UCT.EventSystem.RuleEntry, Boolean, Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: DetectionRule
        path: ''
        startLine: 15336
      syntax:
        content:
          CSharp: public static EventEntry DetectionRule(EventEntry eventEntry, RuleEntry rule, out bool isTriggered, bool force = false)
          VB: Public Shared Function DetectionRule(eventEntry As EventEntry, rule As RuleEntry, isTriggered As Boolean, force As Boolean = False) As EventEntry
        parameters:
        - id: eventEntry
          type: UCT.EventSystem.EventEntry
        - id: rule
          type: UCT.EventSystem.RuleEntry
        - id: isTriggered
          type: System.Boolean
        - id: force
          type: System.Boolean
        return:
          type: UCT.EventSystem.EventEntry
      overload: UCT.EventSystem.EventController.DetectionRule*
  - id: UCT.EventSystem.MethodNameData
    commentId: T:UCT.EventSystem.MethodNameData
    language: CSharp
    name:
      CSharp: MethodNameData
      VB: MethodNameData
    nameWithType:
      CSharp: MethodNameData
      VB: MethodNameData
    qualifiedName:
      CSharp: UCT.EventSystem.MethodNameData
      VB: UCT.EventSystem.MethodNameData
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: MethodNameData
      path: ''
      startLine: 15987
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct MethodNameData
        VB: >-
          <Serializable>

          Public Structure MethodNameData
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    items:
    - id: UCT.EventSystem.MethodNameData.#ctor(System.String,System.String)
      commentId: M:UCT.EventSystem.MethodNameData.#ctor(System.String,System.String)
      language: CSharp
      name:
        CSharp: MethodNameData(string, string)
        VB: New(String, String)
      nameWithType:
        CSharp: MethodNameData.MethodNameData(string, string)
        VB: MethodNameData.New(String, String)
      qualifiedName:
        CSharp: UCT.EventSystem.MethodNameData.MethodNameData(string, string)
        VB: UCT.EventSystem.MethodNameData.New(String, String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: .ctor
        path: ''
        startLine: 15990
      syntax:
        content:
          CSharp: public MethodNameData(string methodName, string methodType)
          VB: Public Sub New(methodName As String, methodType As String)
        parameters:
        - id: methodName
          type: System.String
        - id: methodType
          type: System.String
      overload: UCT.EventSystem.MethodNameData.#ctor*
    - id: UCT.EventSystem.MethodNameData.MethodType
      commentId: P:UCT.EventSystem.MethodNameData.MethodType
      language: CSharp
      name:
        CSharp: MethodType
        VB: MethodType
      nameWithType:
        CSharp: MethodNameData.MethodType
        VB: MethodNameData.MethodType
      qualifiedName:
        CSharp: UCT.EventSystem.MethodNameData.MethodType
        VB: UCT.EventSystem.MethodNameData.MethodType
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: MethodType
        path: ''
        startLine: 15996
      syntax:
        content:
          CSharp: public readonly string MethodType { get; }
          VB: Public ReadOnly Property MethodType As String
        parameters: []
        return:
          type: System.String
      overload: UCT.EventSystem.MethodNameData.MethodType*
    - id: UCT.EventSystem.MethodNameData.MethodName
      commentId: P:UCT.EventSystem.MethodNameData.MethodName
      language: CSharp
      name:
        CSharp: MethodName
        VB: MethodName
      nameWithType:
        CSharp: MethodNameData.MethodName
        VB: MethodNameData.MethodName
      qualifiedName:
        CSharp: UCT.EventSystem.MethodNameData.MethodName
        VB: UCT.EventSystem.MethodNameData.MethodName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: MethodName
        path: ''
        startLine: 15997
      syntax:
        content:
          CSharp: public readonly string MethodName { get; }
          VB: Public ReadOnly Property MethodName As String
        parameters: []
        return:
          type: System.String
      overload: UCT.EventSystem.MethodNameData.MethodName*
    - id: UCT.EventSystem.MethodNameData.Equals(UCT.EventSystem.MethodNameData)
      commentId: M:UCT.EventSystem.MethodNameData.Equals(UCT.EventSystem.MethodNameData)
      language: CSharp
      name:
        CSharp: Equals(MethodNameData)
        VB: Equals(MethodNameData)
      nameWithType:
        CSharp: MethodNameData.Equals(MethodNameData)
        VB: MethodNameData.Equals(MethodNameData)
      qualifiedName:
        CSharp: UCT.EventSystem.MethodNameData.Equals(UCT.EventSystem.MethodNameData)
        VB: UCT.EventSystem.MethodNameData.Equals(UCT.EventSystem.MethodNameData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Equals
        path: ''
        startLine: 15999
      syntax:
        content:
          CSharp: public bool Equals(MethodNameData other)
          VB: Public Function Equals(other As MethodNameData) As Boolean
        parameters:
        - id: other
          type: UCT.EventSystem.MethodNameData
        return:
          type: System.Boolean
      overload: UCT.EventSystem.MethodNameData.Equals*
    - id: UCT.EventSystem.MethodNameData.Equals(System.Object)
      commentId: M:UCT.EventSystem.MethodNameData.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(object)
        VB: Equals(Object)
      nameWithType:
        CSharp: MethodNameData.Equals(object)
        VB: MethodNameData.Equals(Object)
      qualifiedName:
        CSharp: UCT.EventSystem.MethodNameData.Equals(object)
        VB: UCT.EventSystem.MethodNameData.Equals(Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Equals
        path: ''
        startLine: 16004
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: UCT.EventSystem.MethodNameData.Equals*
      overridden: System.ValueType.Equals(System.Object)
    - id: UCT.EventSystem.MethodNameData.GetHashCode
      commentId: M:UCT.EventSystem.MethodNameData.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: MethodNameData.GetHashCode()
        VB: MethodNameData.GetHashCode()
      qualifiedName:
        CSharp: UCT.EventSystem.MethodNameData.GetHashCode()
        VB: UCT.EventSystem.MethodNameData.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: GetHashCode
        path: ''
        startLine: 16009
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode() As Integer
        return:
          type: System.Int32
      overload: UCT.EventSystem.MethodNameData.GetHashCode*
      overridden: System.ValueType.GetHashCode
  - id: UCT.EventSystem.EventEntry
    commentId: T:UCT.EventSystem.EventEntry
    language: CSharp
    name:
      CSharp: EventEntry
      VB: EventEntry
    nameWithType:
      CSharp: EventEntry
      VB: EventEntry
    qualifiedName:
      CSharp: UCT.EventSystem.EventEntry
      VB: UCT.EventSystem.EventEntry
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: EventEntry
      path: ''
      startLine: 16022
    summary: "\n事件系统的Fact条目，用于定义事件\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct EventEntry
        VB: >-
          <Serializable>

          Public Structure EventEntry
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    items:
    - id: UCT.EventSystem.EventEntry.name
      commentId: F:UCT.EventSystem.EventEntry.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: EventEntry.name
        VB: EventEntry.name
      qualifiedName:
        CSharp: UCT.EventSystem.EventEntry.name
        VB: UCT.EventSystem.EventEntry.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: name
        path: ''
        startLine: 16025
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
    - id: UCT.EventSystem.EventEntry.isTriggering
      commentId: F:UCT.EventSystem.EventEntry.isTriggering
      language: CSharp
      name:
        CSharp: isTriggering
        VB: isTriggering
      nameWithType:
        CSharp: EventEntry.isTriggering
        VB: EventEntry.isTriggering
      qualifiedName:
        CSharp: UCT.EventSystem.EventEntry.isTriggering
        VB: UCT.EventSystem.EventEntry.isTriggering
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: isTriggering
        path: ''
        startLine: 16027
      syntax:
        content:
          CSharp: public bool isTriggering
          VB: Public isTriggering As Boolean
        return:
          type: System.Boolean
    - id: UCT.EventSystem.EventEntry.closeTime
      commentId: F:UCT.EventSystem.EventEntry.closeTime
      language: CSharp
      name:
        CSharp: closeTime
        VB: closeTime
      nameWithType:
        CSharp: EventEntry.closeTime
        VB: EventEntry.closeTime
      qualifiedName:
        CSharp: UCT.EventSystem.EventEntry.closeTime
        VB: UCT.EventSystem.EventEntry.closeTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: closeTime
        path: ''
        startLine: 16029
      syntax:
        content:
          CSharp: public float closeTime
          VB: Public closeTime As Single
        return:
          type: System.Single
    - id: UCT.EventSystem.EventEntry.Equals(UCT.EventSystem.EventEntry)
      commentId: M:UCT.EventSystem.EventEntry.Equals(UCT.EventSystem.EventEntry)
      language: CSharp
      name:
        CSharp: Equals(EventEntry)
        VB: Equals(EventEntry)
      nameWithType:
        CSharp: EventEntry.Equals(EventEntry)
        VB: EventEntry.Equals(EventEntry)
      qualifiedName:
        CSharp: UCT.EventSystem.EventEntry.Equals(UCT.EventSystem.EventEntry)
        VB: UCT.EventSystem.EventEntry.Equals(UCT.EventSystem.EventEntry)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Equals
        path: ''
        startLine: 16031
      syntax:
        content:
          CSharp: public bool Equals(EventEntry other)
          VB: Public Function Equals(other As EventEntry) As Boolean
        parameters:
        - id: other
          type: UCT.EventSystem.EventEntry
        return:
          type: System.Boolean
      overload: UCT.EventSystem.EventEntry.Equals*
    - id: UCT.EventSystem.EventEntry.Equals(System.Object)
      commentId: M:UCT.EventSystem.EventEntry.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(object)
        VB: Equals(Object)
      nameWithType:
        CSharp: EventEntry.Equals(object)
        VB: EventEntry.Equals(Object)
      qualifiedName:
        CSharp: UCT.EventSystem.EventEntry.Equals(object)
        VB: UCT.EventSystem.EventEntry.Equals(Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Equals
        path: ''
        startLine: 16036
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: UCT.EventSystem.EventEntry.Equals*
      overridden: System.ValueType.Equals(System.Object)
    - id: UCT.EventSystem.EventEntry.GetHashCode
      commentId: M:UCT.EventSystem.EventEntry.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: EventEntry.GetHashCode()
        VB: EventEntry.GetHashCode()
      qualifiedName:
        CSharp: UCT.EventSystem.EventEntry.GetHashCode()
        VB: UCT.EventSystem.EventEntry.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: GetHashCode
        path: ''
        startLine: 16041
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode() As Integer
        return:
          type: System.Int32
      overload: UCT.EventSystem.EventEntry.GetHashCode*
      overridden: System.ValueType.GetHashCode
  - id: UCT.EventSystem.FactEntry
    commentId: T:UCT.EventSystem.FactEntry
    language: CSharp
    name:
      CSharp: FactEntry
      VB: FactEntry
    nameWithType:
      CSharp: FactEntry
      VB: FactEntry
    qualifiedName:
      CSharp: UCT.EventSystem.FactEntry
      VB: UCT.EventSystem.FactEntry
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: FactEntry
      path: ''
      startLine: 16054
    summary: "\n事件系统的Fact条目，用于存储世界信息\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct FactEntry
        VB: >-
          <Serializable>

          Public Structure FactEntry
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    items:
    - id: UCT.EventSystem.FactEntry.name
      commentId: F:UCT.EventSystem.FactEntry.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: FactEntry.name
        VB: FactEntry.name
      qualifiedName:
        CSharp: UCT.EventSystem.FactEntry.name
        VB: UCT.EventSystem.FactEntry.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: name
        path: ''
        startLine: 16057
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
    - id: UCT.EventSystem.FactEntry.value
      commentId: F:UCT.EventSystem.FactEntry.value
      language: CSharp
      name:
        CSharp: value
        VB: value
      nameWithType:
        CSharp: FactEntry.value
        VB: FactEntry.value
      qualifiedName:
        CSharp: UCT.EventSystem.FactEntry.value
        VB: UCT.EventSystem.FactEntry.value
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: value
        path: ''
        startLine: 16058
      syntax:
        content:
          CSharp: public int value
          VB: Public value As Integer
        return:
          type: System.Int32
    - id: UCT.EventSystem.FactEntry.Equals(UCT.EventSystem.FactEntry)
      commentId: M:UCT.EventSystem.FactEntry.Equals(UCT.EventSystem.FactEntry)
      language: CSharp
      name:
        CSharp: Equals(FactEntry)
        VB: Equals(FactEntry)
      nameWithType:
        CSharp: FactEntry.Equals(FactEntry)
        VB: FactEntry.Equals(FactEntry)
      qualifiedName:
        CSharp: UCT.EventSystem.FactEntry.Equals(UCT.EventSystem.FactEntry)
        VB: UCT.EventSystem.FactEntry.Equals(UCT.EventSystem.FactEntry)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Equals
        path: ''
        startLine: 16061
      syntax:
        content:
          CSharp: public bool Equals(FactEntry other)
          VB: Public Function Equals(other As FactEntry) As Boolean
        parameters:
        - id: other
          type: UCT.EventSystem.FactEntry
        return:
          type: System.Boolean
      overload: UCT.EventSystem.FactEntry.Equals*
    - id: UCT.EventSystem.FactEntry.Equals(System.Object)
      commentId: M:UCT.EventSystem.FactEntry.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(object)
        VB: Equals(Object)
      nameWithType:
        CSharp: FactEntry.Equals(object)
        VB: FactEntry.Equals(Object)
      qualifiedName:
        CSharp: UCT.EventSystem.FactEntry.Equals(object)
        VB: UCT.EventSystem.FactEntry.Equals(Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Equals
        path: ''
        startLine: 16066
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: UCT.EventSystem.FactEntry.Equals*
      overridden: System.ValueType.Equals(System.Object)
    - id: UCT.EventSystem.FactEntry.GetHashCode
      commentId: M:UCT.EventSystem.FactEntry.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: FactEntry.GetHashCode()
        VB: FactEntry.GetHashCode()
      qualifiedName:
        CSharp: UCT.EventSystem.FactEntry.GetHashCode()
        VB: UCT.EventSystem.FactEntry.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: GetHashCode
        path: ''
        startLine: 16071
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode() As Integer
        return:
          type: System.Int32
      overload: UCT.EventSystem.FactEntry.GetHashCode*
      overridden: System.ValueType.GetHashCode
  - id: UCT.EventSystem.RuleEntry
    commentId: T:UCT.EventSystem.RuleEntry
    language: CSharp
    name:
      CSharp: RuleEntry
      VB: RuleEntry
    nameWithType:
      CSharp: RuleEntry
      VB: RuleEntry
    qualifiedName:
      CSharp: UCT.EventSystem.RuleEntry
      VB: UCT.EventSystem.RuleEntry
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: RuleEntry
      path: ''
      startLine: 16086
    summary: "\n事件系统的Rule条目，被其他Event调用，同时可以触发其他Event与执行具体方法。\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct RuleEntry
        VB: >-
          <Serializable>

          Public Structure RuleEntry
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    items:
    - id: UCT.EventSystem.RuleEntry.name
      commentId: F:UCT.EventSystem.RuleEntry.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: RuleEntry.name
        VB: RuleEntry.name
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.name
        VB: UCT.EventSystem.RuleEntry.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: name
        path: ''
        startLine: 16092
      summary: "\n该Rule的名称\n"
      example: []
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
    - id: UCT.EventSystem.RuleEntry.isGlobalTriggeredBy
      commentId: F:UCT.EventSystem.RuleEntry.isGlobalTriggeredBy
      language: CSharp
      name:
        CSharp: isGlobalTriggeredBy
        VB: isGlobalTriggeredBy
      nameWithType:
        CSharp: RuleEntry.isGlobalTriggeredBy
        VB: RuleEntry.isGlobalTriggeredBy
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.isGlobalTriggeredBy
        VB: UCT.EventSystem.RuleEntry.isGlobalTriggeredBy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: isGlobalTriggeredBy
        path: ''
        startLine: 16097
      summary: "\n是否让triggeredBy使用全局的EventTable\n"
      example: []
      syntax:
        content:
          CSharp: public bool isGlobalTriggeredBy
          VB: Public isGlobalTriggeredBy As Boolean
        return:
          type: System.Boolean
    - id: UCT.EventSystem.RuleEntry.triggeredBy
      commentId: F:UCT.EventSystem.RuleEntry.triggeredBy
      language: CSharp
      name:
        CSharp: triggeredBy
        VB: triggeredBy
      nameWithType:
        CSharp: RuleEntry.triggeredBy
        VB: RuleEntry.triggeredBy
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.triggeredBy
        VB: UCT.EventSystem.RuleEntry.triggeredBy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: triggeredBy
        path: ''
        startLine: 16102
      summary: "\n触发该Rule的Event名称\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> triggeredBy
          VB: Public triggeredBy As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.EventSystem.RuleEntry.isGlobalTriggers
      commentId: F:UCT.EventSystem.RuleEntry.isGlobalTriggers
      language: CSharp
      name:
        CSharp: isGlobalTriggers
        VB: isGlobalTriggers
      nameWithType:
        CSharp: RuleEntry.isGlobalTriggers
        VB: RuleEntry.isGlobalTriggers
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.isGlobalTriggers
        VB: UCT.EventSystem.RuleEntry.isGlobalTriggers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: isGlobalTriggers
        path: ''
        startLine: 16107
      summary: "\n是否让triggers使用全局的EventTable\n"
      example: []
      syntax:
        content:
          CSharp: public bool isGlobalTriggers
          VB: Public isGlobalTriggers As Boolean
        return:
          type: System.Boolean
    - id: UCT.EventSystem.RuleEntry.triggers
      commentId: F:UCT.EventSystem.RuleEntry.triggers
      language: CSharp
      name:
        CSharp: triggers
        VB: triggers
      nameWithType:
        CSharp: RuleEntry.triggers
        VB: RuleEntry.triggers
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.triggers
        VB: UCT.EventSystem.RuleEntry.triggers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: triggers
        path: ''
        startLine: 16112
      summary: "\n该Rule触发的Event名称\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> triggers
          VB: Public triggers As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.EventSystem.RuleEntry.methodNames
      commentId: F:UCT.EventSystem.RuleEntry.methodNames
      language: CSharp
      name:
        CSharp: methodNames
        VB: methodNames
      nameWithType:
        CSharp: RuleEntry.methodNames
        VB: RuleEntry.methodNames
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.methodNames
        VB: UCT.EventSystem.RuleEntry.methodNames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: methodNames
        path: ''
        startLine: 16117
      summary: "\n该Rule执行的方法名\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> methodNames
          VB: Public methodNames As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.EventSystem.RuleEntry.firstStringParams
      commentId: F:UCT.EventSystem.RuleEntry.firstStringParams
      language: CSharp
      name:
        CSharp: firstStringParams
        VB: firstStringParams
      nameWithType:
        CSharp: RuleEntry.firstStringParams
        VB: RuleEntry.firstStringParams
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.firstStringParams
        VB: UCT.EventSystem.RuleEntry.firstStringParams
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: firstStringParams
        path: ''
        startLine: 16122
      summary: "\n该Rule执行的方法传入的第一个字符串形参\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> firstStringParams
          VB: Public firstStringParams As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.EventSystem.RuleEntry.secondStringParams
      commentId: F:UCT.EventSystem.RuleEntry.secondStringParams
      language: CSharp
      name:
        CSharp: secondStringParams
        VB: secondStringParams
      nameWithType:
        CSharp: RuleEntry.secondStringParams
        VB: RuleEntry.secondStringParams
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.secondStringParams
        VB: UCT.EventSystem.RuleEntry.secondStringParams
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: secondStringParams
        path: ''
        startLine: 16127
      summary: "\n该Rule执行的方法传入的第二个字符串形参\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> secondStringParams
          VB: Public secondStringParams As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.EventSystem.RuleEntry.thirdStringParams
      commentId: F:UCT.EventSystem.RuleEntry.thirdStringParams
      language: CSharp
      name:
        CSharp: thirdStringParams
        VB: thirdStringParams
      nameWithType:
        CSharp: RuleEntry.thirdStringParams
        VB: RuleEntry.thirdStringParams
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.thirdStringParams
        VB: UCT.EventSystem.RuleEntry.thirdStringParams
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: thirdStringParams
        path: ''
        startLine: 16132
      summary: "\n该Rule执行的方法传入的第三个字符串形参\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> thirdStringParams
          VB: Public thirdStringParams As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.EventSystem.RuleEntry.objectParams
      commentId: F:UCT.EventSystem.RuleEntry.objectParams
      language: CSharp
      name:
        CSharp: objectParams
        VB: objectParams
      nameWithType:
        CSharp: RuleEntry.objectParams
        VB: RuleEntry.objectParams
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.objectParams
        VB: UCT.EventSystem.RuleEntry.objectParams
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: objectParams
        path: ''
        startLine: 16137
      summary: "\n该Rule执行的方法传入的Unity Object形参\n"
      example: []
      syntax:
        content:
          CSharp: public List<object> objectParams
          VB: Public objectParams As List(Of Object)
        return:
          type: System.Collections.Generic.List{System.Object}
    - id: UCT.EventSystem.RuleEntry.isGlobalMethodEvents
      commentId: F:UCT.EventSystem.RuleEntry.isGlobalMethodEvents
      language: CSharp
      name:
        CSharp: isGlobalMethodEvents
        VB: isGlobalMethodEvents
      nameWithType:
        CSharp: RuleEntry.isGlobalMethodEvents
        VB: RuleEntry.isGlobalMethodEvents
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.isGlobalMethodEvents
        VB: UCT.EventSystem.RuleEntry.isGlobalMethodEvents
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: isGlobalMethodEvents
        path: ''
        startLine: 16142
      summary: "\n是否让useMethodEvents使用全局的EventTable\n"
      example: []
      syntax:
        content:
          CSharp: public List<bool> isGlobalMethodEvents
          VB: Public isGlobalMethodEvents As List(Of Boolean)
        return:
          type: System.Collections.Generic.List{System.Boolean}
    - id: UCT.EventSystem.RuleEntry.useMethodEvents
      commentId: F:UCT.EventSystem.RuleEntry.useMethodEvents
      language: CSharp
      name:
        CSharp: useMethodEvents
        VB: useMethodEvents
      nameWithType:
        CSharp: RuleEntry.useMethodEvents
        VB: RuleEntry.useMethodEvents
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.useMethodEvents
        VB: UCT.EventSystem.RuleEntry.useMethodEvents
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: useMethodEvents
        path: ''
        startLine: 16147
      summary: "\n是否使用该Rule执行的方法联动触发的Event\n"
      example: []
      syntax:
        content:
          CSharp: public List<bool> useMethodEvents
          VB: Public useMethodEvents As List(Of Boolean)
        return:
          type: System.Collections.Generic.List{System.Boolean}
    - id: UCT.EventSystem.RuleEntry.methodEvents
      commentId: F:UCT.EventSystem.RuleEntry.methodEvents
      language: CSharp
      name:
        CSharp: methodEvents
        VB: methodEvents
      nameWithType:
        CSharp: RuleEntry.methodEvents
        VB: RuleEntry.methodEvents
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.methodEvents
        VB: UCT.EventSystem.RuleEntry.methodEvents
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: methodEvents
        path: ''
        startLine: 16152
      summary: "\n该Rule执行的方法联动触发的Event\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> methodEvents
          VB: Public methodEvents As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.EventSystem.RuleEntry.useRuleCriterion
      commentId: F:UCT.EventSystem.RuleEntry.useRuleCriterion
      language: CSharp
      name:
        CSharp: useRuleCriterion
        VB: useRuleCriterion
      nameWithType:
        CSharp: RuleEntry.useRuleCriterion
        VB: RuleEntry.useRuleCriterion
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.useRuleCriterion
        VB: UCT.EventSystem.RuleEntry.useRuleCriterion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: useRuleCriterion
        path: ''
        startLine: 16157
      summary: "\n是否使用该Rule的Fact判断组\n"
      example: []
      syntax:
        content:
          CSharp: public bool useRuleCriterion
          VB: Public useRuleCriterion As Boolean
        return:
          type: System.Boolean
    - id: UCT.EventSystem.RuleEntry.ruleCriterion
      commentId: F:UCT.EventSystem.RuleEntry.ruleCriterion
      language: CSharp
      name:
        CSharp: ruleCriterion
        VB: ruleCriterion
      nameWithType:
        CSharp: RuleEntry.ruleCriterion
        VB: RuleEntry.ruleCriterion
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.ruleCriterion
        VB: UCT.EventSystem.RuleEntry.ruleCriterion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: ruleCriterion
        path: ''
        startLine: 16162
      summary: "\n该Rule的Fact判断组\n"
      example: []
      syntax:
        content:
          CSharp: public RuleCriterion ruleCriterion
          VB: Public ruleCriterion As RuleCriterion
        return:
          type: UCT.EventSystem.RuleCriterion
    - id: UCT.EventSystem.RuleEntry.isGlobalFactModifications
      commentId: F:UCT.EventSystem.RuleEntry.isGlobalFactModifications
      language: CSharp
      name:
        CSharp: isGlobalFactModifications
        VB: isGlobalFactModifications
      nameWithType:
        CSharp: RuleEntry.isGlobalFactModifications
        VB: RuleEntry.isGlobalFactModifications
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.isGlobalFactModifications
        VB: UCT.EventSystem.RuleEntry.isGlobalFactModifications
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: isGlobalFactModifications
        path: ''
        startLine: 16167
      summary: "\n是否让factModifications的所有Fact使用全局的EventTable\n"
      example: []
      syntax:
        content:
          CSharp: public List<bool> isGlobalFactModifications
          VB: Public isGlobalFactModifications As List(Of Boolean)
        return:
          type: System.Collections.Generic.List{System.Boolean}
    - id: UCT.EventSystem.RuleEntry.factModifications
      commentId: F:UCT.EventSystem.RuleEntry.factModifications
      language: CSharp
      name:
        CSharp: factModifications
        VB: factModifications
      nameWithType:
        CSharp: RuleEntry.factModifications
        VB: RuleEntry.factModifications
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.factModifications
        VB: UCT.EventSystem.RuleEntry.factModifications
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: factModifications
        path: ''
        startLine: 16172
      summary: "\n该Rule修改的Fact值\n"
      example: []
      syntax:
        content:
          CSharp: public List<FactModification> factModifications
          VB: Public factModifications As List(Of FactModification)
        return:
          type: System.Collections.Generic.List{UCT.EventSystem.FactModification}
    - id: UCT.EventSystem.RuleEntry.Equals(UCT.EventSystem.RuleEntry)
      commentId: M:UCT.EventSystem.RuleEntry.Equals(UCT.EventSystem.RuleEntry)
      language: CSharp
      name:
        CSharp: Equals(RuleEntry)
        VB: Equals(RuleEntry)
      nameWithType:
        CSharp: RuleEntry.Equals(RuleEntry)
        VB: RuleEntry.Equals(RuleEntry)
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.Equals(UCT.EventSystem.RuleEntry)
        VB: UCT.EventSystem.RuleEntry.Equals(UCT.EventSystem.RuleEntry)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Equals
        path: ''
        startLine: 16174
      syntax:
        content:
          CSharp: public bool Equals(RuleEntry other)
          VB: Public Function Equals(other As RuleEntry) As Boolean
        parameters:
        - id: other
          type: UCT.EventSystem.RuleEntry
        return:
          type: System.Boolean
      overload: UCT.EventSystem.RuleEntry.Equals*
    - id: UCT.EventSystem.RuleEntry.Equals(System.Object)
      commentId: M:UCT.EventSystem.RuleEntry.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(object)
        VB: Equals(Object)
      nameWithType:
        CSharp: RuleEntry.Equals(object)
        VB: RuleEntry.Equals(Object)
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.Equals(object)
        VB: UCT.EventSystem.RuleEntry.Equals(Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Equals
        path: ''
        startLine: 16189
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: UCT.EventSystem.RuleEntry.Equals*
      overridden: System.ValueType.Equals(System.Object)
    - id: UCT.EventSystem.RuleEntry.GetHashCode
      commentId: M:UCT.EventSystem.RuleEntry.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: RuleEntry.GetHashCode()
        VB: RuleEntry.GetHashCode()
      qualifiedName:
        CSharp: UCT.EventSystem.RuleEntry.GetHashCode()
        VB: UCT.EventSystem.RuleEntry.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: GetHashCode
        path: ''
        startLine: 16194
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode() As Integer
        return:
          type: System.Int32
      overload: UCT.EventSystem.RuleEntry.GetHashCode*
      overridden: System.ValueType.GetHashCode
  - id: UCT.EventSystem.FactModification
    commentId: T:UCT.EventSystem.FactModification
    language: CSharp
    name:
      CSharp: FactModification
      VB: FactModification
    nameWithType:
      CSharp: FactModification
      VB: FactModification
    qualifiedName:
      CSharp: UCT.EventSystem.FactModification
      VB: UCT.EventSystem.FactModification
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: FactModification
      path: ''
      startLine: 16220
    summary: "\n用于传递修改Fact值参数的结构体。\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct FactModification
        VB: >-
          <Serializable>

          Public Structure FactModification
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    items:
    - id: UCT.EventSystem.FactModification.fact
      commentId: F:UCT.EventSystem.FactModification.fact
      language: CSharp
      name:
        CSharp: fact
        VB: fact
      nameWithType:
        CSharp: FactModification.fact
        VB: FactModification.fact
      qualifiedName:
        CSharp: UCT.EventSystem.FactModification.fact
        VB: UCT.EventSystem.FactModification.fact
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: fact
        path: ''
        startLine: 16223
      syntax:
        content:
          CSharp: public FactEntry fact
          VB: Public fact As FactEntry
        return:
          type: UCT.EventSystem.FactEntry
    - id: UCT.EventSystem.FactModification.operation
      commentId: F:UCT.EventSystem.FactModification.operation
      language: CSharp
      name:
        CSharp: operation
        VB: operation
      nameWithType:
        CSharp: FactModification.operation
        VB: FactModification.operation
      qualifiedName:
        CSharp: UCT.EventSystem.FactModification.operation
        VB: UCT.EventSystem.FactModification.operation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: operation
        path: ''
        startLine: 16224
      syntax:
        content:
          CSharp: public FactModification.Operation operation
          VB: Public operation As FactModification.Operation
        return:
          type: UCT.EventSystem.FactModification.Operation
    - id: UCT.EventSystem.FactModification.number
      commentId: F:UCT.EventSystem.FactModification.number
      language: CSharp
      name:
        CSharp: number
        VB: number
      nameWithType:
        CSharp: FactModification.number
        VB: FactModification.number
      qualifiedName:
        CSharp: UCT.EventSystem.FactModification.number
        VB: UCT.EventSystem.FactModification.number
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: number
        path: ''
        startLine: 16225
      syntax:
        content:
          CSharp: public int number
          VB: Public number As Integer
        return:
          type: System.Int32
    - id: UCT.EventSystem.FactModification.Equals(UCT.EventSystem.FactModification)
      commentId: M:UCT.EventSystem.FactModification.Equals(UCT.EventSystem.FactModification)
      language: CSharp
      name:
        CSharp: Equals(FactModification)
        VB: Equals(FactModification)
      nameWithType:
        CSharp: FactModification.Equals(FactModification)
        VB: FactModification.Equals(FactModification)
      qualifiedName:
        CSharp: UCT.EventSystem.FactModification.Equals(UCT.EventSystem.FactModification)
        VB: UCT.EventSystem.FactModification.Equals(UCT.EventSystem.FactModification)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Equals
        path: ''
        startLine: 16236
      syntax:
        content:
          CSharp: public bool Equals(FactModification other)
          VB: Public Function Equals(other As FactModification) As Boolean
        parameters:
        - id: other
          type: UCT.EventSystem.FactModification
        return:
          type: System.Boolean
      overload: UCT.EventSystem.FactModification.Equals*
    - id: UCT.EventSystem.FactModification.Equals(System.Object)
      commentId: M:UCT.EventSystem.FactModification.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(object)
        VB: Equals(Object)
      nameWithType:
        CSharp: FactModification.Equals(object)
        VB: FactModification.Equals(Object)
      qualifiedName:
        CSharp: UCT.EventSystem.FactModification.Equals(object)
        VB: UCT.EventSystem.FactModification.Equals(Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Equals
        path: ''
        startLine: 16241
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: UCT.EventSystem.FactModification.Equals*
      overridden: System.ValueType.Equals(System.Object)
    - id: UCT.EventSystem.FactModification.GetHashCode
      commentId: M:UCT.EventSystem.FactModification.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: FactModification.GetHashCode()
        VB: FactModification.GetHashCode()
      qualifiedName:
        CSharp: UCT.EventSystem.FactModification.GetHashCode()
        VB: UCT.EventSystem.FactModification.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: GetHashCode
        path: ''
        startLine: 16246
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode() As Integer
        return:
          type: System.Int32
      overload: UCT.EventSystem.FactModification.GetHashCode*
      overridden: System.ValueType.GetHashCode
  - id: UCT.EventSystem.FactModification.Operation
    commentId: T:UCT.EventSystem.FactModification.Operation
    language: CSharp
    name:
      CSharp: FactModification.Operation
      VB: FactModification.Operation
    nameWithType:
      CSharp: FactModification.Operation
      VB: FactModification.Operation
    qualifiedName:
      CSharp: UCT.EventSystem.FactModification.Operation
      VB: UCT.EventSystem.FactModification.Operation
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: Operation
      path: ''
      startLine: 16227
    syntax:
      content:
        CSharp: public enum FactModification.Operation
        VB: Public Enum FactModification.Operation
    items:
    - id: UCT.EventSystem.FactModification.Operation.Change
      commentId: F:UCT.EventSystem.FactModification.Operation.Change
      language: CSharp
      name:
        CSharp: Change
        VB: Change
      nameWithType:
        CSharp: FactModification.Operation.Change
        VB: FactModification.Operation.Change
      qualifiedName:
        CSharp: UCT.EventSystem.FactModification.Operation.Change
        VB: UCT.EventSystem.FactModification.Operation.Change
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Change
        path: ''
        startLine: 16229
      syntax:
        content:
          CSharp: Change = 0
          VB: Change = 0
        return:
          type: UCT.EventSystem.FactModification.Operation
    - id: UCT.EventSystem.FactModification.Operation.Add
      commentId: F:UCT.EventSystem.FactModification.Operation.Add
      language: CSharp
      name:
        CSharp: Add
        VB: Add
      nameWithType:
        CSharp: FactModification.Operation.Add
        VB: FactModification.Operation.Add
      qualifiedName:
        CSharp: UCT.EventSystem.FactModification.Operation.Add
        VB: UCT.EventSystem.FactModification.Operation.Add
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Add
        path: ''
        startLine: 16230
      syntax:
        content:
          CSharp: Add = 1
          VB: Add = 1
        return:
          type: UCT.EventSystem.FactModification.Operation
    - id: UCT.EventSystem.FactModification.Operation.Subtract
      commentId: F:UCT.EventSystem.FactModification.Operation.Subtract
      language: CSharp
      name:
        CSharp: Subtract
        VB: Subtract
      nameWithType:
        CSharp: FactModification.Operation.Subtract
        VB: FactModification.Operation.Subtract
      qualifiedName:
        CSharp: UCT.EventSystem.FactModification.Operation.Subtract
        VB: UCT.EventSystem.FactModification.Operation.Subtract
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Subtract
        path: ''
        startLine: 16231
      syntax:
        content:
          CSharp: Subtract = 2
          VB: Subtract = 2
        return:
          type: UCT.EventSystem.FactModification.Operation
    - id: UCT.EventSystem.FactModification.Operation.Multiply
      commentId: F:UCT.EventSystem.FactModification.Operation.Multiply
      language: CSharp
      name:
        CSharp: Multiply
        VB: Multiply
      nameWithType:
        CSharp: FactModification.Operation.Multiply
        VB: FactModification.Operation.Multiply
      qualifiedName:
        CSharp: UCT.EventSystem.FactModification.Operation.Multiply
        VB: UCT.EventSystem.FactModification.Operation.Multiply
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Multiply
        path: ''
        startLine: 16232
      syntax:
        content:
          CSharp: Multiply = 3
          VB: Multiply = 3
        return:
          type: UCT.EventSystem.FactModification.Operation
    - id: UCT.EventSystem.FactModification.Operation.Divide
      commentId: F:UCT.EventSystem.FactModification.Operation.Divide
      language: CSharp
      name:
        CSharp: Divide
        VB: Divide
      nameWithType:
        CSharp: FactModification.Operation.Divide
        VB: FactModification.Operation.Divide
      qualifiedName:
        CSharp: UCT.EventSystem.FactModification.Operation.Divide
        VB: UCT.EventSystem.FactModification.Operation.Divide
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Divide
        path: ''
        startLine: 16233
      syntax:
        content:
          CSharp: Divide = 4
          VB: Divide = 4
        return:
          type: UCT.EventSystem.FactModification.Operation
  - id: UCT.EventSystem.RuleCriterion
    commentId: T:UCT.EventSystem.RuleCriterion
    language: CSharp
    name:
      CSharp: RuleCriterion
      VB: RuleCriterion
    nameWithType:
      CSharp: RuleCriterion
      VB: RuleCriterion
    qualifiedName:
      CSharp: UCT.EventSystem.RuleCriterion
      VB: UCT.EventSystem.RuleCriterion
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: RuleCriterion
      path: ''
      startLine: 16256
    summary: "\nRule的规则，用于判断fact和数值之间的关系。\n请特别注意：倘若criteria包含值，那么会忽略除了criteria和result之外的所有值。\n"
    example: []
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct RuleCriterion
        VB: >-
          <Serializable>

          Public Structure RuleCriterion
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    items:
    - id: UCT.EventSystem.RuleCriterion.isResultReversed
      commentId: F:UCT.EventSystem.RuleCriterion.isResultReversed
      language: CSharp
      name:
        CSharp: isResultReversed
        VB: isResultReversed
      nameWithType:
        CSharp: RuleCriterion.isResultReversed
        VB: RuleCriterion.isResultReversed
      qualifiedName:
        CSharp: UCT.EventSystem.RuleCriterion.isResultReversed
        VB: UCT.EventSystem.RuleCriterion.isResultReversed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: isResultReversed
        path: ''
        startLine: 16259
      syntax:
        content:
          CSharp: public bool isResultReversed
          VB: Public isResultReversed As Boolean
        return:
          type: System.Boolean
    - id: UCT.EventSystem.RuleCriterion.isGlobal
      commentId: F:UCT.EventSystem.RuleCriterion.isGlobal
      language: CSharp
      name:
        CSharp: isGlobal
        VB: isGlobal
      nameWithType:
        CSharp: RuleCriterion.isGlobal
        VB: RuleCriterion.isGlobal
      qualifiedName:
        CSharp: UCT.EventSystem.RuleCriterion.isGlobal
        VB: UCT.EventSystem.RuleCriterion.isGlobal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: isGlobal
        path: ''
        startLine: 16260
      syntax:
        content:
          CSharp: public bool isGlobal
          VB: Public isGlobal As Boolean
        return:
          type: System.Boolean
    - id: UCT.EventSystem.RuleCriterion.fact
      commentId: F:UCT.EventSystem.RuleCriterion.fact
      language: CSharp
      name:
        CSharp: fact
        VB: fact
      nameWithType:
        CSharp: RuleCriterion.fact
        VB: RuleCriterion.fact
      qualifiedName:
        CSharp: UCT.EventSystem.RuleCriterion.fact
        VB: UCT.EventSystem.RuleCriterion.fact
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: fact
        path: ''
        startLine: 16261
      syntax:
        content:
          CSharp: public FactEntry fact
          VB: Public fact As FactEntry
        return:
          type: UCT.EventSystem.FactEntry
    - id: UCT.EventSystem.RuleCriterion.compare
      commentId: F:UCT.EventSystem.RuleCriterion.compare
      language: CSharp
      name:
        CSharp: compare
        VB: compare
      nameWithType:
        CSharp: RuleCriterion.compare
        VB: RuleCriterion.compare
      qualifiedName:
        CSharp: UCT.EventSystem.RuleCriterion.compare
        VB: UCT.EventSystem.RuleCriterion.compare
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: compare
        path: ''
        startLine: 16262
      syntax:
        content:
          CSharp: public CriteriaCompare compare
          VB: Public compare As CriteriaCompare
        return:
          type: UCT.EventSystem.CriteriaCompare
    - id: UCT.EventSystem.RuleCriterion.detection
      commentId: F:UCT.EventSystem.RuleCriterion.detection
      language: CSharp
      name:
        CSharp: detection
        VB: detection
      nameWithType:
        CSharp: RuleCriterion.detection
        VB: RuleCriterion.detection
      qualifiedName:
        CSharp: UCT.EventSystem.RuleCriterion.detection
        VB: UCT.EventSystem.RuleCriterion.detection
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: detection
        path: ''
        startLine: 16263
      syntax:
        content:
          CSharp: public int detection
          VB: Public detection As Integer
        return:
          type: System.Int32
    - id: UCT.EventSystem.RuleCriterion.operation
      commentId: F:UCT.EventSystem.RuleCriterion.operation
      language: CSharp
      name:
        CSharp: operation
        VB: operation
      nameWithType:
        CSharp: RuleCriterion.operation
        VB: RuleCriterion.operation
      qualifiedName:
        CSharp: UCT.EventSystem.RuleCriterion.operation
        VB: UCT.EventSystem.RuleCriterion.operation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: operation
        path: ''
        startLine: 16265
      syntax:
        content:
          CSharp: public RuleLogicalOperation operation
          VB: Public operation As RuleLogicalOperation
        return:
          type: UCT.EventSystem.RuleLogicalOperation
    - id: UCT.EventSystem.RuleCriterion.criteria
      commentId: F:UCT.EventSystem.RuleCriterion.criteria
      language: CSharp
      name:
        CSharp: criteria
        VB: criteria
      nameWithType:
        CSharp: RuleCriterion.criteria
        VB: RuleCriterion.criteria
      qualifiedName:
        CSharp: UCT.EventSystem.RuleCriterion.criteria
        VB: UCT.EventSystem.RuleCriterion.criteria
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: criteria
        path: ''
        startLine: 16267
      syntax:
        content:
          CSharp: public List<RuleCriterion> criteria
          VB: Public criteria As List(Of RuleCriterion)
        return:
          type: System.Collections.Generic.List{UCT.EventSystem.RuleCriterion}
    - id: UCT.EventSystem.RuleCriterion.GetResult
      commentId: M:UCT.EventSystem.RuleCriterion.GetResult
      language: CSharp
      name:
        CSharp: GetResult()
        VB: GetResult()
      nameWithType:
        CSharp: RuleCriterion.GetResult()
        VB: RuleCriterion.GetResult()
      qualifiedName:
        CSharp: UCT.EventSystem.RuleCriterion.GetResult()
        VB: UCT.EventSystem.RuleCriterion.GetResult()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: GetResult
        path: ''
        startLine: 16269
      syntax:
        content:
          CSharp: public bool GetResult()
          VB: Public Function GetResult() As Boolean
        return:
          type: System.Boolean
      overload: UCT.EventSystem.RuleCriterion.GetResult*
    - id: UCT.EventSystem.RuleCriterion.GetResult(System.Boolean,System.Boolean,UCT.EventSystem.FactEntry,UCT.EventSystem.CriteriaCompare,System.Int32,System.Collections.Generic.List{UCT.EventSystem.RuleCriterion})
      commentId: M:UCT.EventSystem.RuleCriterion.GetResult(System.Boolean,System.Boolean,UCT.EventSystem.FactEntry,UCT.EventSystem.CriteriaCompare,System.Int32,System.Collections.Generic.List{UCT.EventSystem.RuleCriterion})
      language: CSharp
      name:
        CSharp: GetResult(bool, bool, FactEntry, CriteriaCompare, int, List<RuleCriterion>)
        VB: GetResult(Boolean, Boolean, FactEntry, CriteriaCompare, Integer, List(Of RuleCriterion))
      nameWithType:
        CSharp: RuleCriterion.GetResult(bool, bool, FactEntry, CriteriaCompare, int, List<RuleCriterion>)
        VB: RuleCriterion.GetResult(Boolean, Boolean, FactEntry, CriteriaCompare, Integer, List(Of RuleCriterion))
      qualifiedName:
        CSharp: UCT.EventSystem.RuleCriterion.GetResult(bool, bool, UCT.EventSystem.FactEntry, UCT.EventSystem.CriteriaCompare, int, System.Collections.Generic.List<UCT.EventSystem.RuleCriterion>)
        VB: UCT.EventSystem.RuleCriterion.GetResult(Boolean, Boolean, UCT.EventSystem.FactEntry, UCT.EventSystem.CriteriaCompare, Integer, System.Collections.Generic.List(Of UCT.EventSystem.RuleCriterion))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: GetResult
        path: ''
        startLine: 16277
      summary: "\n封装，为Editor调用\n"
      example: []
      syntax:
        content:
          CSharp: public static bool GetResult(bool isResultReversed, bool isGlobal, FactEntry fact, CriteriaCompare compare, int detection, List<RuleCriterion> criteria)
          VB: Public Shared Function GetResult(isResultReversed As Boolean, isGlobal As Boolean, fact As FactEntry, compare As CriteriaCompare, detection As Integer, criteria As List(Of RuleCriterion)) As Boolean
        parameters:
        - id: isResultReversed
          type: System.Boolean
        - id: isGlobal
          type: System.Boolean
        - id: fact
          type: UCT.EventSystem.FactEntry
        - id: compare
          type: UCT.EventSystem.CriteriaCompare
        - id: detection
          type: System.Int32
        - id: criteria
          type: System.Collections.Generic.List{UCT.EventSystem.RuleCriterion}
        return:
          type: System.Boolean
      overload: UCT.EventSystem.RuleCriterion.GetResult*
    - id: UCT.EventSystem.RuleCriterion.Equals(UCT.EventSystem.RuleCriterion)
      commentId: M:UCT.EventSystem.RuleCriterion.Equals(UCT.EventSystem.RuleCriterion)
      language: CSharp
      name:
        CSharp: Equals(RuleCriterion)
        VB: Equals(RuleCriterion)
      nameWithType:
        CSharp: RuleCriterion.Equals(RuleCriterion)
        VB: RuleCriterion.Equals(RuleCriterion)
      qualifiedName:
        CSharp: UCT.EventSystem.RuleCriterion.Equals(UCT.EventSystem.RuleCriterion)
        VB: UCT.EventSystem.RuleCriterion.Equals(UCT.EventSystem.RuleCriterion)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Equals
        path: ''
        startLine: 16412
      syntax:
        content:
          CSharp: public bool Equals(RuleCriterion other)
          VB: Public Function Equals(other As RuleCriterion) As Boolean
        parameters:
        - id: other
          type: UCT.EventSystem.RuleCriterion
        return:
          type: System.Boolean
      overload: UCT.EventSystem.RuleCriterion.Equals*
    - id: UCT.EventSystem.RuleCriterion.Equals(System.Object)
      commentId: M:UCT.EventSystem.RuleCriterion.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(object)
        VB: Equals(Object)
      nameWithType:
        CSharp: RuleCriterion.Equals(object)
        VB: RuleCriterion.Equals(Object)
      qualifiedName:
        CSharp: UCT.EventSystem.RuleCriterion.Equals(object)
        VB: UCT.EventSystem.RuleCriterion.Equals(Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Equals
        path: ''
        startLine: 16419
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
        return:
          type: System.Boolean
      overload: UCT.EventSystem.RuleCriterion.Equals*
      overridden: System.ValueType.Equals(System.Object)
    - id: UCT.EventSystem.RuleCriterion.GetHashCode
      commentId: M:UCT.EventSystem.RuleCriterion.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: RuleCriterion.GetHashCode()
        VB: RuleCriterion.GetHashCode()
      qualifiedName:
        CSharp: UCT.EventSystem.RuleCriterion.GetHashCode()
        VB: UCT.EventSystem.RuleCriterion.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: GetHashCode
        path: ''
        startLine: 16424
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode() As Integer
        return:
          type: System.Int32
      overload: UCT.EventSystem.RuleCriterion.GetHashCode*
      overridden: System.ValueType.GetHashCode
  - id: UCT.EventSystem.CriteriaCompare
    commentId: T:UCT.EventSystem.CriteriaCompare
    language: CSharp
    name:
      CSharp: CriteriaCompare
      VB: CriteriaCompare
    nameWithType:
      CSharp: CriteriaCompare
      VB: CriteriaCompare
    qualifiedName:
      CSharp: UCT.EventSystem.CriteriaCompare
      VB: UCT.EventSystem.CriteriaCompare
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: CriteriaCompare
      path: ''
      startLine: 16431
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public enum CriteriaCompare
        VB: >-
          <Serializable>

          Public Enum CriteriaCompare
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    items:
    - id: UCT.EventSystem.CriteriaCompare.GreaterThan
      commentId: F:UCT.EventSystem.CriteriaCompare.GreaterThan
      language: CSharp
      name:
        CSharp: GreaterThan
        VB: GreaterThan
      nameWithType:
        CSharp: CriteriaCompare.GreaterThan
        VB: CriteriaCompare.GreaterThan
      qualifiedName:
        CSharp: UCT.EventSystem.CriteriaCompare.GreaterThan
        VB: UCT.EventSystem.CriteriaCompare.GreaterThan
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: GreaterThan
        path: ''
        startLine: 16434
      syntax:
        content:
          CSharp: GreaterThan = 0
          VB: GreaterThan = 0
        return:
          type: UCT.EventSystem.CriteriaCompare
    - id: UCT.EventSystem.CriteriaCompare.GreaterThanOrEqual
      commentId: F:UCT.EventSystem.CriteriaCompare.GreaterThanOrEqual
      language: CSharp
      name:
        CSharp: GreaterThanOrEqual
        VB: GreaterThanOrEqual
      nameWithType:
        CSharp: CriteriaCompare.GreaterThanOrEqual
        VB: CriteriaCompare.GreaterThanOrEqual
      qualifiedName:
        CSharp: UCT.EventSystem.CriteriaCompare.GreaterThanOrEqual
        VB: UCT.EventSystem.CriteriaCompare.GreaterThanOrEqual
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: GreaterThanOrEqual
        path: ''
        startLine: 16435
      syntax:
        content:
          CSharp: GreaterThanOrEqual = 1
          VB: GreaterThanOrEqual = 1
        return:
          type: UCT.EventSystem.CriteriaCompare
    - id: UCT.EventSystem.CriteriaCompare.Equal
      commentId: F:UCT.EventSystem.CriteriaCompare.Equal
      language: CSharp
      name:
        CSharp: Equal
        VB: Equal
      nameWithType:
        CSharp: CriteriaCompare.Equal
        VB: CriteriaCompare.Equal
      qualifiedName:
        CSharp: UCT.EventSystem.CriteriaCompare.Equal
        VB: UCT.EventSystem.CriteriaCompare.Equal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Equal
        path: ''
        startLine: 16436
      syntax:
        content:
          CSharp: Equal = 2
          VB: Equal = 2
        return:
          type: UCT.EventSystem.CriteriaCompare
    - id: UCT.EventSystem.CriteriaCompare.NotEqual
      commentId: F:UCT.EventSystem.CriteriaCompare.NotEqual
      language: CSharp
      name:
        CSharp: NotEqual
        VB: NotEqual
      nameWithType:
        CSharp: CriteriaCompare.NotEqual
        VB: CriteriaCompare.NotEqual
      qualifiedName:
        CSharp: UCT.EventSystem.CriteriaCompare.NotEqual
        VB: UCT.EventSystem.CriteriaCompare.NotEqual
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: NotEqual
        path: ''
        startLine: 16437
      syntax:
        content:
          CSharp: NotEqual = 3
          VB: NotEqual = 3
        return:
          type: UCT.EventSystem.CriteriaCompare
    - id: UCT.EventSystem.CriteriaCompare.LessThanOrEqual
      commentId: F:UCT.EventSystem.CriteriaCompare.LessThanOrEqual
      language: CSharp
      name:
        CSharp: LessThanOrEqual
        VB: LessThanOrEqual
      nameWithType:
        CSharp: CriteriaCompare.LessThanOrEqual
        VB: CriteriaCompare.LessThanOrEqual
      qualifiedName:
        CSharp: UCT.EventSystem.CriteriaCompare.LessThanOrEqual
        VB: UCT.EventSystem.CriteriaCompare.LessThanOrEqual
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: LessThanOrEqual
        path: ''
        startLine: 16438
      syntax:
        content:
          CSharp: LessThanOrEqual = 4
          VB: LessThanOrEqual = 4
        return:
          type: UCT.EventSystem.CriteriaCompare
    - id: UCT.EventSystem.CriteriaCompare.LessThan
      commentId: F:UCT.EventSystem.CriteriaCompare.LessThan
      language: CSharp
      name:
        CSharp: LessThan
        VB: LessThan
      nameWithType:
        CSharp: CriteriaCompare.LessThan
        VB: CriteriaCompare.LessThan
      qualifiedName:
        CSharp: UCT.EventSystem.CriteriaCompare.LessThan
        VB: UCT.EventSystem.CriteriaCompare.LessThan
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: LessThan
        path: ''
        startLine: 16439
      syntax:
        content:
          CSharp: LessThan = 5
          VB: LessThan = 5
        return:
          type: UCT.EventSystem.CriteriaCompare
  - id: UCT.EventSystem.RuleLogicalOperation
    commentId: T:UCT.EventSystem.RuleLogicalOperation
    language: CSharp
    name:
      CSharp: RuleLogicalOperation
      VB: RuleLogicalOperation
    nameWithType:
      CSharp: RuleLogicalOperation
      VB: RuleLogicalOperation
    qualifiedName:
      CSharp: UCT.EventSystem.RuleLogicalOperation
      VB: UCT.EventSystem.RuleLogicalOperation
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: RuleLogicalOperation
      path: ''
      startLine: 16442
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public enum RuleLogicalOperation
        VB: >-
          <Serializable>

          Public Enum RuleLogicalOperation
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    items:
    - id: UCT.EventSystem.RuleLogicalOperation.None
      commentId: F:UCT.EventSystem.RuleLogicalOperation.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: RuleLogicalOperation.None
        VB: RuleLogicalOperation.None
      qualifiedName:
        CSharp: UCT.EventSystem.RuleLogicalOperation.None
        VB: UCT.EventSystem.RuleLogicalOperation.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: None
        path: ''
        startLine: 16445
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: UCT.EventSystem.RuleLogicalOperation
    - id: UCT.EventSystem.RuleLogicalOperation.And
      commentId: F:UCT.EventSystem.RuleLogicalOperation.And
      language: CSharp
      name:
        CSharp: And
        VB: And
      nameWithType:
        CSharp: RuleLogicalOperation.And
        VB: RuleLogicalOperation.And
      qualifiedName:
        CSharp: UCT.EventSystem.RuleLogicalOperation.And
        VB: UCT.EventSystem.RuleLogicalOperation.And
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: And
        path: ''
        startLine: 16446
      syntax:
        content:
          CSharp: And = 1
          VB: And = 1
        return:
          type: UCT.EventSystem.RuleLogicalOperation
    - id: UCT.EventSystem.RuleLogicalOperation.Or
      commentId: F:UCT.EventSystem.RuleLogicalOperation.Or
      language: CSharp
      name:
        CSharp: Or
        VB: Or
      nameWithType:
        CSharp: RuleLogicalOperation.Or
        VB: RuleLogicalOperation.Or
      qualifiedName:
        CSharp: UCT.EventSystem.RuleLogicalOperation.Or
        VB: UCT.EventSystem.RuleLogicalOperation.Or
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Or
        path: ''
        startLine: 16447
      syntax:
        content:
          CSharp: Or = 2
          VB: Or = 2
        return:
          type: UCT.EventSystem.RuleLogicalOperation
  - id: UCT.EventSystem.OverworldEventTrigger
    commentId: T:UCT.EventSystem.OverworldEventTrigger
    language: CSharp
    name:
      CSharp: OverworldEventTrigger
      VB: OverworldEventTrigger
    nameWithType:
      CSharp: OverworldEventTrigger
      VB: OverworldEventTrigger
    qualifiedName:
      CSharp: UCT.EventSystem.OverworldEventTrigger
      VB: UCT.EventSystem.OverworldEventTrigger
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: OverworldEventTrigger
      path: ''
      startLine: 16463
    syntax:
      content:
        CSharp: 'public class OverworldEventTrigger : MonoBehaviour'
        VB: Public Class OverworldEventTrigger Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.EventSystem.OverworldEventTrigger.fsmObjectName
      commentId: F:UCT.EventSystem.OverworldEventTrigger.fsmObjectName
      language: CSharp
      name:
        CSharp: fsmObjectName
        VB: fsmObjectName
      nameWithType:
        CSharp: OverworldEventTrigger.fsmObjectName
        VB: OverworldEventTrigger.fsmObjectName
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldEventTrigger.fsmObjectName
        VB: UCT.EventSystem.OverworldEventTrigger.fsmObjectName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: fsmObjectName
        path: ''
        startLine: 16465
      syntax:
        content:
          CSharp: public string fsmObjectName
          VB: Public fsmObjectName As String
        return:
          type: System.String
    - id: UCT.EventSystem.OverworldEventTrigger.fsmObject
      commentId: F:UCT.EventSystem.OverworldEventTrigger.fsmObject
      language: CSharp
      name:
        CSharp: fsmObject
        VB: fsmObject
      nameWithType:
        CSharp: OverworldEventTrigger.fsmObject
        VB: OverworldEventTrigger.fsmObject
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldEventTrigger.fsmObject
        VB: UCT.EventSystem.OverworldEventTrigger.fsmObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: fsmObject
        path: ''
        startLine: 16467
      syntax:
        content:
          CSharp: public FiniteStateMachine fsmObject
          VB: Public fsmObject As FiniteStateMachine
        return:
          type: Global.FiniteStateMachine
    - id: UCT.EventSystem.OverworldEventTrigger.tags
      commentId: F:UCT.EventSystem.OverworldEventTrigger.tags
      language: CSharp
      name:
        CSharp: tags
        VB: tags
      nameWithType:
        CSharp: OverworldEventTrigger.tags
        VB: OverworldEventTrigger.tags
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldEventTrigger.tags
        VB: UCT.EventSystem.OverworldEventTrigger.tags
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: tags
        path: ''
        startLine: 16469
      syntax:
        content:
          CSharp: public List<string> tags
          VB: Public tags As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.EventSystem.OverworldEventTrigger.eventTriggerModes
      commentId: F:UCT.EventSystem.OverworldEventTrigger.eventTriggerModes
      language: CSharp
      name:
        CSharp: eventTriggerModes
        VB: eventTriggerModes
      nameWithType:
        CSharp: OverworldEventTrigger.eventTriggerModes
        VB: OverworldEventTrigger.eventTriggerModes
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldEventTrigger.eventTriggerModes
        VB: UCT.EventSystem.OverworldEventTrigger.eventTriggerModes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: eventTriggerModes
        path: ''
        startLine: 16471
      syntax:
        content:
          CSharp: public List<EventTriggerMode> eventTriggerModes
          VB: Public eventTriggerModes As List(Of EventTriggerMode)
        return:
          type: System.Collections.Generic.List{UCT.EventSystem.EventTriggerMode}
    - id: UCT.EventSystem.OverworldEventTrigger.eventNames
      commentId: F:UCT.EventSystem.OverworldEventTrigger.eventNames
      language: CSharp
      name:
        CSharp: eventNames
        VB: eventNames
      nameWithType:
        CSharp: OverworldEventTrigger.eventNames
        VB: OverworldEventTrigger.eventNames
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldEventTrigger.eventNames
        VB: UCT.EventSystem.OverworldEventTrigger.eventNames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: eventNames
        path: ''
        startLine: 16473
      syntax:
        content:
          CSharp: public List<string> eventNames
          VB: Public eventNames As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.EventSystem.OverworldEventTrigger.useSimpleRules
      commentId: F:UCT.EventSystem.OverworldEventTrigger.useSimpleRules
      language: CSharp
      name:
        CSharp: useSimpleRules
        VB: useSimpleRules
      nameWithType:
        CSharp: OverworldEventTrigger.useSimpleRules
        VB: OverworldEventTrigger.useSimpleRules
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldEventTrigger.useSimpleRules
        VB: UCT.EventSystem.OverworldEventTrigger.useSimpleRules
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: useSimpleRules
        path: ''
        startLine: 16476
      syntax:
        content:
          CSharp: public bool useSimpleRules
          VB: Public useSimpleRules As Boolean
        return:
          type: System.Boolean
    - id: UCT.EventSystem.OverworldEventTrigger.simpleRules
      commentId: F:UCT.EventSystem.OverworldEventTrigger.simpleRules
      language: CSharp
      name:
        CSharp: simpleRules
        VB: simpleRules
      nameWithType:
        CSharp: OverworldEventTrigger.simpleRules
        VB: OverworldEventTrigger.simpleRules
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldEventTrigger.simpleRules
        VB: UCT.EventSystem.OverworldEventTrigger.simpleRules
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: simpleRules
        path: ''
        startLine: 16478
      syntax:
        content:
          CSharp: public List<RuleEntry> simpleRules
          VB: Public simpleRules As List(Of RuleEntry)
        return:
          type: System.Collections.Generic.List{UCT.EventSystem.RuleEntry}
    - id: UCT.EventSystem.OverworldEventTrigger.isExecuteAllRules
      commentId: F:UCT.EventSystem.OverworldEventTrigger.isExecuteAllRules
      language: CSharp
      name:
        CSharp: isExecuteAllRules
        VB: isExecuteAllRules
      nameWithType:
        CSharp: OverworldEventTrigger.isExecuteAllRules
        VB: OverworldEventTrigger.isExecuteAllRules
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldEventTrigger.isExecuteAllRules
        VB: UCT.EventSystem.OverworldEventTrigger.isExecuteAllRules
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: isExecuteAllRules
        path: ''
        startLine: 16479
      syntax:
        content:
          CSharp: public bool isExecuteAllRules
          VB: Public isExecuteAllRules As Boolean
        return:
          type: System.Boolean
    - id: UCT.EventSystem.OverworldEventTrigger.clarity
      commentId: F:UCT.EventSystem.OverworldEventTrigger.clarity
      language: CSharp
      name:
        CSharp: clarity
        VB: clarity
      nameWithType:
        CSharp: OverworldEventTrigger.clarity
        VB: OverworldEventTrigger.clarity
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldEventTrigger.clarity
        VB: UCT.EventSystem.OverworldEventTrigger.clarity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: clarity
        path: ''
        startLine: 16485
      summary: "\n能见度，取值范围为0-1。\n用于视线检测。\n"
      example: []
      syntax:
        content:
          CSharp: public float clarity
          VB: Public clarity As Single
        return:
          type: System.Single
    - id: UCT.EventSystem.OverworldEventTrigger.OnTriggerEvent
      commentId: F:UCT.EventSystem.OverworldEventTrigger.OnTriggerEvent
      language: CSharp
      name:
        CSharp: OnTriggerEvent
        VB: OnTriggerEvent
      nameWithType:
        CSharp: OverworldEventTrigger.OnTriggerEvent
        VB: OverworldEventTrigger.OnTriggerEvent
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldEventTrigger.OnTriggerEvent
        VB: UCT.EventSystem.OverworldEventTrigger.OnTriggerEvent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: OnTriggerEvent
        path: ''
        startLine: 16488
      syntax:
        content:
          CSharp: public Action OnTriggerEvent
          VB: Public OnTriggerEvent As Action
        return:
          type: System.Action
    - id: UCT.EventSystem.OverworldEventTrigger.IsEventTriggerModeActive(UCT.EventSystem.EventTriggerMode)
      commentId: M:UCT.EventSystem.OverworldEventTrigger.IsEventTriggerModeActive(UCT.EventSystem.EventTriggerMode)
      language: CSharp
      name:
        CSharp: IsEventTriggerModeActive(EventTriggerMode)
        VB: IsEventTriggerModeActive(EventTriggerMode)
      nameWithType:
        CSharp: OverworldEventTrigger.IsEventTriggerModeActive(EventTriggerMode)
        VB: OverworldEventTrigger.IsEventTriggerModeActive(EventTriggerMode)
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldEventTrigger.IsEventTriggerModeActive(UCT.EventSystem.EventTriggerMode)
        VB: UCT.EventSystem.OverworldEventTrigger.IsEventTriggerModeActive(UCT.EventSystem.EventTriggerMode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: IsEventTriggerModeActive
        path: ''
        startLine: 16569
      syntax:
        content:
          CSharp: public bool IsEventTriggerModeActive(EventTriggerMode mode)
          VB: Public Function IsEventTriggerModeActive(mode As EventTriggerMode) As Boolean
        parameters:
        - id: mode
          type: UCT.EventSystem.EventTriggerMode
        return:
          type: System.Boolean
      overload: UCT.EventSystem.OverworldEventTrigger.IsEventTriggerModeActive*
    - id: UCT.EventSystem.OverworldEventTrigger.TriggerEvent
      commentId: M:UCT.EventSystem.OverworldEventTrigger.TriggerEvent
      language: CSharp
      name:
        CSharp: TriggerEvent()
        VB: TriggerEvent()
      nameWithType:
        CSharp: OverworldEventTrigger.TriggerEvent()
        VB: OverworldEventTrigger.TriggerEvent()
      qualifiedName:
        CSharp: UCT.EventSystem.OverworldEventTrigger.TriggerEvent()
        VB: UCT.EventSystem.OverworldEventTrigger.TriggerEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: TriggerEvent
        path: ''
        startLine: 16590
      summary: "\n触发事件。\n"
      example: []
      syntax:
        content:
          CSharp: public void TriggerEvent()
          VB: Public Sub TriggerEvent()
      overload: UCT.EventSystem.OverworldEventTrigger.TriggerEvent*
  - id: UCT.EventSystem.EventTriggerMode
    commentId: T:UCT.EventSystem.EventTriggerMode
    language: CSharp
    name:
      CSharp: EventTriggerMode
      VB: EventTriggerMode
    nameWithType:
      CSharp: EventTriggerMode
      VB: EventTriggerMode
    qualifiedName:
      CSharp: UCT.EventSystem.EventTriggerMode
      VB: UCT.EventSystem.EventTriggerMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.EventSystem
    source:
      id: EventTriggerMode
      path: ''
      startLine: 16686
    summary: "\n定义事件触发模式的枚举类型。\n"
    example: []
    syntax:
      content:
        CSharp: public enum EventTriggerMode
        VB: Public Enum EventTriggerMode
    items:
    - id: UCT.EventSystem.EventTriggerMode.Interact
      commentId: F:UCT.EventSystem.EventTriggerMode.Interact
      language: CSharp
      name:
        CSharp: Interact
        VB: Interact
      nameWithType:
        CSharp: EventTriggerMode.Interact
        VB: EventTriggerMode.Interact
      qualifiedName:
        CSharp: UCT.EventSystem.EventTriggerMode.Interact
        VB: UCT.EventSystem.EventTriggerMode.Interact
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: Interact
        path: ''
        startLine: 16691
      summary: "\n调查型：按下调查键后触发。仅用于玩家，无需配置Tags。\n"
      example: []
      syntax:
        content:
          CSharp: Interact = 0
          VB: Interact = 0
        return:
          type: UCT.EventSystem.EventTriggerMode
    - id: UCT.EventSystem.EventTriggerMode.ColliderEnter
      commentId: F:UCT.EventSystem.EventTriggerMode.ColliderEnter
      language: CSharp
      name:
        CSharp: ColliderEnter
        VB: ColliderEnter
      nameWithType:
        CSharp: EventTriggerMode.ColliderEnter
        VB: EventTriggerMode.ColliderEnter
      qualifiedName:
        CSharp: UCT.EventSystem.EventTriggerMode.ColliderEnter
        VB: UCT.EventSystem.EventTriggerMode.ColliderEnter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: ColliderEnter
        path: ''
        startLine: 16696
      summary: "\n碰撞器触发型：开始碰撞后触发。\n"
      example: []
      syntax:
        content:
          CSharp: ColliderEnter = 1
          VB: ColliderEnter = 1
        return:
          type: UCT.EventSystem.EventTriggerMode
    - id: UCT.EventSystem.EventTriggerMode.ColliderExit
      commentId: F:UCT.EventSystem.EventTriggerMode.ColliderExit
      language: CSharp
      name:
        CSharp: ColliderExit
        VB: ColliderExit
      nameWithType:
        CSharp: EventTriggerMode.ColliderExit
        VB: EventTriggerMode.ColliderExit
      qualifiedName:
        CSharp: UCT.EventSystem.EventTriggerMode.ColliderExit
        VB: UCT.EventSystem.EventTriggerMode.ColliderExit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: ColliderExit
        path: ''
        startLine: 16701
      summary: "\n碰撞器离开型：结束碰撞后触发。\n"
      example: []
      syntax:
        content:
          CSharp: ColliderExit = 2
          VB: ColliderExit = 2
        return:
          type: UCT.EventSystem.EventTriggerMode
    - id: UCT.EventSystem.EventTriggerMode.TriggerEnter
      commentId: F:UCT.EventSystem.EventTriggerMode.TriggerEnter
      language: CSharp
      name:
        CSharp: TriggerEnter
        VB: TriggerEnter
      nameWithType:
        CSharp: EventTriggerMode.TriggerEnter
        VB: EventTriggerMode.TriggerEnter
      qualifiedName:
        CSharp: UCT.EventSystem.EventTriggerMode.TriggerEnter
        VB: UCT.EventSystem.EventTriggerMode.TriggerEnter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: TriggerEnter
        path: ''
        startLine: 16706
      summary: "\n触发器触发型：进入触发器范围后触发。\n"
      example: []
      syntax:
        content:
          CSharp: TriggerEnter = 3
          VB: TriggerEnter = 3
        return:
          type: UCT.EventSystem.EventTriggerMode
    - id: UCT.EventSystem.EventTriggerMode.TriggerExit
      commentId: F:UCT.EventSystem.EventTriggerMode.TriggerExit
      language: CSharp
      name:
        CSharp: TriggerExit
        VB: TriggerExit
      nameWithType:
        CSharp: EventTriggerMode.TriggerExit
        VB: EventTriggerMode.TriggerExit
      qualifiedName:
        CSharp: UCT.EventSystem.EventTriggerMode.TriggerExit
        VB: UCT.EventSystem.EventTriggerMode.TriggerExit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: TriggerExit
        path: ''
        startLine: 16711
      summary: "\n触发器离开型：离开触发器范围后触发。\n"
      example: []
      syntax:
        content:
          CSharp: TriggerExit = 4
          VB: TriggerExit = 4
        return:
          type: UCT.EventSystem.EventTriggerMode
    - id: UCT.EventSystem.EventTriggerMode.LineOfSightEnter
      commentId: F:UCT.EventSystem.EventTriggerMode.LineOfSightEnter
      language: CSharp
      name:
        CSharp: LineOfSightEnter
        VB: LineOfSightEnter
      nameWithType:
        CSharp: EventTriggerMode.LineOfSightEnter
        VB: EventTriggerMode.LineOfSightEnter
      qualifiedName:
        CSharp: UCT.EventSystem.EventTriggerMode.LineOfSightEnter
        VB: UCT.EventSystem.EventTriggerMode.LineOfSightEnter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: LineOfSightEnter
        path: ''
        startLine: 16716
      summary: "\n视线触发型：进入视野（射线范围）时触发。\n"
      example: []
      syntax:
        content:
          CSharp: LineOfSightEnter = 5
          VB: LineOfSightEnter = 5
        return:
          type: UCT.EventSystem.EventTriggerMode
    - id: UCT.EventSystem.EventTriggerMode.LineOfSightExit
      commentId: F:UCT.EventSystem.EventTriggerMode.LineOfSightExit
      language: CSharp
      name:
        CSharp: LineOfSightExit
        VB: LineOfSightExit
      nameWithType:
        CSharp: EventTriggerMode.LineOfSightExit
        VB: EventTriggerMode.LineOfSightExit
      qualifiedName:
        CSharp: UCT.EventSystem.EventTriggerMode.LineOfSightExit
        VB: UCT.EventSystem.EventTriggerMode.LineOfSightExit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.EventSystem
      source:
        id: LineOfSightExit
        path: ''
        startLine: 16721
      summary: "\n视线离开型：离开视野（射线范围）时触发。\n"
      example: []
      syntax:
        content:
          CSharp: LineOfSightExit = 6
          VB: LineOfSightExit = 6
        return:
          type: UCT.EventSystem.EventTriggerMode
- id: UCT.Audio
  commentId: N:UCT.Audio
  language: CSharp
  name:
    CSharp: UCT.Audio
    VB: UCT.Audio
  nameWithType:
    CSharp: UCT.Audio
    VB: UCT.Audio
  qualifiedName:
    CSharp: UCT.Audio
    VB: UCT.Audio
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.Audio.AudioController
    commentId: T:UCT.Audio.AudioController
    language: CSharp
    name:
      CSharp: AudioController
      VB: AudioController
    nameWithType:
      CSharp: AudioController
      VB: AudioController
    qualifiedName:
      CSharp: UCT.Audio.AudioController
      VB: UCT.Audio.AudioController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Audio
    source:
      id: AudioController
      path: ''
      startLine: 16737
    summary: "\n基于对象池 控制音频\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AudioController : ObjectPool'
        VB: Public Class AudioController Inherits ObjectPool
    inheritance:
    - System.Object
    items:
    - id: UCT.Audio.AudioController.audioSource
      commentId: F:UCT.Audio.AudioController.audioSource
      language: CSharp
      name:
        CSharp: audioSource
        VB: audioSource
      nameWithType:
        CSharp: AudioController.audioSource
        VB: AudioController.audioSource
      qualifiedName:
        CSharp: UCT.Audio.AudioController.audioSource
        VB: UCT.Audio.AudioController.audioSource
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Audio
      source:
        id: audioSource
        path: ''
        startLine: 16739
      syntax:
        content:
          CSharp: public AudioSource audioSource
          VB: Public audioSource As AudioSource
        return:
          type: Global.AudioSource
    - id: UCT.Audio.AudioController.Instance
      commentId: P:UCT.Audio.AudioController.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: AudioController.Instance
        VB: AudioController.Instance
      qualifiedName:
        CSharp: UCT.Audio.AudioController.Instance
        VB: UCT.Audio.AudioController.Instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Audio
      source:
        id: Instance
        path: ''
        startLine: 16740
      syntax:
        content:
          CSharp: public static AudioController Instance { get; }
          VB: Public Shared Property Instance As AudioController
        parameters: []
        return:
          type: UCT.Audio.AudioController
      overload: UCT.Audio.AudioController.Instance*
    - id: UCT.Audio.AudioController.PlayFx(System.Int32,System.Collections.Generic.List{AudioClip},System.Single,System.Single,AudioMixerGroup)
      commentId: M:UCT.Audio.AudioController.PlayFx(System.Int32,System.Collections.Generic.List{AudioClip},System.Single,System.Single,AudioMixerGroup)
      language: CSharp
      name:
        CSharp: PlayFx(int, List<AudioClip>, float, float, AudioMixerGroup)
        VB: PlayFx(Integer, List(Of AudioClip), Single, Single, AudioMixerGroup)
      nameWithType:
        CSharp: AudioController.PlayFx(int, List<AudioClip>, float, float, AudioMixerGroup)
        VB: AudioController.PlayFx(Integer, List(Of AudioClip), Single, Single, AudioMixerGroup)
      qualifiedName:
        CSharp: UCT.Audio.AudioController.PlayFx(int, System.Collections.Generic.List<AudioClip>, float, float, AudioMixerGroup)
        VB: UCT.Audio.AudioController.PlayFx(Integer, System.Collections.Generic.List(Of AudioClip), Single, Single, AudioMixerGroup)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Audio
      source:
        id: PlayFx
        path: ''
        startLine: 16762
      syntax:
        content:
          CSharp: public void PlayFx(int index, List<AudioClip> list, float volume = 0.5, float pitch = 1, AudioMixerGroup audioMixerGroup = null)
          VB: Public Sub PlayFx(index As Integer, list As List(Of AudioClip), volume As Single = 0.5, pitch As Single = 1, audioMixerGroup As AudioMixerGroup = Nothing)
        parameters:
        - id: index
          type: System.Int32
        - id: list
          type: System.Collections.Generic.List{AudioClip}
        - id: volume
          type: System.Single
        - id: pitch
          type: System.Single
        - id: audioMixerGroup
          type: Global.AudioMixerGroup
      overload: UCT.Audio.AudioController.PlayFx*
    - id: UCT.Audio.AudioController.PlayFx(AudioClip,System.Single,System.Single,AudioMixerGroup)
      commentId: M:UCT.Audio.AudioController.PlayFx(AudioClip,System.Single,System.Single,AudioMixerGroup)
      language: CSharp
      name:
        CSharp: PlayFx(AudioClip, float, float, AudioMixerGroup)
        VB: PlayFx(AudioClip, Single, Single, AudioMixerGroup)
      nameWithType:
        CSharp: AudioController.PlayFx(AudioClip, float, float, AudioMixerGroup)
        VB: AudioController.PlayFx(AudioClip, Single, Single, AudioMixerGroup)
      qualifiedName:
        CSharp: UCT.Audio.AudioController.PlayFx(AudioClip, float, float, AudioMixerGroup)
        VB: UCT.Audio.AudioController.PlayFx(AudioClip, Single, Single, AudioMixerGroup)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Audio
      source:
        id: PlayFx
        path: ''
        startLine: 16776
      syntax:
        content:
          CSharp: public void PlayFx(AudioClip clip, float volume = 0.5, float pitch = 1, AudioMixerGroup audioMixerGroup = null)
          VB: Public Sub PlayFx(clip As AudioClip, volume As Single = 0.5, pitch As Single = 1, audioMixerGroup As AudioMixerGroup = Nothing)
        parameters:
        - id: clip
          type: Global.AudioClip
        - id: volume
          type: System.Single
        - id: pitch
          type: System.Single
        - id: audioMixerGroup
          type: Global.AudioMixerGroup
      overload: UCT.Audio.AudioController.PlayFx*
    - id: UCT.Audio.AudioController.GetClipFromCharacterSpriteManager(System.String)
      commentId: M:UCT.Audio.AudioController.GetClipFromCharacterSpriteManager(System.String)
      language: CSharp
      name:
        CSharp: GetClipFromCharacterSpriteManager(string)
        VB: GetClipFromCharacterSpriteManager(String)
      nameWithType:
        CSharp: AudioController.GetClipFromCharacterSpriteManager(string)
        VB: AudioController.GetClipFromCharacterSpriteManager(String)
      qualifiedName:
        CSharp: UCT.Audio.AudioController.GetClipFromCharacterSpriteManager(string)
        VB: UCT.Audio.AudioController.GetClipFromCharacterSpriteManager(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Audio
      source:
        id: GetClipFromCharacterSpriteManager
        path: ''
        startLine: 16815
      syntax:
        content:
          CSharp: public static (AudioClip result, CharacterSpriteManager manager) GetClipFromCharacterSpriteManager(string key)
          VB: Public Shared Function GetClipFromCharacterSpriteManager(key As String) As (result As AudioClip, manager As CharacterSpriteManager)
        parameters:
        - id: key
          type: System.String
        return:
          type: System.ValueTuple{AudioClip,CharacterSpriteManager}
      overload: UCT.Audio.AudioController.GetClipFromCharacterSpriteManager*
    - id: UCT.Audio.AudioController.GetClipFromCharacterSpriteManager(System.String,CharacterSpriteManager)
      commentId: M:UCT.Audio.AudioController.GetClipFromCharacterSpriteManager(System.String,CharacterSpriteManager)
      language: CSharp
      name:
        CSharp: GetClipFromCharacterSpriteManager(string, CharacterSpriteManager)
        VB: GetClipFromCharacterSpriteManager(String, CharacterSpriteManager)
      nameWithType:
        CSharp: AudioController.GetClipFromCharacterSpriteManager(string, CharacterSpriteManager)
        VB: AudioController.GetClipFromCharacterSpriteManager(String, CharacterSpriteManager)
      qualifiedName:
        CSharp: UCT.Audio.AudioController.GetClipFromCharacterSpriteManager(string, CharacterSpriteManager)
        VB: UCT.Audio.AudioController.GetClipFromCharacterSpriteManager(String, CharacterSpriteManager)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Audio
      source:
        id: GetClipFromCharacterSpriteManager
        path: ''
        startLine: 16865
      syntax:
        content:
          CSharp: public static AudioClip GetClipFromCharacterSpriteManager(string key, CharacterSpriteManager manager)
          VB: Public Shared Function GetClipFromCharacterSpriteManager(key As String, manager As CharacterSpriteManager) As AudioClip
        parameters:
        - id: key
          type: System.String
        - id: manager
          type: Global.CharacterSpriteManager
        return:
          type: Global.AudioClip
      overload: UCT.Audio.AudioController.GetClipFromCharacterSpriteManager*
  - id: UCT.Audio.AudioPlayer
    commentId: T:UCT.Audio.AudioPlayer
    language: CSharp
    name:
      CSharp: AudioPlayer
      VB: AudioPlayer
    nameWithType:
      CSharp: AudioPlayer
      VB: AudioPlayer
    qualifiedName:
      CSharp: UCT.Audio.AudioPlayer
      VB: UCT.Audio.AudioPlayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Audio
    source:
      id: AudioPlayer
      path: ''
      startLine: 16904
    syntax:
      content:
        CSharp: 'public class AudioPlayer : MonoBehaviour'
        VB: Public Class AudioPlayer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Audio.AudioPlayer.audioSource
      commentId: F:UCT.Audio.AudioPlayer.audioSource
      language: CSharp
      name:
        CSharp: audioSource
        VB: audioSource
      nameWithType:
        CSharp: AudioPlayer.audioSource
        VB: AudioPlayer.audioSource
      qualifiedName:
        CSharp: UCT.Audio.AudioPlayer.audioSource
        VB: UCT.Audio.AudioPlayer.audioSource
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Audio
      source:
        id: audioSource
        path: ''
        startLine: 16906
      syntax:
        content:
          CSharp: public AudioSource audioSource
          VB: Public audioSource As AudioSource
        return:
          type: Global.AudioSource
    - id: UCT.Audio.AudioPlayer.Playing(AudioClip)
      commentId: M:UCT.Audio.AudioPlayer.Playing(AudioClip)
      language: CSharp
      name:
        CSharp: Playing(AudioClip)
        VB: Playing(AudioClip)
      nameWithType:
        CSharp: AudioPlayer.Playing(AudioClip)
        VB: AudioPlayer.Playing(AudioClip)
      qualifiedName:
        CSharp: UCT.Audio.AudioPlayer.Playing(AudioClip)
        VB: UCT.Audio.AudioPlayer.Playing(AudioClip)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Audio
      source:
        id: Playing
        path: ''
        startLine: 16930
      syntax:
        content:
          CSharp: public void Playing(AudioClip clip)
          VB: Public Sub Playing(clip As AudioClip)
        parameters:
        - id: clip
          type: Global.AudioClip
      overload: UCT.Audio.AudioPlayer.Playing*
- id: UCT.UI
  commentId: N:UCT.UI
  language: CSharp
  name:
    CSharp: UCT.UI
    VB: UCT.UI
  nameWithType:
    CSharp: UCT.UI
    VB: UCT.UI
  qualifiedName:
    CSharp: UCT.UI
    VB: UCT.UI
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.UI.BoxDrawer
    commentId: T:UCT.UI.BoxDrawer
    language: CSharp
    name:
      CSharp: BoxDrawer
      VB: BoxDrawer
    nameWithType:
      CSharp: BoxDrawer
      VB: BoxDrawer
    qualifiedName:
      CSharp: UCT.UI.BoxDrawer
      VB: UCT.UI.BoxDrawer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.UI
    source:
      id: BoxDrawer
      path: ''
      startLine: 16953
    summary: "\n单个战斗框绘制\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BoxDrawer : MonoBehaviour'
        VB: Public Class BoxDrawer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.UI.BoxDrawer.isIndividualBox
      commentId: F:UCT.UI.BoxDrawer.isIndividualBox
      language: CSharp
      name:
        CSharp: isIndividualBox
        VB: isIndividualBox
      nameWithType:
        CSharp: BoxDrawer.isIndividualBox
        VB: BoxDrawer.isIndividualBox
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.isIndividualBox
        VB: UCT.UI.BoxDrawer.isIndividualBox
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: isIndividualBox
        path: ''
        startLine: 16964
      summary: "\n它需要场景内存在BoxController，但它可以不是是它的父级。\n单独存在的框不可以设为加减框。\n"
      example: []
      syntax:
        content:
          CSharp: public bool isIndividualBox
          VB: Public isIndividualBox As Boolean
        return:
          type: System.Boolean
    - id: UCT.UI.BoxDrawer.localPosition
      commentId: F:UCT.UI.BoxDrawer.localPosition
      language: CSharp
      name:
        CSharp: localPosition
        VB: localPosition
      nameWithType:
        CSharp: BoxDrawer.localPosition
        VB: BoxDrawer.localPosition
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.localPosition
        VB: UCT.UI.BoxDrawer.localPosition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: localPosition
        path: ''
        startLine: 16966
      syntax:
        content:
          CSharp: public Vector3 localPosition
          VB: Public localPosition As Vector3
        return:
          type: Global.Vector3
    - id: UCT.UI.BoxDrawer.rotation
      commentId: F:UCT.UI.BoxDrawer.rotation
      language: CSharp
      name:
        CSharp: rotation
        VB: rotation
      nameWithType:
        CSharp: BoxDrawer.rotation
        VB: BoxDrawer.rotation
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.rotation
        VB: UCT.UI.BoxDrawer.rotation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: rotation
        path: ''
        startLine: 16969
      syntax:
        content:
          CSharp: public Quaternion rotation
          VB: Public rotation As Quaternion
        return:
          type: Global.Quaternion
    - id: UCT.UI.BoxDrawer.width
      commentId: F:UCT.UI.BoxDrawer.width
      language: CSharp
      name:
        CSharp: width
        VB: width
      nameWithType:
        CSharp: BoxDrawer.width
        VB: BoxDrawer.width
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.width
        VB: UCT.UI.BoxDrawer.width
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: width
        path: ''
        startLine: 16972
      syntax:
        content:
          CSharp: public float width
          VB: Public width As Single
        return:
          type: System.Single
    - id: UCT.UI.BoxDrawer.vertexPoints
      commentId: F:UCT.UI.BoxDrawer.vertexPoints
      language: CSharp
      name:
        CSharp: vertexPoints
        VB: vertexPoints
      nameWithType:
        CSharp: BoxDrawer.vertexPoints
        VB: BoxDrawer.vertexPoints
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.vertexPoints
        VB: UCT.UI.BoxDrawer.vertexPoints
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: vertexPoints
        path: ''
        startLine: 16974
      syntax:
        content:
          CSharp: public List<Vector2> vertexPoints
          VB: Public vertexPoints As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.UI.BoxDrawer.isBessel
      commentId: F:UCT.UI.BoxDrawer.isBessel
      language: CSharp
      name:
        CSharp: isBessel
        VB: isBessel
      nameWithType:
        CSharp: BoxDrawer.isBessel
        VB: BoxDrawer.isBessel
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.isBessel
        VB: UCT.UI.BoxDrawer.isBessel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: isBessel
        path: ''
        startLine: 16977
      syntax:
        content:
          CSharp: public bool isBessel
          VB: Public isBessel As Boolean
        return:
          type: System.Boolean
    - id: UCT.UI.BoxDrawer.besselPoints
      commentId: F:UCT.UI.BoxDrawer.besselPoints
      language: CSharp
      name:
        CSharp: besselPoints
        VB: besselPoints
      nameWithType:
        CSharp: BoxDrawer.besselPoints
        VB: BoxDrawer.besselPoints
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.besselPoints
        VB: UCT.UI.BoxDrawer.besselPoints
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: besselPoints
        path: ''
        startLine: 16979
      syntax:
        content:
          CSharp: public List<Vector2> besselPoints
          VB: Public besselPoints As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.UI.BoxDrawer.besselPointsNumber
      commentId: F:UCT.UI.BoxDrawer.besselPointsNumber
      language: CSharp
      name:
        CSharp: besselPointsNumber
        VB: besselPointsNumber
      nameWithType:
        CSharp: BoxDrawer.besselPointsNumber
        VB: BoxDrawer.besselPointsNumber
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.besselPointsNumber
        VB: UCT.UI.BoxDrawer.besselPointsNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: besselPointsNumber
        path: ''
        startLine: 16980
      syntax:
        content:
          CSharp: public int besselPointsNumber
          VB: Public besselPointsNumber As Integer
        return:
          type: System.Int32
    - id: UCT.UI.BoxDrawer.realPoints
      commentId: F:UCT.UI.BoxDrawer.realPoints
      language: CSharp
      name:
        CSharp: realPoints
        VB: realPoints
      nameWithType:
        CSharp: BoxDrawer.realPoints
        VB: BoxDrawer.realPoints
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.realPoints
        VB: UCT.UI.BoxDrawer.realPoints
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: realPoints
        path: ''
        startLine: 16983
      syntax:
        content:
          CSharp: public List<Vector2> realPoints
          VB: Public realPoints As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.UI.BoxDrawer.besselInsertNumber
      commentId: F:UCT.UI.BoxDrawer.besselInsertNumber
      language: CSharp
      name:
        CSharp: besselInsertNumber
        VB: besselInsertNumber
      nameWithType:
        CSharp: BoxDrawer.besselInsertNumber
        VB: BoxDrawer.besselInsertNumber
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.besselInsertNumber
        VB: UCT.UI.BoxDrawer.besselInsertNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: besselInsertNumber
        path: ''
        startLine: 16985
      syntax:
        content:
          CSharp: public int besselInsertNumber
          VB: Public besselInsertNumber As Integer
        return:
          type: System.Int32
    - id: UCT.UI.BoxDrawer.meshFilter
      commentId: F:UCT.UI.BoxDrawer.meshFilter
      language: CSharp
      name:
        CSharp: meshFilter
        VB: meshFilter
      nameWithType:
        CSharp: BoxDrawer.meshFilter
        VB: BoxDrawer.meshFilter
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.meshFilter
        VB: UCT.UI.BoxDrawer.meshFilter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: meshFilter
        path: ''
        startLine: 16987
      syntax:
        content:
          CSharp: public MeshFilter meshFilter
          VB: Public meshFilter As MeshFilter
        return:
          type: Global.MeshFilter
    - id: UCT.UI.BoxDrawer.meshRenderer
      commentId: F:UCT.UI.BoxDrawer.meshRenderer
      language: CSharp
      name:
        CSharp: meshRenderer
        VB: meshRenderer
      nameWithType:
        CSharp: BoxDrawer.meshRenderer
        VB: BoxDrawer.meshRenderer
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.meshRenderer
        VB: UCT.UI.BoxDrawer.meshRenderer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: meshRenderer
        path: ''
        startLine: 16988
      syntax:
        content:
          CSharp: public MeshRenderer meshRenderer
          VB: Public meshRenderer As MeshRenderer
        return:
          type: Global.MeshRenderer
    - id: UCT.UI.BoxDrawer.lineRenderer
      commentId: F:UCT.UI.BoxDrawer.lineRenderer
      language: CSharp
      name:
        CSharp: lineRenderer
        VB: lineRenderer
      nameWithType:
        CSharp: BoxDrawer.lineRenderer
        VB: BoxDrawer.lineRenderer
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.lineRenderer
        VB: UCT.UI.BoxDrawer.lineRenderer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: lineRenderer
        path: ''
        startLine: 16989
      syntax:
        content:
          CSharp: public LineRenderer lineRenderer
          VB: Public lineRenderer As LineRenderer
        return:
          type: Global.LineRenderer
    - id: UCT.UI.BoxDrawer.edgeCollider2D
      commentId: F:UCT.UI.BoxDrawer.edgeCollider2D
      language: CSharp
      name:
        CSharp: edgeCollider2D
        VB: edgeCollider2D
      nameWithType:
        CSharp: BoxDrawer.edgeCollider2D
        VB: BoxDrawer.edgeCollider2D
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.edgeCollider2D
        VB: UCT.UI.BoxDrawer.edgeCollider2D
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: edgeCollider2D
        path: ''
        startLine: 16990
      syntax:
        content:
          CSharp: public EdgeCollider2D edgeCollider2D
          VB: Public edgeCollider2D As EdgeCollider2D
        return:
          type: Global.EdgeCollider2D
    - id: UCT.UI.BoxDrawer.boxType
      commentId: F:UCT.UI.BoxDrawer.boxType
      language: CSharp
      name:
        CSharp: boxType
        VB: boxType
      nameWithType:
        CSharp: BoxDrawer.boxType
        VB: BoxDrawer.boxType
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.boxType
        VB: UCT.UI.BoxDrawer.boxType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: boxType
        path: ''
        startLine: 16994
      syntax:
        content:
          CSharp: public BoxController.BoxType boxType
          VB: Public boxType As BoxController.BoxType
        return:
          type: UCT.UI.BoxController.BoxType
    - id: UCT.UI.BoxDrawer.pointsSonSum
      commentId: F:UCT.UI.BoxDrawer.pointsSonSum
      language: CSharp
      name:
        CSharp: pointsSonSum
        VB: pointsSonSum
      nameWithType:
        CSharp: BoxDrawer.pointsSonSum
        VB: BoxDrawer.pointsSonSum
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.pointsSonSum
        VB: UCT.UI.BoxDrawer.pointsSonSum
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: pointsSonSum
        path: ''
        startLine: 16997
      syntax:
        content:
          CSharp: public List<Vector2> pointsSonSum
          VB: Public pointsSonSum As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.UI.BoxDrawer.pointsCross
      commentId: F:UCT.UI.BoxDrawer.pointsCross
      language: CSharp
      name:
        CSharp: pointsCross
        VB: pointsCross
      nameWithType:
        CSharp: BoxDrawer.pointsCross
        VB: BoxDrawer.pointsCross
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.pointsCross
        VB: UCT.UI.BoxDrawer.pointsCross
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: pointsCross
        path: ''
        startLine: 17000
      syntax:
        content:
          CSharp: public List<Vector2> pointsCross
          VB: Public pointsCross As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.UI.BoxDrawer.pointsOutCross
      commentId: F:UCT.UI.BoxDrawer.pointsOutCross
      language: CSharp
      name:
        CSharp: pointsOutCross
        VB: pointsOutCross
      nameWithType:
        CSharp: BoxDrawer.pointsOutCross
        VB: BoxDrawer.pointsOutCross
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.pointsOutCross
        VB: UCT.UI.BoxDrawer.pointsOutCross
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: pointsOutCross
        path: ''
        startLine: 17003
      syntax:
        content:
          CSharp: public List<Vector2> pointsOutCross
          VB: Public pointsOutCross As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.UI.BoxDrawer.pointsInCross
      commentId: F:UCT.UI.BoxDrawer.pointsInCross
      language: CSharp
      name:
        CSharp: pointsInCross
        VB: pointsInCross
      nameWithType:
        CSharp: BoxDrawer.pointsInCross
        VB: BoxDrawer.pointsInCross
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.pointsInCross
        VB: UCT.UI.BoxDrawer.pointsInCross
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: pointsInCross
        path: ''
        startLine: 17006
      syntax:
        content:
          CSharp: public List<Vector2> pointsInCross
          VB: Public pointsInCross As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.UI.BoxDrawer.parent
      commentId: F:UCT.UI.BoxDrawer.parent
      language: CSharp
      name:
        CSharp: parent
        VB: parent
      nameWithType:
        CSharp: BoxDrawer.parent
        VB: BoxDrawer.parent
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.parent
        VB: UCT.UI.BoxDrawer.parent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: parent
        path: ''
        startLine: 17008
      syntax:
        content:
          CSharp: public BoxDrawer parent
          VB: Public parent As BoxDrawer
        return:
          type: UCT.UI.BoxDrawer
    - id: UCT.UI.BoxDrawer.sonBoxDrawer
      commentId: F:UCT.UI.BoxDrawer.sonBoxDrawer
      language: CSharp
      name:
        CSharp: sonBoxDrawer
        VB: sonBoxDrawer
      nameWithType:
        CSharp: BoxDrawer.sonBoxDrawer
        VB: BoxDrawer.sonBoxDrawer
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.sonBoxDrawer
        VB: UCT.UI.BoxDrawer.sonBoxDrawer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: sonBoxDrawer
        path: ''
        startLine: 17009
      syntax:
        content:
          CSharp: public List<BoxDrawer> sonBoxDrawer
          VB: Public sonBoxDrawer As List(Of BoxDrawer)
        return:
          type: System.Collections.Generic.List{UCT.UI.BoxDrawer}
    - id: UCT.UI.BoxDrawer.Update
      commentId: M:UCT.UI.BoxDrawer.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: BoxDrawer.Update()
        VB: BoxDrawer.Update()
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.Update()
        VB: UCT.UI.BoxDrawer.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: Update
        path: ''
        startLine: 17030
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update()
      overload: UCT.UI.BoxDrawer.Update*
    - id: UCT.UI.BoxDrawer.AddQuaternions(Quaternion,Quaternion)
      commentId: M:UCT.UI.BoxDrawer.AddQuaternions(Quaternion,Quaternion)
      language: CSharp
      name:
        CSharp: AddQuaternions(Quaternion, Quaternion)
        VB: AddQuaternions(Quaternion, Quaternion)
      nameWithType:
        CSharp: BoxDrawer.AddQuaternions(Quaternion, Quaternion)
        VB: BoxDrawer.AddQuaternions(Quaternion, Quaternion)
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.AddQuaternions(Quaternion, Quaternion)
        VB: UCT.UI.BoxDrawer.AddQuaternions(Quaternion, Quaternion)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: AddQuaternions
        path: ''
        startLine: 17209
      syntax:
        content:
          CSharp: public static Quaternion AddQuaternions(Quaternion quat1, Quaternion quat2)
          VB: Public Shared Function AddQuaternions(quat1 As Quaternion, quat2 As Quaternion) As Quaternion
        parameters:
        - id: quat1
          type: Global.Quaternion
        - id: quat2
          type: Global.Quaternion
        return:
          type: Global.Quaternion
      overload: UCT.UI.BoxDrawer.AddQuaternions*
    - id: UCT.UI.BoxDrawer.GetRealPoints(System.Boolean)
      commentId: M:UCT.UI.BoxDrawer.GetRealPoints(System.Boolean)
      language: CSharp
      name:
        CSharp: GetRealPoints(bool)
        VB: GetRealPoints(Boolean)
      nameWithType:
        CSharp: BoxDrawer.GetRealPoints(bool)
        VB: BoxDrawer.GetRealPoints(Boolean)
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.GetRealPoints(bool)
        VB: UCT.UI.BoxDrawer.GetRealPoints(Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: GetRealPoints
        path: ''
        startLine: 17229
      syntax:
        content:
          CSharp: public List<Vector2> GetRealPoints(bool isLocal = true)
          VB: Public Function GetRealPoints(isLocal As Boolean = True) As List(Of Vector2)
        parameters:
        - id: isLocal
          type: System.Boolean
        return:
          type: System.Collections.Generic.List{Vector2}
      overload: UCT.UI.BoxDrawer.GetRealPoints*
    - id: UCT.UI.BoxDrawer.IsOpenComponentsData(System.Boolean)
      commentId: M:UCT.UI.BoxDrawer.IsOpenComponentsData(System.Boolean)
      language: CSharp
      name:
        CSharp: IsOpenComponentsData(bool)
        VB: IsOpenComponentsData(Boolean)
      nameWithType:
        CSharp: BoxDrawer.IsOpenComponentsData(bool)
        VB: BoxDrawer.IsOpenComponentsData(Boolean)
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.IsOpenComponentsData(bool)
        VB: UCT.UI.BoxDrawer.IsOpenComponentsData(Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: IsOpenComponentsData
        path: ''
        startLine: 17237
      summary: "\n开关组件\n"
      example: []
      syntax:
        content:
          CSharp: public void IsOpenComponentsData(bool isOpen = false)
          VB: Public Sub IsOpenComponentsData(isOpen As Boolean = False)
        parameters:
        - id: isOpen
          type: System.Boolean
      overload: UCT.UI.BoxDrawer.IsOpenComponentsData*
    - id: UCT.UI.BoxDrawer.GetComponents(System.Boolean)
      commentId: M:UCT.UI.BoxDrawer.GetComponents(System.Boolean)
      language: CSharp
      name:
        CSharp: GetComponents(bool)
        VB: GetComponents(Boolean)
      nameWithType:
        CSharp: BoxDrawer.GetComponents(bool)
        VB: BoxDrawer.GetComponents(Boolean)
      qualifiedName:
        CSharp: UCT.UI.BoxDrawer.GetComponents(bool)
        VB: UCT.UI.BoxDrawer.GetComponents(Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: GetComponents
        path: ''
        startLine: 17252
      summary: "\n获取组件\n"
      example: []
      syntax:
        content:
          CSharp: public void GetComponents(bool forceBesselFlash = false)
          VB: Public Sub GetComponents(forceBesselFlash As Boolean = False)
        parameters:
        - id: forceBesselFlash
          type: System.Boolean
      overload: UCT.UI.BoxDrawer.GetComponents*
  - id: UCT.UI.DynamicTmpType
    commentId: T:UCT.UI.DynamicTmpType
    language: CSharp
    name:
      CSharp: DynamicTmpType
      VB: DynamicTmpType
    nameWithType:
      CSharp: DynamicTmpType
      VB: DynamicTmpType
    qualifiedName:
      CSharp: UCT.UI.DynamicTmpType
      VB: UCT.UI.DynamicTmpType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.UI
    source:
      id: DynamicTmpType
      path: ''
      startLine: 17711
    syntax:
      content:
        CSharp: public enum DynamicTmpType
        VB: Public Enum DynamicTmpType
    items:
    - id: UCT.UI.DynamicTmpType.None
      commentId: F:UCT.UI.DynamicTmpType.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: DynamicTmpType.None
        VB: DynamicTmpType.None
      qualifiedName:
        CSharp: UCT.UI.DynamicTmpType.None
        VB: UCT.UI.DynamicTmpType.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: None
        path: ''
        startLine: 17713
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: UCT.UI.DynamicTmpType
    - id: UCT.UI.DynamicTmpType.RandomShake
      commentId: F:UCT.UI.DynamicTmpType.RandomShake
      language: CSharp
      name:
        CSharp: RandomShake
        VB: RandomShake
      nameWithType:
        CSharp: DynamicTmpType.RandomShake
        VB: DynamicTmpType.RandomShake
      qualifiedName:
        CSharp: UCT.UI.DynamicTmpType.RandomShake
        VB: UCT.UI.DynamicTmpType.RandomShake
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: RandomShake
        path: ''
        startLine: 17714
      syntax:
        content:
          CSharp: RandomShake = 1
          VB: RandomShake = 1
        return:
          type: UCT.UI.DynamicTmpType
    - id: UCT.UI.DynamicTmpType.RandomShakeSingle
      commentId: F:UCT.UI.DynamicTmpType.RandomShakeSingle
      language: CSharp
      name:
        CSharp: RandomShakeSingle
        VB: RandomShakeSingle
      nameWithType:
        CSharp: DynamicTmpType.RandomShakeSingle
        VB: DynamicTmpType.RandomShakeSingle
      qualifiedName:
        CSharp: UCT.UI.DynamicTmpType.RandomShakeSingle
        VB: UCT.UI.DynamicTmpType.RandomShakeSingle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: RandomShakeSingle
        path: ''
        startLine: 17715
      syntax:
        content:
          CSharp: RandomShakeSingle = 2
          VB: RandomShakeSingle = 2
        return:
          type: UCT.UI.DynamicTmpType
    - id: UCT.UI.DynamicTmpType.RandomShakeAll
      commentId: F:UCT.UI.DynamicTmpType.RandomShakeAll
      language: CSharp
      name:
        CSharp: RandomShakeAll
        VB: RandomShakeAll
      nameWithType:
        CSharp: DynamicTmpType.RandomShakeAll
        VB: DynamicTmpType.RandomShakeAll
      qualifiedName:
        CSharp: UCT.UI.DynamicTmpType.RandomShakeAll
        VB: UCT.UI.DynamicTmpType.RandomShakeAll
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: RandomShakeAll
        path: ''
        startLine: 17716
      syntax:
        content:
          CSharp: RandomShakeAll = 3
          VB: RandomShakeAll = 3
        return:
          type: UCT.UI.DynamicTmpType
    - id: UCT.UI.DynamicTmpType.CrazyShake
      commentId: F:UCT.UI.DynamicTmpType.CrazyShake
      language: CSharp
      name:
        CSharp: CrazyShake
        VB: CrazyShake
      nameWithType:
        CSharp: DynamicTmpType.CrazyShake
        VB: DynamicTmpType.CrazyShake
      qualifiedName:
        CSharp: UCT.UI.DynamicTmpType.CrazyShake
        VB: UCT.UI.DynamicTmpType.CrazyShake
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: CrazyShake
        path: ''
        startLine: 17717
      syntax:
        content:
          CSharp: CrazyShake = 4
          VB: CrazyShake = 4
        return:
          type: UCT.UI.DynamicTmpType
    - id: UCT.UI.DynamicTmpType.NapShake
      commentId: F:UCT.UI.DynamicTmpType.NapShake
      language: CSharp
      name:
        CSharp: NapShake
        VB: NapShake
      nameWithType:
        CSharp: DynamicTmpType.NapShake
        VB: DynamicTmpType.NapShake
      qualifiedName:
        CSharp: UCT.UI.DynamicTmpType.NapShake
        VB: UCT.UI.DynamicTmpType.NapShake
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: NapShake
        path: ''
        startLine: 17718
      syntax:
        content:
          CSharp: NapShake = 5
          VB: NapShake = 5
        return:
          type: UCT.UI.DynamicTmpType
    - id: UCT.UI.DynamicTmpType.NapFloat
      commentId: F:UCT.UI.DynamicTmpType.NapFloat
      language: CSharp
      name:
        CSharp: NapFloat
        VB: NapFloat
      nameWithType:
        CSharp: DynamicTmpType.NapFloat
        VB: DynamicTmpType.NapFloat
      qualifiedName:
        CSharp: UCT.UI.DynamicTmpType.NapFloat
        VB: UCT.UI.DynamicTmpType.NapFloat
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: NapFloat
        path: ''
        startLine: 17719
      syntax:
        content:
          CSharp: NapFloat = 6
          VB: NapFloat = 6
        return:
          type: UCT.UI.DynamicTmpType
    - id: UCT.UI.DynamicTmpType.Wave
      commentId: F:UCT.UI.DynamicTmpType.Wave
      language: CSharp
      name:
        CSharp: Wave
        VB: Wave
      nameWithType:
        CSharp: DynamicTmpType.Wave
        VB: DynamicTmpType.Wave
      qualifiedName:
        CSharp: UCT.UI.DynamicTmpType.Wave
        VB: UCT.UI.DynamicTmpType.Wave
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: Wave
        path: ''
        startLine: 17720
      syntax:
        content:
          CSharp: Wave = 7
          VB: Wave = 7
        return:
          type: UCT.UI.DynamicTmpType
    - id: UCT.UI.DynamicTmpType.Explode
      commentId: F:UCT.UI.DynamicTmpType.Explode
      language: CSharp
      name:
        CSharp: Explode
        VB: Explode
      nameWithType:
        CSharp: DynamicTmpType.Explode
        VB: DynamicTmpType.Explode
      qualifiedName:
        CSharp: UCT.UI.DynamicTmpType.Explode
        VB: UCT.UI.DynamicTmpType.Explode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: Explode
        path: ''
        startLine: 17721
      syntax:
        content:
          CSharp: Explode = 8
          VB: Explode = 8
        return:
          type: UCT.UI.DynamicTmpType
    - id: UCT.UI.DynamicTmpType.Bounce
      commentId: F:UCT.UI.DynamicTmpType.Bounce
      language: CSharp
      name:
        CSharp: Bounce
        VB: Bounce
      nameWithType:
        CSharp: DynamicTmpType.Bounce
        VB: DynamicTmpType.Bounce
      qualifiedName:
        CSharp: UCT.UI.DynamicTmpType.Bounce
        VB: UCT.UI.DynamicTmpType.Bounce
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: Bounce
        path: ''
        startLine: 17722
      syntax:
        content:
          CSharp: Bounce = 9
          VB: Bounce = 9
        return:
          type: UCT.UI.DynamicTmpType
  - id: UCT.UI.DynamicTmp
    commentId: T:UCT.UI.DynamicTmp
    language: CSharp
    name:
      CSharp: DynamicTmp
      VB: DynamicTmp
    nameWithType:
      CSharp: DynamicTmp
      VB: DynamicTmp
    qualifiedName:
      CSharp: UCT.UI.DynamicTmp
      VB: UCT.UI.DynamicTmp
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.UI
    source:
      id: DynamicTmp
      path: ''
      startLine: 17728
    summary: "\nApplies various dynamic effects to TextMeshPro text components.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DynamicTmp : MonoBehaviour'
        VB: Public Class DynamicTmp Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.UI.DynamicTmp.effectType
      commentId: F:UCT.UI.DynamicTmp.effectType
      language: CSharp
      name:
        CSharp: effectType
        VB: effectType
      nameWithType:
        CSharp: DynamicTmp.effectType
        VB: DynamicTmp.effectType
      qualifiedName:
        CSharp: UCT.UI.DynamicTmp.effectType
        VB: UCT.UI.DynamicTmp.effectType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: effectType
        path: ''
        startLine: 17734
      syntax:
        content:
          CSharp: public DynamicTmpType effectType
          VB: Public effectType As DynamicTmpType
        return:
          type: UCT.UI.DynamicTmpType
  - id: UCT.UI.BoxController
    commentId: T:UCT.UI.BoxController
    language: CSharp
    name:
      CSharp: BoxController
      VB: BoxController
    nameWithType:
      CSharp: BoxController
      VB: BoxController
    qualifiedName:
      CSharp: UCT.UI.BoxController
      VB: UCT.UI.BoxController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.UI
    source:
      id: BoxController
      path: ''
      startLine: 17986
    summary: "\n战斗框总控\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BoxController : ObjectPool'
        VB: Public Class BoxController Inherits ObjectPool
    inheritance:
    - System.Object
    items:
    - id: UCT.UI.BoxController.width
      commentId: F:UCT.UI.BoxController.width
      language: CSharp
      name:
        CSharp: width
        VB: width
      nameWithType:
        CSharp: BoxController.width
        VB: BoxController.width
      qualifiedName:
        CSharp: UCT.UI.BoxController.width
        VB: UCT.UI.BoxController.width
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: width
        path: ''
        startLine: 17996
      syntax:
        content:
          CSharp: public float width
          VB: Public width As Single
        return:
          type: System.Single
    - id: UCT.UI.BoxController.startSummonName
      commentId: F:UCT.UI.BoxController.startSummonName
      language: CSharp
      name:
        CSharp: startSummonName
        VB: startSummonName
      nameWithType:
        CSharp: BoxController.startSummonName
        VB: BoxController.startSummonName
      qualifiedName:
        CSharp: UCT.UI.BoxController.startSummonName
        VB: UCT.UI.BoxController.startSummonName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: startSummonName
        path: ''
        startLine: 17999
      syntax:
        content:
          CSharp: public string startSummonName
          VB: Public startSummonName As String
        return:
          type: System.String
    - id: UCT.UI.BoxController.startSummonPos
      commentId: F:UCT.UI.BoxController.startSummonPos
      language: CSharp
      name:
        CSharp: startSummonPos
        VB: startSummonPos
      nameWithType:
        CSharp: BoxController.startSummonPos
        VB: BoxController.startSummonPos
      qualifiedName:
        CSharp: UCT.UI.BoxController.startSummonPos
        VB: UCT.UI.BoxController.startSummonPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: startSummonPos
        path: ''
        startLine: 18001
      syntax:
        content:
          CSharp: public Vector3 startSummonPos
          VB: Public startSummonPos As Vector3
        return:
          type: Global.Vector3
    - id: UCT.UI.BoxController.boxes
      commentId: F:UCT.UI.BoxController.boxes
      language: CSharp
      name:
        CSharp: boxes
        VB: boxes
      nameWithType:
        CSharp: BoxController.boxes
        VB: BoxController.boxes
      qualifiedName:
        CSharp: UCT.UI.BoxController.boxes
        VB: UCT.UI.BoxController.boxes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: boxes
        path: ''
        startLine: 18004
      syntax:
        content:
          CSharp: public List<BoxDrawer> boxes
          VB: Public boxes As List(Of BoxDrawer)
        return:
          type: System.Collections.Generic.List{UCT.UI.BoxDrawer}
    - id: UCT.UI.BoxController.pointsCrossSave
      commentId: F:UCT.UI.BoxController.pointsCrossSave
      language: CSharp
      name:
        CSharp: pointsCrossSave
        VB: pointsCrossSave
      nameWithType:
        CSharp: BoxController.pointsCrossSave
        VB: BoxController.pointsCrossSave
      qualifiedName:
        CSharp: UCT.UI.BoxController.pointsCrossSave
        VB: UCT.UI.BoxController.pointsCrossSave
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: pointsCrossSave
        path: ''
        startLine: 18006
      syntax:
        content:
          CSharp: public List<Vector2> pointsCrossSave
          VB: Public pointsCrossSave As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.UI.BoxController.pointsOutCrossSave
      commentId: F:UCT.UI.BoxController.pointsOutCrossSave
      language: CSharp
      name:
        CSharp: pointsOutCrossSave
        VB: pointsOutCrossSave
      nameWithType:
        CSharp: BoxController.pointsOutCrossSave
        VB: BoxController.pointsOutCrossSave
      qualifiedName:
        CSharp: UCT.UI.BoxController.pointsOutCrossSave
        VB: UCT.UI.BoxController.pointsOutCrossSave
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: pointsOutCrossSave
        path: ''
        startLine: 18006
      syntax:
        content:
          CSharp: public List<Vector2> pointsOutCrossSave
          VB: Public pointsOutCrossSave As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.UI.BoxController.pointsInCrossSave
      commentId: F:UCT.UI.BoxController.pointsInCrossSave
      language: CSharp
      name:
        CSharp: pointsInCrossSave
        VB: pointsInCrossSave
      nameWithType:
        CSharp: BoxController.pointsInCrossSave
        VB: BoxController.pointsInCrossSave
      qualifiedName:
        CSharp: UCT.UI.BoxController.pointsInCrossSave
        VB: UCT.UI.BoxController.pointsInCrossSave
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: pointsInCrossSave
        path: ''
        startLine: 18006
      syntax:
        content:
          CSharp: public List<Vector2> pointsInCrossSave
          VB: Public pointsInCrossSave As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.UI.BoxController.Instance
      commentId: P:UCT.UI.BoxController.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: BoxController.Instance
        VB: BoxController.Instance
      qualifiedName:
        CSharp: UCT.UI.BoxController.Instance
        VB: UCT.UI.BoxController.Instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: Instance
        path: ''
        startLine: 18010
      syntax:
        content:
          CSharp: public static BoxController Instance { get; }
          VB: Public Shared Property Instance As BoxController
        parameters: []
        return:
          type: UCT.UI.BoxController
      overload: UCT.UI.BoxController.Instance*
  - id: UCT.UI.BoxController.BoxType
    commentId: T:UCT.UI.BoxController.BoxType
    language: CSharp
    name:
      CSharp: BoxController.BoxType
      VB: BoxController.BoxType
    nameWithType:
      CSharp: BoxController.BoxType
      VB: BoxController.BoxType
    qualifiedName:
      CSharp: UCT.UI.BoxController.BoxType
      VB: UCT.UI.BoxController.BoxType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.UI
    source:
      id: BoxType
      path: ''
      startLine: 17988
    syntax:
      content:
        CSharp: public enum BoxController.BoxType
        VB: Public Enum BoxController.BoxType
    items:
    - id: UCT.UI.BoxController.BoxType.None
      commentId: F:UCT.UI.BoxController.BoxType.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: BoxController.BoxType.None
        VB: BoxController.BoxType.None
      qualifiedName:
        CSharp: UCT.UI.BoxController.BoxType.None
        VB: UCT.UI.BoxController.BoxType.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: None
        path: ''
        startLine: 17990
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: UCT.UI.BoxController.BoxType
    - id: UCT.UI.BoxController.BoxType.Add
      commentId: F:UCT.UI.BoxController.BoxType.Add
      language: CSharp
      name:
        CSharp: Add
        VB: Add
      nameWithType:
        CSharp: BoxController.BoxType.Add
        VB: BoxController.BoxType.Add
      qualifiedName:
        CSharp: UCT.UI.BoxController.BoxType.Add
        VB: UCT.UI.BoxController.BoxType.Add
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: Add
        path: ''
        startLine: 17991
      syntax:
        content:
          CSharp: Add = 1
          VB: Add = 1
        return:
          type: UCT.UI.BoxController.BoxType
    - id: UCT.UI.BoxController.BoxType.Sub
      commentId: F:UCT.UI.BoxController.BoxType.Sub
      language: CSharp
      name:
        CSharp: Sub
        VB: Sub
      nameWithType:
        CSharp: BoxController.BoxType.Sub
        VB: BoxController.BoxType.Sub
      qualifiedName:
        CSharp: UCT.UI.BoxController.BoxType.Sub
        VB: UCT.UI.BoxController.BoxType.Sub
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: Sub
        path: ''
        startLine: 17992
      syntax:
        content:
          CSharp: Sub = 2
          VB: Sub = 2
        return:
          type: UCT.UI.BoxController.BoxType
  - id: UCT.UI.TextChanger
    commentId: T:UCT.UI.TextChanger
    language: CSharp
    name:
      CSharp: TextChanger
      VB: TextChanger
    nameWithType:
      CSharp: TextChanger
      VB: TextChanger
    qualifiedName:
      CSharp: UCT.UI.TextChanger
      VB: UCT.UI.TextChanger
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.UI
    source:
      id: TextChanger
      path: ''
      startLine: 18177
    summary: "\n用于字体匹配及双语字体数据修正\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TextChanger : MonoBehaviour'
        VB: Public Class TextChanger Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.UI.TextChanger.isUseWidth
      commentId: F:UCT.UI.TextChanger.isUseWidth
      language: CSharp
      name:
        CSharp: isUseWidth
        VB: isUseWidth
      nameWithType:
        CSharp: TextChanger.isUseWidth
        VB: TextChanger.isUseWidth
      qualifiedName:
        CSharp: UCT.UI.TextChanger.isUseWidth
        VB: UCT.UI.TextChanger.isUseWidth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: isUseWidth
        path: ''
        startLine: 18179
      syntax:
        content:
          CSharp: public bool isUseWidth
          VB: Public isUseWidth As Boolean
        return:
          type: System.Boolean
    - id: UCT.UI.TextChanger.options
      commentId: F:UCT.UI.TextChanger.options
      language: CSharp
      name:
        CSharp: options
        VB: options
      nameWithType:
        CSharp: TextChanger.options
        VB: TextChanger.options
      qualifiedName:
        CSharp: UCT.UI.TextChanger.options
        VB: UCT.UI.TextChanger.options
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: options
        path: ''
        startLine: 18182
      syntax:
        content:
          CSharp: public Vector4[] options
          VB: Public options As Vector4()
        return:
          type: Global.Vector4[]
    - id: UCT.UI.TextChanger.fontSizes
      commentId: F:UCT.UI.TextChanger.fontSizes
      language: CSharp
      name:
        CSharp: fontSizes
        VB: fontSizes
      nameWithType:
        CSharp: TextChanger.fontSizes
        VB: TextChanger.fontSizes
      qualifiedName:
        CSharp: UCT.UI.TextChanger.fontSizes
        VB: UCT.UI.TextChanger.fontSizes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: fontSizes
        path: ''
        startLine: 18184
      syntax:
        content:
          CSharp: public float[] fontSizes
          VB: Public fontSizes As Single()
        return:
          type: System.Single[]
    - id: UCT.UI.TextChanger.positions
      commentId: F:UCT.UI.TextChanger.positions
      language: CSharp
      name:
        CSharp: positions
        VB: positions
      nameWithType:
        CSharp: TextChanger.positions
        VB: TextChanger.positions
      qualifiedName:
        CSharp: UCT.UI.TextChanger.positions
        VB: UCT.UI.TextChanger.positions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: positions
        path: ''
        startLine: 18186
      syntax:
        content:
          CSharp: public Vector3[] positions
          VB: Public positions As Vector3()
        return:
          type: Global.Vector3[]
    - id: UCT.UI.TextChanger.Set
      commentId: M:UCT.UI.TextChanger.Set
      language: CSharp
      name:
        CSharp: Set()
        VB: Set()
      nameWithType:
        CSharp: TextChanger.Set()
        VB: TextChanger.Set()
      qualifiedName:
        CSharp: UCT.UI.TextChanger.Set()
        VB: UCT.UI.TextChanger.Set()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: Set
        path: ''
        startLine: 18195
      syntax:
        content:
          CSharp: public void Set()
          VB: Public Sub [Set]()
      overload: UCT.UI.TextChanger.Set*
    - id: UCT.UI.TextChanger.Change
      commentId: M:UCT.UI.TextChanger.Change
      language: CSharp
      name:
        CSharp: Change()
        VB: Change()
      nameWithType:
        CSharp: TextChanger.Change()
        VB: TextChanger.Change()
      qualifiedName:
        CSharp: UCT.UI.TextChanger.Change()
        VB: UCT.UI.TextChanger.Change()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.UI
      source:
        id: Change
        path: ''
        startLine: 18201
      syntax:
        content:
          CSharp: public void Change()
          VB: Public Sub Change()
      overload: UCT.UI.TextChanger.Change*
- id: UCT.Control
  commentId: N:UCT.Control
  language: CSharp
  name:
    CSharp: UCT.Control
    VB: UCT.Control
  nameWithType:
    CSharp: UCT.Control
    VB: UCT.Control
  qualifiedName:
    CSharp: UCT.Control
    VB: UCT.Control
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.Control.ItemData
    commentId: T:UCT.Control.ItemData
    language: CSharp
    name:
      CSharp: ItemData
      VB: ItemData
    nameWithType:
      CSharp: ItemData
      VB: ItemData
    qualifiedName:
      CSharp: UCT.Control.ItemData
      VB: UCT.Control.ItemData
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: ItemData
      path: ''
      startLine: 18685
    summary: "\n表示物品数据结构\n"
    example: []
    syntax:
      content:
        CSharp: public readonly struct ItemData
        VB: Public Structure ItemData
    items:
    - id: UCT.Control.ItemData.DataName
      commentId: F:UCT.Control.ItemData.DataName
      language: CSharp
      name:
        CSharp: DataName
        VB: DataName
      nameWithType:
        CSharp: ItemData.DataName
        VB: ItemData.DataName
      qualifiedName:
        CSharp: UCT.Control.ItemData.DataName
        VB: UCT.Control.ItemData.DataName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: DataName
        path: ''
        startLine: 18690
      summary: "\n物品名称\n"
      example: []
      syntax:
        content:
          CSharp: public readonly string DataName
          VB: Public ReadOnly DataName As String
        return:
          type: System.String
    - id: UCT.Control.ItemData.Value
      commentId: F:UCT.Control.ItemData.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: ItemData.Value
        VB: ItemData.Value
      qualifiedName:
        CSharp: UCT.Control.ItemData.Value
        VB: UCT.Control.ItemData.Value
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Value
        path: ''
        startLine: 18695
      summary: "\n物品数值\n"
      example: []
      syntax:
        content:
          CSharp: public readonly int Value
          VB: Public ReadOnly Value As Integer
        return:
          type: System.Int32
    - id: UCT.Control.ItemData.#ctor(System.String,System.Int32)
      commentId: M:UCT.Control.ItemData.#ctor(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: ItemData(string, int)
        VB: New(String, Integer)
      nameWithType:
        CSharp: ItemData.ItemData(string, int)
        VB: ItemData.New(String, Integer)
      qualifiedName:
        CSharp: UCT.Control.ItemData.ItemData(string, int)
        VB: UCT.Control.ItemData.New(String, Integer)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: .ctor
        path: ''
        startLine: 18702
      summary: "\n初始化 <xref href=\"UCT.Control.ItemData\" data-throw-if-not-resolved=\"false\"></xref> 结构的新实例\n"
      example: []
      syntax:
        content:
          CSharp: public ItemData(string dataName, int value)
          VB: Public Sub New(dataName As String, value As Integer)
        parameters:
        - id: dataName
          type: System.String
          description: 物品名称
        - id: value
          type: System.Int32
          description: 物品数值
      overload: UCT.Control.ItemData.#ctor*
      references:
        UCT.Control.ItemData: 
    - id: UCT.Control.ItemData.Equals(UCT.Control.ItemData)
      commentId: M:UCT.Control.ItemData.Equals(UCT.Control.ItemData)
      language: CSharp
      name:
        CSharp: Equals(ItemData)
        VB: Equals(ItemData)
      nameWithType:
        CSharp: ItemData.Equals(ItemData)
        VB: ItemData.Equals(ItemData)
      qualifiedName:
        CSharp: UCT.Control.ItemData.Equals(UCT.Control.ItemData)
        VB: UCT.Control.ItemData.Equals(UCT.Control.ItemData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Equals
        path: ''
        startLine: 18713
      summary: "\n判断当前实例是否与指定的 <xref href=\"UCT.Control.ItemData\" data-throw-if-not-resolved=\"false\"></xref> 实例相等\n"
      example: []
      syntax:
        content:
          CSharp: public bool Equals(ItemData other)
          VB: Public Function Equals(other As ItemData) As Boolean
        parameters:
        - id: other
          type: UCT.Control.ItemData
          description: 要比较的 ItemData 实例
        return:
          type: System.Boolean
          description: 如果相等返回 true，否则返回 false
      overload: UCT.Control.ItemData.Equals*
      references:
        UCT.Control.ItemData: 
    - id: UCT.Control.ItemData.Equals(System.Object)
      commentId: M:UCT.Control.ItemData.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(object)
        VB: Equals(Object)
      nameWithType:
        CSharp: ItemData.Equals(object)
        VB: ItemData.Equals(Object)
      qualifiedName:
        CSharp: UCT.Control.ItemData.Equals(object)
        VB: UCT.Control.ItemData.Equals(Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Equals
        path: ''
        startLine: 18723
      summary: "\n判断当前实例是否与指定对象相等\n"
      example: []
      syntax:
        content:
          CSharp: public override bool Equals(object obj)
          VB: Public Overrides Function Equals(obj As Object) As Boolean
        parameters:
        - id: obj
          type: System.Object
          description: 要比较的对象
        return:
          type: System.Boolean
          description: 如果相等返回 true，否则返回 false
      overload: UCT.Control.ItemData.Equals*
      overridden: System.ValueType.Equals(System.Object)
    - id: UCT.Control.ItemData.GetHashCode
      commentId: M:UCT.Control.ItemData.GetHashCode
      language: CSharp
      name:
        CSharp: GetHashCode()
        VB: GetHashCode()
      nameWithType:
        CSharp: ItemData.GetHashCode()
        VB: ItemData.GetHashCode()
      qualifiedName:
        CSharp: UCT.Control.ItemData.GetHashCode()
        VB: UCT.Control.ItemData.GetHashCode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: GetHashCode
        path: ''
        startLine: 18732
      summary: "\n返回当前实例的哈希代码\n"
      example: []
      syntax:
        content:
          CSharp: public override int GetHashCode()
          VB: Public Overrides Function GetHashCode() As Integer
        return:
          type: System.Int32
          description: 哈希代码
      overload: UCT.Control.ItemData.GetHashCode*
      overridden: System.ValueType.GetHashCode
  - id: UCT.Control.GameItem
    commentId: T:UCT.Control.GameItem
    language: CSharp
    name:
      CSharp: GameItem
      VB: GameItem
    nameWithType:
      CSharp: GameItem
      VB: GameItem
    qualifiedName:
      CSharp: UCT.Control.GameItem
      VB: UCT.Control.GameItem
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: GameItem
      path: ''
      startLine: 18741
    summary: "\n物品的抽象基类\n"
    example: []
    syntax:
      content:
        CSharp: public abstract class GameItem
        VB: Public MustInherit Class GameItem
    inheritance:
    - System.Object
    items:
    - id: UCT.Control.GameItem.OnUseAction
      commentId: F:UCT.Control.GameItem.OnUseAction
      language: CSharp
      name:
        CSharp: OnUseAction
        VB: OnUseAction
      nameWithType:
        CSharp: GameItem.OnUseAction
        VB: GameItem.OnUseAction
      qualifiedName:
        CSharp: UCT.Control.GameItem.OnUseAction
        VB: UCT.Control.GameItem.OnUseAction
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnUseAction
        path: ''
        startLine: 18745
      syntax:
        content:
          CSharp: protected Action<int> OnUseAction
          VB: Protected OnUseAction As Action(Of Integer)
        return:
          type: System.Action{System.Int32}
    - id: UCT.Control.GameItem.#ctor(UCT.Control.ItemData,System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32})
      commentId: M:UCT.Control.GameItem.#ctor(UCT.Control.ItemData,System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: GameItem(ItemData, Action<int>, Action<int>, Action<int>)
        VB: New(ItemData, Action(Of Integer), Action(Of Integer), Action(Of Integer))
      nameWithType:
        CSharp: GameItem.GameItem(ItemData, Action<int>, Action<int>, Action<int>)
        VB: GameItem.New(ItemData, Action(Of Integer), Action(Of Integer), Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.GameItem.GameItem(UCT.Control.ItemData, System.Action<int>, System.Action<int>, System.Action<int>)
        VB: UCT.Control.GameItem.New(UCT.Control.ItemData, System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: .ctor
        path: ''
        startLine: 18754
      summary: "\n初始化 <xref href=\"UCT.Control.GameItem\" data-throw-if-not-resolved=\"false\"></xref> 类的新实例\n"
      example: []
      syntax:
        content:
          CSharp: protected GameItem(ItemData data, Action<int> onUse, Action<int> onCheck, Action<int> onDrop)
          VB: Protected Sub New(data As ItemData, onUse As Action(Of Integer), onCheck As Action(Of Integer), onDrop As Action(Of Integer))
        parameters:
        - id: data
          type: UCT.Control.ItemData
          description: 物品数据
        - id: onUse
          type: System.Action{System.Int32}
          description: 使用物品事件
        - id: onCheck
          type: System.Action{System.Int32}
          description: 查看物品事件
        - id: onDrop
          type: System.Action{System.Int32}
          description: 丢弃物品事件
      overload: UCT.Control.GameItem.#ctor*
      references:
        UCT.Control.GameItem: 
    - id: UCT.Control.GameItem.Data
      commentId: P:UCT.Control.GameItem.Data
      language: CSharp
      name:
        CSharp: Data
        VB: Data
      nameWithType:
        CSharp: GameItem.Data
        VB: GameItem.Data
      qualifiedName:
        CSharp: UCT.Control.GameItem.Data
        VB: UCT.Control.GameItem.Data
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Data
        path: ''
        startLine: 18767
      summary: "\n获取物品数据\n"
      example: []
      syntax:
        content:
          CSharp: public ItemData Data { get; }
          VB: Public ReadOnly Property Data As ItemData
        parameters: []
        return:
          type: UCT.Control.ItemData
      overload: UCT.Control.GameItem.Data*
    - id: UCT.Control.GameItem.OnUse(System.Int32)
      commentId: M:UCT.Control.GameItem.OnUse(System.Int32)
      language: CSharp
      name:
        CSharp: OnUse(int)
        VB: OnUse(Integer)
      nameWithType:
        CSharp: GameItem.OnUse(int)
        VB: GameItem.OnUse(Integer)
      qualifiedName:
        CSharp: UCT.Control.GameItem.OnUse(int)
        VB: UCT.Control.GameItem.OnUse(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnUse
        path: ''
        startLine: 18778
      summary: "\n使用了物品\n"
      example: []
      syntax:
        content:
          CSharp: public void OnUse(int index)
          VB: Public Sub OnUse(index As Integer)
        parameters:
        - id: index
          type: System.Int32
          description: 物品索引
      overload: UCT.Control.GameItem.OnUse*
    - id: UCT.Control.GameItem.OnCheck(System.Int32)
      commentId: M:UCT.Control.GameItem.OnCheck(System.Int32)
      language: CSharp
      name:
        CSharp: OnCheck(int)
        VB: OnCheck(Integer)
      nameWithType:
        CSharp: GameItem.OnCheck(int)
        VB: GameItem.OnCheck(Integer)
      qualifiedName:
        CSharp: UCT.Control.GameItem.OnCheck(int)
        VB: UCT.Control.GameItem.OnCheck(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnCheck
        path: ''
        startLine: 18787
      summary: "\n查看了物品\n"
      example: []
      syntax:
        content:
          CSharp: public void OnCheck(int index)
          VB: Public Sub OnCheck(index As Integer)
        parameters:
        - id: index
          type: System.Int32
          description: 物品索引
      overload: UCT.Control.GameItem.OnCheck*
    - id: UCT.Control.GameItem.OnDrop(System.Int32)
      commentId: M:UCT.Control.GameItem.OnDrop(System.Int32)
      language: CSharp
      name:
        CSharp: OnDrop(int)
        VB: OnDrop(Integer)
      nameWithType:
        CSharp: GameItem.OnDrop(int)
        VB: GameItem.OnDrop(Integer)
      qualifiedName:
        CSharp: UCT.Control.GameItem.OnDrop(int)
        VB: UCT.Control.GameItem.OnDrop(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnDrop
        path: ''
        startLine: 18796
      summary: "\n丢弃了物品\n"
      example: []
      syntax:
        content:
          CSharp: public void OnDrop(int index)
          VB: Public Sub OnDrop(index As Integer)
        parameters:
        - id: index
          type: System.Int32
          description: 物品索引
      overload: UCT.Control.GameItem.OnDrop*
  - id: UCT.Control.FoodItem
    commentId: T:UCT.Control.FoodItem
    language: CSharp
    name:
      CSharp: FoodItem
      VB: FoodItem
    nameWithType:
      CSharp: FoodItem
      VB: FoodItem
    qualifiedName:
      CSharp: UCT.Control.FoodItem
      VB: UCT.Control.FoodItem
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: FoodItem
      path: ''
      startLine: 18805
    summary: "\n食物类物品\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FoodItem : GameItem'
        VB: Public Class FoodItem Inherits GameItem
    inheritance:
    - System.Object
    - UCT.Control.GameItem
    inheritedMembers:
    - UCT.Control.GameItem.OnUseAction
    - UCT.Control.GameItem.Data
    - UCT.Control.GameItem.OnUse(System.Int32)
    - UCT.Control.GameItem.OnCheck(System.Int32)
    - UCT.Control.GameItem.OnDrop(System.Int32)
    items:
    - id: UCT.Control.FoodItem.#ctor(UCT.Control.ItemData,System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32})
      commentId: M:UCT.Control.FoodItem.#ctor(UCT.Control.ItemData,System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: FoodItem(ItemData, Action<int>, Action<int>, Action<int>)
        VB: New(ItemData, Action(Of Integer), Action(Of Integer), Action(Of Integer))
      nameWithType:
        CSharp: FoodItem.FoodItem(ItemData, Action<int>, Action<int>, Action<int>)
        VB: FoodItem.New(ItemData, Action(Of Integer), Action(Of Integer), Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.FoodItem.FoodItem(UCT.Control.ItemData, System.Action<int>, System.Action<int>, System.Action<int>)
        VB: UCT.Control.FoodItem.New(UCT.Control.ItemData, System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: .ctor
        path: ''
        startLine: 18814
      summary: "\n初始化 <xref href=\"UCT.Control.FoodItem\" data-throw-if-not-resolved=\"false\"></xref> 类的新实例\n"
      example: []
      syntax:
        content:
          CSharp: public FoodItem(ItemData data, Action<int> onUse, Action<int> onCheck, Action<int> onDrop)
          VB: Public Sub New(data As ItemData, onUse As Action(Of Integer), onCheck As Action(Of Integer), onDrop As Action(Of Integer))
        parameters:
        - id: data
          type: UCT.Control.ItemData
          description: 物品数据
        - id: onUse
          type: System.Action{System.Int32}
          description: 使用物品事件
        - id: onCheck
          type: System.Action{System.Int32}
          description: 查看物品事件
        - id: onDrop
          type: System.Action{System.Int32}
          description: 丢弃物品事件
      overload: UCT.Control.FoodItem.#ctor*
      references:
        UCT.Control.FoodItem: 
  - id: UCT.Control.ParentFoodItem
    commentId: T:UCT.Control.ParentFoodItem
    language: CSharp
    name:
      CSharp: ParentFoodItem
      VB: ParentFoodItem
    nameWithType:
      CSharp: ParentFoodItem
      VB: ParentFoodItem
    qualifiedName:
      CSharp: UCT.Control.ParentFoodItem
      VB: UCT.Control.ParentFoodItem
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: ParentFoodItem
      path: ''
      startLine: 18840
    summary: "\n父级食物类物品，使用后会生成子物品\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ParentFoodItem : GameItem'
        VB: Public Class ParentFoodItem Inherits GameItem
    inheritance:
    - System.Object
    - UCT.Control.GameItem
    inheritedMembers:
    - UCT.Control.GameItem.OnUseAction
    - UCT.Control.GameItem.Data
    - UCT.Control.GameItem.OnUse(System.Int32)
    - UCT.Control.GameItem.OnCheck(System.Int32)
    - UCT.Control.GameItem.OnDrop(System.Int32)
    items:
    - id: UCT.Control.ParentFoodItem.#ctor(UCT.Control.ItemData,System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},UCT.Control.GameItem)
      commentId: M:UCT.Control.ParentFoodItem.#ctor(UCT.Control.ItemData,System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},UCT.Control.GameItem)
      language: CSharp
      name:
        CSharp: ParentFoodItem(ItemData, Action<int>, Action<int>, Action<int>, GameItem)
        VB: New(ItemData, Action(Of Integer), Action(Of Integer), Action(Of Integer), GameItem)
      nameWithType:
        CSharp: ParentFoodItem.ParentFoodItem(ItemData, Action<int>, Action<int>, Action<int>, GameItem)
        VB: ParentFoodItem.New(ItemData, Action(Of Integer), Action(Of Integer), Action(Of Integer), GameItem)
      qualifiedName:
        CSharp: UCT.Control.ParentFoodItem.ParentFoodItem(UCT.Control.ItemData, System.Action<int>, System.Action<int>, System.Action<int>, UCT.Control.GameItem)
        VB: UCT.Control.ParentFoodItem.New(UCT.Control.ItemData, System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), UCT.Control.GameItem)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: .ctor
        path: ''
        startLine: 18852
      summary: "\n初始化 <xref href=\"UCT.Control.ParentFoodItem\" data-throw-if-not-resolved=\"false\"></xref> 类的新实例\n"
      example: []
      syntax:
        content:
          CSharp: public ParentFoodItem(ItemData data, Action<int> onUse, Action<int> onCheck, Action<int> onDrop, GameItem child)
          VB: Public Sub New(data As ItemData, onUse As Action(Of Integer), onCheck As Action(Of Integer), onDrop As Action(Of Integer), child As GameItem)
        parameters:
        - id: data
          type: UCT.Control.ItemData
          description: 物品数据
        - id: onUse
          type: System.Action{System.Int32}
          description: 使用物品事件
        - id: onCheck
          type: System.Action{System.Int32}
          description: 查看物品事件
        - id: onDrop
          type: System.Action{System.Int32}
          description: 丢弃物品事件
        - id: child
          type: UCT.Control.GameItem
          description: 子物品实例
      overload: UCT.Control.ParentFoodItem.#ctor*
      references:
        UCT.Control.ParentFoodItem: 
  - id: UCT.Control.GameItemBuilder
    commentId: T:UCT.Control.GameItemBuilder
    language: CSharp
    name:
      CSharp: GameItemBuilder
      VB: GameItemBuilder
    nameWithType:
      CSharp: GameItemBuilder
      VB: GameItemBuilder
    qualifiedName:
      CSharp: UCT.Control.GameItemBuilder
      VB: UCT.Control.GameItemBuilder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: GameItemBuilder
      path: ''
      startLine: 18879
    summary: "\nGameItem 生成器（具体类型为 GameItemBuilder&lt;GameItemBuilder>）\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GameItemBuilder : GameItemBuilder<GameItemBuilder>'
        VB: Public Class GameItemBuilder Inherits GameItemBuilder(Of GameItemBuilder)
    inheritance:
    - System.Object
    - UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}
    inheritedMembers:
    - UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Data
    - UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnUse
    - UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnCheck
    - UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnDrop
    - UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetData(System.String,System.Int32)
    - UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnUse(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnCheck(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnDrop(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Build
    items: []
  - id: UCT.Control.FoodItemBuilder
    commentId: T:UCT.Control.FoodItemBuilder
    language: CSharp
    name:
      CSharp: FoodItemBuilder
      VB: FoodItemBuilder
    nameWithType:
      CSharp: FoodItemBuilder
      VB: FoodItemBuilder
    qualifiedName:
      CSharp: UCT.Control.FoodItemBuilder
      VB: UCT.Control.FoodItemBuilder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: FoodItemBuilder
      path: ''
      startLine: 18884
    summary: "\n用于构建食物物品实例的生成器\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FoodItemBuilder : GameItemBuilder<FoodItemBuilder>'
        VB: Public Class FoodItemBuilder Inherits GameItemBuilder(Of FoodItemBuilder)
    inheritance:
    - System.Object
    - UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}
    inheritedMembers:
    - UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Data
    - UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnUse
    - UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnCheck
    - UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnDrop
    - UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetData(System.String,System.Int32)
    - UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnUse(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
    items:
    - id: UCT.Control.FoodItemBuilder.Build
      commentId: M:UCT.Control.FoodItemBuilder.Build
      language: CSharp
      name:
        CSharp: Build()
        VB: Build()
      nameWithType:
        CSharp: FoodItemBuilder.Build()
        VB: FoodItemBuilder.Build()
      qualifiedName:
        CSharp: UCT.Control.FoodItemBuilder.Build()
        VB: UCT.Control.FoodItemBuilder.Build()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Build
        path: ''
        startLine: 18890
      summary: "\n构建 FoodItem 实例\n"
      example: []
      syntax:
        content:
          CSharp: public override GameItem Build()
          VB: Public Overrides Function Build() As GameItem
        return:
          type: UCT.Control.GameItem
          description: FoodItem 实例
      overload: UCT.Control.FoodItemBuilder.Build*
      overridden: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Build
  - id: UCT.Control.ParentFoodItemBuilder
    commentId: T:UCT.Control.ParentFoodItemBuilder
    language: CSharp
    name:
      CSharp: ParentFoodItemBuilder
      VB: ParentFoodItemBuilder
    nameWithType:
      CSharp: ParentFoodItemBuilder
      VB: ParentFoodItemBuilder
    qualifiedName:
      CSharp: UCT.Control.ParentFoodItemBuilder
      VB: UCT.Control.ParentFoodItemBuilder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: ParentFoodItemBuilder
      path: ''
      startLine: 18899
    summary: "\n用于构建父级食物物品实例的生成器\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ParentFoodItemBuilder : GameItemBuilder<ParentFoodItemBuilder>'
        VB: Public Class ParentFoodItemBuilder Inherits GameItemBuilder(Of ParentFoodItemBuilder)
    inheritance:
    - System.Object
    - UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}
    inheritedMembers:
    - UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Data
    - UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnUse
    - UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnCheck
    - UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnDrop
    - UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetData(System.String,System.Int32)
    - UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnUse(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
    items:
    - id: UCT.Control.ParentFoodItemBuilder.#ctor(UCT.Control.GameItem)
      commentId: M:UCT.Control.ParentFoodItemBuilder.#ctor(UCT.Control.GameItem)
      language: CSharp
      name:
        CSharp: ParentFoodItemBuilder(GameItem)
        VB: New(GameItem)
      nameWithType:
        CSharp: ParentFoodItemBuilder.ParentFoodItemBuilder(GameItem)
        VB: ParentFoodItemBuilder.New(GameItem)
      qualifiedName:
        CSharp: UCT.Control.ParentFoodItemBuilder.ParentFoodItemBuilder(UCT.Control.GameItem)
        VB: UCT.Control.ParentFoodItemBuilder.New(UCT.Control.GameItem)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: .ctor
        path: ''
        startLine: 18907
      summary: "\n初始化 <xref href=\"UCT.Control.ParentFoodItemBuilder\" data-throw-if-not-resolved=\"false\"></xref> 类的新实例\n"
      example: []
      syntax:
        content:
          CSharp: public ParentFoodItemBuilder(GameItem child)
          VB: Public Sub New(child As GameItem)
        parameters:
        - id: child
          type: UCT.Control.GameItem
          description: 子物品实例
      overload: UCT.Control.ParentFoodItemBuilder.#ctor*
      references:
        UCT.Control.ParentFoodItemBuilder: 
    - id: UCT.Control.ParentFoodItemBuilder.Build
      commentId: M:UCT.Control.ParentFoodItemBuilder.Build
      language: CSharp
      name:
        CSharp: Build()
        VB: Build()
      nameWithType:
        CSharp: ParentFoodItemBuilder.Build()
        VB: ParentFoodItemBuilder.Build()
      qualifiedName:
        CSharp: UCT.Control.ParentFoodItemBuilder.Build()
        VB: UCT.Control.ParentFoodItemBuilder.Build()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Build
        path: ''
        startLine: 18916
      summary: "\n构建 ParentFoodItem 实例\n"
      example: []
      syntax:
        content:
          CSharp: public override GameItem Build()
          VB: Public Overrides Function Build() As GameItem
        return:
          type: UCT.Control.GameItem
          description: ParentFoodItem 实例
      overload: UCT.Control.ParentFoodItemBuilder.Build*
      overridden: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Build
  - id: UCT.Control.GameItemBuilder`1
    commentId: T:UCT.Control.GameItemBuilder`1
    language: CSharp
    name:
      CSharp: GameItemBuilder<T>
      VB: GameItemBuilder(Of T)
    nameWithType:
      CSharp: GameItemBuilder<T>
      VB: GameItemBuilder(Of T)
    qualifiedName:
      CSharp: UCT.Control.GameItemBuilder<T>
      VB: UCT.Control.GameItemBuilder(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: GameItemBuilder
      path: ''
      startLine: 18926
    summary: "\n用于构建 GameItem 实例的生成器基类\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GameItemBuilder<T> where T : GameItemBuilder<T>'
        VB: Public Class GameItemBuilder(Of T As GameItemBuilder(Of T))
      typeParameters:
      - id: T
        description: 生成器类型
    inheritance:
    - System.Object
    items:
    - id: UCT.Control.GameItemBuilder`1.Data
      commentId: F:UCT.Control.GameItemBuilder`1.Data
      language: CSharp
      name:
        CSharp: Data
        VB: Data
      nameWithType:
        CSharp: GameItemBuilder<T>.Data
        VB: GameItemBuilder(Of T).Data
      qualifiedName:
        CSharp: UCT.Control.GameItemBuilder<T>.Data
        VB: UCT.Control.GameItemBuilder(Of T).Data
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Data
        path: ''
        startLine: 18928
      syntax:
        content:
          CSharp: protected ItemData Data
          VB: Protected Data As ItemData
        return:
          type: UCT.Control.ItemData
    - id: UCT.Control.GameItemBuilder`1.OnUse
      commentId: F:UCT.Control.GameItemBuilder`1.OnUse
      language: CSharp
      name:
        CSharp: OnUse
        VB: OnUse
      nameWithType:
        CSharp: GameItemBuilder<T>.OnUse
        VB: GameItemBuilder(Of T).OnUse
      qualifiedName:
        CSharp: UCT.Control.GameItemBuilder<T>.OnUse
        VB: UCT.Control.GameItemBuilder(Of T).OnUse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnUse
        path: ''
        startLine: 18929
      syntax:
        content:
          CSharp: protected Action<int> OnUse
          VB: Protected OnUse As Action(Of Integer)
        return:
          type: System.Action{System.Int32}
    - id: UCT.Control.GameItemBuilder`1.OnCheck
      commentId: F:UCT.Control.GameItemBuilder`1.OnCheck
      language: CSharp
      name:
        CSharp: OnCheck
        VB: OnCheck
      nameWithType:
        CSharp: GameItemBuilder<T>.OnCheck
        VB: GameItemBuilder(Of T).OnCheck
      qualifiedName:
        CSharp: UCT.Control.GameItemBuilder<T>.OnCheck
        VB: UCT.Control.GameItemBuilder(Of T).OnCheck
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnCheck
        path: ''
        startLine: 18929
      syntax:
        content:
          CSharp: protected Action<int> OnCheck
          VB: Protected OnCheck As Action(Of Integer)
        return:
          type: System.Action{System.Int32}
    - id: UCT.Control.GameItemBuilder`1.OnDrop
      commentId: F:UCT.Control.GameItemBuilder`1.OnDrop
      language: CSharp
      name:
        CSharp: OnDrop
        VB: OnDrop
      nameWithType:
        CSharp: GameItemBuilder<T>.OnDrop
        VB: GameItemBuilder(Of T).OnDrop
      qualifiedName:
        CSharp: UCT.Control.GameItemBuilder<T>.OnDrop
        VB: UCT.Control.GameItemBuilder(Of T).OnDrop
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnDrop
        path: ''
        startLine: 18929
      syntax:
        content:
          CSharp: protected Action<int> OnDrop
          VB: Protected OnDrop As Action(Of Integer)
        return:
          type: System.Action{System.Int32}
    - id: UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
      commentId: M:UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: SetData(string, int)
        VB: SetData(String, Integer)
      nameWithType:
        CSharp: GameItemBuilder<T>.SetData(string, int)
        VB: GameItemBuilder(Of T).SetData(String, Integer)
      qualifiedName:
        CSharp: UCT.Control.GameItemBuilder<T>.SetData(string, int)
        VB: UCT.Control.GameItemBuilder(Of T).SetData(String, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: SetData
        path: ''
        startLine: 18937
      summary: "\n设置物品数据\n"
      example: []
      syntax:
        content:
          CSharp: public T SetData(string dataName, int value)
          VB: Public Function SetData(dataName As String, value As Integer) As T
        parameters:
        - id: dataName
          type: System.String
          description: 物品名称
        - id: value
          type: System.Int32
          description: 物品数值
        return:
          type: '{T}'
          description: 当前生成器实例
      overload: UCT.Control.GameItemBuilder`1.SetData*
    - id: UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
      commentId: M:UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: SetOnUse(Action<int>)
        VB: SetOnUse(Action(Of Integer))
      nameWithType:
        CSharp: GameItemBuilder<T>.SetOnUse(Action<int>)
        VB: GameItemBuilder(Of T).SetOnUse(Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.GameItemBuilder<T>.SetOnUse(System.Action<int>)
        VB: UCT.Control.GameItemBuilder(Of T).SetOnUse(System.Action(Of Integer))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: SetOnUse
        path: ''
        startLine: 18948
      summary: "\n设置使用物品事件\n"
      example: []
      syntax:
        content:
          CSharp: public T SetOnUse(Action<int> action)
          VB: Public Function SetOnUse(action As Action(Of Integer)) As T
        parameters:
        - id: action
          type: System.Action{System.Int32}
          description: 事件委托
        return:
          type: '{T}'
          description: 当前生成器实例
      overload: UCT.Control.GameItemBuilder`1.SetOnUse*
    - id: UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
      commentId: M:UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: SetOnCheck(Action<int>)
        VB: SetOnCheck(Action(Of Integer))
      nameWithType:
        CSharp: GameItemBuilder<T>.SetOnCheck(Action<int>)
        VB: GameItemBuilder(Of T).SetOnCheck(Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.GameItemBuilder<T>.SetOnCheck(System.Action<int>)
        VB: UCT.Control.GameItemBuilder(Of T).SetOnCheck(System.Action(Of Integer))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: SetOnCheck
        path: ''
        startLine: 18959
      summary: "\n设置检查物品事件\n"
      example: []
      syntax:
        content:
          CSharp: public T SetOnCheck(Action<int> action)
          VB: Public Function SetOnCheck(action As Action(Of Integer)) As T
        parameters:
        - id: action
          type: System.Action{System.Int32}
          description: 事件委托
        return:
          type: '{T}'
          description: 当前生成器实例
      overload: UCT.Control.GameItemBuilder`1.SetOnCheck*
    - id: UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
      commentId: M:UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: SetOnDrop(Action<int>)
        VB: SetOnDrop(Action(Of Integer))
      nameWithType:
        CSharp: GameItemBuilder<T>.SetOnDrop(Action<int>)
        VB: GameItemBuilder(Of T).SetOnDrop(Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.GameItemBuilder<T>.SetOnDrop(System.Action<int>)
        VB: UCT.Control.GameItemBuilder(Of T).SetOnDrop(System.Action(Of Integer))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: SetOnDrop
        path: ''
        startLine: 18970
      summary: "\n设置丢弃物品事件\n"
      example: []
      syntax:
        content:
          CSharp: public T SetOnDrop(Action<int> action)
          VB: Public Function SetOnDrop(action As Action(Of Integer)) As T
        parameters:
        - id: action
          type: System.Action{System.Int32}
          description: 事件委托
        return:
          type: '{T}'
          description: 当前生成器实例
      overload: UCT.Control.GameItemBuilder`1.SetOnDrop*
    - id: UCT.Control.GameItemBuilder`1.Build
      commentId: M:UCT.Control.GameItemBuilder`1.Build
      language: CSharp
      name:
        CSharp: Build()
        VB: Build()
      nameWithType:
        CSharp: GameItemBuilder<T>.Build()
        VB: GameItemBuilder(Of T).Build()
      qualifiedName:
        CSharp: UCT.Control.GameItemBuilder<T>.Build()
        VB: UCT.Control.GameItemBuilder(Of T).Build()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Build
        path: ''
        startLine: 18980
      summary: "\n构建 GameItem 实例\n"
      example: []
      syntax:
        content:
          CSharp: public virtual GameItem Build()
          VB: Public Overridable Function Build() As GameItem
        return:
          type: UCT.Control.GameItem
          description: 构建后的 GameItem 实例
      overload: UCT.Control.GameItemBuilder`1.Build*
  - id: UCT.Control.EquipmentItem
    commentId: T:UCT.Control.EquipmentItem
    language: CSharp
    name:
      CSharp: EquipmentItem
      VB: EquipmentItem
    nameWithType:
      CSharp: EquipmentItem
      VB: EquipmentItem
    qualifiedName:
      CSharp: UCT.Control.EquipmentItem
      VB: UCT.Control.EquipmentItem
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: EquipmentItem
      path: ''
      startLine: 19002
    summary: "\n装备类物品\n"
    example: []
    syntax:
      content:
        CSharp: 'public class EquipmentItem : GameItem'
        VB: Public Class EquipmentItem Inherits GameItem
    inheritance:
    - System.Object
    - UCT.Control.GameItem
    inheritedMembers:
    - UCT.Control.GameItem.OnUseAction
    - UCT.Control.GameItem.Data
    - UCT.Control.GameItem.OnUse(System.Int32)
    - UCT.Control.GameItem.OnCheck(System.Int32)
    - UCT.Control.GameItem.OnDrop(System.Int32)
    items:
    - id: UCT.Control.EquipmentItem.#ctor(UCT.Control.ItemData,System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32})
      commentId: M:UCT.Control.EquipmentItem.#ctor(UCT.Control.ItemData,System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: EquipmentItem(ItemData, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>)
        VB: New(ItemData, Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer))
      nameWithType:
        CSharp: EquipmentItem.EquipmentItem(ItemData, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>)
        VB: EquipmentItem.New(ItemData, Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.EquipmentItem.EquipmentItem(UCT.Control.ItemData, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>)
        VB: UCT.Control.EquipmentItem.New(UCT.Control.ItemData, System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: .ctor
        path: ''
        startLine: 19020
      summary: "\n初始化 <xref href=\"UCT.Control.EquipmentItem\" data-throw-if-not-resolved=\"false\"></xref> 类的新实例\n"
      example: []
      syntax:
        content:
          CSharp: protected EquipmentItem(ItemData data, Action<int> onUse, Action<int> onCheck, Action<int> onDrop, Action<int> onSwitch, Action<int> onEquip, Action<int> onRemove, Action<int> onUpdate)
          VB: Protected Sub New(data As ItemData, onUse As Action(Of Integer), onCheck As Action(Of Integer), onDrop As Action(Of Integer), onSwitch As Action(Of Integer), onEquip As Action(Of Integer), onRemove As Action(Of Integer), onUpdate As Action(Of Integer))
        parameters:
        - id: data
          type: UCT.Control.ItemData
          description: 物品数据
        - id: onUse
          type: System.Action{System.Int32}
          description: 使用物品事件
        - id: onCheck
          type: System.Action{System.Int32}
          description: 查看物品事件
        - id: onDrop
          type: System.Action{System.Int32}
          description: 丢弃物品事件
        - id: onSwitch
          type: System.Action{System.Int32}
          description: 切换物品事件
        - id: onEquip
          type: System.Action{System.Int32}
          description: 装备物品事件
        - id: onRemove
          type: System.Action{System.Int32}
          description: 卸下物品事件
        - id: onUpdate
          type: System.Action{System.Int32}
          description: 更新物品事件
      overload: UCT.Control.EquipmentItem.#ctor*
      references:
        UCT.Control.EquipmentItem: 
    - id: UCT.Control.EquipmentItem.OnSwitch(System.Int32)
      commentId: M:UCT.Control.EquipmentItem.OnSwitch(System.Int32)
      language: CSharp
      name:
        CSharp: OnSwitch(int)
        VB: OnSwitch(Integer)
      nameWithType:
        CSharp: EquipmentItem.OnSwitch(int)
        VB: EquipmentItem.OnSwitch(Integer)
      qualifiedName:
        CSharp: UCT.Control.EquipmentItem.OnSwitch(int)
        VB: UCT.Control.EquipmentItem.OnSwitch(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnSwitch
        path: ''
        startLine: 19040
      summary: "\n切换装备状态\n"
      example: []
      syntax:
        content:
          CSharp: public void OnSwitch(int index)
          VB: Public Sub OnSwitch(index As Integer)
        parameters:
        - id: index
          type: System.Int32
          description: 物品索引
      overload: UCT.Control.EquipmentItem.OnSwitch*
    - id: UCT.Control.EquipmentItem.OnEquip(System.Int32)
      commentId: M:UCT.Control.EquipmentItem.OnEquip(System.Int32)
      language: CSharp
      name:
        CSharp: OnEquip(int)
        VB: OnEquip(Integer)
      nameWithType:
        CSharp: EquipmentItem.OnEquip(int)
        VB: EquipmentItem.OnEquip(Integer)
      qualifiedName:
        CSharp: UCT.Control.EquipmentItem.OnEquip(int)
        VB: UCT.Control.EquipmentItem.OnEquip(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnEquip
        path: ''
        startLine: 19049
      summary: "\n装备物品\n"
      example: []
      syntax:
        content:
          CSharp: protected void OnEquip(int index)
          VB: Protected Sub OnEquip(index As Integer)
        parameters:
        - id: index
          type: System.Int32
          description: 物品索引
      overload: UCT.Control.EquipmentItem.OnEquip*
    - id: UCT.Control.EquipmentItem.OnRemove(System.Int32)
      commentId: M:UCT.Control.EquipmentItem.OnRemove(System.Int32)
      language: CSharp
      name:
        CSharp: OnRemove(int)
        VB: OnRemove(Integer)
      nameWithType:
        CSharp: EquipmentItem.OnRemove(int)
        VB: EquipmentItem.OnRemove(Integer)
      qualifiedName:
        CSharp: UCT.Control.EquipmentItem.OnRemove(int)
        VB: UCT.Control.EquipmentItem.OnRemove(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnRemove
        path: ''
        startLine: 19058
      summary: "\n卸下物品\n"
      example: []
      syntax:
        content:
          CSharp: public void OnRemove(int index)
          VB: Public Sub OnRemove(index As Integer)
        parameters:
        - id: index
          type: System.Int32
          description: 物品索引
      overload: UCT.Control.EquipmentItem.OnRemove*
    - id: UCT.Control.EquipmentItem.OnUpdate(System.Int32)
      commentId: M:UCT.Control.EquipmentItem.OnUpdate(System.Int32)
      language: CSharp
      name:
        CSharp: OnUpdate(int)
        VB: OnUpdate(Integer)
      nameWithType:
        CSharp: EquipmentItem.OnUpdate(int)
        VB: EquipmentItem.OnUpdate(Integer)
      qualifiedName:
        CSharp: UCT.Control.EquipmentItem.OnUpdate(int)
        VB: UCT.Control.EquipmentItem.OnUpdate(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnUpdate
        path: ''
        startLine: 19067
      summary: "\n更新物品状态\n"
      example: []
      syntax:
        content:
          CSharp: public void OnUpdate(int index)
          VB: Public Sub OnUpdate(index As Integer)
        parameters:
        - id: index
          type: System.Int32
          description: 物品索引
      overload: UCT.Control.EquipmentItem.OnUpdate*
  - id: UCT.Control.EquipmentItemBuilder
    commentId: T:UCT.Control.EquipmentItemBuilder
    language: CSharp
    name:
      CSharp: EquipmentItemBuilder
      VB: EquipmentItemBuilder
    nameWithType:
      CSharp: EquipmentItemBuilder
      VB: EquipmentItemBuilder
    qualifiedName:
      CSharp: UCT.Control.EquipmentItemBuilder
      VB: UCT.Control.EquipmentItemBuilder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: EquipmentItemBuilder
      path: ''
      startLine: 19076
    summary: "\n装备物品生成器\n"
    example: []
    syntax:
      content:
        CSharp: 'public class EquipmentItemBuilder : EquipmentItemBuilder<EquipmentItemBuilder>'
        VB: Public Class EquipmentItemBuilder Inherits EquipmentItemBuilder(Of EquipmentItemBuilder)
    inheritance:
    - System.Object
    - UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}
    - UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}
    inheritedMembers:
    - UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnSwitch
    - UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnEquip
    - UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnRemove
    - UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUpdate
    - UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnSwitch(System.Action{System.Int32})
    - UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnEquip(System.Action{System.Int32})
    - UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnRemove(System.Action{System.Int32})
    - UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUpdate(System.Action{System.Int32})
    - UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.Build
    - UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.Data
    - UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUse
    - UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnCheck
    - UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnDrop
    - UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetData(System.String,System.Int32)
    - UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUse(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnCheck(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnDrop(System.Action{System.Int32})
    items: []
  - id: UCT.Control.EquipmentItemBuilder`1
    commentId: T:UCT.Control.EquipmentItemBuilder`1
    language: CSharp
    name:
      CSharp: EquipmentItemBuilder<T>
      VB: EquipmentItemBuilder(Of T)
    nameWithType:
      CSharp: EquipmentItemBuilder<T>
      VB: EquipmentItemBuilder(Of T)
    qualifiedName:
      CSharp: UCT.Control.EquipmentItemBuilder<T>
      VB: UCT.Control.EquipmentItemBuilder(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: EquipmentItemBuilder
      path: ''
      startLine: 19082
    summary: "\n用于构建装备物品实例的生成器基类\n"
    example: []
    syntax:
      content:
        CSharp: 'public class EquipmentItemBuilder<T> : GameItemBuilder<T> where T : EquipmentItemBuilder<T>'
        VB: Public Class EquipmentItemBuilder(Of T As EquipmentItemBuilder(Of T)) Inherits GameItemBuilder(Of T)
      typeParameters:
      - id: T
        description: 生成器类型
    inheritance:
    - System.Object
    - UCT.Control.GameItemBuilder{{T}}
    inheritedMembers:
    - UCT.Control.GameItemBuilder{{T}}.Data
    - UCT.Control.GameItemBuilder{{T}}.OnUse
    - UCT.Control.GameItemBuilder{{T}}.OnCheck
    - UCT.Control.GameItemBuilder{{T}}.OnDrop
    - UCT.Control.GameItemBuilder{{T}}.SetData(System.String,System.Int32)
    - UCT.Control.GameItemBuilder{{T}}.SetOnUse(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{{T}}.SetOnCheck(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{{T}}.SetOnDrop(System.Action{System.Int32})
    items:
    - id: UCT.Control.EquipmentItemBuilder`1.OnSwitch
      commentId: F:UCT.Control.EquipmentItemBuilder`1.OnSwitch
      language: CSharp
      name:
        CSharp: OnSwitch
        VB: OnSwitch
      nameWithType:
        CSharp: EquipmentItemBuilder<T>.OnSwitch
        VB: EquipmentItemBuilder(Of T).OnSwitch
      qualifiedName:
        CSharp: UCT.Control.EquipmentItemBuilder<T>.OnSwitch
        VB: UCT.Control.EquipmentItemBuilder(Of T).OnSwitch
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnSwitch
        path: ''
        startLine: 19084
      syntax:
        content:
          CSharp: protected Action<int> OnSwitch
          VB: Protected OnSwitch As Action(Of Integer)
        return:
          type: System.Action{System.Int32}
    - id: UCT.Control.EquipmentItemBuilder`1.OnEquip
      commentId: F:UCT.Control.EquipmentItemBuilder`1.OnEquip
      language: CSharp
      name:
        CSharp: OnEquip
        VB: OnEquip
      nameWithType:
        CSharp: EquipmentItemBuilder<T>.OnEquip
        VB: EquipmentItemBuilder(Of T).OnEquip
      qualifiedName:
        CSharp: UCT.Control.EquipmentItemBuilder<T>.OnEquip
        VB: UCT.Control.EquipmentItemBuilder(Of T).OnEquip
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnEquip
        path: ''
        startLine: 19084
      syntax:
        content:
          CSharp: protected Action<int> OnEquip
          VB: Protected OnEquip As Action(Of Integer)
        return:
          type: System.Action{System.Int32}
    - id: UCT.Control.EquipmentItemBuilder`1.OnRemove
      commentId: F:UCT.Control.EquipmentItemBuilder`1.OnRemove
      language: CSharp
      name:
        CSharp: OnRemove
        VB: OnRemove
      nameWithType:
        CSharp: EquipmentItemBuilder<T>.OnRemove
        VB: EquipmentItemBuilder(Of T).OnRemove
      qualifiedName:
        CSharp: UCT.Control.EquipmentItemBuilder<T>.OnRemove
        VB: UCT.Control.EquipmentItemBuilder(Of T).OnRemove
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnRemove
        path: ''
        startLine: 19084
      syntax:
        content:
          CSharp: protected Action<int> OnRemove
          VB: Protected OnRemove As Action(Of Integer)
        return:
          type: System.Action{System.Int32}
    - id: UCT.Control.EquipmentItemBuilder`1.OnUpdate
      commentId: F:UCT.Control.EquipmentItemBuilder`1.OnUpdate
      language: CSharp
      name:
        CSharp: OnUpdate
        VB: OnUpdate
      nameWithType:
        CSharp: EquipmentItemBuilder<T>.OnUpdate
        VB: EquipmentItemBuilder(Of T).OnUpdate
      qualifiedName:
        CSharp: UCT.Control.EquipmentItemBuilder<T>.OnUpdate
        VB: UCT.Control.EquipmentItemBuilder(Of T).OnUpdate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnUpdate
        path: ''
        startLine: 19084
      syntax:
        content:
          CSharp: protected Action<int> OnUpdate
          VB: Protected OnUpdate As Action(Of Integer)
        return:
          type: System.Action{System.Int32}
    - id: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch(System.Action{System.Int32})
      commentId: M:UCT.Control.EquipmentItemBuilder`1.SetOnSwitch(System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: SetOnSwitch(Action<int>)
        VB: SetOnSwitch(Action(Of Integer))
      nameWithType:
        CSharp: EquipmentItemBuilder<T>.SetOnSwitch(Action<int>)
        VB: EquipmentItemBuilder(Of T).SetOnSwitch(Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.EquipmentItemBuilder<T>.SetOnSwitch(System.Action<int>)
        VB: UCT.Control.EquipmentItemBuilder(Of T).SetOnSwitch(System.Action(Of Integer))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: SetOnSwitch
        path: ''
        startLine: 19091
      summary: "\n设置切换装备事件\n"
      example: []
      syntax:
        content:
          CSharp: public T SetOnSwitch(Action<int> action)
          VB: Public Function SetOnSwitch(action As Action(Of Integer)) As T
        parameters:
        - id: action
          type: System.Action{System.Int32}
          description: 事件委托
        return:
          type: '{T}'
          description: 当前生成器实例
      overload: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch*
    - id: UCT.Control.EquipmentItemBuilder`1.SetOnEquip(System.Action{System.Int32})
      commentId: M:UCT.Control.EquipmentItemBuilder`1.SetOnEquip(System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: SetOnEquip(Action<int>)
        VB: SetOnEquip(Action(Of Integer))
      nameWithType:
        CSharp: EquipmentItemBuilder<T>.SetOnEquip(Action<int>)
        VB: EquipmentItemBuilder(Of T).SetOnEquip(Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.EquipmentItemBuilder<T>.SetOnEquip(System.Action<int>)
        VB: UCT.Control.EquipmentItemBuilder(Of T).SetOnEquip(System.Action(Of Integer))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: SetOnEquip
        path: ''
        startLine: 19102
      summary: "\n设置装备物品事件\n"
      example: []
      syntax:
        content:
          CSharp: public T SetOnEquip(Action<int> action)
          VB: Public Function SetOnEquip(action As Action(Of Integer)) As T
        parameters:
        - id: action
          type: System.Action{System.Int32}
          description: 事件委托
        return:
          type: '{T}'
          description: 当前生成器实例
      overload: UCT.Control.EquipmentItemBuilder`1.SetOnEquip*
    - id: UCT.Control.EquipmentItemBuilder`1.SetOnRemove(System.Action{System.Int32})
      commentId: M:UCT.Control.EquipmentItemBuilder`1.SetOnRemove(System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: SetOnRemove(Action<int>)
        VB: SetOnRemove(Action(Of Integer))
      nameWithType:
        CSharp: EquipmentItemBuilder<T>.SetOnRemove(Action<int>)
        VB: EquipmentItemBuilder(Of T).SetOnRemove(Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.EquipmentItemBuilder<T>.SetOnRemove(System.Action<int>)
        VB: UCT.Control.EquipmentItemBuilder(Of T).SetOnRemove(System.Action(Of Integer))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: SetOnRemove
        path: ''
        startLine: 19113
      summary: "\n设置卸下物品事件\n"
      example: []
      syntax:
        content:
          CSharp: public T SetOnRemove(Action<int> action)
          VB: Public Function SetOnRemove(action As Action(Of Integer)) As T
        parameters:
        - id: action
          type: System.Action{System.Int32}
          description: 事件委托
        return:
          type: '{T}'
          description: 当前生成器实例
      overload: UCT.Control.EquipmentItemBuilder`1.SetOnRemove*
    - id: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate(System.Action{System.Int32})
      commentId: M:UCT.Control.EquipmentItemBuilder`1.SetOnUpdate(System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: SetOnUpdate(Action<int>)
        VB: SetOnUpdate(Action(Of Integer))
      nameWithType:
        CSharp: EquipmentItemBuilder<T>.SetOnUpdate(Action<int>)
        VB: EquipmentItemBuilder(Of T).SetOnUpdate(Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.EquipmentItemBuilder<T>.SetOnUpdate(System.Action<int>)
        VB: UCT.Control.EquipmentItemBuilder(Of T).SetOnUpdate(System.Action(Of Integer))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: SetOnUpdate
        path: ''
        startLine: 19124
      summary: "\n设置更新物品事件\n"
      example: []
      syntax:
        content:
          CSharp: public T SetOnUpdate(Action<int> action)
          VB: Public Function SetOnUpdate(action As Action(Of Integer)) As T
        parameters:
        - id: action
          type: System.Action{System.Int32}
          description: 事件委托
        return:
          type: '{T}'
          description: 当前生成器实例
      overload: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate*
    - id: UCT.Control.EquipmentItemBuilder`1.Build
      commentId: M:UCT.Control.EquipmentItemBuilder`1.Build
      language: CSharp
      name:
        CSharp: Build()
        VB: Build()
      nameWithType:
        CSharp: EquipmentItemBuilder<T>.Build()
        VB: EquipmentItemBuilder(Of T).Build()
      qualifiedName:
        CSharp: UCT.Control.EquipmentItemBuilder<T>.Build()
        VB: UCT.Control.EquipmentItemBuilder(Of T).Build()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Build
        path: ''
        startLine: 19134
      summary: "\n构建装备物品实例\n"
      example: []
      syntax:
        content:
          CSharp: public override GameItem Build()
          VB: Public Overrides Function Build() As GameItem
        return:
          type: UCT.Control.GameItem
          description: 构建后的装备物品实例
      overload: UCT.Control.EquipmentItemBuilder`1.Build*
      overridden: UCT.Control.GameItemBuilder{{T}}.Build
  - id: UCT.Control.WeaponItem
    commentId: T:UCT.Control.WeaponItem
    language: CSharp
    name:
      CSharp: WeaponItem
      VB: WeaponItem
    nameWithType:
      CSharp: WeaponItem
      VB: WeaponItem
    qualifiedName:
      CSharp: UCT.Control.WeaponItem
      VB: UCT.Control.WeaponItem
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: WeaponItem
      path: ''
      startLine: 19143
    summary: "\n武器类物品\n"
    example: []
    syntax:
      content:
        CSharp: 'public class WeaponItem : EquipmentItem'
        VB: Public Class WeaponItem Inherits EquipmentItem
    inheritance:
    - System.Object
    - UCT.Control.GameItem
    - UCT.Control.EquipmentItem
    inheritedMembers:
    - UCT.Control.EquipmentItem.OnSwitch(System.Int32)
    - UCT.Control.EquipmentItem.OnEquip(System.Int32)
    - UCT.Control.EquipmentItem.OnRemove(System.Int32)
    - UCT.Control.EquipmentItem.OnUpdate(System.Int32)
    - UCT.Control.GameItem.OnUseAction
    - UCT.Control.GameItem.Data
    - UCT.Control.GameItem.OnUse(System.Int32)
    - UCT.Control.GameItem.OnCheck(System.Int32)
    - UCT.Control.GameItem.OnDrop(System.Int32)
    items:
    - id: UCT.Control.WeaponItem.#ctor(UCT.Control.ItemData,System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32})
      commentId: M:UCT.Control.WeaponItem.#ctor(UCT.Control.ItemData,System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: WeaponItem(ItemData, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>)
        VB: New(ItemData, Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer))
      nameWithType:
        CSharp: WeaponItem.WeaponItem(ItemData, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>)
        VB: WeaponItem.New(ItemData, Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.WeaponItem.WeaponItem(UCT.Control.ItemData, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>)
        VB: UCT.Control.WeaponItem.New(UCT.Control.ItemData, System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: .ctor
        path: ''
        startLine: 19163
      summary: "\n初始化 <xref href=\"UCT.Control.WeaponItem\" data-throw-if-not-resolved=\"false\"></xref> 类的新实例\n"
      example: []
      syntax:
        content:
          CSharp: protected WeaponItem(ItemData data, Action<int> onUse, Action<int> onCheck, Action<int> onDrop, Action<int> onSwitch, Action<int> onEquip, Action<int> onRemove, Action<int> onUpdate, Action<int> onAttack, Action<int> onMiss, Action<int> onHit)
          VB: Protected Sub New(data As ItemData, onUse As Action(Of Integer), onCheck As Action(Of Integer), onDrop As Action(Of Integer), onSwitch As Action(Of Integer), onEquip As Action(Of Integer), onRemove As Action(Of Integer), onUpdate As Action(Of Integer), onAttack As Action(Of Integer), onMiss As Action(Of Integer), onHit As Action(Of Integer))
        parameters:
        - id: data
          type: UCT.Control.ItemData
          description: 物品数据
        - id: onUse
          type: System.Action{System.Int32}
          description: 使用物品事件
        - id: onCheck
          type: System.Action{System.Int32}
          description: 查看物品事件
        - id: onDrop
          type: System.Action{System.Int32}
          description: 丢弃物品事件
        - id: onSwitch
          type: System.Action{System.Int32}
          description: 切换物品事件
        - id: onEquip
          type: System.Action{System.Int32}
          description: 装备物品事件
        - id: onRemove
          type: System.Action{System.Int32}
          description: 卸下物品事件
        - id: onUpdate
          type: System.Action{System.Int32}
          description: 更新物品事件
        - id: onAttack
          type: System.Action{System.Int32}
          description: 武器攻击事件
        - id: onMiss
          type: System.Action{System.Int32}
          description: 武器未击中事件
        - id: onHit
          type: System.Action{System.Int32}
          description: 武器击中事件
      overload: UCT.Control.WeaponItem.#ctor*
      references:
        UCT.Control.WeaponItem: 
    - id: UCT.Control.WeaponItem.OnAttack(System.Int32)
      commentId: M:UCT.Control.WeaponItem.OnAttack(System.Int32)
      language: CSharp
      name:
        CSharp: OnAttack(int)
        VB: OnAttack(Integer)
      nameWithType:
        CSharp: WeaponItem.OnAttack(int)
        VB: WeaponItem.OnAttack(Integer)
      qualifiedName:
        CSharp: UCT.Control.WeaponItem.OnAttack(int)
        VB: UCT.Control.WeaponItem.OnAttack(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnAttack
        path: ''
        startLine: 19210
      summary: "\n武器攻击敌人时触发（无论是否击中）\n"
      example: []
      syntax:
        content:
          CSharp: public void OnAttack(int index)
          VB: Public Sub OnAttack(index As Integer)
        parameters:
        - id: index
          type: System.Int32
          description: 物品索引
      overload: UCT.Control.WeaponItem.OnAttack*
    - id: UCT.Control.WeaponItem.OnMiss(System.Int32)
      commentId: M:UCT.Control.WeaponItem.OnMiss(System.Int32)
      language: CSharp
      name:
        CSharp: OnMiss(int)
        VB: OnMiss(Integer)
      nameWithType:
        CSharp: WeaponItem.OnMiss(int)
        VB: WeaponItem.OnMiss(Integer)
      qualifiedName:
        CSharp: UCT.Control.WeaponItem.OnMiss(int)
        VB: UCT.Control.WeaponItem.OnMiss(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnMiss
        path: ''
        startLine: 19219
      summary: "\n武器未击中敌人时触发\n"
      example: []
      syntax:
        content:
          CSharp: public void OnMiss(int index)
          VB: Public Sub OnMiss(index As Integer)
        parameters:
        - id: index
          type: System.Int32
          description: 物品索引
      overload: UCT.Control.WeaponItem.OnMiss*
    - id: UCT.Control.WeaponItem.OnHit(System.Int32)
      commentId: M:UCT.Control.WeaponItem.OnHit(System.Int32)
      language: CSharp
      name:
        CSharp: OnHit(int)
        VB: OnHit(Integer)
      nameWithType:
        CSharp: WeaponItem.OnHit(int)
        VB: WeaponItem.OnHit(Integer)
      qualifiedName:
        CSharp: UCT.Control.WeaponItem.OnHit(int)
        VB: UCT.Control.WeaponItem.OnHit(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnHit
        path: ''
        startLine: 19228
      summary: "\n武器击中敌人时触发\n"
      example: []
      syntax:
        content:
          CSharp: public void OnHit(int index)
          VB: Public Sub OnHit(index As Integer)
        parameters:
        - id: index
          type: System.Int32
          description: 物品索引
      overload: UCT.Control.WeaponItem.OnHit*
  - id: UCT.Control.ArmorItem
    commentId: T:UCT.Control.ArmorItem
    language: CSharp
    name:
      CSharp: ArmorItem
      VB: ArmorItem
    nameWithType:
      CSharp: ArmorItem
      VB: ArmorItem
    qualifiedName:
      CSharp: UCT.Control.ArmorItem
      VB: UCT.Control.ArmorItem
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: ArmorItem
      path: ''
      startLine: 19237
    summary: "\n护甲类物品\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ArmorItem : EquipmentItem'
        VB: Public Class ArmorItem Inherits EquipmentItem
    inheritance:
    - System.Object
    - UCT.Control.GameItem
    - UCT.Control.EquipmentItem
    inheritedMembers:
    - UCT.Control.EquipmentItem.OnSwitch(System.Int32)
    - UCT.Control.EquipmentItem.OnEquip(System.Int32)
    - UCT.Control.EquipmentItem.OnRemove(System.Int32)
    - UCT.Control.EquipmentItem.OnUpdate(System.Int32)
    - UCT.Control.GameItem.OnUseAction
    - UCT.Control.GameItem.Data
    - UCT.Control.GameItem.OnUse(System.Int32)
    - UCT.Control.GameItem.OnCheck(System.Int32)
    - UCT.Control.GameItem.OnDrop(System.Int32)
    items:
    - id: UCT.Control.ArmorItem.#ctor(UCT.Control.ItemData,System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32})
      commentId: M:UCT.Control.ArmorItem.#ctor(UCT.Control.ItemData,System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32},System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: ArmorItem(ItemData, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>)
        VB: New(ItemData, Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer))
      nameWithType:
        CSharp: ArmorItem.ArmorItem(ItemData, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>, Action<int>)
        VB: ArmorItem.New(ItemData, Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer), Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.ArmorItem.ArmorItem(UCT.Control.ItemData, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>, System.Action<int>)
        VB: UCT.Control.ArmorItem.New(UCT.Control.ItemData, System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer), System.Action(Of Integer))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: .ctor
        path: ''
        startLine: 19253
      summary: "\n初始化 <xref href=\"UCT.Control.ArmorItem\" data-throw-if-not-resolved=\"false\"></xref> 类的新实例\n"
      example: []
      syntax:
        content:
          CSharp: protected ArmorItem(ItemData data, Action<int> onUse, Action<int> onCheck, Action<int> onDrop, Action<int> onSwitch, Action<int> onEquip, Action<int> onRemove, Action<int> onUpdate, Action<int> onDamageTaken)
          VB: Protected Sub New(data As ItemData, onUse As Action(Of Integer), onCheck As Action(Of Integer), onDrop As Action(Of Integer), onSwitch As Action(Of Integer), onEquip As Action(Of Integer), onRemove As Action(Of Integer), onUpdate As Action(Of Integer), onDamageTaken As Action(Of Integer))
        parameters:
        - id: data
          type: UCT.Control.ItemData
          description: 物品数据
        - id: onUse
          type: System.Action{System.Int32}
          description: 使用物品事件
        - id: onCheck
          type: System.Action{System.Int32}
          description: 查看物品事件
        - id: onDrop
          type: System.Action{System.Int32}
          description: 丢弃物品事件
        - id: onSwitch
          type: System.Action{System.Int32}
          description: 切换物品事件
        - id: onEquip
          type: System.Action{System.Int32}
          description: 装备物品事件
        - id: onRemove
          type: System.Action{System.Int32}
          description: 卸下物品事件
        - id: onUpdate
          type: System.Action{System.Int32}
          description: 更新物品事件
        - id: onDamageTaken
          type: System.Action{System.Int32}
          description: 受到伤害事件
      overload: UCT.Control.ArmorItem.#ctor*
      references:
        UCT.Control.ArmorItem: 
    - id: UCT.Control.ArmorItem.OnDamageTaken(System.Int32)
      commentId: M:UCT.Control.ArmorItem.OnDamageTaken(System.Int32)
      language: CSharp
      name:
        CSharp: OnDamageTaken(int)
        VB: OnDamageTaken(Integer)
      nameWithType:
        CSharp: ArmorItem.OnDamageTaken(int)
        VB: ArmorItem.OnDamageTaken(Integer)
      qualifiedName:
        CSharp: UCT.Control.ArmorItem.OnDamageTaken(int)
        VB: UCT.Control.ArmorItem.OnDamageTaken(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: OnDamageTaken
        path: ''
        startLine: 19295
      summary: "\n当受到伤害时触发\n"
      example: []
      syntax:
        content:
          CSharp: public void OnDamageTaken(int index)
          VB: Public Sub OnDamageTaken(index As Integer)
        parameters:
        - id: index
          type: System.Int32
          description: 物品索引
      overload: UCT.Control.ArmorItem.OnDamageTaken*
  - id: UCT.Control.WeaponItemBuilder
    commentId: T:UCT.Control.WeaponItemBuilder
    language: CSharp
    name:
      CSharp: WeaponItemBuilder
      VB: WeaponItemBuilder
    nameWithType:
      CSharp: WeaponItemBuilder
      VB: WeaponItemBuilder
    qualifiedName:
      CSharp: UCT.Control.WeaponItemBuilder
      VB: UCT.Control.WeaponItemBuilder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: WeaponItemBuilder
      path: ''
      startLine: 19304
    summary: "\n武器物品生成器\n"
    example: []
    syntax:
      content:
        CSharp: 'public class WeaponItemBuilder : EquipmentItemBuilder<WeaponItemBuilder>'
        VB: Public Class WeaponItemBuilder Inherits EquipmentItemBuilder(Of WeaponItemBuilder)
    inheritance:
    - System.Object
    - UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}
    - UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}
    inheritedMembers:
    - UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnSwitch
    - UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnEquip
    - UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnRemove
    - UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnUpdate
    - UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnSwitch(System.Action{System.Int32})
    - UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnEquip(System.Action{System.Int32})
    - UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnRemove(System.Action{System.Int32})
    - UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUpdate(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.Data
    - UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnUse
    - UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnCheck
    - UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnDrop
    - UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetData(System.String,System.Int32)
    - UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUse(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnCheck(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnDrop(System.Action{System.Int32})
    items:
    - id: UCT.Control.WeaponItemBuilder.SetOnAttack(System.Action{System.Int32})
      commentId: M:UCT.Control.WeaponItemBuilder.SetOnAttack(System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: SetOnAttack(Action<int>)
        VB: SetOnAttack(Action(Of Integer))
      nameWithType:
        CSharp: WeaponItemBuilder.SetOnAttack(Action<int>)
        VB: WeaponItemBuilder.SetOnAttack(Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.WeaponItemBuilder.SetOnAttack(System.Action<int>)
        VB: UCT.Control.WeaponItemBuilder.SetOnAttack(System.Action(Of Integer))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: SetOnAttack
        path: ''
        startLine: 19313
      summary: "\n设置武器攻击事件\n"
      example: []
      syntax:
        content:
          CSharp: public WeaponItemBuilder SetOnAttack(Action<int> action)
          VB: Public Function SetOnAttack(action As Action(Of Integer)) As WeaponItemBuilder
        parameters:
        - id: action
          type: System.Action{System.Int32}
          description: 事件委托
        return:
          type: UCT.Control.WeaponItemBuilder
          description: 当前生成器实例
      overload: UCT.Control.WeaponItemBuilder.SetOnAttack*
    - id: UCT.Control.WeaponItemBuilder.SetOnMiss(System.Action{System.Int32})
      commentId: M:UCT.Control.WeaponItemBuilder.SetOnMiss(System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: SetOnMiss(Action<int>)
        VB: SetOnMiss(Action(Of Integer))
      nameWithType:
        CSharp: WeaponItemBuilder.SetOnMiss(Action<int>)
        VB: WeaponItemBuilder.SetOnMiss(Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.WeaponItemBuilder.SetOnMiss(System.Action<int>)
        VB: UCT.Control.WeaponItemBuilder.SetOnMiss(System.Action(Of Integer))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: SetOnMiss
        path: ''
        startLine: 19324
      summary: "\n设置武器未击中事件\n"
      example: []
      syntax:
        content:
          CSharp: public WeaponItemBuilder SetOnMiss(Action<int> action)
          VB: Public Function SetOnMiss(action As Action(Of Integer)) As WeaponItemBuilder
        parameters:
        - id: action
          type: System.Action{System.Int32}
          description: 事件委托
        return:
          type: UCT.Control.WeaponItemBuilder
          description: 当前生成器实例
      overload: UCT.Control.WeaponItemBuilder.SetOnMiss*
    - id: UCT.Control.WeaponItemBuilder.SetOnHit(System.Action{System.Int32})
      commentId: M:UCT.Control.WeaponItemBuilder.SetOnHit(System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: SetOnHit(Action<int>)
        VB: SetOnHit(Action(Of Integer))
      nameWithType:
        CSharp: WeaponItemBuilder.SetOnHit(Action<int>)
        VB: WeaponItemBuilder.SetOnHit(Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.WeaponItemBuilder.SetOnHit(System.Action<int>)
        VB: UCT.Control.WeaponItemBuilder.SetOnHit(System.Action(Of Integer))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: SetOnHit
        path: ''
        startLine: 19335
      summary: "\n设置武器击中事件\n"
      example: []
      syntax:
        content:
          CSharp: public WeaponItemBuilder SetOnHit(Action<int> action)
          VB: Public Function SetOnHit(action As Action(Of Integer)) As WeaponItemBuilder
        parameters:
        - id: action
          type: System.Action{System.Int32}
          description: 事件委托
        return:
          type: UCT.Control.WeaponItemBuilder
          description: 当前生成器实例
      overload: UCT.Control.WeaponItemBuilder.SetOnHit*
    - id: UCT.Control.WeaponItemBuilder.Build
      commentId: M:UCT.Control.WeaponItemBuilder.Build
      language: CSharp
      name:
        CSharp: Build()
        VB: Build()
      nameWithType:
        CSharp: WeaponItemBuilder.Build()
        VB: WeaponItemBuilder.Build()
      qualifiedName:
        CSharp: UCT.Control.WeaponItemBuilder.Build()
        VB: UCT.Control.WeaponItemBuilder.Build()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Build
        path: ''
        startLine: 19345
      summary: "\n构建 WeaponItem 实例\n"
      example: []
      syntax:
        content:
          CSharp: public override GameItem Build()
          VB: Public Overrides Function Build() As GameItem
        return:
          type: UCT.Control.GameItem
          description: 构建后的 WeaponItem 实例
      overload: UCT.Control.WeaponItemBuilder.Build*
      overridden: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.Build
  - id: UCT.Control.ArmorItemBuilder
    commentId: T:UCT.Control.ArmorItemBuilder
    language: CSharp
    name:
      CSharp: ArmorItemBuilder
      VB: ArmorItemBuilder
    nameWithType:
      CSharp: ArmorItemBuilder
      VB: ArmorItemBuilder
    qualifiedName:
      CSharp: UCT.Control.ArmorItemBuilder
      VB: UCT.Control.ArmorItemBuilder
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: ArmorItemBuilder
      path: ''
      startLine: 19355
    summary: "\n护甲物品生成器\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ArmorItemBuilder : EquipmentItemBuilder<ArmorItemBuilder>'
        VB: Public Class ArmorItemBuilder Inherits EquipmentItemBuilder(Of ArmorItemBuilder)
    inheritance:
    - System.Object
    - UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}
    - UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}
    inheritedMembers:
    - UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnSwitch
    - UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnEquip
    - UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnRemove
    - UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnUpdate
    - UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnSwitch(System.Action{System.Int32})
    - UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnEquip(System.Action{System.Int32})
    - UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnRemove(System.Action{System.Int32})
    - UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUpdate(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.Data
    - UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnUse
    - UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnCheck
    - UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnDrop
    - UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetData(System.String,System.Int32)
    - UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUse(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnCheck(System.Action{System.Int32})
    - UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnDrop(System.Action{System.Int32})
    items:
    - id: UCT.Control.ArmorItemBuilder.SetOnDamageTaken(System.Action{System.Int32})
      commentId: M:UCT.Control.ArmorItemBuilder.SetOnDamageTaken(System.Action{System.Int32})
      language: CSharp
      name:
        CSharp: SetOnDamageTaken(Action<int>)
        VB: SetOnDamageTaken(Action(Of Integer))
      nameWithType:
        CSharp: ArmorItemBuilder.SetOnDamageTaken(Action<int>)
        VB: ArmorItemBuilder.SetOnDamageTaken(Action(Of Integer))
      qualifiedName:
        CSharp: UCT.Control.ArmorItemBuilder.SetOnDamageTaken(System.Action<int>)
        VB: UCT.Control.ArmorItemBuilder.SetOnDamageTaken(System.Action(Of Integer))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: SetOnDamageTaken
        path: ''
        startLine: 19364
      summary: "\n设置受到伤害事件\n"
      example: []
      syntax:
        content:
          CSharp: public ArmorItemBuilder SetOnDamageTaken(Action<int> action)
          VB: Public Function SetOnDamageTaken(action As Action(Of Integer)) As ArmorItemBuilder
        parameters:
        - id: action
          type: System.Action{System.Int32}
          description: 事件委托
        return:
          type: UCT.Control.ArmorItemBuilder
          description: 当前生成器实例
      overload: UCT.Control.ArmorItemBuilder.SetOnDamageTaken*
    - id: UCT.Control.ArmorItemBuilder.Build
      commentId: M:UCT.Control.ArmorItemBuilder.Build
      language: CSharp
      name:
        CSharp: Build()
        VB: Build()
      nameWithType:
        CSharp: ArmorItemBuilder.Build()
        VB: ArmorItemBuilder.Build()
      qualifiedName:
        CSharp: UCT.Control.ArmorItemBuilder.Build()
        VB: UCT.Control.ArmorItemBuilder.Build()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Build
        path: ''
        startLine: 19374
      summary: "\n构建 ArmorItem 实例\n"
      example: []
      syntax:
        content:
          CSharp: public override GameItem Build()
          VB: Public Overrides Function Build() As GameItem
        return:
          type: UCT.Control.GameItem
          description: 构建后的 ArmorItem 实例
      overload: UCT.Control.ArmorItemBuilder.Build*
      overridden: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.Build
  - id: UCT.Control.BattleControl
    commentId: T:UCT.Control.BattleControl
    language: CSharp
    name:
      CSharp: BattleControl
      VB: BattleControl
    nameWithType:
      CSharp: BattleControl
      VB: BattleControl
    qualifiedName:
      CSharp: UCT.Control.BattleControl
      VB: UCT.Control.BattleControl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: BattleControl
      path: ''
      startLine: 19390
    summary: "\n战斗系统管理器，仅使用于战斗场景。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BattleControl : ScriptableObject'
        VB: Public Class BattleControl Inherits ScriptableObject
    inheritance:
    - System.Object
    items:
    - id: UCT.Control.BattleControl.bulletColorList
      commentId: F:UCT.Control.BattleControl.bulletColorList
      language: CSharp
      name:
        CSharp: bulletColorList
        VB: bulletColorList
      nameWithType:
        CSharp: BattleControl.bulletColorList
        VB: BattleControl.bulletColorList
      qualifiedName:
        CSharp: UCT.Control.BattleControl.bulletColorList
        VB: UCT.Control.BattleControl.bulletColorList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: bulletColorList
        path: ''
        startLine: 19418
      syntax:
        content:
          CSharp: public List<Color> bulletColorList
          VB: Public bulletColorList As List(Of Color)
        return:
          type: System.Collections.Generic.List{Color}
    - id: UCT.Control.BattleControl.playerColorList
      commentId: F:UCT.Control.BattleControl.playerColorList
      language: CSharp
      name:
        CSharp: playerColorList
        VB: playerColorList
      nameWithType:
        CSharp: BattleControl.playerColorList
        VB: BattleControl.playerColorList
      qualifiedName:
        CSharp: UCT.Control.BattleControl.playerColorList
        VB: UCT.Control.BattleControl.playerColorList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: playerColorList
        path: ''
        startLine: 19420
      syntax:
        content:
          CSharp: public List<Color> playerColorList
          VB: Public playerColorList As List(Of Color)
        return:
          type: System.Collections.Generic.List{Color}
    - id: UCT.Control.BattleControl.playerMissColorList
      commentId: F:UCT.Control.BattleControl.playerMissColorList
      language: CSharp
      name:
        CSharp: playerMissColorList
        VB: playerMissColorList
      nameWithType:
        CSharp: BattleControl.playerMissColorList
        VB: BattleControl.playerMissColorList
      qualifiedName:
        CSharp: UCT.Control.BattleControl.playerMissColorList
        VB: UCT.Control.BattleControl.playerMissColorList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: playerMissColorList
        path: ''
        startLine: 19420
      syntax:
        content:
          CSharp: public List<Color> playerMissColorList
          VB: Public playerMissColorList As List(Of Color)
        return:
          type: System.Collections.Generic.List{Color}
    - id: UCT.Control.BattleControl.actSave
      commentId: F:UCT.Control.BattleControl.actSave
      language: CSharp
      name:
        CSharp: actSave
        VB: actSave
      nameWithType:
        CSharp: BattleControl.actSave
        VB: BattleControl.actSave
      qualifiedName:
        CSharp: UCT.Control.BattleControl.actSave
        VB: UCT.Control.BattleControl.actSave
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: actSave
        path: ''
        startLine: 19422
      syntax:
        content:
          CSharp: public List<string> actSave
          VB: Public actSave As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.Control.BattleControl.mercySave
      commentId: F:UCT.Control.BattleControl.mercySave
      language: CSharp
      name:
        CSharp: mercySave
        VB: mercySave
      nameWithType:
        CSharp: BattleControl.mercySave
        VB: BattleControl.mercySave
      qualifiedName:
        CSharp: UCT.Control.BattleControl.mercySave
        VB: UCT.Control.BattleControl.mercySave
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: mercySave
        path: ''
        startLine: 19424
      syntax:
        content:
          CSharp: public List<string> mercySave
          VB: Public mercySave As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.Control.BattleControl.enemiesNameSave
      commentId: F:UCT.Control.BattleControl.enemiesNameSave
      language: CSharp
      name:
        CSharp: enemiesNameSave
        VB: enemiesNameSave
      nameWithType:
        CSharp: BattleControl.enemiesNameSave
        VB: BattleControl.enemiesNameSave
      qualifiedName:
        CSharp: UCT.Control.BattleControl.enemiesNameSave
        VB: UCT.Control.BattleControl.enemiesNameSave
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: enemiesNameSave
        path: ''
        startLine: 19426
      syntax:
        content:
          CSharp: public List<string> enemiesNameSave
          VB: Public enemiesNameSave As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.Control.BattleControl.turnTextSave
      commentId: F:UCT.Control.BattleControl.turnTextSave
      language: CSharp
      name:
        CSharp: turnTextSave
        VB: turnTextSave
      nameWithType:
        CSharp: BattleControl.turnTextSave
        VB: BattleControl.turnTextSave
      qualifiedName:
        CSharp: UCT.Control.BattleControl.turnTextSave
        VB: UCT.Control.BattleControl.turnTextSave
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: turnTextSave
        path: ''
        startLine: 19428
      syntax:
        content:
          CSharp: public List<string> turnTextSave
          VB: Public turnTextSave As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.Control.BattleControl.turnDialogAsset
      commentId: F:UCT.Control.BattleControl.turnDialogAsset
      language: CSharp
      name:
        CSharp: turnDialogAsset
        VB: turnDialogAsset
      nameWithType:
        CSharp: BattleControl.turnDialogAsset
        VB: BattleControl.turnDialogAsset
      qualifiedName:
        CSharp: UCT.Control.BattleControl.turnDialogAsset
        VB: UCT.Control.BattleControl.turnDialogAsset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: turnDialogAsset
        path: ''
        startLine: 19430
      syntax:
        content:
          CSharp: public List<string> turnDialogAsset
          VB: Public turnDialogAsset As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.Control.BattleControl.BattleConfig
      commentId: F:UCT.Control.BattleControl.BattleConfig
      language: CSharp
      name:
        CSharp: BattleConfig
        VB: BattleConfig
      nameWithType:
        CSharp: BattleControl.BattleConfig
        VB: BattleControl.BattleConfig
      qualifiedName:
        CSharp: UCT.Control.BattleControl.BattleConfig
        VB: UCT.Control.BattleControl.BattleConfig
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: BattleConfig
        path: ''
        startLine: 19432
      syntax:
        content:
          CSharp: public IBattleConfig BattleConfig
          VB: Public BattleConfig As IBattleConfig
        return:
          type: Global.IBattleConfig
  - id: UCT.Control.BattleControl.BulletColor
    commentId: T:UCT.Control.BattleControl.BulletColor
    language: CSharp
    name:
      CSharp: BattleControl.BulletColor
      VB: BattleControl.BulletColor
    nameWithType:
      CSharp: BattleControl.BulletColor
      VB: BattleControl.BulletColor
    qualifiedName:
      CSharp: UCT.Control.BattleControl.BulletColor
      VB: UCT.Control.BattleControl.BulletColor
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: BulletColor
      path: ''
      startLine: 19396
    summary: "\n弹幕颜色数据（原版特殊弹幕），非视觉颜色\n"
    example: []
    syntax:
      content:
        CSharp: public enum BattleControl.BulletColor
        VB: Public Enum BattleControl.BulletColor
    items:
    - id: UCT.Control.BattleControl.BulletColor.White
      commentId: F:UCT.Control.BattleControl.BulletColor.White
      language: CSharp
      name:
        CSharp: White
        VB: White
      nameWithType:
        CSharp: BattleControl.BulletColor.White
        VB: BattleControl.BulletColor.White
      qualifiedName:
        CSharp: UCT.Control.BattleControl.BulletColor.White
        VB: UCT.Control.BattleControl.BulletColor.White
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: White
        path: ''
        startLine: 19398
      syntax:
        content:
          CSharp: White = 0
          VB: White = 0
        return:
          type: UCT.Control.BattleControl.BulletColor
    - id: UCT.Control.BattleControl.BulletColor.Blue
      commentId: F:UCT.Control.BattleControl.BulletColor.Blue
      language: CSharp
      name:
        CSharp: Blue
        VB: Blue
      nameWithType:
        CSharp: BattleControl.BulletColor.Blue
        VB: BattleControl.BulletColor.Blue
      qualifiedName:
        CSharp: UCT.Control.BattleControl.BulletColor.Blue
        VB: UCT.Control.BattleControl.BulletColor.Blue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Blue
        path: ''
        startLine: 19399
      syntax:
        content:
          CSharp: Blue = 1
          VB: Blue = 1
        return:
          type: UCT.Control.BattleControl.BulletColor
    - id: UCT.Control.BattleControl.BulletColor.Orange
      commentId: F:UCT.Control.BattleControl.BulletColor.Orange
      language: CSharp
      name:
        CSharp: Orange
        VB: Orange
      nameWithType:
        CSharp: BattleControl.BulletColor.Orange
        VB: BattleControl.BulletColor.Orange
      qualifiedName:
        CSharp: UCT.Control.BattleControl.BulletColor.Orange
        VB: UCT.Control.BattleControl.BulletColor.Orange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Orange
        path: ''
        startLine: 19400
      syntax:
        content:
          CSharp: Orange = 2
          VB: Orange = 2
        return:
          type: UCT.Control.BattleControl.BulletColor
    - id: UCT.Control.BattleControl.BulletColor.Green
      commentId: F:UCT.Control.BattleControl.BulletColor.Green
      language: CSharp
      name:
        CSharp: Green
        VB: Green
      nameWithType:
        CSharp: BattleControl.BulletColor.Green
        VB: BattleControl.BulletColor.Green
      qualifiedName:
        CSharp: UCT.Control.BattleControl.BulletColor.Green
        VB: UCT.Control.BattleControl.BulletColor.Green
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Green
        path: ''
        startLine: 19401
      syntax:
        content:
          CSharp: Green = 3
          VB: Green = 3
        return:
          type: UCT.Control.BattleControl.BulletColor
  - id: UCT.Control.BattleControl.PlayerColor
    commentId: T:UCT.Control.BattleControl.PlayerColor
    language: CSharp
    name:
      CSharp: BattleControl.PlayerColor
      VB: BattleControl.PlayerColor
    nameWithType:
      CSharp: BattleControl.PlayerColor
      VB: BattleControl.PlayerColor
    qualifiedName:
      CSharp: UCT.Control.BattleControl.PlayerColor
      VB: UCT.Control.BattleControl.PlayerColor
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: PlayerColor
      path: ''
      startLine: 19407
    summary: "\n玩家数据颜色\n"
    example: []
    syntax:
      content:
        CSharp: public enum BattleControl.PlayerColor
        VB: Public Enum BattleControl.PlayerColor
    items:
    - id: UCT.Control.BattleControl.PlayerColor.Red
      commentId: F:UCT.Control.BattleControl.PlayerColor.Red
      language: CSharp
      name:
        CSharp: Red
        VB: Red
      nameWithType:
        CSharp: BattleControl.PlayerColor.Red
        VB: BattleControl.PlayerColor.Red
      qualifiedName:
        CSharp: UCT.Control.BattleControl.PlayerColor.Red
        VB: UCT.Control.BattleControl.PlayerColor.Red
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Red
        path: ''
        startLine: 19409
      syntax:
        content:
          CSharp: Red = 0
          VB: Red = 0
        return:
          type: UCT.Control.BattleControl.PlayerColor
    - id: UCT.Control.BattleControl.PlayerColor.Orange
      commentId: F:UCT.Control.BattleControl.PlayerColor.Orange
      language: CSharp
      name:
        CSharp: Orange
        VB: Orange
      nameWithType:
        CSharp: BattleControl.PlayerColor.Orange
        VB: BattleControl.PlayerColor.Orange
      qualifiedName:
        CSharp: UCT.Control.BattleControl.PlayerColor.Orange
        VB: UCT.Control.BattleControl.PlayerColor.Orange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Orange
        path: ''
        startLine: 19410
      syntax:
        content:
          CSharp: Orange = 1
          VB: Orange = 1
        return:
          type: UCT.Control.BattleControl.PlayerColor
    - id: UCT.Control.BattleControl.PlayerColor.Yellow
      commentId: F:UCT.Control.BattleControl.PlayerColor.Yellow
      language: CSharp
      name:
        CSharp: Yellow
        VB: Yellow
      nameWithType:
        CSharp: BattleControl.PlayerColor.Yellow
        VB: BattleControl.PlayerColor.Yellow
      qualifiedName:
        CSharp: UCT.Control.BattleControl.PlayerColor.Yellow
        VB: UCT.Control.BattleControl.PlayerColor.Yellow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Yellow
        path: ''
        startLine: 19411
      syntax:
        content:
          CSharp: Yellow = 2
          VB: Yellow = 2
        return:
          type: UCT.Control.BattleControl.PlayerColor
    - id: UCT.Control.BattleControl.PlayerColor.Green
      commentId: F:UCT.Control.BattleControl.PlayerColor.Green
      language: CSharp
      name:
        CSharp: Green
        VB: Green
      nameWithType:
        CSharp: BattleControl.PlayerColor.Green
        VB: BattleControl.PlayerColor.Green
      qualifiedName:
        CSharp: UCT.Control.BattleControl.PlayerColor.Green
        VB: UCT.Control.BattleControl.PlayerColor.Green
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Green
        path: ''
        startLine: 19412
      syntax:
        content:
          CSharp: Green = 3
          VB: Green = 3
        return:
          type: UCT.Control.BattleControl.PlayerColor
    - id: UCT.Control.BattleControl.PlayerColor.Cyan
      commentId: F:UCT.Control.BattleControl.PlayerColor.Cyan
      language: CSharp
      name:
        CSharp: Cyan
        VB: Cyan
      nameWithType:
        CSharp: BattleControl.PlayerColor.Cyan
        VB: BattleControl.PlayerColor.Cyan
      qualifiedName:
        CSharp: UCT.Control.BattleControl.PlayerColor.Cyan
        VB: UCT.Control.BattleControl.PlayerColor.Cyan
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Cyan
        path: ''
        startLine: 19413
      syntax:
        content:
          CSharp: Cyan = 4
          VB: Cyan = 4
        return:
          type: UCT.Control.BattleControl.PlayerColor
    - id: UCT.Control.BattleControl.PlayerColor.Blue
      commentId: F:UCT.Control.BattleControl.PlayerColor.Blue
      language: CSharp
      name:
        CSharp: Blue
        VB: Blue
      nameWithType:
        CSharp: BattleControl.PlayerColor.Blue
        VB: BattleControl.PlayerColor.Blue
      qualifiedName:
        CSharp: UCT.Control.BattleControl.PlayerColor.Blue
        VB: UCT.Control.BattleControl.PlayerColor.Blue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Blue
        path: ''
        startLine: 19414
      syntax:
        content:
          CSharp: Blue = 5
          VB: Blue = 5
        return:
          type: UCT.Control.BattleControl.PlayerColor
    - id: UCT.Control.BattleControl.PlayerColor.Purple
      commentId: F:UCT.Control.BattleControl.PlayerColor.Purple
      language: CSharp
      name:
        CSharp: Purple
        VB: Purple
      nameWithType:
        CSharp: BattleControl.PlayerColor.Purple
        VB: BattleControl.PlayerColor.Purple
      qualifiedName:
        CSharp: UCT.Control.BattleControl.PlayerColor.Purple
        VB: UCT.Control.BattleControl.PlayerColor.Purple
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Purple
        path: ''
        startLine: 19415
      syntax:
        content:
          CSharp: Purple = 6
          VB: Purple = 6
        return:
          type: UCT.Control.BattleControl.PlayerColor
  - id: UCT.Control.CharacterSpriteManager
    commentId: T:UCT.Control.CharacterSpriteManager
    language: CSharp
    name:
      CSharp: CharacterSpriteManager
      VB: CharacterSpriteManager
    nameWithType:
      CSharp: CharacterSpriteManager
      VB: CharacterSpriteManager
    qualifiedName:
      CSharp: UCT.Control.CharacterSpriteManager
      VB: UCT.Control.CharacterSpriteManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: CharacterSpriteManager
      path: ''
      startLine: 19445
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class CharacterSpriteManager : ScriptableObject
        VB: >-
          <Serializable>

          Public Class CharacterSpriteManager Inherits ScriptableObject
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    items:
    - id: UCT.Control.CharacterSpriteManager.fxKeys
      commentId: F:UCT.Control.CharacterSpriteManager.fxKeys
      language: CSharp
      name:
        CSharp: fxKeys
        VB: fxKeys
      nameWithType:
        CSharp: CharacterSpriteManager.fxKeys
        VB: CharacterSpriteManager.fxKeys
      qualifiedName:
        CSharp: UCT.Control.CharacterSpriteManager.fxKeys
        VB: UCT.Control.CharacterSpriteManager.fxKeys
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: fxKeys
        path: ''
        startLine: 19449
      syntax:
        content:
          CSharp: public List<string> fxKeys
          VB: Public fxKeys As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.Control.CharacterSpriteManager.fxValues
      commentId: F:UCT.Control.CharacterSpriteManager.fxValues
      language: CSharp
      name:
        CSharp: fxValues
        VB: fxValues
      nameWithType:
        CSharp: CharacterSpriteManager.fxValues
        VB: CharacterSpriteManager.fxValues
      qualifiedName:
        CSharp: UCT.Control.CharacterSpriteManager.fxValues
        VB: UCT.Control.CharacterSpriteManager.fxValues
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: fxValues
        path: ''
        startLine: 19450
      syntax:
        content:
          CSharp: public List<AudioClip> fxValues
          VB: Public fxValues As List(Of AudioClip)
        return:
          type: System.Collections.Generic.List{AudioClip}
    - id: UCT.Control.CharacterSpriteManager.spriteKeys
      commentId: F:UCT.Control.CharacterSpriteManager.spriteKeys
      language: CSharp
      name:
        CSharp: spriteKeys
        VB: spriteKeys
      nameWithType:
        CSharp: CharacterSpriteManager.spriteKeys
        VB: CharacterSpriteManager.spriteKeys
      qualifiedName:
        CSharp: UCT.Control.CharacterSpriteManager.spriteKeys
        VB: UCT.Control.CharacterSpriteManager.spriteKeys
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: spriteKeys
        path: ''
        startLine: 19452
      syntax:
        content:
          CSharp: public List<string> spriteKeys
          VB: Public spriteKeys As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.Control.CharacterSpriteManager.spriteValues
      commentId: F:UCT.Control.CharacterSpriteManager.spriteValues
      language: CSharp
      name:
        CSharp: spriteValues
        VB: spriteValues
      nameWithType:
        CSharp: CharacterSpriteManager.spriteValues
        VB: CharacterSpriteManager.spriteValues
      qualifiedName:
        CSharp: UCT.Control.CharacterSpriteManager.spriteValues
        VB: UCT.Control.CharacterSpriteManager.spriteValues
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: spriteValues
        path: ''
        startLine: 19453
      syntax:
        content:
          CSharp: public List<SpriteExpressionCollection> spriteValues
          VB: Public spriteValues As List(Of SpriteExpressionCollection)
        return:
          type: System.Collections.Generic.List{UCT.Control.SpriteExpressionCollection}
    - id: UCT.Control.CharacterSpriteManager.StandardizeCharacterKey(System.String)
      commentId: M:UCT.Control.CharacterSpriteManager.StandardizeCharacterKey(System.String)
      language: CSharp
      name:
        CSharp: StandardizeCharacterKey(string)
        VB: StandardizeCharacterKey(String)
      nameWithType:
        CSharp: CharacterSpriteManager.StandardizeCharacterKey(string)
        VB: CharacterSpriteManager.StandardizeCharacterKey(String)
      qualifiedName:
        CSharp: UCT.Control.CharacterSpriteManager.StandardizeCharacterKey(string)
        VB: UCT.Control.CharacterSpriteManager.StandardizeCharacterKey(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: StandardizeCharacterKey
        path: ''
        startLine: 19459
      summary: "\n将所写的关于角色的富文本转换为展开形式（组，精灵，音频）。\n展开方式为依次检索，如果对应项为空，使用Default。\n"
      example: []
      syntax:
        content:
          CSharp: public static (string result, CharacterSpriteManager manager) StandardizeCharacterKey(string key)
          VB: Public Shared Function StandardizeCharacterKey(key As String) As (result As String, manager As CharacterSpriteManager)
        parameters:
        - id: key
          type: System.String
        return:
          type: System.ValueTuple{System.String,UCT.Control.CharacterSpriteManager}
      overload: UCT.Control.CharacterSpriteManager.StandardizeCharacterKey*
    - id: UCT.Control.CharacterSpriteManager.ParseTernary(System.String)
      commentId: M:UCT.Control.CharacterSpriteManager.ParseTernary(System.String)
      language: CSharp
      name:
        CSharp: ParseTernary(string)
        VB: ParseTernary(String)
      nameWithType:
        CSharp: CharacterSpriteManager.ParseTernary(string)
        VB: CharacterSpriteManager.ParseTernary(String)
      qualifiedName:
        CSharp: UCT.Control.CharacterSpriteManager.ParseTernary(string)
        VB: UCT.Control.CharacterSpriteManager.ParseTernary(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: ParseTernary
        path: ''
        startLine: 19650
      syntax:
        content:
          CSharp: public static (string Manager, string Sprite, string AudioClip)? ParseTernary(string key)
          VB: Public Shared Function ParseTernary(key As String) As (Manager As String, Sprite As String, AudioClip As String)?
        parameters:
        - id: key
          type: System.String
        return:
          type: System.Nullable{System.ValueTuple{System.String,System.String,System.String}}
      overload: UCT.Control.CharacterSpriteManager.ParseTernary*
  - id: UCT.Control.MusicData
    commentId: T:UCT.Control.MusicData
    language: CSharp
    name:
      CSharp: MusicData
      VB: MusicData
    nameWithType:
      CSharp: MusicData
      VB: MusicData
    qualifiedName:
      CSharp: UCT.Control.MusicData
      VB: UCT.Control.MusicData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: MusicData
      path: ''
      startLine: 19671
    syntax:
      content:
        CSharp: 'public class MusicData : ScriptableObject'
        VB: Public Class MusicData Inherits ScriptableObject
    inheritance:
    - System.Object
    items:
    - id: UCT.Control.MusicData.clip
      commentId: F:UCT.Control.MusicData.clip
      language: CSharp
      name:
        CSharp: clip
        VB: clip
      nameWithType:
        CSharp: MusicData.clip
        VB: MusicData.clip
      qualifiedName:
        CSharp: UCT.Control.MusicData.clip
        VB: UCT.Control.MusicData.clip
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: clip
        path: ''
        startLine: 19674
      syntax:
        content:
          CSharp: public AudioClip clip
          VB: Public clip As AudioClip
        return:
          type: Global.AudioClip
    - id: UCT.Control.MusicData.cover
      commentId: F:UCT.Control.MusicData.cover
      language: CSharp
      name:
        CSharp: cover
        VB: cover
      nameWithType:
        CSharp: MusicData.cover
        VB: MusicData.cover
      qualifiedName:
        CSharp: UCT.Control.MusicData.cover
        VB: UCT.Control.MusicData.cover
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: cover
        path: ''
        startLine: 19675
      syntax:
        content:
          CSharp: public Sprite cover
          VB: Public cover As Sprite
        return:
          type: Global.Sprite
    - id: UCT.Control.MusicData.bpm
      commentId: F:UCT.Control.MusicData.bpm
      language: CSharp
      name:
        CSharp: bpm
        VB: bpm
      nameWithType:
        CSharp: MusicData.bpm
        VB: MusicData.bpm
      qualifiedName:
        CSharp: UCT.Control.MusicData.bpm
        VB: UCT.Control.MusicData.bpm
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: bpm
        path: ''
        startLine: 19676
      syntax:
        content:
          CSharp: public int bpm
          VB: Public bpm As Integer
        return:
          type: System.Int32
    - id: UCT.Control.MusicData.musicDataName
      commentId: F:UCT.Control.MusicData.musicDataName
      language: CSharp
      name:
        CSharp: musicDataName
        VB: musicDataName
      nameWithType:
        CSharp: MusicData.musicDataName
        VB: MusicData.musicDataName
      qualifiedName:
        CSharp: UCT.Control.MusicData.musicDataName
        VB: UCT.Control.MusicData.musicDataName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: musicDataName
        path: ''
        startLine: 19677
      syntax:
        content:
          CSharp: public string musicDataName
          VB: Public musicDataName As String
        return:
          type: System.String
    - id: UCT.Control.MusicData.authorDataName
      commentId: F:UCT.Control.MusicData.authorDataName
      language: CSharp
      name:
        CSharp: authorDataName
        VB: authorDataName
      nameWithType:
        CSharp: MusicData.authorDataName
        VB: MusicData.authorDataName
      qualifiedName:
        CSharp: UCT.Control.MusicData.authorDataName
        VB: UCT.Control.MusicData.authorDataName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: authorDataName
        path: ''
        startLine: 19678
      syntax:
        content:
          CSharp: public string authorDataName
          VB: Public authorDataName As String
        return:
          type: System.String
    - id: UCT.Control.MusicData.informationDataName
      commentId: F:UCT.Control.MusicData.informationDataName
      language: CSharp
      name:
        CSharp: informationDataName
        VB: informationDataName
      nameWithType:
        CSharp: MusicData.informationDataName
        VB: MusicData.informationDataName
      qualifiedName:
        CSharp: UCT.Control.MusicData.informationDataName
        VB: UCT.Control.MusicData.informationDataName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: informationDataName
        path: ''
        startLine: 19679
      syntax:
        content:
          CSharp: public string informationDataName
          VB: Public informationDataName As String
        return:
          type: System.String
  - id: UCT.Control.AudioControl
    commentId: T:UCT.Control.AudioControl
    language: CSharp
    name:
      CSharp: AudioControl
      VB: AudioControl
    nameWithType:
      CSharp: AudioControl
      VB: AudioControl
    qualifiedName:
      CSharp: UCT.Control.AudioControl
      VB: UCT.Control.AudioControl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: AudioControl
      path: ''
      startLine: 19688
    syntax:
      content:
        CSharp: 'public class AudioControl : ScriptableObject'
        VB: Public Class AudioControl Inherits ScriptableObject
    inheritance:
    - System.Object
    items:
    - id: UCT.Control.AudioControl.globalAudioMixer
      commentId: F:UCT.Control.AudioControl.globalAudioMixer
      language: CSharp
      name:
        CSharp: globalAudioMixer
        VB: globalAudioMixer
      nameWithType:
        CSharp: AudioControl.globalAudioMixer
        VB: AudioControl.globalAudioMixer
      qualifiedName:
        CSharp: UCT.Control.AudioControl.globalAudioMixer
        VB: UCT.Control.AudioControl.globalAudioMixer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: globalAudioMixer
        path: ''
        startLine: 19691
      syntax:
        content:
          CSharp: public AudioMixer globalAudioMixer
          VB: Public globalAudioMixer As AudioMixer
        return:
          type: Global.AudioMixer
    - id: UCT.Control.AudioControl.fxClipUI
      commentId: F:UCT.Control.AudioControl.fxClipUI
      language: CSharp
      name:
        CSharp: fxClipUI
        VB: fxClipUI
      nameWithType:
        CSharp: AudioControl.fxClipUI
        VB: AudioControl.fxClipUI
      qualifiedName:
        CSharp: UCT.Control.AudioControl.fxClipUI
        VB: UCT.Control.AudioControl.fxClipUI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: fxClipUI
        path: ''
        startLine: 19694
      syntax:
        content:
          CSharp: public List<AudioClip> fxClipUI
          VB: Public fxClipUI As List(Of AudioClip)
        return:
          type: System.Collections.Generic.List{AudioClip}
    - id: UCT.Control.AudioControl.fxClipBattle
      commentId: F:UCT.Control.AudioControl.fxClipBattle
      language: CSharp
      name:
        CSharp: fxClipBattle
        VB: fxClipBattle
      nameWithType:
        CSharp: AudioControl.fxClipBattle
        VB: AudioControl.fxClipBattle
      qualifiedName:
        CSharp: UCT.Control.AudioControl.fxClipBattle
        VB: UCT.Control.AudioControl.fxClipBattle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: fxClipBattle
        path: ''
        startLine: 19697
      syntax:
        content:
          CSharp: public List<AudioClip> fxClipBattle
          VB: Public fxClipBattle As List(Of AudioClip)
        return:
          type: System.Collections.Generic.List{AudioClip}
    - id: UCT.Control.AudioControl.fxClipWalk
      commentId: F:UCT.Control.AudioControl.fxClipWalk
      language: CSharp
      name:
        CSharp: fxClipWalk
        VB: fxClipWalk
      nameWithType:
        CSharp: AudioControl.fxClipWalk
        VB: AudioControl.fxClipWalk
      qualifiedName:
        CSharp: UCT.Control.AudioControl.fxClipWalk
        VB: UCT.Control.AudioControl.fxClipWalk
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: fxClipWalk
        path: ''
        startLine: 19700
      syntax:
        content:
          CSharp: public List<AudioClip> fxClipWalk
          VB: Public fxClipWalk As List(Of AudioClip)
        return:
          type: System.Collections.Generic.List{AudioClip}
  - id: UCT.Control.SpriteExpressionCollection
    commentId: T:UCT.Control.SpriteExpressionCollection
    language: CSharp
    name:
      CSharp: SpriteExpressionCollection
      VB: SpriteExpressionCollection
    nameWithType:
      CSharp: SpriteExpressionCollection
      VB: SpriteExpressionCollection
    qualifiedName:
      CSharp: UCT.Control.SpriteExpressionCollection
      VB: UCT.Control.SpriteExpressionCollection
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: SpriteExpressionCollection
      path: ''
      startLine: 19709
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class SpriteExpressionCollection : ScriptableObject
        VB: >-
          <Serializable>

          Public Class SpriteExpressionCollection Inherits ScriptableObject
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    items:
    - id: UCT.Control.SpriteExpressionCollection.defaultSprite
      commentId: F:UCT.Control.SpriteExpressionCollection.defaultSprite
      language: CSharp
      name:
        CSharp: defaultSprite
        VB: defaultSprite
      nameWithType:
        CSharp: SpriteExpressionCollection.defaultSprite
        VB: SpriteExpressionCollection.defaultSprite
      qualifiedName:
        CSharp: UCT.Control.SpriteExpressionCollection.defaultSprite
        VB: UCT.Control.SpriteExpressionCollection.defaultSprite
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: defaultSprite
        path: ''
        startLine: 19720
      syntax:
        content:
          CSharp: public Sprite defaultSprite
          VB: Public defaultSprite As Sprite
        return:
          type: Global.Sprite
    - id: UCT.Control.SpriteExpressionCollection.speakingSprites
      commentId: F:UCT.Control.SpriteExpressionCollection.speakingSprites
      language: CSharp
      name:
        CSharp: speakingSprites
        VB: speakingSprites
      nameWithType:
        CSharp: SpriteExpressionCollection.speakingSprites
        VB: SpriteExpressionCollection.speakingSprites
      qualifiedName:
        CSharp: UCT.Control.SpriteExpressionCollection.speakingSprites
        VB: UCT.Control.SpriteExpressionCollection.speakingSprites
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: speakingSprites
        path: ''
        startLine: 19721
      syntax:
        content:
          CSharp: public List<Sprite> speakingSprites
          VB: Public speakingSprites As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
    - id: UCT.Control.SpriteExpressionCollection.blinkingSprites
      commentId: F:UCT.Control.SpriteExpressionCollection.blinkingSprites
      language: CSharp
      name:
        CSharp: blinkingSprites
        VB: blinkingSprites
      nameWithType:
        CSharp: SpriteExpressionCollection.blinkingSprites
        VB: SpriteExpressionCollection.blinkingSprites
      qualifiedName:
        CSharp: UCT.Control.SpriteExpressionCollection.blinkingSprites
        VB: UCT.Control.SpriteExpressionCollection.blinkingSprites
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: blinkingSprites
        path: ''
        startLine: 19722
      syntax:
        content:
          CSharp: public List<Sprite> blinkingSprites
          VB: Public blinkingSprites As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
  - id: UCT.Control.SpriteExpressionCollection.State
    commentId: T:UCT.Control.SpriteExpressionCollection.State
    language: CSharp
    name:
      CSharp: SpriteExpressionCollection.State
      VB: SpriteExpressionCollection.State
    nameWithType:
      CSharp: SpriteExpressionCollection.State
      VB: SpriteExpressionCollection.State
    qualifiedName:
      CSharp: UCT.Control.SpriteExpressionCollection.State
      VB: UCT.Control.SpriteExpressionCollection.State
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: State
      path: ''
      startLine: 19713
    syntax:
      content:
        CSharp: public enum SpriteExpressionCollection.State
        VB: Public Enum SpriteExpressionCollection.State
    items:
    - id: UCT.Control.SpriteExpressionCollection.State.Default
      commentId: F:UCT.Control.SpriteExpressionCollection.State.Default
      language: CSharp
      name:
        CSharp: Default
        VB: Default
      nameWithType:
        CSharp: SpriteExpressionCollection.State.Default
        VB: SpriteExpressionCollection.State.Default
      qualifiedName:
        CSharp: UCT.Control.SpriteExpressionCollection.State.Default
        VB: UCT.Control.SpriteExpressionCollection.State.Default
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Default
        path: ''
        startLine: 19715
      syntax:
        content:
          CSharp: Default = 0
          VB: Default = 0
        return:
          type: UCT.Control.SpriteExpressionCollection.State
    - id: UCT.Control.SpriteExpressionCollection.State.Speaking
      commentId: F:UCT.Control.SpriteExpressionCollection.State.Speaking
      language: CSharp
      name:
        CSharp: Speaking
        VB: Speaking
      nameWithType:
        CSharp: SpriteExpressionCollection.State.Speaking
        VB: SpriteExpressionCollection.State.Speaking
      qualifiedName:
        CSharp: UCT.Control.SpriteExpressionCollection.State.Speaking
        VB: UCT.Control.SpriteExpressionCollection.State.Speaking
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Speaking
        path: ''
        startLine: 19716
      syntax:
        content:
          CSharp: Speaking = 1
          VB: Speaking = 1
        return:
          type: UCT.Control.SpriteExpressionCollection.State
    - id: UCT.Control.SpriteExpressionCollection.State.Blinking
      commentId: F:UCT.Control.SpriteExpressionCollection.State.Blinking
      language: CSharp
      name:
        CSharp: Blinking
        VB: Blinking
      nameWithType:
        CSharp: SpriteExpressionCollection.State.Blinking
        VB: SpriteExpressionCollection.State.Blinking
      qualifiedName:
        CSharp: UCT.Control.SpriteExpressionCollection.State.Blinking
        VB: UCT.Control.SpriteExpressionCollection.State.Blinking
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Blinking
        path: ''
        startLine: 19717
      syntax:
        content:
          CSharp: Blinking = 2
          VB: Blinking = 2
        return:
          type: UCT.Control.SpriteExpressionCollection.State
  - id: UCT.Control.OverworldControl
    commentId: T:UCT.Control.OverworldControl
    language: CSharp
    name:
      CSharp: OverworldControl
      VB: OverworldControl
    nameWithType:
      CSharp: OverworldControl
      VB: OverworldControl
    qualifiedName:
      CSharp: UCT.Control.OverworldControl
      VB: UCT.Control.OverworldControl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: OverworldControl
      path: ''
      startLine: 19734
    summary: "\n主要用于Overworld的数据与通用基本数据\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OverworldControl : ScriptableObject'
        VB: Public Class OverworldControl Inherits ScriptableObject
    inheritance:
    - System.Object
    items:
    - id: UCT.Control.OverworldControl.frames
      commentId: F:UCT.Control.OverworldControl.frames
      language: CSharp
      name:
        CSharp: frames
        VB: frames
      nameWithType:
        CSharp: OverworldControl.frames
        VB: OverworldControl.frames
      qualifiedName:
        CSharp: UCT.Control.OverworldControl.frames
        VB: UCT.Control.OverworldControl.frames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: frames
        path: ''
        startLine: 19745
      syntax:
        content:
          CSharp: public List<Sprite> frames
          VB: Public frames As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
    - id: UCT.Control.OverworldControl.isSetting
      commentId: F:UCT.Control.OverworldControl.isSetting
      language: CSharp
      name:
        CSharp: isSetting
        VB: isSetting
      nameWithType:
        CSharp: OverworldControl.isSetting
        VB: OverworldControl.isSetting
      qualifiedName:
        CSharp: UCT.Control.OverworldControl.isSetting
        VB: UCT.Control.OverworldControl.isSetting
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: isSetting
        path: ''
        startLine: 19748
      syntax:
        content:
          CSharp: public bool isSetting
          VB: Public isSetting As Boolean
        return:
          type: System.Boolean
    - id: UCT.Control.OverworldControl.tmpFonts
      commentId: F:UCT.Control.OverworldControl.tmpFonts
      language: CSharp
      name:
        CSharp: tmpFonts
        VB: tmpFonts
      nameWithType:
        CSharp: OverworldControl.tmpFonts
        VB: OverworldControl.tmpFonts
      qualifiedName:
        CSharp: UCT.Control.OverworldControl.tmpFonts
        VB: UCT.Control.OverworldControl.tmpFonts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: tmpFonts
        path: ''
        startLine: 19751
      syntax:
        content:
          CSharp: public List<TMP_FontAsset> tmpFonts
          VB: Public tmpFonts As List(Of TMP_FontAsset)
        return:
          type: System.Collections.Generic.List{TMP_FontAsset}
  - id: UCT.Control.OverworldControl.DynamicType
    commentId: T:UCT.Control.OverworldControl.DynamicType
    language: CSharp
    name:
      CSharp: OverworldControl.DynamicType
      VB: OverworldControl.DynamicType
    nameWithType:
      CSharp: OverworldControl.DynamicType
      VB: OverworldControl.DynamicType
    qualifiedName:
      CSharp: UCT.Control.OverworldControl.DynamicType
      VB: UCT.Control.OverworldControl.DynamicType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: DynamicType
      path: ''
      startLine: 19737
    syntax:
      content:
        CSharp: public enum OverworldControl.DynamicType
        VB: Public Enum OverworldControl.DynamicType
    items:
    - id: UCT.Control.OverworldControl.DynamicType.None
      commentId: F:UCT.Control.OverworldControl.DynamicType.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: OverworldControl.DynamicType.None
        VB: OverworldControl.DynamicType.None
      qualifiedName:
        CSharp: UCT.Control.OverworldControl.DynamicType.None
        VB: UCT.Control.OverworldControl.DynamicType.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: None
        path: ''
        startLine: 19739
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: UCT.Control.OverworldControl.DynamicType
    - id: UCT.Control.OverworldControl.DynamicType.Shake
      commentId: F:UCT.Control.OverworldControl.DynamicType.Shake
      language: CSharp
      name:
        CSharp: Shake
        VB: Shake
      nameWithType:
        CSharp: OverworldControl.DynamicType.Shake
        VB: OverworldControl.DynamicType.Shake
      qualifiedName:
        CSharp: UCT.Control.OverworldControl.DynamicType.Shake
        VB: UCT.Control.OverworldControl.DynamicType.Shake
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Shake
        path: ''
        startLine: 19740
      syntax:
        content:
          CSharp: Shake = 1
          VB: Shake = 1
        return:
          type: UCT.Control.OverworldControl.DynamicType
    - id: UCT.Control.OverworldControl.DynamicType.Fade
      commentId: F:UCT.Control.OverworldControl.DynamicType.Fade
      language: CSharp
      name:
        CSharp: Fade
        VB: Fade
      nameWithType:
        CSharp: OverworldControl.DynamicType.Fade
        VB: OverworldControl.DynamicType.Fade
      qualifiedName:
        CSharp: UCT.Control.OverworldControl.DynamicType.Fade
        VB: UCT.Control.OverworldControl.DynamicType.Fade
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Fade
        path: ''
        startLine: 19741
      syntax:
        content:
          CSharp: Fade = 2
          VB: Fade = 2
        return:
          type: UCT.Control.OverworldControl.DynamicType
    - id: UCT.Control.OverworldControl.DynamicType.Up
      commentId: F:UCT.Control.OverworldControl.DynamicType.Up
      language: CSharp
      name:
        CSharp: Up
        VB: Up
      nameWithType:
        CSharp: OverworldControl.DynamicType.Up
        VB: OverworldControl.DynamicType.Up
      qualifiedName:
        CSharp: UCT.Control.OverworldControl.DynamicType.Up
        VB: UCT.Control.OverworldControl.DynamicType.Up
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: Up
        path: ''
        startLine: 19742
      syntax:
        content:
          CSharp: Up = 3
          VB: Up = 3
        return:
          type: UCT.Control.OverworldControl.DynamicType
  - id: UCT.Control.LanguagePackControl
    commentId: T:UCT.Control.LanguagePackControl
    language: CSharp
    name:
      CSharp: LanguagePackControl
      VB: LanguagePackControl
    nameWithType:
      CSharp: LanguagePackControl
      VB: LanguagePackControl
    qualifiedName:
      CSharp: UCT.Control.LanguagePackControl
      VB: UCT.Control.LanguagePackControl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: LanguagePackControl
      path: ''
      startLine: 19762
    summary: "\n存储所有物品信息。（准备废除）\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LanguagePackControl : ScriptableObject'
        VB: Public Class LanguagePackControl Inherits ScriptableObject
    inheritance:
    - System.Object
    items:
    - id: UCT.Control.LanguagePackControl.itemTexts
      commentId: F:UCT.Control.LanguagePackControl.itemTexts
      language: CSharp
      name:
        CSharp: itemTexts
        VB: itemTexts
      nameWithType:
        CSharp: LanguagePackControl.itemTexts
        VB: LanguagePackControl.itemTexts
      qualifiedName:
        CSharp: UCT.Control.LanguagePackControl.itemTexts
        VB: UCT.Control.LanguagePackControl.itemTexts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: itemTexts
        path: ''
        startLine: 19765
      syntax:
        content:
          CSharp: public List<string> itemTexts
          VB: Public itemTexts As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.Control.LanguagePackControl.dataTexts
      commentId: F:UCT.Control.LanguagePackControl.dataTexts
      language: CSharp
      name:
        CSharp: dataTexts
        VB: dataTexts
      nameWithType:
        CSharp: LanguagePackControl.dataTexts
        VB: LanguagePackControl.dataTexts
      qualifiedName:
        CSharp: UCT.Control.LanguagePackControl.dataTexts
        VB: UCT.Control.LanguagePackControl.dataTexts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: dataTexts
        path: ''
        startLine: 19766
      syntax:
        content:
          CSharp: public List<string> dataTexts
          VB: Public dataTexts As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.Control.LanguagePackControl.sceneTexts
      commentId: F:UCT.Control.LanguagePackControl.sceneTexts
      language: CSharp
      name:
        CSharp: sceneTexts
        VB: sceneTexts
      nameWithType:
        CSharp: LanguagePackControl.sceneTexts
        VB: LanguagePackControl.sceneTexts
      qualifiedName:
        CSharp: UCT.Control.LanguagePackControl.sceneTexts
        VB: UCT.Control.LanguagePackControl.sceneTexts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: sceneTexts
        path: ''
        startLine: 19767
      syntax:
        content:
          CSharp: public List<string> sceneTexts
          VB: Public sceneTexts As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.Control.LanguagePackControl.settingTexts
      commentId: F:UCT.Control.LanguagePackControl.settingTexts
      language: CSharp
      name:
        CSharp: settingTexts
        VB: settingTexts
      nameWithType:
        CSharp: LanguagePackControl.settingTexts
        VB: LanguagePackControl.settingTexts
      qualifiedName:
        CSharp: UCT.Control.LanguagePackControl.settingTexts
        VB: UCT.Control.LanguagePackControl.settingTexts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: settingTexts
        path: ''
        startLine: 19768
      syntax:
        content:
          CSharp: public List<string> settingTexts
          VB: Public settingTexts As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
  - id: UCT.Control.PlayerControl
    commentId: T:UCT.Control.PlayerControl
    language: CSharp
    name:
      CSharp: PlayerControl
      VB: PlayerControl
    nameWithType:
      CSharp: PlayerControl
      VB: PlayerControl
    qualifiedName:
      CSharp: UCT.Control.PlayerControl
      VB: UCT.Control.PlayerControl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: PlayerControl
      path: ''
      startLine: 19781
    summary: "\n玩家的信息\n以及一些相关的设置\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PlayerControl : ScriptableObject'
        VB: Public Class PlayerControl Inherits ScriptableObject
    inheritance:
    - System.Object
    items:
    - id: UCT.Control.PlayerControl.hp
      commentId: F:UCT.Control.PlayerControl.hp
      language: CSharp
      name:
        CSharp: hp
        VB: hp
      nameWithType:
        CSharp: PlayerControl.hp
        VB: PlayerControl.hp
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.hp
        VB: UCT.Control.PlayerControl.hp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: hp
        path: ''
        startLine: 19784
      syntax:
        content:
          CSharp: public int hp
          VB: Public hp As Integer
        return:
          type: System.Int32
    - id: UCT.Control.PlayerControl.hpMax
      commentId: F:UCT.Control.PlayerControl.hpMax
      language: CSharp
      name:
        CSharp: hpMax
        VB: hpMax
      nameWithType:
        CSharp: PlayerControl.hpMax
        VB: PlayerControl.hpMax
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.hpMax
        VB: UCT.Control.PlayerControl.hpMax
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: hpMax
        path: ''
        startLine: 19784
      syntax:
        content:
          CSharp: public int hpMax
          VB: Public hpMax As Integer
        return:
          type: System.Int32
    - id: UCT.Control.PlayerControl.lv
      commentId: F:UCT.Control.PlayerControl.lv
      language: CSharp
      name:
        CSharp: lv
        VB: lv
      nameWithType:
        CSharp: PlayerControl.lv
        VB: PlayerControl.lv
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.lv
        VB: UCT.Control.PlayerControl.lv
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: lv
        path: ''
        startLine: 19784
      syntax:
        content:
          CSharp: public int lv
          VB: Public lv As Integer
        return:
          type: System.Int32
    - id: UCT.Control.PlayerControl.exp
      commentId: F:UCT.Control.PlayerControl.exp
      language: CSharp
      name:
        CSharp: exp
        VB: exp
      nameWithType:
        CSharp: PlayerControl.exp
        VB: PlayerControl.exp
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.exp
        VB: UCT.Control.PlayerControl.exp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: exp
        path: ''
        startLine: 19784
      syntax:
        content:
          CSharp: public int exp
          VB: Public exp As Integer
        return:
          type: System.Int32
    - id: UCT.Control.PlayerControl.gold
      commentId: F:UCT.Control.PlayerControl.gold
      language: CSharp
      name:
        CSharp: gold
        VB: gold
      nameWithType:
        CSharp: PlayerControl.gold
        VB: PlayerControl.gold
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.gold
        VB: UCT.Control.PlayerControl.gold
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: gold
        path: ''
        startLine: 19784
      syntax:
        content:
          CSharp: public int gold
          VB: Public gold As Integer
        return:
          type: System.Int32
    - id: UCT.Control.PlayerControl.nextExp
      commentId: F:UCT.Control.PlayerControl.nextExp
      language: CSharp
      name:
        CSharp: nextExp
        VB: nextExp
      nameWithType:
        CSharp: PlayerControl.nextExp
        VB: PlayerControl.nextExp
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.nextExp
        VB: UCT.Control.PlayerControl.nextExp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: nextExp
        path: ''
        startLine: 19784
      syntax:
        content:
          CSharp: public int nextExp
          VB: Public nextExp As Integer
        return:
          type: System.Int32
    - id: UCT.Control.PlayerControl.missTime
      commentId: F:UCT.Control.PlayerControl.missTime
      language: CSharp
      name:
        CSharp: missTime
        VB: missTime
      nameWithType:
        CSharp: PlayerControl.missTime
        VB: PlayerControl.missTime
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.missTime
        VB: UCT.Control.PlayerControl.missTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: missTime
        path: ''
        startLine: 19785
      syntax:
        content:
          CSharp: public float missTime
          VB: Public missTime As Single
        return:
          type: System.Single
    - id: UCT.Control.PlayerControl.missTimeMax
      commentId: F:UCT.Control.PlayerControl.missTimeMax
      language: CSharp
      name:
        CSharp: missTimeMax
        VB: missTimeMax
      nameWithType:
        CSharp: PlayerControl.missTimeMax
        VB: PlayerControl.missTimeMax
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.missTimeMax
        VB: UCT.Control.PlayerControl.missTimeMax
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: missTimeMax
        path: ''
        startLine: 19785
      syntax:
        content:
          CSharp: public float missTimeMax
          VB: Public missTimeMax As Single
        return:
          type: System.Single
    - id: UCT.Control.PlayerControl.atk
      commentId: F:UCT.Control.PlayerControl.atk
      language: CSharp
      name:
        CSharp: atk
        VB: atk
      nameWithType:
        CSharp: PlayerControl.atk
        VB: PlayerControl.atk
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.atk
        VB: UCT.Control.PlayerControl.atk
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: atk
        path: ''
        startLine: 19788
      syntax:
        content:
          CSharp: public int atk
          VB: Public atk As Integer
        return:
          type: System.Int32
    - id: UCT.Control.PlayerControl.def
      commentId: F:UCT.Control.PlayerControl.def
      language: CSharp
      name:
        CSharp: def
        VB: def
      nameWithType:
        CSharp: PlayerControl.def
        VB: PlayerControl.def
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.def
        VB: UCT.Control.PlayerControl.def
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: def
        path: ''
        startLine: 19790
      syntax:
        content:
          CSharp: public int def
          VB: Public def As Integer
        return:
          type: System.Int32
    - id: UCT.Control.PlayerControl.playerName
      commentId: F:UCT.Control.PlayerControl.playerName
      language: CSharp
      name:
        CSharp: playerName
        VB: playerName
      nameWithType:
        CSharp: PlayerControl.playerName
        VB: PlayerControl.playerName
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.playerName
        VB: UCT.Control.PlayerControl.playerName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: playerName
        path: ''
        startLine: 19792
      syntax:
        content:
          CSharp: public string playerName
          VB: Public playerName As String
        return:
          type: System.String
    - id: UCT.Control.PlayerControl.items
      commentId: F:UCT.Control.PlayerControl.items
      language: CSharp
      name:
        CSharp: items
        VB: items
      nameWithType:
        CSharp: PlayerControl.items
        VB: PlayerControl.items
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.items
        VB: UCT.Control.PlayerControl.items
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: items
        path: ''
        startLine: 19793
      syntax:
        content:
          CSharp: public List<string> items
          VB: Public items As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
    - id: UCT.Control.PlayerControl.wearWeapon
      commentId: F:UCT.Control.PlayerControl.wearWeapon
      language: CSharp
      name:
        CSharp: wearWeapon
        VB: wearWeapon
      nameWithType:
        CSharp: PlayerControl.wearWeapon
        VB: PlayerControl.wearWeapon
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.wearWeapon
        VB: UCT.Control.PlayerControl.wearWeapon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: wearWeapon
        path: ''
        startLine: 19794
      syntax:
        content:
          CSharp: public string wearWeapon
          VB: Public wearWeapon As String
        return:
          type: System.String
    - id: UCT.Control.PlayerControl.wearArmor
      commentId: F:UCT.Control.PlayerControl.wearArmor
      language: CSharp
      name:
        CSharp: wearArmor
        VB: wearArmor
      nameWithType:
        CSharp: PlayerControl.wearArmor
        VB: PlayerControl.wearArmor
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.wearArmor
        VB: UCT.Control.PlayerControl.wearArmor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: wearArmor
        path: ''
        startLine: 19795
      syntax:
        content:
          CSharp: public string wearArmor
          VB: Public wearArmor As String
        return:
          type: System.String
    - id: UCT.Control.PlayerControl.canMove
      commentId: F:UCT.Control.PlayerControl.canMove
      language: CSharp
      name:
        CSharp: canMove
        VB: canMove
      nameWithType:
        CSharp: PlayerControl.canMove
        VB: PlayerControl.canMove
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.canMove
        VB: UCT.Control.PlayerControl.canMove
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: canMove
        path: ''
        startLine: 19796
      syntax:
        content:
          CSharp: public bool canMove
          VB: Public canMove As Boolean
        return:
          type: System.Boolean
    - id: UCT.Control.PlayerControl.gameTime
      commentId: F:UCT.Control.PlayerControl.gameTime
      language: CSharp
      name:
        CSharp: gameTime
        VB: gameTime
      nameWithType:
        CSharp: PlayerControl.gameTime
        VB: PlayerControl.gameTime
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.gameTime
        VB: UCT.Control.PlayerControl.gameTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: gameTime
        path: ''
        startLine: 19798
      syntax:
        content:
          CSharp: public float gameTime
          VB: Public gameTime As Single
        return:
          type: System.Single
    - id: UCT.Control.PlayerControl.playerLastPos
      commentId: F:UCT.Control.PlayerControl.playerLastPos
      language: CSharp
      name:
        CSharp: playerLastPos
        VB: playerLastPos
      nameWithType:
        CSharp: PlayerControl.playerLastPos
        VB: PlayerControl.playerLastPos
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.playerLastPos
        VB: UCT.Control.PlayerControl.playerLastPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: playerLastPos
        path: ''
        startLine: 19802
      syntax:
        content:
          CSharp: public Vector3 playerLastPos
          VB: Public playerLastPos As Vector3
        return:
          type: Global.Vector3
    - id: UCT.Control.PlayerControl.playerLastSavePos
      commentId: F:UCT.Control.PlayerControl.playerLastSavePos
      language: CSharp
      name:
        CSharp: playerLastSavePos
        VB: playerLastSavePos
      nameWithType:
        CSharp: PlayerControl.playerLastSavePos
        VB: PlayerControl.playerLastSavePos
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.playerLastSavePos
        VB: UCT.Control.PlayerControl.playerLastSavePos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: playerLastSavePos
        path: ''
        startLine: 19803
      syntax:
        content:
          CSharp: public Vector3 playerLastSavePos
          VB: Public playerLastSavePos As Vector3
        return:
          type: Global.Vector3
    - id: UCT.Control.PlayerControl.playerLastPosInBattle
      commentId: F:UCT.Control.PlayerControl.playerLastPosInBattle
      language: CSharp
      name:
        CSharp: playerLastPosInBattle
        VB: playerLastPosInBattle
      nameWithType:
        CSharp: PlayerControl.playerLastPosInBattle
        VB: PlayerControl.playerLastPosInBattle
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.playerLastPosInBattle
        VB: UCT.Control.PlayerControl.playerLastPosInBattle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: playerLastPosInBattle
        path: ''
        startLine: 19805
      syntax:
        content:
          CSharp: public Vector3 playerLastPosInBattle
          VB: Public playerLastPosInBattle As Vector3
        return:
          type: Global.Vector3
    - id: UCT.Control.PlayerControl.lastScene
      commentId: F:UCT.Control.PlayerControl.lastScene
      language: CSharp
      name:
        CSharp: lastScene
        VB: lastScene
      nameWithType:
        CSharp: PlayerControl.lastScene
        VB: PlayerControl.lastScene
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.lastScene
        VB: UCT.Control.PlayerControl.lastScene
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: lastScene
        path: ''
        startLine: 19808
      syntax:
        content:
          CSharp: public string lastScene
          VB: Public lastScene As String
        return:
          type: System.String
    - id: UCT.Control.PlayerControl.saveScene
      commentId: F:UCT.Control.PlayerControl.saveScene
      language: CSharp
      name:
        CSharp: saveScene
        VB: saveScene
      nameWithType:
        CSharp: PlayerControl.saveScene
        VB: PlayerControl.saveScene
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.saveScene
        VB: UCT.Control.PlayerControl.saveScene
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: saveScene
        path: ''
        startLine: 19810
      syntax:
        content:
          CSharp: public string saveScene
          VB: Public saveScene As String
        return:
          type: System.String
    - id: UCT.Control.PlayerControl.isDebug
      commentId: F:UCT.Control.PlayerControl.isDebug
      language: CSharp
      name:
        CSharp: isDebug
        VB: isDebug
      nameWithType:
        CSharp: PlayerControl.isDebug
        VB: PlayerControl.isDebug
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.isDebug
        VB: UCT.Control.PlayerControl.isDebug
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: isDebug
        path: ''
        startLine: 19813
      syntax:
        content:
          CSharp: public bool isDebug
          VB: Public isDebug As Boolean
        return:
          type: System.Boolean
    - id: UCT.Control.PlayerControl.invincible
      commentId: F:UCT.Control.PlayerControl.invincible
      language: CSharp
      name:
        CSharp: invincible
        VB: invincible
      nameWithType:
        CSharp: PlayerControl.invincible
        VB: PlayerControl.invincible
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.invincible
        VB: UCT.Control.PlayerControl.invincible
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: invincible
        path: ''
        startLine: 19816
      syntax:
        content:
          CSharp: public bool invincible
          VB: Public invincible As Boolean
        return:
          type: System.Boolean
    - id: UCT.Control.PlayerControl.keepInvincible
      commentId: F:UCT.Control.PlayerControl.keepInvincible
      language: CSharp
      name:
        CSharp: keepInvincible
        VB: keepInvincible
      nameWithType:
        CSharp: PlayerControl.keepInvincible
        VB: PlayerControl.keepInvincible
      qualifiedName:
        CSharp: UCT.Control.PlayerControl.keepInvincible
        VB: UCT.Control.PlayerControl.keepInvincible
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: keepInvincible
        path: ''
        startLine: 19818
      syntax:
        content:
          CSharp: public bool keepInvincible
          VB: Public keepInvincible As Boolean
        return:
          type: System.Boolean
  - id: UCT.Control.ItemController
    commentId: T:UCT.Control.ItemController
    language: CSharp
    name:
      CSharp: ItemController
      VB: ItemController
    nameWithType:
      CSharp: ItemController
      VB: ItemController
    qualifiedName:
      CSharp: UCT.Control.ItemController
      VB: UCT.Control.ItemController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: ItemController
      path: ''
      startLine: 19825
    syntax:
      content:
        CSharp: public class ItemController
        VB: Public Class ItemController
    inheritance:
    - System.Object
    items:
    - id: UCT.Control.ItemController.ItemDictionary
      commentId: P:UCT.Control.ItemController.ItemDictionary
      language: CSharp
      name:
        CSharp: ItemDictionary
        VB: ItemDictionary
      nameWithType:
        CSharp: ItemController.ItemDictionary
        VB: ItemController.ItemDictionary
      qualifiedName:
        CSharp: UCT.Control.ItemController.ItemDictionary
        VB: UCT.Control.ItemController.ItemDictionary
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: ItemDictionary
        path: ''
        startLine: 19827
      syntax:
        content:
          CSharp: public Dictionary<string, GameItem> ItemDictionary { get; }
          VB: Public ReadOnly Property ItemDictionary As Dictionary(Of String, GameItem)
        parameters: []
        return:
          type: System.Collections.Generic.Dictionary{System.String,UCT.Control.GameItem}
      overload: UCT.Control.ItemController.ItemDictionary*
    - id: UCT.Control.ItemController.InitializeItems
      commentId: M:UCT.Control.ItemController.InitializeItems
      language: CSharp
      name:
        CSharp: InitializeItems()
        VB: InitializeItems()
      nameWithType:
        CSharp: ItemController.InitializeItems()
        VB: ItemController.InitializeItems()
      qualifiedName:
        CSharp: UCT.Control.ItemController.InitializeItems()
        VB: UCT.Control.ItemController.InitializeItems()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: InitializeItems
        path: ''
        startLine: 19829
      syntax:
        content:
          CSharp: public void InitializeItems()
          VB: Public Sub InitializeItems()
      overload: UCT.Control.ItemController.InitializeItems*
  - id: UCT.Control.BulletControl
    commentId: T:UCT.Control.BulletControl
    language: CSharp
    name:
      CSharp: BulletControl
      VB: BulletControl
    nameWithType:
      CSharp: BulletControl
      VB: BulletControl
    qualifiedName:
      CSharp: UCT.Control.BulletControl
      VB: UCT.Control.BulletControl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Control
    source:
      id: BulletControl
      path: ''
      startLine: 19882
    summary: "\n弹幕文件\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BulletControl : ScriptableObject'
        VB: Public Class BulletControl Inherits ScriptableObject
    inheritance:
    - System.Object
    items:
    - id: UCT.Control.BulletControl.typeName
      commentId: F:UCT.Control.BulletControl.typeName
      language: CSharp
      name:
        CSharp: typeName
        VB: typeName
      nameWithType:
        CSharp: BulletControl.typeName
        VB: BulletControl.typeName
      qualifiedName:
        CSharp: UCT.Control.BulletControl.typeName
        VB: UCT.Control.BulletControl.typeName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: typeName
        path: ''
        startLine: 19886
      syntax:
        content:
          CSharp: public string typeName
          VB: Public typeName As String
        return:
          type: System.String
    - id: UCT.Control.BulletControl.objName
      commentId: F:UCT.Control.BulletControl.objName
      language: CSharp
      name:
        CSharp: objName
        VB: objName
      nameWithType:
        CSharp: BulletControl.objName
        VB: BulletControl.objName
      qualifiedName:
        CSharp: UCT.Control.BulletControl.objName
        VB: UCT.Control.BulletControl.objName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: objName
        path: ''
        startLine: 19889
      syntax:
        content:
          CSharp: public string objName
          VB: Public objName As String
        return:
          type: System.String
    - id: UCT.Control.BulletControl.layer
      commentId: F:UCT.Control.BulletControl.layer
      language: CSharp
      name:
        CSharp: layer
        VB: layer
      nameWithType:
        CSharp: BulletControl.layer
        VB: BulletControl.layer
      qualifiedName:
        CSharp: UCT.Control.BulletControl.layer
        VB: UCT.Control.BulletControl.layer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: layer
        path: ''
        startLine: 19892
      syntax:
        content:
          CSharp: public int layer
          VB: Public layer As Integer
        return:
          type: System.Int32
    - id: UCT.Control.BulletControl.sprite
      commentId: F:UCT.Control.BulletControl.sprite
      language: CSharp
      name:
        CSharp: sprite
        VB: sprite
      nameWithType:
        CSharp: BulletControl.sprite
        VB: BulletControl.sprite
      qualifiedName:
        CSharp: UCT.Control.BulletControl.sprite
        VB: UCT.Control.BulletControl.sprite
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: sprite
        path: ''
        startLine: 19895
      syntax:
        content:
          CSharp: public Sprite sprite
          VB: Public sprite As Sprite
        return:
          type: Global.Sprite
    - id: UCT.Control.BulletControl.triggerSize
      commentId: F:UCT.Control.BulletControl.triggerSize
      language: CSharp
      name:
        CSharp: triggerSize
        VB: triggerSize
      nameWithType:
        CSharp: BulletControl.triggerSize
        VB: BulletControl.triggerSize
      qualifiedName:
        CSharp: UCT.Control.BulletControl.triggerSize
        VB: UCT.Control.BulletControl.triggerSize
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: triggerSize
        path: ''
        startLine: 19898
      syntax:
        content:
          CSharp: public List<Vector2> triggerSize
          VB: Public triggerSize As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.Control.BulletControl.triggerOffset
      commentId: F:UCT.Control.BulletControl.triggerOffset
      language: CSharp
      name:
        CSharp: triggerOffset
        VB: triggerOffset
      nameWithType:
        CSharp: BulletControl.triggerOffset
        VB: BulletControl.triggerOffset
      qualifiedName:
        CSharp: UCT.Control.BulletControl.triggerOffset
        VB: UCT.Control.BulletControl.triggerOffset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: triggerOffset
        path: ''
        startLine: 19901
      syntax:
        content:
          CSharp: public List<Vector2> triggerOffset
          VB: Public triggerOffset As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.Control.BulletControl.triggerHit
      commentId: F:UCT.Control.BulletControl.triggerHit
      language: CSharp
      name:
        CSharp: triggerHit
        VB: triggerHit
      nameWithType:
        CSharp: BulletControl.triggerHit
        VB: BulletControl.triggerHit
      qualifiedName:
        CSharp: UCT.Control.BulletControl.triggerHit
        VB: UCT.Control.BulletControl.triggerHit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: triggerHit
        path: ''
        startLine: 19904
      syntax:
        content:
          CSharp: public List<int> triggerHit
          VB: Public triggerHit As List(Of Integer)
        return:
          type: System.Collections.Generic.List{System.Int32}
    - id: UCT.Control.BulletControl.bulletColor
      commentId: F:UCT.Control.BulletControl.bulletColor
      language: CSharp
      name:
        CSharp: bulletColor
        VB: bulletColor
      nameWithType:
        CSharp: BulletControl.bulletColor
        VB: BulletControl.bulletColor
      qualifiedName:
        CSharp: UCT.Control.BulletControl.bulletColor
        VB: UCT.Control.BulletControl.bulletColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: bulletColor
        path: ''
        startLine: 19907
      syntax:
        content:
          CSharp: public BulletColor bulletColor
          VB: Public bulletColor As BulletColor
        return:
          type: Global.BulletColor
    - id: UCT.Control.BulletControl.startMask
      commentId: F:UCT.Control.BulletControl.startMask
      language: CSharp
      name:
        CSharp: startMask
        VB: startMask
      nameWithType:
        CSharp: BulletControl.startMask
        VB: BulletControl.startMask
      qualifiedName:
        CSharp: UCT.Control.BulletControl.startMask
        VB: UCT.Control.BulletControl.startMask
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: startMask
        path: ''
        startLine: 19910
      syntax:
        content:
          CSharp: public SpriteMaskInteraction startMask
          VB: Public startMask As SpriteMaskInteraction
        return:
          type: Global.SpriteMaskInteraction
    - id: UCT.Control.BulletControl.triggerFollowMode
      commentId: F:UCT.Control.BulletControl.triggerFollowMode
      language: CSharp
      name:
        CSharp: triggerFollowMode
        VB: triggerFollowMode
      nameWithType:
        CSharp: BulletControl.triggerFollowMode
        VB: BulletControl.triggerFollowMode
      qualifiedName:
        CSharp: UCT.Control.BulletControl.triggerFollowMode
        VB: UCT.Control.BulletControl.triggerFollowMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Control
      source:
        id: triggerFollowMode
        path: ''
        startLine: 19913
      syntax:
        content:
          CSharp: public FollowMode triggerFollowMode
          VB: Public triggerFollowMode As FollowMode
        return:
          type: Global.FollowMode
- id: UCT.Scene
  commentId: N:UCT.Scene
  language: CSharp
  name:
    CSharp: UCT.Scene
    VB: UCT.Scene
  nameWithType:
    CSharp: UCT.Scene
    VB: UCT.Scene
  qualifiedName:
    CSharp: UCT.Scene
    VB: UCT.Scene
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.Scene.MusicRoomController
    commentId: T:UCT.Scene.MusicRoomController
    language: CSharp
    name:
      CSharp: MusicRoomController
      VB: MusicRoomController
    nameWithType:
      CSharp: MusicRoomController
      VB: MusicRoomController
    qualifiedName:
      CSharp: UCT.Scene.MusicRoomController
      VB: UCT.Scene.MusicRoomController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Scene
    source:
      id: MusicRoomController
      path: ''
      startLine: 19932
    syntax:
      content:
        CSharp: 'public class MusicRoomController : MonoBehaviour'
        VB: Public Class MusicRoomController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: UCT.Scene.StartController
    commentId: T:UCT.Scene.StartController
    language: CSharp
    name:
      CSharp: StartController
      VB: StartController
    nameWithType:
      CSharp: StartController
      VB: StartController
    qualifiedName:
      CSharp: UCT.Scene.StartController
      VB: UCT.Scene.StartController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Scene
    source:
      id: StartController
      path: ''
      startLine: 20682
    summary: "\n最初始场景（模板信息）的控制器\n"
    example: []
    syntax:
      content:
        CSharp: 'public class StartController : MonoBehaviour'
        VB: Public Class StartController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items: []
  - id: UCT.Scene.MenuController
    commentId: T:UCT.Scene.MenuController
    language: CSharp
    name:
      CSharp: MenuController
      VB: MenuController
    nameWithType:
      CSharp: MenuController
      VB: MenuController
    qualifiedName:
      CSharp: UCT.Scene.MenuController
      VB: UCT.Scene.MenuController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Scene
    source:
      id: MenuController
      path: ''
      startLine: 20789
    summary: "\n控制Menu场景\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MenuController : MonoBehaviour'
        VB: Public Class MenuController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Scene.MenuController.saveNumber
      commentId: F:UCT.Scene.MenuController.saveNumber
      language: CSharp
      name:
        CSharp: saveNumber
        VB: saveNumber
      nameWithType:
        CSharp: MenuController.saveNumber
        VB: MenuController.saveNumber
      qualifiedName:
        CSharp: UCT.Scene.MenuController.saveNumber
        VB: UCT.Scene.MenuController.saveNumber
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: saveNumber
        path: ''
        startLine: 20793
      syntax:
        content:
          CSharp: public int saveNumber
          VB: Public saveNumber As Integer
        return:
          type: System.Int32
  - id: UCT.Scene.RenameController
    commentId: T:UCT.Scene.RenameController
    language: CSharp
    name:
      CSharp: RenameController
      VB: RenameController
    nameWithType:
      CSharp: RenameController
      VB: RenameController
    qualifiedName:
      CSharp: UCT.Scene.RenameController
      VB: UCT.Scene.RenameController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Scene
    source:
      id: RenameController
      path: ''
      startLine: 21278
    syntax:
      content:
        CSharp: 'public class RenameController : MonoBehaviour'
        VB: Public Class RenameController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Scene.RenameController.selectedCharactersId
      commentId: F:UCT.Scene.RenameController.selectedCharactersId
      language: CSharp
      name:
        CSharp: selectedCharactersId
        VB: selectedCharactersId
      nameWithType:
        CSharp: RenameController.selectedCharactersId
        VB: RenameController.selectedCharactersId
      qualifiedName:
        CSharp: UCT.Scene.RenameController.selectedCharactersId
        VB: UCT.Scene.RenameController.selectedCharactersId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: selectedCharactersId
        path: ''
        startLine: 21349
      syntax:
        content:
          CSharp: public int selectedCharactersId
          VB: Public selectedCharactersId As Integer
        return:
          type: System.Int32
    - id: UCT.Scene.RenameController.isSelectedDone
      commentId: F:UCT.Scene.RenameController.isSelectedDone
      language: CSharp
      name:
        CSharp: isSelectedDone
        VB: isSelectedDone
      nameWithType:
        CSharp: RenameController.isSelectedDone
        VB: RenameController.isSelectedDone
      qualifiedName:
        CSharp: UCT.Scene.RenameController.isSelectedDone
        VB: UCT.Scene.RenameController.isSelectedDone
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: isSelectedDone
        path: ''
        startLine: 21350
      syntax:
        content:
          CSharp: public bool isSelectedDone
          VB: Public isSelectedDone As Boolean
        return:
          type: System.Boolean
    - id: UCT.Scene.RenameController.setName
      commentId: F:UCT.Scene.RenameController.setName
      language: CSharp
      name:
        CSharp: setName
        VB: setName
      nameWithType:
        CSharp: RenameController.setName
        VB: RenameController.setName
      qualifiedName:
        CSharp: UCT.Scene.RenameController.setName
        VB: UCT.Scene.RenameController.setName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: setName
        path: ''
        startLine: 21351
      syntax:
        content:
          CSharp: public string setName
          VB: Public setName As String
        return:
          type: System.String
    - id: UCT.Scene.RenameController.sceneState
      commentId: F:UCT.Scene.RenameController.sceneState
      language: CSharp
      name:
        CSharp: sceneState
        VB: sceneState
      nameWithType:
        CSharp: RenameController.sceneState
        VB: RenameController.sceneState
      qualifiedName:
        CSharp: UCT.Scene.RenameController.sceneState
        VB: UCT.Scene.RenameController.sceneState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: sceneState
        path: ''
        startLine: 21353
      syntax:
        content:
          CSharp: public RenameController.SceneState sceneState
          VB: Public sceneState As RenameController.SceneState
        return:
          type: UCT.Scene.RenameController.SceneState
  - id: UCT.Scene.RenameController.SceneState
    commentId: T:UCT.Scene.RenameController.SceneState
    language: CSharp
    name:
      CSharp: RenameController.SceneState
      VB: RenameController.SceneState
    nameWithType:
      CSharp: RenameController.SceneState
      VB: RenameController.SceneState
    qualifiedName:
      CSharp: UCT.Scene.RenameController.SceneState
      VB: UCT.Scene.RenameController.SceneState
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Scene
    source:
      id: SceneState
      path: ''
      startLine: 21280
    syntax:
      content:
        CSharp: public enum RenameController.SceneState
        VB: Public Enum RenameController.SceneState
    items:
    - id: UCT.Scene.RenameController.SceneState.Instruction
      commentId: F:UCT.Scene.RenameController.SceneState.Instruction
      language: CSharp
      name:
        CSharp: Instruction
        VB: Instruction
      nameWithType:
        CSharp: RenameController.SceneState.Instruction
        VB: RenameController.SceneState.Instruction
      qualifiedName:
        CSharp: UCT.Scene.RenameController.SceneState.Instruction
        VB: UCT.Scene.RenameController.SceneState.Instruction
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: Instruction
        path: ''
        startLine: 21282
      syntax:
        content:
          CSharp: Instruction = 0
          VB: Instruction = 0
        return:
          type: UCT.Scene.RenameController.SceneState
    - id: UCT.Scene.RenameController.SceneState.Naming
      commentId: F:UCT.Scene.RenameController.SceneState.Naming
      language: CSharp
      name:
        CSharp: Naming
        VB: Naming
      nameWithType:
        CSharp: RenameController.SceneState.Naming
        VB: RenameController.SceneState.Naming
      qualifiedName:
        CSharp: UCT.Scene.RenameController.SceneState.Naming
        VB: UCT.Scene.RenameController.SceneState.Naming
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: Naming
        path: ''
        startLine: 21283
      syntax:
        content:
          CSharp: Naming = 1
          VB: Naming = 1
        return:
          type: UCT.Scene.RenameController.SceneState
    - id: UCT.Scene.RenameController.SceneState.ConfirmName
      commentId: F:UCT.Scene.RenameController.SceneState.ConfirmName
      language: CSharp
      name:
        CSharp: ConfirmName
        VB: ConfirmName
      nameWithType:
        CSharp: RenameController.SceneState.ConfirmName
        VB: RenameController.SceneState.ConfirmName
      qualifiedName:
        CSharp: UCT.Scene.RenameController.SceneState.ConfirmName
        VB: UCT.Scene.RenameController.SceneState.ConfirmName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: ConfirmName
        path: ''
        startLine: 21284
      syntax:
        content:
          CSharp: ConfirmName = 2
          VB: ConfirmName = 2
        return:
          type: UCT.Scene.RenameController.SceneState
    - id: UCT.Scene.RenameController.SceneState.SwitchScene
      commentId: F:UCT.Scene.RenameController.SceneState.SwitchScene
      language: CSharp
      name:
        CSharp: SwitchScene
        VB: SwitchScene
      nameWithType:
        CSharp: RenameController.SceneState.SwitchScene
        VB: RenameController.SceneState.SwitchScene
      qualifiedName:
        CSharp: UCT.Scene.RenameController.SceneState.SwitchScene
        VB: UCT.Scene.RenameController.SceneState.SwitchScene
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: SwitchScene
        path: ''
        startLine: 21285
      syntax:
        content:
          CSharp: SwitchScene = 3
          VB: SwitchScene = 3
        return:
          type: UCT.Scene.RenameController.SceneState
  - id: UCT.Scene.AudioSpectrumVisualizer
    commentId: T:UCT.Scene.AudioSpectrumVisualizer
    language: CSharp
    name:
      CSharp: AudioSpectrumVisualizer
      VB: AudioSpectrumVisualizer
    nameWithType:
      CSharp: AudioSpectrumVisualizer
      VB: AudioSpectrumVisualizer
    qualifiedName:
      CSharp: UCT.Scene.AudioSpectrumVisualizer
      VB: UCT.Scene.AudioSpectrumVisualizer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Scene
    source:
      id: AudioSpectrumVisualizer
      path: ''
      startLine: 22565
    syntax:
      content:
        CSharp: 'public class AudioSpectrumVisualizer : MonoBehaviour'
        VB: Public Class AudioSpectrumVisualizer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Scene.AudioSpectrumVisualizer.prefab
      commentId: F:UCT.Scene.AudioSpectrumVisualizer.prefab
      language: CSharp
      name:
        CSharp: prefab
        VB: prefab
      nameWithType:
        CSharp: AudioSpectrumVisualizer.prefab
        VB: AudioSpectrumVisualizer.prefab
      qualifiedName:
        CSharp: UCT.Scene.AudioSpectrumVisualizer.prefab
        VB: UCT.Scene.AudioSpectrumVisualizer.prefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: prefab
        path: ''
        startLine: 22567
      syntax:
        content:
          CSharp: public GameObject prefab
          VB: Public prefab As GameObject
        return:
          type: Global.GameObject
    - id: UCT.Scene.AudioSpectrumVisualizer.objectCount
      commentId: F:UCT.Scene.AudioSpectrumVisualizer.objectCount
      language: CSharp
      name:
        CSharp: objectCount
        VB: objectCount
      nameWithType:
        CSharp: AudioSpectrumVisualizer.objectCount
        VB: AudioSpectrumVisualizer.objectCount
      qualifiedName:
        CSharp: UCT.Scene.AudioSpectrumVisualizer.objectCount
        VB: UCT.Scene.AudioSpectrumVisualizer.objectCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: objectCount
        path: ''
        startLine: 22568
      syntax:
        content:
          CSharp: public int objectCount
          VB: Public objectCount As Integer
        return:
          type: System.Int32
    - id: UCT.Scene.AudioSpectrumVisualizer.scaleMultiplier
      commentId: F:UCT.Scene.AudioSpectrumVisualizer.scaleMultiplier
      language: CSharp
      name:
        CSharp: scaleMultiplier
        VB: scaleMultiplier
      nameWithType:
        CSharp: AudioSpectrumVisualizer.scaleMultiplier
        VB: AudioSpectrumVisualizer.scaleMultiplier
      qualifiedName:
        CSharp: UCT.Scene.AudioSpectrumVisualizer.scaleMultiplier
        VB: UCT.Scene.AudioSpectrumVisualizer.scaleMultiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: scaleMultiplier
        path: ''
        startLine: 22570
      syntax:
        content:
          CSharp: public float scaleMultiplier
          VB: Public scaleMultiplier As Single
        return:
          type: System.Single
    - id: UCT.Scene.AudioSpectrumVisualizer.decayFactor
      commentId: F:UCT.Scene.AudioSpectrumVisualizer.decayFactor
      language: CSharp
      name:
        CSharp: decayFactor
        VB: decayFactor
      nameWithType:
        CSharp: AudioSpectrumVisualizer.decayFactor
        VB: AudioSpectrumVisualizer.decayFactor
      qualifiedName:
        CSharp: UCT.Scene.AudioSpectrumVisualizer.decayFactor
        VB: UCT.Scene.AudioSpectrumVisualizer.decayFactor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: decayFactor
        path: ''
        startLine: 22572
      syntax:
        content:
          CSharp: public float decayFactor
          VB: Public decayFactor As Single
        return:
          type: System.Single
  - id: UCT.Scene.StorySceneController
    commentId: T:UCT.Scene.StorySceneController
    language: CSharp
    name:
      CSharp: StorySceneController
      VB: StorySceneController
    nameWithType:
      CSharp: StorySceneController
      VB: StorySceneController
    qualifiedName:
      CSharp: UCT.Scene.StorySceneController
      VB: UCT.Scene.StorySceneController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Scene
    source:
      id: StorySceneController
      path: ''
      startLine: 22678
    summary: "\n¿ØÖÆ½²¹ÊÊÂ³¡¾°£¨²¥PPT£©\n"
    example: []
    syntax:
      content:
        CSharp: 'public class StorySceneController : MonoBehaviour'
        VB: Public Class StorySceneController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Scene.StorySceneController.pics
      commentId: F:UCT.Scene.StorySceneController.pics
      language: CSharp
      name:
        CSharp: pics
        VB: pics
      nameWithType:
        CSharp: StorySceneController.pics
        VB: StorySceneController.pics
      qualifiedName:
        CSharp: UCT.Scene.StorySceneController.pics
        VB: UCT.Scene.StorySceneController.pics
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: pics
        path: ''
        startLine: 22680
      syntax:
        content:
          CSharp: public List<Sprite> pics
          VB: Public pics As List(Of Sprite)
        return:
          type: System.Collections.Generic.List{Sprite}
    - id: UCT.Scene.StorySceneController.mask
      commentId: F:UCT.Scene.StorySceneController.mask
      language: CSharp
      name:
        CSharp: mask
        VB: mask
      nameWithType:
        CSharp: StorySceneController.mask
        VB: StorySceneController.mask
      qualifiedName:
        CSharp: UCT.Scene.StorySceneController.mask
        VB: UCT.Scene.StorySceneController.mask
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: mask
        path: ''
        startLine: 22681
      syntax:
        content:
          CSharp: public GameObject mask
          VB: Public mask As GameObject
        return:
          type: Global.GameObject
    - id: UCT.Scene.StorySceneController.Instance
      commentId: P:UCT.Scene.StorySceneController.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: StorySceneController.Instance
        VB: StorySceneController.Instance
      qualifiedName:
        CSharp: UCT.Scene.StorySceneController.Instance
        VB: UCT.Scene.StorySceneController.Instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: Instance
        path: ''
        startLine: 22686
      syntax:
        content:
          CSharp: public static StorySceneController Instance { get; }
          VB: Public Shared Property Instance As StorySceneController
        parameters: []
        return:
          type: UCT.Scene.StorySceneController
      overload: UCT.Scene.StorySceneController.Instance*
    - id: UCT.Scene.StorySceneController.Fade(System.Int32)
      commentId: M:UCT.Scene.StorySceneController.Fade(System.Int32)
      language: CSharp
      name:
        CSharp: Fade(int)
        VB: Fade(Integer)
      nameWithType:
        CSharp: StorySceneController.Fade(int)
        VB: StorySceneController.Fade(Integer)
      qualifiedName:
        CSharp: UCT.Scene.StorySceneController.Fade(int)
        VB: UCT.Scene.StorySceneController.Fade(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Scene
      source:
        id: Fade
        path: ''
        startLine: 22723
      syntax:
        content:
          CSharp: public void Fade(int number)
          VB: Public Sub Fade(number As Integer)
        parameters:
        - id: number
          type: System.Int32
      overload: UCT.Scene.StorySceneController.Fade*
- id: UCT.Overworld
  commentId: N:UCT.Overworld
  language: CSharp
  name:
    CSharp: UCT.Overworld
    VB: UCT.Overworld
  nameWithType:
    CSharp: UCT.Overworld
    VB: UCT.Overworld
  qualifiedName:
    CSharp: UCT.Overworld
    VB: UCT.Overworld
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.Overworld.SaveBoxController
    commentId: T:UCT.Overworld.SaveBoxController
    language: CSharp
    name:
      CSharp: SaveBoxController
      VB: SaveBoxController
    nameWithType:
      CSharp: SaveBoxController
      VB: SaveBoxController
    qualifiedName:
      CSharp: UCT.Overworld.SaveBoxController
      VB: UCT.Overworld.SaveBoxController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld
    source:
      id: SaveBoxController
      path: ''
      startLine: 22750
    syntax:
      content:
        CSharp: 'public class SaveBoxController : MonoBehaviour'
        VB: Public Class SaveBoxController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.SaveBoxController.Instance
      commentId: P:UCT.Overworld.SaveBoxController.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: SaveBoxController.Instance
        VB: SaveBoxController.Instance
      qualifiedName:
        CSharp: UCT.Overworld.SaveBoxController.Instance
        VB: UCT.Overworld.SaveBoxController.Instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: Instance
        path: ''
        startLine: 22758
      syntax:
        content:
          CSharp: public static SaveBoxController Instance { get; }
          VB: Public Shared Property Instance As SaveBoxController
        parameters: []
        return:
          type: UCT.Overworld.SaveBoxController
      overload: UCT.Overworld.SaveBoxController.Instance*
    - id: UCT.Overworld.SaveBoxController.OpenSaveBox
      commentId: M:UCT.Overworld.SaveBoxController.OpenSaveBox
      language: CSharp
      name:
        CSharp: OpenSaveBox()
        VB: OpenSaveBox()
      nameWithType:
        CSharp: SaveBoxController.OpenSaveBox()
        VB: SaveBoxController.OpenSaveBox()
      qualifiedName:
        CSharp: UCT.Overworld.SaveBoxController.OpenSaveBox()
        VB: UCT.Overworld.SaveBoxController.OpenSaveBox()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: OpenSaveBox
        path: ''
        startLine: 22781
      syntax:
        content:
          CSharp: public void OpenSaveBox()
          VB: Public Sub OpenSaveBox()
      overload: UCT.Overworld.SaveBoxController.OpenSaveBox*
  - id: UCT.Overworld.SaveService
    commentId: T:UCT.Overworld.SaveService
    language: CSharp
    name:
      CSharp: SaveService
      VB: SaveService
    nameWithType:
      CSharp: SaveService
      VB: SaveService
    qualifiedName:
      CSharp: UCT.Overworld.SaveService
      VB: UCT.Overworld.SaveService
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld
    source:
      id: SaveService
      path: ''
      startLine: 22938
    syntax:
      content:
        CSharp: public static class SaveService
        VB: Public Module SaveService
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.SaveService.SaveGame
      commentId: M:UCT.Overworld.SaveService.SaveGame
      language: CSharp
      name:
        CSharp: SaveGame()
        VB: SaveGame()
      nameWithType:
        CSharp: SaveService.SaveGame()
        VB: SaveService.SaveGame()
      qualifiedName:
        CSharp: UCT.Overworld.SaveService.SaveGame()
        VB: UCT.Overworld.SaveService.SaveGame()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: SaveGame
        path: ''
        startLine: 22940
      syntax:
        content:
          CSharp: public static void SaveGame()
          VB: Public Shared Sub SaveGame()
      overload: UCT.Overworld.SaveService.SaveGame*
  - id: UCT.Overworld.OverworldChaseUIController
    commentId: T:UCT.Overworld.OverworldChaseUIController
    language: CSharp
    name:
      CSharp: OverworldChaseUIController
      VB: OverworldChaseUIController
    nameWithType:
      CSharp: OverworldChaseUIController
      VB: OverworldChaseUIController
    qualifiedName:
      CSharp: UCT.Overworld.OverworldChaseUIController
      VB: UCT.Overworld.OverworldChaseUIController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld
    source:
      id: OverworldChaseUIController
      path: ''
      startLine: 22969
    syntax:
      content:
        CSharp: 'public class OverworldChaseUIController : MonoBehaviour'
        VB: Public Class OverworldChaseUIController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.OverworldChaseUIController.hpUI
      commentId: F:UCT.Overworld.OverworldChaseUIController.hpUI
      language: CSharp
      name:
        CSharp: hpUI
        VB: hpUI
      nameWithType:
        CSharp: OverworldChaseUIController.hpUI
        VB: OverworldChaseUIController.hpUI
      qualifiedName:
        CSharp: UCT.Overworld.OverworldChaseUIController.hpUI
        VB: UCT.Overworld.OverworldChaseUIController.hpUI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: hpUI
        path: ''
        startLine: 22973
      syntax:
        content:
          CSharp: public TextMeshPro hpUI
          VB: Public hpUI As TextMeshPro
        return:
          type: Global.TextMeshPro
    - id: UCT.Overworld.OverworldChaseUIController.hp
      commentId: F:UCT.Overworld.OverworldChaseUIController.hp
      language: CSharp
      name:
        CSharp: hp
        VB: hp
      nameWithType:
        CSharp: OverworldChaseUIController.hp
        VB: OverworldChaseUIController.hp
      qualifiedName:
        CSharp: UCT.Overworld.OverworldChaseUIController.hp
        VB: UCT.Overworld.OverworldChaseUIController.hp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: hp
        path: ''
        startLine: 22974
      syntax:
        content:
          CSharp: public SpriteRenderer hp
          VB: Public hp As SpriteRenderer
        return:
          type: Global.SpriteRenderer
    - id: UCT.Overworld.OverworldChaseUIController.hpSpr
      commentId: F:UCT.Overworld.OverworldChaseUIController.hpSpr
      language: CSharp
      name:
        CSharp: hpSpr
        VB: hpSpr
      nameWithType:
        CSharp: OverworldChaseUIController.hpSpr
        VB: OverworldChaseUIController.hpSpr
      qualifiedName:
        CSharp: UCT.Overworld.OverworldChaseUIController.hpSpr
        VB: UCT.Overworld.OverworldChaseUIController.hpSpr
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: hpSpr
        path: ''
        startLine: 22975
      syntax:
        content:
          CSharp: public SpriteRenderer hpSpr
          VB: Public hpSpr As SpriteRenderer
        return:
          type: Global.SpriteRenderer
    - id: UCT.Overworld.OverworldChaseUIController.gradientUp
      commentId: F:UCT.Overworld.OverworldChaseUIController.gradientUp
      language: CSharp
      name:
        CSharp: gradientUp
        VB: gradientUp
      nameWithType:
        CSharp: OverworldChaseUIController.gradientUp
        VB: OverworldChaseUIController.gradientUp
      qualifiedName:
        CSharp: UCT.Overworld.OverworldChaseUIController.gradientUp
        VB: UCT.Overworld.OverworldChaseUIController.gradientUp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: gradientUp
        path: ''
        startLine: 22976
      syntax:
        content:
          CSharp: public SpriteRenderer gradientUp
          VB: Public gradientUp As SpriteRenderer
        return:
          type: Global.SpriteRenderer
    - id: UCT.Overworld.OverworldChaseUIController.gradientDown
      commentId: F:UCT.Overworld.OverworldChaseUIController.gradientDown
      language: CSharp
      name:
        CSharp: gradientDown
        VB: gradientDown
      nameWithType:
        CSharp: OverworldChaseUIController.gradientDown
        VB: OverworldChaseUIController.gradientDown
      qualifiedName:
        CSharp: UCT.Overworld.OverworldChaseUIController.gradientDown
        VB: UCT.Overworld.OverworldChaseUIController.gradientDown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: gradientDown
        path: ''
        startLine: 22977
      syntax:
        content:
          CSharp: public SpriteRenderer gradientDown
          VB: Public gradientDown As SpriteRenderer
        return:
          type: Global.SpriteRenderer
  - id: UCT.Overworld.OverworldPlayerBehaviour
    commentId: T:UCT.Overworld.OverworldPlayerBehaviour
    language: CSharp
    name:
      CSharp: OverworldPlayerBehaviour
      VB: OverworldPlayerBehaviour
    nameWithType:
      CSharp: OverworldPlayerBehaviour
      VB: OverworldPlayerBehaviour
    qualifiedName:
      CSharp: UCT.Overworld.OverworldPlayerBehaviour
      VB: UCT.Overworld.OverworldPlayerBehaviour
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld
    source:
      id: OverworldPlayerBehaviour
      path: ''
      startLine: 23034
    syntax:
      content:
        CSharp: 'public class OverworldPlayerBehaviour : FiniteStateMachine'
        VB: Public Class OverworldPlayerBehaviour Inherits FiniteStateMachine
    inheritance:
    - System.Object
    - UCT.Overworld.FiniteStateMachine.FiniteStateMachine
    inheritedMembers:
    - UCT.Overworld.FiniteStateMachine.FiniteStateMachine.data
    - UCT.Overworld.FiniteStateMachine.FiniteStateMachine.dataRoute
    - UCT.Overworld.FiniteStateMachine.FiniteStateMachine.States
    - UCT.Overworld.FiniteStateMachine.FiniteStateMachine.CurrentState
    - UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState(UCT.Overworld.FiniteStateMachine.IState)
    - UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo(Vector3)
    - UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance(Vector2,Vector2)
    items:
    - id: UCT.Overworld.OverworldPlayerBehaviour.owTimer
      commentId: F:UCT.Overworld.OverworldPlayerBehaviour.owTimer
      language: CSharp
      name:
        CSharp: owTimer
        VB: owTimer
      nameWithType:
        CSharp: OverworldPlayerBehaviour.owTimer
        VB: OverworldPlayerBehaviour.owTimer
      qualifiedName:
        CSharp: UCT.Overworld.OverworldPlayerBehaviour.owTimer
        VB: UCT.Overworld.OverworldPlayerBehaviour.owTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: owTimer
        path: ''
        startLine: 23037
      syntax:
        content:
          CSharp: public float owTimer
          VB: Public owTimer As Single
        return:
          type: System.Single
    - id: UCT.Overworld.OverworldPlayerBehaviour.walkFxRange
      commentId: F:UCT.Overworld.OverworldPlayerBehaviour.walkFxRange
      language: CSharp
      name:
        CSharp: walkFxRange
        VB: walkFxRange
      nameWithType:
        CSharp: OverworldPlayerBehaviour.walkFxRange
        VB: OverworldPlayerBehaviour.walkFxRange
      qualifiedName:
        CSharp: UCT.Overworld.OverworldPlayerBehaviour.walkFxRange
        VB: UCT.Overworld.OverworldPlayerBehaviour.walkFxRange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: walkFxRange
        path: ''
        startLine: 23038
      syntax:
        content:
          CSharp: public Vector2 walkFxRange
          VB: Public walkFxRange As Vector2
        return:
          type: Global.Vector2
    - id: UCT.Overworld.OverworldPlayerBehaviour.stateType
      commentId: F:UCT.Overworld.OverworldPlayerBehaviour.stateType
      language: CSharp
      name:
        CSharp: stateType
        VB: stateType
      nameWithType:
        CSharp: OverworldPlayerBehaviour.stateType
        VB: OverworldPlayerBehaviour.stateType
      qualifiedName:
        CSharp: UCT.Overworld.OverworldPlayerBehaviour.stateType
        VB: UCT.Overworld.OverworldPlayerBehaviour.stateType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: stateType
        path: ''
        startLine: 23039
      syntax:
        content:
          CSharp: public StateType stateType
          VB: Public stateType As StateType
        return:
          type: Global.StateType
    - id: UCT.Overworld.OverworldPlayerBehaviour.isShadow
      commentId: F:UCT.Overworld.OverworldPlayerBehaviour.isShadow
      language: CSharp
      name:
        CSharp: isShadow
        VB: isShadow
      nameWithType:
        CSharp: OverworldPlayerBehaviour.isShadow
        VB: OverworldPlayerBehaviour.isShadow
      qualifiedName:
        CSharp: UCT.Overworld.OverworldPlayerBehaviour.isShadow
        VB: UCT.Overworld.OverworldPlayerBehaviour.isShadow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: isShadow
        path: ''
        startLine: 23041
      syntax:
        content:
          CSharp: public bool isShadow
          VB: Public isShadow As Boolean
        return:
          type: System.Boolean
    - id: UCT.Overworld.OverworldPlayerBehaviour.spriteRenderer
      commentId: F:UCT.Overworld.OverworldPlayerBehaviour.spriteRenderer
      language: CSharp
      name:
        CSharp: spriteRenderer
        VB: spriteRenderer
      nameWithType:
        CSharp: OverworldPlayerBehaviour.spriteRenderer
        VB: OverworldPlayerBehaviour.spriteRenderer
      qualifiedName:
        CSharp: UCT.Overworld.OverworldPlayerBehaviour.spriteRenderer
        VB: UCT.Overworld.OverworldPlayerBehaviour.spriteRenderer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: spriteRenderer
        path: ''
        startLine: 23042
      syntax:
        content:
          CSharp: public SpriteRenderer spriteRenderer
          VB: Public spriteRenderer As SpriteRenderer
        return:
          type: Global.SpriteRenderer
    - id: UCT.Overworld.OverworldPlayerBehaviour.shadowSpriteRenderer
      commentId: F:UCT.Overworld.OverworldPlayerBehaviour.shadowSpriteRenderer
      language: CSharp
      name:
        CSharp: shadowSpriteRenderer
        VB: shadowSpriteRenderer
      nameWithType:
        CSharp: OverworldPlayerBehaviour.shadowSpriteRenderer
        VB: OverworldPlayerBehaviour.shadowSpriteRenderer
      qualifiedName:
        CSharp: UCT.Overworld.OverworldPlayerBehaviour.shadowSpriteRenderer
        VB: UCT.Overworld.OverworldPlayerBehaviour.shadowSpriteRenderer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: shadowSpriteRenderer
        path: ''
        startLine: 23043
      syntax:
        content:
          CSharp: public SpriteRenderer shadowSpriteRenderer
          VB: Public shadowSpriteRenderer As SpriteRenderer
        return:
          type: Global.SpriteRenderer
    - id: UCT.Overworld.OverworldPlayerBehaviour.outline
      commentId: F:UCT.Overworld.OverworldPlayerBehaviour.outline
      language: CSharp
      name:
        CSharp: outline
        VB: outline
      nameWithType:
        CSharp: OverworldPlayerBehaviour.outline
        VB: OverworldPlayerBehaviour.outline
      qualifiedName:
        CSharp: UCT.Overworld.OverworldPlayerBehaviour.outline
        VB: UCT.Overworld.OverworldPlayerBehaviour.outline
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: outline
        path: ''
        startLine: 23044
      syntax:
        content:
          CSharp: public SpriteRenderer outline
          VB: Public outline As SpriteRenderer
        return:
          type: Global.SpriteRenderer
    - id: UCT.Overworld.OverworldPlayerBehaviour.heart
      commentId: F:UCT.Overworld.OverworldPlayerBehaviour.heart
      language: CSharp
      name:
        CSharp: heart
        VB: heart
      nameWithType:
        CSharp: OverworldPlayerBehaviour.heart
        VB: OverworldPlayerBehaviour.heart
      qualifiedName:
        CSharp: UCT.Overworld.OverworldPlayerBehaviour.heart
        VB: UCT.Overworld.OverworldPlayerBehaviour.heart
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: heart
        path: ''
        startLine: 23044
      syntax:
        content:
          CSharp: public SpriteRenderer heart
          VB: Public heart As SpriteRenderer
        return:
          type: Global.SpriteRenderer
    - id: UCT.Overworld.OverworldPlayerBehaviour.InitializeStates
      commentId: M:UCT.Overworld.OverworldPlayerBehaviour.InitializeStates
      language: CSharp
      name:
        CSharp: InitializeStates()
        VB: InitializeStates()
      nameWithType:
        CSharp: OverworldPlayerBehaviour.InitializeStates()
        VB: OverworldPlayerBehaviour.InitializeStates()
      qualifiedName:
        CSharp: UCT.Overworld.OverworldPlayerBehaviour.InitializeStates()
        VB: UCT.Overworld.OverworldPlayerBehaviour.InitializeStates()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: InitializeStates
        path: ''
        startLine: 23103
      syntax:
        content:
          CSharp: protected override void InitializeStates()
          VB: Protected Overrides Sub InitializeStates()
      overload: UCT.Overworld.OverworldPlayerBehaviour.InitializeStates*
      overridden: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates
    - id: UCT.Overworld.OverworldPlayerBehaviour.TransitionToStateIfNeeded(StateType)
      commentId: M:UCT.Overworld.OverworldPlayerBehaviour.TransitionToStateIfNeeded(StateType)
      language: CSharp
      name:
        CSharp: TransitionToStateIfNeeded(StateType)
        VB: TransitionToStateIfNeeded(StateType)
      nameWithType:
        CSharp: OverworldPlayerBehaviour.TransitionToStateIfNeeded(StateType)
        VB: OverworldPlayerBehaviour.TransitionToStateIfNeeded(StateType)
      qualifiedName:
        CSharp: UCT.Overworld.OverworldPlayerBehaviour.TransitionToStateIfNeeded(StateType)
        VB: UCT.Overworld.OverworldPlayerBehaviour.TransitionToStateIfNeeded(StateType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: TransitionToStateIfNeeded
        path: ''
        startLine: 23214
      syntax:
        content:
          CSharp: public void TransitionToStateIfNeeded(StateType inputStateType)
          VB: Public Sub TransitionToStateIfNeeded(inputStateType As StateType)
        parameters:
        - id: inputStateType
          type: Global.StateType
      overload: UCT.Overworld.OverworldPlayerBehaviour.TransitionToStateIfNeeded*
  - id: UCT.Overworld.OverworldSpriteChanger
    commentId: T:UCT.Overworld.OverworldSpriteChanger
    language: CSharp
    name:
      CSharp: OverworldSpriteChanger
      VB: OverworldSpriteChanger
    nameWithType:
      CSharp: OverworldSpriteChanger
      VB: OverworldSpriteChanger
    qualifiedName:
      CSharp: UCT.Overworld.OverworldSpriteChanger
      VB: UCT.Overworld.OverworldSpriteChanger
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld
    source:
      id: OverworldSpriteChanger
      path: ''
      startLine: 23233
    summary: "\n管理Overworld对话系统中的精灵显示逻辑\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OverworldSpriteChanger : MonoBehaviour'
        VB: Public Class OverworldSpriteChanger Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.OverworldSpriteChanger.spriteExpressionCollection
      commentId: F:UCT.Overworld.OverworldSpriteChanger.spriteExpressionCollection
      language: CSharp
      name:
        CSharp: spriteExpressionCollection
        VB: spriteExpressionCollection
      nameWithType:
        CSharp: OverworldSpriteChanger.spriteExpressionCollection
        VB: OverworldSpriteChanger.spriteExpressionCollection
      qualifiedName:
        CSharp: UCT.Overworld.OverworldSpriteChanger.spriteExpressionCollection
        VB: UCT.Overworld.OverworldSpriteChanger.spriteExpressionCollection
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: spriteExpressionCollection
        path: ''
        startLine: 23243
      syntax:
        content:
          CSharp: public SpriteExpressionCollection spriteExpressionCollection
          VB: Public spriteExpressionCollection As SpriteExpressionCollection
        return:
          type: Global.SpriteExpressionCollection
    - id: UCT.Overworld.OverworldSpriteChanger.state
      commentId: F:UCT.Overworld.OverworldSpriteChanger.state
      language: CSharp
      name:
        CSharp: state
        VB: state
      nameWithType:
        CSharp: OverworldSpriteChanger.state
        VB: OverworldSpriteChanger.state
      qualifiedName:
        CSharp: UCT.Overworld.OverworldSpriteChanger.state
        VB: UCT.Overworld.OverworldSpriteChanger.state
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: state
        path: ''
        startLine: 23245
      syntax:
        content:
          CSharp: public SpriteExpressionCollection.State state
          VB: Public state As SpriteExpressionCollection.State
        return:
          type: Global.SpriteExpressionCollection.State
    - id: UCT.Overworld.OverworldSpriteChanger.UpdateSpriteDisplay
      commentId: M:UCT.Overworld.OverworldSpriteChanger.UpdateSpriteDisplay
      language: CSharp
      name:
        CSharp: UpdateSpriteDisplay()
        VB: UpdateSpriteDisplay()
      nameWithType:
        CSharp: OverworldSpriteChanger.UpdateSpriteDisplay()
        VB: OverworldSpriteChanger.UpdateSpriteDisplay()
      qualifiedName:
        CSharp: UCT.Overworld.OverworldSpriteChanger.UpdateSpriteDisplay()
        VB: UCT.Overworld.OverworldSpriteChanger.UpdateSpriteDisplay()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: UpdateSpriteDisplay
        path: ''
        startLine: 23341
      summary: "\n更新当前显示的精灵\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateSpriteDisplay()
          VB: Public Sub UpdateSpriteDisplay()
      overload: UCT.Overworld.OverworldSpriteChanger.UpdateSpriteDisplay*
  - id: UCT.Overworld.OverworldPlayerAnimEventHelper
    commentId: T:UCT.Overworld.OverworldPlayerAnimEventHelper
    language: CSharp
    name:
      CSharp: OverworldPlayerAnimEventHelper
      VB: OverworldPlayerAnimEventHelper
    nameWithType:
      CSharp: OverworldPlayerAnimEventHelper
      VB: OverworldPlayerAnimEventHelper
    qualifiedName:
      CSharp: UCT.Overworld.OverworldPlayerAnimEventHelper
      VB: UCT.Overworld.OverworldPlayerAnimEventHelper
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld
    source:
      id: OverworldPlayerAnimEventHelper
      path: ''
      startLine: 23437
    summary: "\n给OW Player的Animator提供事件脚本。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OverworldPlayerAnimEventHelper : MonoBehaviour'
        VB: Public Class OverworldPlayerAnimEventHelper Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.OverworldPlayerAnimEventHelper.PlayWalkAudio
      commentId: M:UCT.Overworld.OverworldPlayerAnimEventHelper.PlayWalkAudio
      language: CSharp
      name:
        CSharp: PlayWalkAudio()
        VB: PlayWalkAudio()
      nameWithType:
        CSharp: OverworldPlayerAnimEventHelper.PlayWalkAudio()
        VB: OverworldPlayerAnimEventHelper.PlayWalkAudio()
      qualifiedName:
        CSharp: UCT.Overworld.OverworldPlayerAnimEventHelper.PlayWalkAudio()
        VB: UCT.Overworld.OverworldPlayerAnimEventHelper.PlayWalkAudio()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: PlayWalkAudio
        path: ''
        startLine: 23446
      syntax:
        content:
          CSharp: public void PlayWalkAudio()
          VB: Public Sub PlayWalkAudio()
      overload: UCT.Overworld.OverworldPlayerAnimEventHelper.PlayWalkAudio*
  - id: UCT.Overworld.CameraFollowPlayer
    commentId: T:UCT.Overworld.CameraFollowPlayer
    language: CSharp
    name:
      CSharp: CameraFollowPlayer
      VB: CameraFollowPlayer
    nameWithType:
      CSharp: CameraFollowPlayer
      VB: CameraFollowPlayer
    qualifiedName:
      CSharp: UCT.Overworld.CameraFollowPlayer
      VB: UCT.Overworld.CameraFollowPlayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld
    source:
      id: CameraFollowPlayer
      path: ''
      startLine: 23464
    summary: "\nOverworld摄像机跟随\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CameraFollowPlayer : MonoBehaviour'
        VB: Public Class CameraFollowPlayer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.CameraFollowPlayer.isLimit
      commentId: F:UCT.Overworld.CameraFollowPlayer.isLimit
      language: CSharp
      name:
        CSharp: isLimit
        VB: isLimit
      nameWithType:
        CSharp: CameraFollowPlayer.isLimit
        VB: CameraFollowPlayer.isLimit
      qualifiedName:
        CSharp: UCT.Overworld.CameraFollowPlayer.isLimit
        VB: UCT.Overworld.CameraFollowPlayer.isLimit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: isLimit
        path: ''
        startLine: 23466
      syntax:
        content:
          CSharp: public bool isLimit
          VB: Public isLimit As Boolean
        return:
          type: System.Boolean
    - id: UCT.Overworld.CameraFollowPlayer.isFollow
      commentId: F:UCT.Overworld.CameraFollowPlayer.isFollow
      language: CSharp
      name:
        CSharp: isFollow
        VB: isFollow
      nameWithType:
        CSharp: CameraFollowPlayer.isFollow
        VB: CameraFollowPlayer.isFollow
      qualifiedName:
        CSharp: UCT.Overworld.CameraFollowPlayer.isFollow
        VB: UCT.Overworld.CameraFollowPlayer.isFollow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: isFollow
        path: ''
        startLine: 23467
      syntax:
        content:
          CSharp: public bool isFollow
          VB: Public isFollow As Boolean
        return:
          type: System.Boolean
    - id: UCT.Overworld.CameraFollowPlayer.minX
      commentId: F:UCT.Overworld.CameraFollowPlayer.minX
      language: CSharp
      name:
        CSharp: minX
        VB: minX
      nameWithType:
        CSharp: CameraFollowPlayer.minX
        VB: CameraFollowPlayer.minX
      qualifiedName:
        CSharp: UCT.Overworld.CameraFollowPlayer.minX
        VB: UCT.Overworld.CameraFollowPlayer.minX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: minX
        path: ''
        startLine: 23469
      syntax:
        content:
          CSharp: public float minX
          VB: Public minX As Single
        return:
          type: System.Single
    - id: UCT.Overworld.CameraFollowPlayer.minY
      commentId: F:UCT.Overworld.CameraFollowPlayer.minY
      language: CSharp
      name:
        CSharp: minY
        VB: minY
      nameWithType:
        CSharp: CameraFollowPlayer.minY
        VB: CameraFollowPlayer.minY
      qualifiedName:
        CSharp: UCT.Overworld.CameraFollowPlayer.minY
        VB: UCT.Overworld.CameraFollowPlayer.minY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: minY
        path: ''
        startLine: 23470
      syntax:
        content:
          CSharp: public float minY
          VB: Public minY As Single
        return:
          type: System.Single
    - id: UCT.Overworld.CameraFollowPlayer.maxX
      commentId: F:UCT.Overworld.CameraFollowPlayer.maxX
      language: CSharp
      name:
        CSharp: maxX
        VB: maxX
      nameWithType:
        CSharp: CameraFollowPlayer.maxX
        VB: CameraFollowPlayer.maxX
      qualifiedName:
        CSharp: UCT.Overworld.CameraFollowPlayer.maxX
        VB: UCT.Overworld.CameraFollowPlayer.maxX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: maxX
        path: ''
        startLine: 23471
      syntax:
        content:
          CSharp: public float maxX
          VB: Public maxX As Single
        return:
          type: System.Single
    - id: UCT.Overworld.CameraFollowPlayer.maxY
      commentId: F:UCT.Overworld.CameraFollowPlayer.maxY
      language: CSharp
      name:
        CSharp: maxY
        VB: maxY
      nameWithType:
        CSharp: CameraFollowPlayer.maxY
        VB: CameraFollowPlayer.maxY
      qualifiedName:
        CSharp: UCT.Overworld.CameraFollowPlayer.maxY
        VB: UCT.Overworld.CameraFollowPlayer.maxY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: maxY
        path: ''
        startLine: 23472
      syntax:
        content:
          CSharp: public float maxY
          VB: Public maxY As Single
        return:
          type: System.Single
    - id: UCT.Overworld.CameraFollowPlayer.player
      commentId: F:UCT.Overworld.CameraFollowPlayer.player
      language: CSharp
      name:
        CSharp: player
        VB: player
      nameWithType:
        CSharp: CameraFollowPlayer.player
        VB: CameraFollowPlayer.player
      qualifiedName:
        CSharp: UCT.Overworld.CameraFollowPlayer.player
        VB: UCT.Overworld.CameraFollowPlayer.player
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: player
        path: ''
        startLine: 23474
      syntax:
        content:
          CSharp: public GameObject player
          VB: Public player As GameObject
        return:
          type: Global.GameObject
    - id: UCT.Overworld.CameraFollowPlayer.Instance
      commentId: P:UCT.Overworld.CameraFollowPlayer.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: CameraFollowPlayer.Instance
        VB: CameraFollowPlayer.Instance
      qualifiedName:
        CSharp: UCT.Overworld.CameraFollowPlayer.Instance
        VB: UCT.Overworld.CameraFollowPlayer.Instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: Instance
        path: ''
        startLine: 23475
      syntax:
        content:
          CSharp: public static CameraFollowPlayer Instance { get; }
          VB: Public Shared Property Instance As CameraFollowPlayer
        parameters: []
        return:
          type: UCT.Overworld.CameraFollowPlayer
      overload: UCT.Overworld.CameraFollowPlayer.Instance*
    - id: UCT.Overworld.CameraFollowPlayer.GetLimitedPosition(Vector3)
      commentId: M:UCT.Overworld.CameraFollowPlayer.GetLimitedPosition(Vector3)
      language: CSharp
      name:
        CSharp: GetLimitedPosition(Vector3)
        VB: GetLimitedPosition(Vector3)
      nameWithType:
        CSharp: CameraFollowPlayer.GetLimitedPosition(Vector3)
        VB: CameraFollowPlayer.GetLimitedPosition(Vector3)
      qualifiedName:
        CSharp: UCT.Overworld.CameraFollowPlayer.GetLimitedPosition(Vector3)
        VB: UCT.Overworld.CameraFollowPlayer.GetLimitedPosition(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: GetLimitedPosition
        path: ''
        startLine: 23509
      syntax:
        content:
          CSharp: public Vector3 GetLimitedPosition(Vector3 pos)
          VB: Public Function GetLimitedPosition(pos As Vector3) As Vector3
        parameters:
        - id: pos
          type: Global.Vector3
        return:
          type: Global.Vector3
      overload: UCT.Overworld.CameraFollowPlayer.GetLimitedPosition*
    - id: UCT.Overworld.CameraFollowPlayer.ShakeCamera(System.Single,System.Single,System.Int32)
      commentId: M:UCT.Overworld.CameraFollowPlayer.ShakeCamera(System.Single,System.Single,System.Int32)
      language: CSharp
      name:
        CSharp: ShakeCamera(float, float, int)
        VB: ShakeCamera(Single, Single, Integer)
      nameWithType:
        CSharp: CameraFollowPlayer.ShakeCamera(float, float, int)
        VB: CameraFollowPlayer.ShakeCamera(Single, Single, Integer)
      qualifiedName:
        CSharp: UCT.Overworld.CameraFollowPlayer.ShakeCamera(float, float, int)
        VB: UCT.Overworld.CameraFollowPlayer.ShakeCamera(Single, Single, Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: ShakeCamera
        path: ''
        startLine: 23522
      summary: "\n使摄像机抖动（不会影响跟随）\n"
      example: []
      syntax:
        content:
          CSharp: public void ShakeCamera(float duration = 0.1, float strength = 0.5, int vibrato = 5)
          VB: Public Sub ShakeCamera(duration As Single = 0.1, strength As Single = 0.5, vibrato As Integer = 5)
        parameters:
        - id: duration
          type: System.Single
          description: 抖动持续时间
        - id: strength
          type: System.Single
          description: 抖动幅度
        - id: vibrato
          type: System.Int32
          description: 振动频率
      overload: UCT.Overworld.CameraFollowPlayer.ShakeCamera*
  - id: UCT.Overworld.OverworldChaseLineDrawer
    commentId: T:UCT.Overworld.OverworldChaseLineDrawer
    language: CSharp
    name:
      CSharp: OverworldChaseLineDrawer
      VB: OverworldChaseLineDrawer
    nameWithType:
      CSharp: OverworldChaseLineDrawer
      VB: OverworldChaseLineDrawer
    qualifiedName:
      CSharp: UCT.Overworld.OverworldChaseLineDrawer
      VB: UCT.Overworld.OverworldChaseLineDrawer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld
    source:
      id: OverworldChaseLineDrawer
      path: ''
      startLine: 23547
    summary: "\n在Overworld场景中，根据EdgeCollider绘制LineRenderer线，并在Chase时显示。\n线条只会在初始化时绘制一次。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class OverworldChaseLineDrawer : MonoBehaviour'
        VB: Public Class OverworldChaseLineDrawer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.OverworldChaseLineDrawer.lineRenderer
      commentId: F:UCT.Overworld.OverworldChaseLineDrawer.lineRenderer
      language: CSharp
      name:
        CSharp: lineRenderer
        VB: lineRenderer
      nameWithType:
        CSharp: OverworldChaseLineDrawer.lineRenderer
        VB: OverworldChaseLineDrawer.lineRenderer
      qualifiedName:
        CSharp: UCT.Overworld.OverworldChaseLineDrawer.lineRenderer
        VB: UCT.Overworld.OverworldChaseLineDrawer.lineRenderer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: lineRenderer
        path: ''
        startLine: 23552
      syntax:
        content:
          CSharp: public LineRenderer lineRenderer
          VB: Public lineRenderer As LineRenderer
        return:
          type: Global.LineRenderer
  - id: UCT.Overworld.TalkBoxController
    commentId: T:UCT.Overworld.TalkBoxController
    language: CSharp
    name:
      CSharp: TalkBoxController
      VB: TalkBoxController
    nameWithType:
      CSharp: TalkBoxController
      VB: TalkBoxController
    qualifiedName:
      CSharp: UCT.Overworld.TalkBoxController
      VB: UCT.Overworld.TalkBoxController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld
    source:
      id: TalkBoxController
      path: ''
      startLine: 23597
    summary: "\n修改Overworld中对话框的位置\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TalkBoxController : MonoBehaviour'
        VB: Public Class TalkBoxController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.TalkBoxController.boxDrawer
      commentId: F:UCT.Overworld.TalkBoxController.boxDrawer
      language: CSharp
      name:
        CSharp: boxDrawer
        VB: boxDrawer
      nameWithType:
        CSharp: TalkBoxController.boxDrawer
        VB: TalkBoxController.boxDrawer
      qualifiedName:
        CSharp: UCT.Overworld.TalkBoxController.boxDrawer
        VB: UCT.Overworld.TalkBoxController.boxDrawer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: boxDrawer
        path: ''
        startLine: 23599
      syntax:
        content:
          CSharp: public BoxDrawer boxDrawer
          VB: Public boxDrawer As BoxDrawer
        return:
          type: Global.BoxDrawer
    - id: UCT.Overworld.TalkBoxController.isUp
      commentId: F:UCT.Overworld.TalkBoxController.isUp
      language: CSharp
      name:
        CSharp: isUp
        VB: isUp
      nameWithType:
        CSharp: TalkBoxController.isUp
        VB: TalkBoxController.isUp
      qualifiedName:
        CSharp: UCT.Overworld.TalkBoxController.isUp
        VB: UCT.Overworld.TalkBoxController.isUp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: isUp
        path: ''
        startLine: 23600
      syntax:
        content:
          CSharp: public bool isUp
          VB: Public isUp As Boolean
        return:
          type: System.Boolean
    - id: UCT.Overworld.TalkBoxController.haveHead
      commentId: F:UCT.Overworld.TalkBoxController.haveHead
      language: CSharp
      name:
        CSharp: haveHead
        VB: haveHead
      nameWithType:
        CSharp: TalkBoxController.haveHead
        VB: TalkBoxController.haveHead
      qualifiedName:
        CSharp: UCT.Overworld.TalkBoxController.haveHead
        VB: UCT.Overworld.TalkBoxController.haveHead
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: haveHead
        path: ''
        startLine: 23601
      syntax:
        content:
          CSharp: public bool haveHead
          VB: Public haveHead As Boolean
        return:
          type: System.Boolean
    - id: UCT.Overworld.TalkBoxController.Instance
      commentId: P:UCT.Overworld.TalkBoxController.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: TalkBoxController.Instance
        VB: TalkBoxController.Instance
      qualifiedName:
        CSharp: UCT.Overworld.TalkBoxController.Instance
        VB: UCT.Overworld.TalkBoxController.Instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: Instance
        path: ''
        startLine: 23603
      syntax:
        content:
          CSharp: public static TalkBoxController Instance { get; }
          VB: Public Shared Property Instance As TalkBoxController
        parameters: []
        return:
          type: UCT.Overworld.TalkBoxController
      overload: UCT.Overworld.TalkBoxController.Instance*
    - id: UCT.Overworld.TalkBoxController.ItemScroller
      commentId: P:UCT.Overworld.TalkBoxController.ItemScroller
      language: CSharp
      name:
        CSharp: ItemScroller
        VB: ItemScroller
      nameWithType:
        CSharp: TalkBoxController.ItemScroller
        VB: TalkBoxController.ItemScroller
      qualifiedName:
        CSharp: UCT.Overworld.TalkBoxController.ItemScroller
        VB: UCT.Overworld.TalkBoxController.ItemScroller
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: ItemScroller
        path: ''
        startLine: 23604
      syntax:
        content:
          CSharp: public ItemScroller ItemScroller { get; }
          VB: Public Property ItemScroller As ItemScroller
        parameters: []
        return:
          type: Global.ItemScroller
      overload: UCT.Overworld.TalkBoxController.ItemScroller*
    - id: UCT.Overworld.TalkBoxController.CleanText(TypeWritter)
      commentId: M:UCT.Overworld.TalkBoxController.CleanText(TypeWritter)
      language: CSharp
      name:
        CSharp: CleanText(TypeWritter)
        VB: CleanText(TypeWritter)
      nameWithType:
        CSharp: TalkBoxController.CleanText(TypeWritter)
        VB: TalkBoxController.CleanText(TypeWritter)
      qualifiedName:
        CSharp: UCT.Overworld.TalkBoxController.CleanText(TypeWritter)
        VB: UCT.Overworld.TalkBoxController.CleanText(TypeWritter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: CleanText
        path: ''
        startLine: 23650
      syntax:
        content:
          CSharp: public void CleanText(TypeWritter typeWritter)
          VB: Public Sub CleanText(typeWritter As TypeWritter)
        parameters:
        - id: typeWritter
          type: Global.TypeWritter
      overload: UCT.Overworld.TalkBoxController.CleanText*
    - id: UCT.Overworld.TalkBoxController.SetHead(System.Boolean)
      commentId: M:UCT.Overworld.TalkBoxController.SetHead(System.Boolean)
      language: CSharp
      name:
        CSharp: SetHead(bool)
        VB: SetHead(Boolean)
      nameWithType:
        CSharp: TalkBoxController.SetHead(bool)
        VB: TalkBoxController.SetHead(Boolean)
      qualifiedName:
        CSharp: UCT.Overworld.TalkBoxController.SetHead(bool)
        VB: UCT.Overworld.TalkBoxController.SetHead(Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: SetHead
        path: ''
        startLine: 23659
      syntax:
        content:
          CSharp: public void SetHead(bool inputHaveHead)
          VB: Public Sub SetHead(inputHaveHead As Boolean)
        parameters:
        - id: inputHaveHead
          type: System.Boolean
      overload: UCT.Overworld.TalkBoxController.SetHead*
  - id: UCT.Overworld.BackpackBehaviour
    commentId: T:UCT.Overworld.BackpackBehaviour
    language: CSharp
    name:
      CSharp: BackpackBehaviour
      VB: BackpackBehaviour
    nameWithType:
      CSharp: BackpackBehaviour
      VB: BackpackBehaviour
    qualifiedName:
      CSharp: UCT.Overworld.BackpackBehaviour
      VB: UCT.Overworld.BackpackBehaviour
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld
    source:
      id: BackpackBehaviour
      path: ''
      startLine: 23694
    summary: "\n管理OW背包系统\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BackpackBehaviour : MonoBehaviour'
        VB: Public Class BackpackBehaviour Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.BackpackBehaviour.select
      commentId: F:UCT.Overworld.BackpackBehaviour.select
      language: CSharp
      name:
        CSharp: select
        VB: select
      nameWithType:
        CSharp: BackpackBehaviour.select
        VB: BackpackBehaviour.select
      qualifiedName:
        CSharp: UCT.Overworld.BackpackBehaviour.select
        VB: UCT.Overworld.BackpackBehaviour.select
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: select
        path: ''
        startLine: 23698
      syntax:
        content:
          CSharp: public int select
          VB: Public [select] As Integer
        return:
          type: System.Int32
    - id: UCT.Overworld.BackpackBehaviour.sonSelect
      commentId: F:UCT.Overworld.BackpackBehaviour.sonSelect
      language: CSharp
      name:
        CSharp: sonSelect
        VB: sonSelect
      nameWithType:
        CSharp: BackpackBehaviour.sonSelect
        VB: BackpackBehaviour.sonSelect
      qualifiedName:
        CSharp: UCT.Overworld.BackpackBehaviour.sonSelect
        VB: UCT.Overworld.BackpackBehaviour.sonSelect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: sonSelect
        path: ''
        startLine: 23698
      syntax:
        content:
          CSharp: public int sonSelect
          VB: Public sonSelect As Integer
        return:
          type: System.Int32
    - id: UCT.Overworld.BackpackBehaviour.sonUse
      commentId: F:UCT.Overworld.BackpackBehaviour.sonUse
      language: CSharp
      name:
        CSharp: sonUse
        VB: sonUse
      nameWithType:
        CSharp: BackpackBehaviour.sonUse
        VB: BackpackBehaviour.sonUse
      qualifiedName:
        CSharp: UCT.Overworld.BackpackBehaviour.sonUse
        VB: UCT.Overworld.BackpackBehaviour.sonUse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: sonUse
        path: ''
        startLine: 23698
      syntax:
        content:
          CSharp: public int sonUse
          VB: Public sonUse As Integer
        return:
          type: System.Int32
    - id: UCT.Overworld.BackpackBehaviour.talkText
      commentId: F:UCT.Overworld.BackpackBehaviour.talkText
      language: CSharp
      name:
        CSharp: talkText
        VB: talkText
      nameWithType:
        CSharp: BackpackBehaviour.talkText
        VB: BackpackBehaviour.talkText
      qualifiedName:
        CSharp: UCT.Overworld.BackpackBehaviour.talkText
        VB: UCT.Overworld.BackpackBehaviour.talkText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: talkText
        path: ''
        startLine: 23700
      syntax:
        content:
          CSharp: public TextMeshPro talkText
          VB: Public talkText As TextMeshPro
        return:
          type: Global.TextMeshPro
    - id: UCT.Overworld.BackpackBehaviour.saveText
      commentId: F:UCT.Overworld.BackpackBehaviour.saveText
      language: CSharp
      name:
        CSharp: saveText
        VB: saveText
      nameWithType:
        CSharp: BackpackBehaviour.saveText
        VB: BackpackBehaviour.saveText
      qualifiedName:
        CSharp: UCT.Overworld.BackpackBehaviour.saveText
        VB: UCT.Overworld.BackpackBehaviour.saveText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: saveText
        path: ''
        startLine: 23702
      syntax:
        content:
          CSharp: public TextMeshPro saveText
          VB: Public saveText As TextMeshPro
        return:
          type: Global.TextMeshPro
    - id: UCT.Overworld.BackpackBehaviour.optionsBox
      commentId: F:UCT.Overworld.BackpackBehaviour.optionsBox
      language: CSharp
      name:
        CSharp: optionsBox
        VB: optionsBox
      nameWithType:
        CSharp: BackpackBehaviour.optionsBox
        VB: BackpackBehaviour.optionsBox
      qualifiedName:
        CSharp: UCT.Overworld.BackpackBehaviour.optionsBox
        VB: UCT.Overworld.BackpackBehaviour.optionsBox
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: optionsBox
        path: ''
        startLine: 23704
      syntax:
        content:
          CSharp: public BoxDrawer optionsBox
          VB: Public optionsBox As BoxDrawer
        return:
          type: Global.BoxDrawer
    - id: UCT.Overworld.BackpackBehaviour.saveBox
      commentId: F:UCT.Overworld.BackpackBehaviour.saveBox
      language: CSharp
      name:
        CSharp: saveBox
        VB: saveBox
      nameWithType:
        CSharp: BackpackBehaviour.saveBox
        VB: BackpackBehaviour.saveBox
      qualifiedName:
        CSharp: UCT.Overworld.BackpackBehaviour.saveBox
        VB: UCT.Overworld.BackpackBehaviour.saveBox
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: saveBox
        path: ''
        startLine: 23706
      syntax:
        content:
          CSharp: public BoxDrawer saveBox
          VB: Public saveBox As BoxDrawer
        return:
          type: Global.BoxDrawer
    - id: UCT.Overworld.BackpackBehaviour.saveHeart
      commentId: F:UCT.Overworld.BackpackBehaviour.saveHeart
      language: CSharp
      name:
        CSharp: saveHeart
        VB: saveHeart
      nameWithType:
        CSharp: BackpackBehaviour.saveHeart
        VB: BackpackBehaviour.saveHeart
      qualifiedName:
        CSharp: UCT.Overworld.BackpackBehaviour.saveHeart
        VB: UCT.Overworld.BackpackBehaviour.saveHeart
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: saveHeart
        path: ''
        startLine: 23708
      syntax:
        content:
          CSharp: public Transform saveHeart
          VB: Public saveHeart As Transform
        return:
          type: Global.Transform
    - id: UCT.Overworld.BackpackBehaviour.typeWritter
      commentId: F:UCT.Overworld.BackpackBehaviour.typeWritter
      language: CSharp
      name:
        CSharp: typeWritter
        VB: typeWritter
      nameWithType:
        CSharp: BackpackBehaviour.typeWritter
        VB: BackpackBehaviour.typeWritter
      qualifiedName:
        CSharp: UCT.Overworld.BackpackBehaviour.typeWritter
        VB: UCT.Overworld.BackpackBehaviour.typeWritter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: typeWritter
        path: ''
        startLine: 23710
      syntax:
        content:
          CSharp: public TypeWritter typeWritter
          VB: Public typeWritter As TypeWritter
        return:
          type: Global.TypeWritter
    - id: UCT.Overworld.BackpackBehaviour.BoxZAxisVisible
      commentId: P:UCT.Overworld.BackpackBehaviour.BoxZAxisVisible
      language: CSharp
      name:
        CSharp: BoxZAxisVisible
        VB: BoxZAxisVisible
      nameWithType:
        CSharp: BackpackBehaviour.BoxZAxisVisible
        VB: BackpackBehaviour.BoxZAxisVisible
      qualifiedName:
        CSharp: UCT.Overworld.BackpackBehaviour.BoxZAxisVisible
        VB: UCT.Overworld.BackpackBehaviour.BoxZAxisVisible
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: BoxZAxisVisible
        path: ''
        startLine: 23717
      syntax:
        content:
          CSharp: public static int BoxZAxisVisible { get; }
          VB: Public Shared ReadOnly Property BoxZAxisVisible As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Overworld.BackpackBehaviour.BoxZAxisVisible*
    - id: UCT.Overworld.BackpackBehaviour.BoxZAxisInvisible
      commentId: P:UCT.Overworld.BackpackBehaviour.BoxZAxisInvisible
      language: CSharp
      name:
        CSharp: BoxZAxisInvisible
        VB: BoxZAxisInvisible
      nameWithType:
        CSharp: BackpackBehaviour.BoxZAxisInvisible
        VB: BackpackBehaviour.BoxZAxisInvisible
      qualifiedName:
        CSharp: UCT.Overworld.BackpackBehaviour.BoxZAxisInvisible
        VB: UCT.Overworld.BackpackBehaviour.BoxZAxisInvisible
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: BoxZAxisInvisible
        path: ''
        startLine: 23718
      syntax:
        content:
          CSharp: public static int BoxZAxisInvisible { get; }
          VB: Public Shared ReadOnly Property BoxZAxisInvisible As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Overworld.BackpackBehaviour.BoxZAxisInvisible*
    - id: UCT.Overworld.BackpackBehaviour.Instance
      commentId: P:UCT.Overworld.BackpackBehaviour.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: BackpackBehaviour.Instance
        VB: BackpackBehaviour.Instance
      qualifiedName:
        CSharp: UCT.Overworld.BackpackBehaviour.Instance
        VB: UCT.Overworld.BackpackBehaviour.Instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: Instance
        path: ''
        startLine: 23719
      syntax:
        content:
          CSharp: public static BackpackBehaviour Instance { get; }
          VB: Public Shared Property Instance As BackpackBehaviour
        parameters: []
        return:
          type: UCT.Overworld.BackpackBehaviour
      overload: UCT.Overworld.BackpackBehaviour.Instance*
    - id: UCT.Overworld.BackpackBehaviour.Heart
      commentId: P:UCT.Overworld.BackpackBehaviour.Heart
      language: CSharp
      name:
        CSharp: Heart
        VB: Heart
      nameWithType:
        CSharp: BackpackBehaviour.Heart
        VB: BackpackBehaviour.Heart
      qualifiedName:
        CSharp: UCT.Overworld.BackpackBehaviour.Heart
        VB: UCT.Overworld.BackpackBehaviour.Heart
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: Heart
        path: ''
        startLine: 23720
      syntax:
        content:
          CSharp: public SpriteRenderer Heart { get; }
          VB: Public Property Heart As SpriteRenderer
        parameters: []
        return:
          type: Global.SpriteRenderer
      overload: UCT.Overworld.BackpackBehaviour.Heart*
    - id: UCT.Overworld.BackpackBehaviour.IsOpenBackPack
      commentId: P:UCT.Overworld.BackpackBehaviour.IsOpenBackPack
      language: CSharp
      name:
        CSharp: IsOpenBackPack
        VB: IsOpenBackPack
      nameWithType:
        CSharp: BackpackBehaviour.IsOpenBackPack
        VB: BackpackBehaviour.IsOpenBackPack
      qualifiedName:
        CSharp: UCT.Overworld.BackpackBehaviour.IsOpenBackPack
        VB: UCT.Overworld.BackpackBehaviour.IsOpenBackPack
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: IsOpenBackPack
        path: ''
        startLine: 23721
      syntax:
        content:
          CSharp: public bool IsOpenBackPack { get; }
          VB: Public Property IsOpenBackPack As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: UCT.Overworld.BackpackBehaviour.IsOpenBackPack*
  - id: UCT.Overworld.TriggerChangeLayer
    commentId: T:UCT.Overworld.TriggerChangeLayer
    language: CSharp
    name:
      CSharp: TriggerChangeLayer
      VB: TriggerChangeLayer
    nameWithType:
      CSharp: TriggerChangeLayer
      VB: TriggerChangeLayer
    qualifiedName:
      CSharp: UCT.Overworld.TriggerChangeLayer
      VB: UCT.Overworld.TriggerChangeLayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld
    source:
      id: TriggerChangeLayer
      path: ''
      startLine: 24309
    syntax:
      content:
        CSharp: 'public class TriggerChangeLayer : MonoBehaviour'
        VB: Public Class TriggerChangeLayer Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.TriggerChangeLayer.upLayer
      commentId: F:UCT.Overworld.TriggerChangeLayer.upLayer
      language: CSharp
      name:
        CSharp: upLayer
        VB: upLayer
      nameWithType:
        CSharp: TriggerChangeLayer.upLayer
        VB: TriggerChangeLayer.upLayer
      qualifiedName:
        CSharp: UCT.Overworld.TriggerChangeLayer.upLayer
        VB: UCT.Overworld.TriggerChangeLayer.upLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: upLayer
        path: ''
        startLine: 24311
      syntax:
        content:
          CSharp: public int upLayer
          VB: Public upLayer As Integer
        return:
          type: System.Int32
    - id: UCT.Overworld.TriggerChangeLayer.downLayer
      commentId: F:UCT.Overworld.TriggerChangeLayer.downLayer
      language: CSharp
      name:
        CSharp: downLayer
        VB: downLayer
      nameWithType:
        CSharp: TriggerChangeLayer.downLayer
        VB: TriggerChangeLayer.downLayer
      qualifiedName:
        CSharp: UCT.Overworld.TriggerChangeLayer.downLayer
        VB: UCT.Overworld.TriggerChangeLayer.downLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: downLayer
        path: ''
        startLine: 24311
      syntax:
        content:
          CSharp: public int downLayer
          VB: Public downLayer As Integer
        return:
          type: System.Int32
    - id: UCT.Overworld.TriggerChangeLayer.followParentPlus
      commentId: F:UCT.Overworld.TriggerChangeLayer.followParentPlus
      language: CSharp
      name:
        CSharp: followParentPlus
        VB: followParentPlus
      nameWithType:
        CSharp: TriggerChangeLayer.followParentPlus
        VB: TriggerChangeLayer.followParentPlus
      qualifiedName:
        CSharp: UCT.Overworld.TriggerChangeLayer.followParentPlus
        VB: UCT.Overworld.TriggerChangeLayer.followParentPlus
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld
      source:
        id: followParentPlus
        path: ''
        startLine: 24314
      syntax:
        content:
          CSharp: public bool followParentPlus
          VB: Public followParentPlus As Boolean
        return:
          type: System.Boolean
- id: UCT.Overworld.FiniteStateMachine
  commentId: N:UCT.Overworld.FiniteStateMachine
  language: CSharp
  name:
    CSharp: UCT.Overworld.FiniteStateMachine
    VB: UCT.Overworld.FiniteStateMachine
  nameWithType:
    CSharp: UCT.Overworld.FiniteStateMachine
    VB: UCT.Overworld.FiniteStateMachine
  qualifiedName:
    CSharp: UCT.Overworld.FiniteStateMachine
    VB: UCT.Overworld.FiniteStateMachine
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
    commentId: T:UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
    language: CSharp
    name:
      CSharp: FiniteStateMachineData
      VB: FiniteStateMachineData
    nameWithType:
      CSharp: FiniteStateMachineData
      VB: FiniteStateMachineData
    qualifiedName:
      CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
      VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld.FiniteStateMachine
    source:
      id: FiniteStateMachineData
      path: ''
      startLine: 24363
    syntax:
      content:
        CSharp: 'public class FiniteStateMachineData : ScriptableObject'
        VB: Public Class FiniteStateMachineData Inherits ScriptableObject
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.speed
      commentId: F:UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.speed
      language: CSharp
      name:
        CSharp: speed
        VB: speed
      nameWithType:
        CSharp: FiniteStateMachineData.speed
        VB: FiniteStateMachineData.speed
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.speed
        VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.speed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: speed
        path: ''
        startLine: 24366
      syntax:
        content:
          CSharp: public float speed
          VB: Public speed As Single
        return:
          type: System.Single
    - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.speedForReal
      commentId: F:UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.speedForReal
      language: CSharp
      name:
        CSharp: speedForReal
        VB: speedForReal
      nameWithType:
        CSharp: FiniteStateMachineData.speedForReal
        VB: FiniteStateMachineData.speedForReal
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.speedForReal
        VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.speedForReal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: speedForReal
        path: ''
        startLine: 24367
      syntax:
        content:
          CSharp: public float speedForReal
          VB: Public speedForReal As Single
        return:
          type: System.Single
    - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.direction
      commentId: F:UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.direction
      language: CSharp
      name:
        CSharp: direction
        VB: direction
      nameWithType:
        CSharp: FiniteStateMachineData.direction
        VB: FiniteStateMachineData.direction
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.direction
        VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.direction
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: direction
        path: ''
        startLine: 24368
      syntax:
        content:
          CSharp: public Vector3 direction
          VB: Public direction As Vector3
        return:
          type: Global.Vector3
    - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.directionWithoutZero
      commentId: F:UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.directionWithoutZero
      language: CSharp
      name:
        CSharp: directionWithoutZero
        VB: directionWithoutZero
      nameWithType:
        CSharp: FiniteStateMachineData.directionWithoutZero
        VB: FiniteStateMachineData.directionWithoutZero
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.directionWithoutZero
        VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.directionWithoutZero
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: directionWithoutZero
        path: ''
        startLine: 24369
      syntax:
        content:
          CSharp: public Vector3 directionWithoutZero
          VB: Public directionWithoutZero As Vector3
        return:
          type: Global.Vector3
    - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.directionPlayer
      commentId: F:UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.directionPlayer
      language: CSharp
      name:
        CSharp: directionPlayer
        VB: directionPlayer
      nameWithType:
        CSharp: FiniteStateMachineData.directionPlayer
        VB: FiniteStateMachineData.directionPlayer
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.directionPlayer
        VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.directionPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: directionPlayer
        path: ''
        startLine: 24370
      syntax:
        content:
          CSharp: public Vector3 directionPlayer
          VB: Public directionPlayer As Vector3
        return:
          type: Global.Vector3
    - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.animator
      commentId: F:UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.animator
      language: CSharp
      name:
        CSharp: animator
        VB: animator
      nameWithType:
        CSharp: FiniteStateMachineData.animator
        VB: FiniteStateMachineData.animator
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.animator
        VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.animator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: animator
        path: ''
        startLine: 24371
      syntax:
        content:
          CSharp: public Animator animator
          VB: Public animator As Animator
        return:
          type: Global.Animator
    - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.rigidbody2D
      commentId: F:UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.rigidbody2D
      language: CSharp
      name:
        CSharp: rigidbody2D
        VB: rigidbody2D
      nameWithType:
        CSharp: FiniteStateMachineData.rigidbody2D
        VB: FiniteStateMachineData.rigidbody2D
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.rigidbody2D
        VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData.rigidbody2D
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: rigidbody2D
        path: ''
        startLine: 24372
      syntax:
        content:
          CSharp: public Rigidbody2D rigidbody2D
          VB: Public rigidbody2D As Rigidbody2D
        return:
          type: Global.Rigidbody2D
  - id: UCT.Overworld.FiniteStateMachine.SightComponent
    commentId: T:UCT.Overworld.FiniteStateMachine.SightComponent
    language: CSharp
    name:
      CSharp: SightComponent
      VB: SightComponent
    nameWithType:
      CSharp: SightComponent
      VB: SightComponent
    qualifiedName:
      CSharp: UCT.Overworld.FiniteStateMachine.SightComponent
      VB: UCT.Overworld.FiniteStateMachine.SightComponent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld.FiniteStateMachine
    source:
      id: SightComponent
      path: ''
      startLine: 24387
    summary: "\n为对象添加视野。\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SightComponent : MonoBehaviour'
        VB: Public Class SightComponent Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.FiniteStateMachine.SightComponent.segments
      commentId: F:UCT.Overworld.FiniteStateMachine.SightComponent.segments
      language: CSharp
      name:
        CSharp: segments
        VB: segments
      nameWithType:
        CSharp: SightComponent.segments
        VB: SightComponent.segments
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.SightComponent.segments
        VB: UCT.Overworld.FiniteStateMachine.SightComponent.segments
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: segments
        path: ''
        startLine: 24391
      syntax:
        content:
          CSharp: public int segments
          VB: Public segments As Integer
        return:
          type: System.Int32
    - id: UCT.Overworld.FiniteStateMachine.SightComponent.fsm
      commentId: F:UCT.Overworld.FiniteStateMachine.SightComponent.fsm
      language: CSharp
      name:
        CSharp: fsm
        VB: fsm
      nameWithType:
        CSharp: SightComponent.fsm
        VB: SightComponent.fsm
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.SightComponent.fsm
        VB: UCT.Overworld.FiniteStateMachine.SightComponent.fsm
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: fsm
        path: ''
        startLine: 24393
      syntax:
        content:
          CSharp: public FiniteStateMachine fsm
          VB: Public fsm As FiniteStateMachine
        return:
          type: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
    - id: UCT.Overworld.FiniteStateMachine.SightComponent.directionList
      commentId: F:UCT.Overworld.FiniteStateMachine.SightComponent.directionList
      language: CSharp
      name:
        CSharp: directionList
        VB: directionList
      nameWithType:
        CSharp: SightComponent.directionList
        VB: SightComponent.directionList
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.SightComponent.directionList
        VB: UCT.Overworld.FiniteStateMachine.SightComponent.directionList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: directionList
        path: ''
        startLine: 24395
      syntax:
        content:
          CSharp: public List<Vector2> directionList
          VB: Public directionList As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.Overworld.FiniteStateMachine.SightComponent.offsetList
      commentId: F:UCT.Overworld.FiniteStateMachine.SightComponent.offsetList
      language: CSharp
      name:
        CSharp: offsetList
        VB: offsetList
      nameWithType:
        CSharp: SightComponent.offsetList
        VB: SightComponent.offsetList
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.SightComponent.offsetList
        VB: UCT.Overworld.FiniteStateMachine.SightComponent.offsetList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: offsetList
        path: ''
        startLine: 24396
      syntax:
        content:
          CSharp: public List<Vector2> offsetList
          VB: Public offsetList As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.Overworld.FiniteStateMachine.SightComponent.rayAngleRange
      commentId: F:UCT.Overworld.FiniteStateMachine.SightComponent.rayAngleRange
      language: CSharp
      name:
        CSharp: rayAngleRange
        VB: rayAngleRange
      nameWithType:
        CSharp: SightComponent.rayAngleRange
        VB: SightComponent.rayAngleRange
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.SightComponent.rayAngleRange
        VB: UCT.Overworld.FiniteStateMachine.SightComponent.rayAngleRange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: rayAngleRange
        path: ''
        startLine: 24397
      syntax:
        content:
          CSharp: public Vector2 rayAngleRange
          VB: Public rayAngleRange As Vector2
        return:
          type: Global.Vector2
    - id: UCT.Overworld.FiniteStateMachine.SightComponent.gizmosDistance
      commentId: F:UCT.Overworld.FiniteStateMachine.SightComponent.gizmosDistance
      language: CSharp
      name:
        CSharp: gizmosDistance
        VB: gizmosDistance
      nameWithType:
        CSharp: SightComponent.gizmosDistance
        VB: SightComponent.gizmosDistance
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.SightComponent.gizmosDistance
        VB: UCT.Overworld.FiniteStateMachine.SightComponent.gizmosDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: gizmosDistance
        path: ''
        startLine: 24399
      syntax:
        content:
          CSharp: public float gizmosDistance
          VB: Public gizmosDistance As Single
        return:
          type: System.Single
  - id: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent
    commentId: T:UCT.Overworld.FiniteStateMachine.TriggerObjectComponent
    language: CSharp
    name:
      CSharp: TriggerObjectComponent
      VB: TriggerObjectComponent
    nameWithType:
      CSharp: TriggerObjectComponent
      VB: TriggerObjectComponent
    qualifiedName:
      CSharp: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent
      VB: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld.FiniteStateMachine
    source:
      id: TriggerObjectComponent
      path: ''
      startLine: 24693
    syntax:
      content:
        CSharp: 'public class TriggerObjectComponent : MonoBehaviour'
        VB: Public Class TriggerObjectComponent Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.fsm
      commentId: F:UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.fsm
      language: CSharp
      name:
        CSharp: fsm
        VB: fsm
      nameWithType:
        CSharp: TriggerObjectComponent.fsm
        VB: TriggerObjectComponent.fsm
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.fsm
        VB: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.fsm
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: fsm
        path: ''
        startLine: 24695
      syntax:
        content:
          CSharp: public FiniteStateMachine fsm
          VB: Public fsm As FiniteStateMachine
        return:
          type: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
    - id: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.specifiedDirectionsList
      commentId: F:UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.specifiedDirectionsList
      language: CSharp
      name:
        CSharp: specifiedDirectionsList
        VB: specifiedDirectionsList
      nameWithType:
        CSharp: TriggerObjectComponent.specifiedDirectionsList
        VB: TriggerObjectComponent.specifiedDirectionsList
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.specifiedDirectionsList
        VB: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.specifiedDirectionsList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: specifiedDirectionsList
        path: ''
        startLine: 24697
      syntax:
        content:
          CSharp: public List<Vector2> specifiedDirectionsList
          VB: Public specifiedDirectionsList As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.colliderOffsetsList
      commentId: F:UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.colliderOffsetsList
      language: CSharp
      name:
        CSharp: colliderOffsetsList
        VB: colliderOffsetsList
      nameWithType:
        CSharp: TriggerObjectComponent.colliderOffsetsList
        VB: TriggerObjectComponent.colliderOffsetsList
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.colliderOffsetsList
        VB: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.colliderOffsetsList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: colliderOffsetsList
        path: ''
        startLine: 24698
      syntax:
        content:
          CSharp: public List<Vector2> colliderOffsetsList
          VB: Public colliderOffsetsList As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.colliderSizesList
      commentId: F:UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.colliderSizesList
      language: CSharp
      name:
        CSharp: colliderSizesList
        VB: colliderSizesList
      nameWithType:
        CSharp: TriggerObjectComponent.colliderSizesList
        VB: TriggerObjectComponent.colliderSizesList
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.colliderSizesList
        VB: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.colliderSizesList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: colliderSizesList
        path: ''
        startLine: 24699
      syntax:
        content:
          CSharp: public List<Vector2> colliderSizesList
          VB: Public colliderSizesList As List(Of Vector2)
        return:
          type: System.Collections.Generic.List{Vector2}
    - id: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.localPositionsList
      commentId: F:UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.localPositionsList
      language: CSharp
      name:
        CSharp: localPositionsList
        VB: localPositionsList
      nameWithType:
        CSharp: TriggerObjectComponent.localPositionsList
        VB: TriggerObjectComponent.localPositionsList
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.localPositionsList
        VB: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.localPositionsList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: localPositionsList
        path: ''
        startLine: 24700
      syntax:
        content:
          CSharp: public List<Vector3> localPositionsList
          VB: Public localPositionsList As List(Of Vector3)
        return:
          type: System.Collections.Generic.List{Vector3}
    - id: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.localRotationsList
      commentId: F:UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.localRotationsList
      language: CSharp
      name:
        CSharp: localRotationsList
        VB: localRotationsList
      nameWithType:
        CSharp: TriggerObjectComponent.localRotationsList
        VB: TriggerObjectComponent.localRotationsList
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.localRotationsList
        VB: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.localRotationsList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: localRotationsList
        path: ''
        startLine: 24701
      syntax:
        content:
          CSharp: public List<Vector3> localRotationsList
          VB: Public localRotationsList As List(Of Vector3)
        return:
          type: System.Collections.Generic.List{Vector3}
    - id: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.playerHeartLocalPosition
      commentId: F:UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.playerHeartLocalPosition
      language: CSharp
      name:
        CSharp: playerHeartLocalPosition
        VB: playerHeartLocalPosition
      nameWithType:
        CSharp: TriggerObjectComponent.playerHeartLocalPosition
        VB: TriggerObjectComponent.playerHeartLocalPosition
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.playerHeartLocalPosition
        VB: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent.playerHeartLocalPosition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: playerHeartLocalPosition
        path: ''
        startLine: 24702
      syntax:
        content:
          CSharp: public List<Vector3> playerHeartLocalPosition
          VB: Public playerHeartLocalPosition As List(Of Vector3)
        return:
          type: System.Collections.Generic.List{Vector3}
  - id: UCT.Overworld.FiniteStateMachine.StateType
    commentId: T:UCT.Overworld.FiniteStateMachine.StateType
    language: CSharp
    name:
      CSharp: StateType
      VB: StateType
    nameWithType:
      CSharp: StateType
      VB: StateType
    qualifiedName:
      CSharp: UCT.Overworld.FiniteStateMachine.StateType
      VB: UCT.Overworld.FiniteStateMachine.StateType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld.FiniteStateMachine
    source:
      id: StateType
      path: ''
      startLine: 24803
    syntax:
      content:
        CSharp: public enum StateType
        VB: Public Enum StateType
    items:
    - id: UCT.Overworld.FiniteStateMachine.StateType.Idle
      commentId: F:UCT.Overworld.FiniteStateMachine.StateType.Idle
      language: CSharp
      name:
        CSharp: Idle
        VB: Idle
      nameWithType:
        CSharp: StateType.Idle
        VB: StateType.Idle
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.StateType.Idle
        VB: UCT.Overworld.FiniteStateMachine.StateType.Idle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: Idle
        path: ''
        startLine: 24805
      syntax:
        content:
          CSharp: Idle = 0
          VB: Idle = 0
        return:
          type: UCT.Overworld.FiniteStateMachine.StateType
    - id: UCT.Overworld.FiniteStateMachine.StateType.Walk
      commentId: F:UCT.Overworld.FiniteStateMachine.StateType.Walk
      language: CSharp
      name:
        CSharp: Walk
        VB: Walk
      nameWithType:
        CSharp: StateType.Walk
        VB: StateType.Walk
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.StateType.Walk
        VB: UCT.Overworld.FiniteStateMachine.StateType.Walk
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: Walk
        path: ''
        startLine: 24806
      syntax:
        content:
          CSharp: Walk = 1
          VB: Walk = 1
        return:
          type: UCT.Overworld.FiniteStateMachine.StateType
    - id: UCT.Overworld.FiniteStateMachine.StateType.Run
      commentId: F:UCT.Overworld.FiniteStateMachine.StateType.Run
      language: CSharp
      name:
        CSharp: Run
        VB: Run
      nameWithType:
        CSharp: StateType.Run
        VB: StateType.Run
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.StateType.Run
        VB: UCT.Overworld.FiniteStateMachine.StateType.Run
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: Run
        path: ''
        startLine: 24807
      syntax:
        content:
          CSharp: Run = 2
          VB: Run = 2
        return:
          type: UCT.Overworld.FiniteStateMachine.StateType
    - id: UCT.Overworld.FiniteStateMachine.StateType.Spin
      commentId: F:UCT.Overworld.FiniteStateMachine.StateType.Spin
      language: CSharp
      name:
        CSharp: Spin
        VB: Spin
      nameWithType:
        CSharp: StateType.Spin
        VB: StateType.Spin
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.StateType.Spin
        VB: UCT.Overworld.FiniteStateMachine.StateType.Spin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: Spin
        path: ''
        startLine: 24808
      syntax:
        content:
          CSharp: Spin = 3
          VB: Spin = 3
        return:
          type: UCT.Overworld.FiniteStateMachine.StateType
  - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
    commentId: T:UCT.Overworld.FiniteStateMachine.FiniteStateMachine
    language: CSharp
    name:
      CSharp: FiniteStateMachine
      VB: FiniteStateMachine
    nameWithType:
      CSharp: FiniteStateMachine
      VB: FiniteStateMachine
    qualifiedName:
      CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
      VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld.FiniteStateMachine
    source:
      id: FiniteStateMachine
      path: ''
      startLine: 24811
    syntax:
      content:
        CSharp: 'public class FiniteStateMachine : MonoBehaviour'
        VB: Public Class FiniteStateMachine Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.data
      commentId: F:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.data
      language: CSharp
      name:
        CSharp: data
        VB: data
      nameWithType:
        CSharp: FiniteStateMachine.data
        VB: FiniteStateMachine.data
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.data
        VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.data
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: data
        path: ''
        startLine: 24814
      syntax:
        content:
          CSharp: public FiniteStateMachineData data
          VB: Public data As FiniteStateMachineData
        return:
          type: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
    - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.dataRoute
      commentId: F:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.dataRoute
      language: CSharp
      name:
        CSharp: dataRoute
        VB: dataRoute
      nameWithType:
        CSharp: FiniteStateMachine.dataRoute
        VB: FiniteStateMachine.dataRoute
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.dataRoute
        VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.dataRoute
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: dataRoute
        path: ''
        startLine: 24815
      syntax:
        content:
          CSharp: public string dataRoute
          VB: Public dataRoute As String
        return:
          type: System.String
    - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.States
      commentId: F:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.States
      language: CSharp
      name:
        CSharp: States
        VB: States
      nameWithType:
        CSharp: FiniteStateMachine.States
        VB: FiniteStateMachine.States
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.States
        VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.States
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: States
        path: ''
        startLine: 24817
      syntax:
        content:
          CSharp: protected readonly Dictionary<StateType, IState> States
          VB: Protected ReadOnly States As Dictionary(Of StateType, IState)
        return:
          type: System.Collections.Generic.Dictionary{UCT.Overworld.FiniteStateMachine.StateType,UCT.Overworld.FiniteStateMachine.IState}
    - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.CurrentState
      commentId: F:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.CurrentState
      language: CSharp
      name:
        CSharp: CurrentState
        VB: CurrentState
      nameWithType:
        CSharp: FiniteStateMachine.CurrentState
        VB: FiniteStateMachine.CurrentState
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.CurrentState
        VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.CurrentState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: CurrentState
        path: ''
        startLine: 24823
      syntax:
        content:
          CSharp: protected IState CurrentState
          VB: Protected CurrentState As IState
        return:
          type: UCT.Overworld.FiniteStateMachine.IState
    - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates
      commentId: M:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates
      language: CSharp
      name:
        CSharp: InitializeStates()
        VB: InitializeStates()
      nameWithType:
        CSharp: FiniteStateMachine.InitializeStates()
        VB: FiniteStateMachine.InitializeStates()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates()
        VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: InitializeStates
        path: ''
        startLine: 24887
      syntax:
        content:
          CSharp: protected virtual void InitializeStates()
          VB: Protected Overridable Sub InitializeStates()
      overload: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates*
    - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState(UCT.Overworld.FiniteStateMachine.IState)
      commentId: M:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState(UCT.Overworld.FiniteStateMachine.IState)
      language: CSharp
      name:
        CSharp: TransitionState(IState)
        VB: TransitionState(IState)
      nameWithType:
        CSharp: FiniteStateMachine.TransitionState(IState)
        VB: FiniteStateMachine.TransitionState(IState)
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState(UCT.Overworld.FiniteStateMachine.IState)
        VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState(UCT.Overworld.FiniteStateMachine.IState)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: TransitionState
        path: ''
        startLine: 24894
      syntax:
        content:
          CSharp: protected void TransitionState(IState newState)
          VB: Protected Sub TransitionState(newState As IState)
        parameters:
        - id: newState
          type: UCT.Overworld.FiniteStateMachine.IState
      overload: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState*
    - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo(Vector3)
      commentId: M:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo(Vector3)
      language: CSharp
      name:
        CSharp: UpdateMoveTo(Vector3)
        VB: UpdateMoveTo(Vector3)
      nameWithType:
        CSharp: FiniteStateMachine.UpdateMoveTo(Vector3)
        VB: FiniteStateMachine.UpdateMoveTo(Vector3)
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo(Vector3)
        VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: UpdateMoveTo
        path: ''
        startLine: 24901
      syntax:
        content:
          CSharp: protected void UpdateMoveTo(Vector3 targetPosition)
          VB: Protected Sub UpdateMoveTo(targetPosition As Vector3)
        parameters:
        - id: targetPosition
          type: Global.Vector3
      overload: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo*
    - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance(Vector2,Vector2)
      commentId: M:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance(Vector2,Vector2)
      language: CSharp
      name:
        CSharp: DiagonalDistance(Vector2, Vector2)
        VB: DiagonalDistance(Vector2, Vector2)
      nameWithType:
        CSharp: FiniteStateMachine.DiagonalDistance(Vector2, Vector2)
        VB: FiniteStateMachine.DiagonalDistance(Vector2, Vector2)
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance(Vector2, Vector2)
        VB: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance(Vector2, Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: DiagonalDistance
        path: ''
        startLine: 24981
      summary: "\n计算对角线距离\n"
      example: []
      syntax:
        content:
          CSharp: public static float DiagonalDistance(Vector2 start, Vector2 end)
          VB: Public Shared Function DiagonalDistance(start As Vector2, [end] As Vector2) As Single
        parameters:
        - id: start
          type: Global.Vector2
        - id: end
          type: Global.Vector2
        return:
          type: System.Single
      overload: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance*
  - id: UCT.Overworld.FiniteStateMachine.AStarNode
    commentId: T:UCT.Overworld.FiniteStateMachine.AStarNode
    language: CSharp
    name:
      CSharp: AStarNode
      VB: AStarNode
    nameWithType:
      CSharp: AStarNode
      VB: AStarNode
    qualifiedName:
      CSharp: UCT.Overworld.FiniteStateMachine.AStarNode
      VB: UCT.Overworld.FiniteStateMachine.AStarNode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld.FiniteStateMachine
    source:
      id: AStarNode
      path: ''
      startLine: 25128
    syntax:
      content:
        CSharp: public class AStarNode
        VB: Public Class AStarNode
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.FiniteStateMachine.AStarNode.GCost
      commentId: F:UCT.Overworld.FiniteStateMachine.AStarNode.GCost
      language: CSharp
      name:
        CSharp: GCost
        VB: GCost
      nameWithType:
        CSharp: AStarNode.GCost
        VB: AStarNode.GCost
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.AStarNode.GCost
        VB: UCT.Overworld.FiniteStateMachine.AStarNode.GCost
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: GCost
        path: ''
        startLine: 25130
      syntax:
        content:
          CSharp: public float GCost
          VB: Public GCost As Single
        return:
          type: System.Single
    - id: UCT.Overworld.FiniteStateMachine.AStarNode.HCost
      commentId: F:UCT.Overworld.FiniteStateMachine.AStarNode.HCost
      language: CSharp
      name:
        CSharp: HCost
        VB: HCost
      nameWithType:
        CSharp: AStarNode.HCost
        VB: AStarNode.HCost
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.AStarNode.HCost
        VB: UCT.Overworld.FiniteStateMachine.AStarNode.HCost
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: HCost
        path: ''
        startLine: 25131
      syntax:
        content:
          CSharp: public float HCost
          VB: Public HCost As Single
        return:
          type: System.Single
    - id: UCT.Overworld.FiniteStateMachine.AStarNode.Parent
      commentId: F:UCT.Overworld.FiniteStateMachine.AStarNode.Parent
      language: CSharp
      name:
        CSharp: Parent
        VB: Parent
      nameWithType:
        CSharp: AStarNode.Parent
        VB: AStarNode.Parent
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.AStarNode.Parent
        VB: UCT.Overworld.FiniteStateMachine.AStarNode.Parent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: Parent
        path: ''
        startLine: 25132
      syntax:
        content:
          CSharp: public AStarNode Parent
          VB: Public Parent As AStarNode
        return:
          type: UCT.Overworld.FiniteStateMachine.AStarNode
    - id: UCT.Overworld.FiniteStateMachine.AStarNode.Position
      commentId: F:UCT.Overworld.FiniteStateMachine.AStarNode.Position
      language: CSharp
      name:
        CSharp: Position
        VB: Position
      nameWithType:
        CSharp: AStarNode.Position
        VB: AStarNode.Position
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.AStarNode.Position
        VB: UCT.Overworld.FiniteStateMachine.AStarNode.Position
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: Position
        path: ''
        startLine: 25133
      syntax:
        content:
          CSharp: public Vector2 Position
          VB: Public Position As Vector2
        return:
          type: Global.Vector2
  - id: UCT.Overworld.FiniteStateMachine.IState
    commentId: T:UCT.Overworld.FiniteStateMachine.IState
    language: CSharp
    name:
      CSharp: IState
      VB: IState
    nameWithType:
      CSharp: IState
      VB: IState
    qualifiedName:
      CSharp: UCT.Overworld.FiniteStateMachine.IState
      VB: UCT.Overworld.FiniteStateMachine.IState
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld.FiniteStateMachine
    source:
      id: IState
      path: ''
      startLine: 25140
    syntax:
      content:
        CSharp: public interface IState
        VB: Public Interface IState
    items:
    - id: UCT.Overworld.FiniteStateMachine.IState.OnEnter
      commentId: M:UCT.Overworld.FiniteStateMachine.IState.OnEnter
      language: CSharp
      name:
        CSharp: OnEnter()
        VB: OnEnter()
      nameWithType:
        CSharp: IState.OnEnter()
        VB: IState.OnEnter()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.IState.OnEnter()
        VB: UCT.Overworld.FiniteStateMachine.IState.OnEnter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnEnter
        path: ''
        startLine: 25142
      syntax:
        content:
          CSharp: void OnEnter()
          VB: Sub OnEnter()
      overload: UCT.Overworld.FiniteStateMachine.IState.OnEnter*
    - id: UCT.Overworld.FiniteStateMachine.IState.OnUpdate
      commentId: M:UCT.Overworld.FiniteStateMachine.IState.OnUpdate
      language: CSharp
      name:
        CSharp: OnUpdate()
        VB: OnUpdate()
      nameWithType:
        CSharp: IState.OnUpdate()
        VB: IState.OnUpdate()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.IState.OnUpdate()
        VB: UCT.Overworld.FiniteStateMachine.IState.OnUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnUpdate
        path: ''
        startLine: 25143
      syntax:
        content:
          CSharp: void OnUpdate()
          VB: Sub OnUpdate()
      overload: UCT.Overworld.FiniteStateMachine.IState.OnUpdate*
    - id: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate
      commentId: M:UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate
      language: CSharp
      name:
        CSharp: OnFixedUpdate()
        VB: OnFixedUpdate()
      nameWithType:
        CSharp: IState.OnFixedUpdate()
        VB: IState.OnFixedUpdate()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate()
        VB: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnFixedUpdate
        path: ''
        startLine: 25144
      syntax:
        content:
          CSharp: void OnFixedUpdate()
          VB: Sub OnFixedUpdate()
      overload: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate*
    - id: UCT.Overworld.FiniteStateMachine.IState.OnExit
      commentId: M:UCT.Overworld.FiniteStateMachine.IState.OnExit
      language: CSharp
      name:
        CSharp: OnExit()
        VB: OnExit()
      nameWithType:
        CSharp: IState.OnExit()
        VB: IState.OnExit()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.IState.OnExit()
        VB: UCT.Overworld.FiniteStateMachine.IState.OnExit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnExit
        path: ''
        startLine: 25145
      syntax:
        content:
          CSharp: void OnExit()
          VB: Sub OnExit()
      overload: UCT.Overworld.FiniteStateMachine.IState.OnExit*
  - id: UCT.Overworld.FiniteStateMachine.IdleState
    commentId: T:UCT.Overworld.FiniteStateMachine.IdleState
    language: CSharp
    name:
      CSharp: IdleState
      VB: IdleState
    nameWithType:
      CSharp: IdleState
      VB: IdleState
    qualifiedName:
      CSharp: UCT.Overworld.FiniteStateMachine.IdleState
      VB: UCT.Overworld.FiniteStateMachine.IdleState
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld.FiniteStateMachine
    source:
      id: IdleState
      path: ''
      startLine: 25148
    syntax:
      content:
        CSharp: 'public class IdleState : IState'
        VB: Public Class IdleState Implements IState
    inheritance:
    - System.Object
    implements:
    - UCT.Overworld.FiniteStateMachine.IState
    items:
    - id: UCT.Overworld.FiniteStateMachine.IdleState.#ctor(UCT.Overworld.FiniteStateMachine.FiniteStateMachine,UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
      commentId: M:UCT.Overworld.FiniteStateMachine.IdleState.#ctor(UCT.Overworld.FiniteStateMachine.FiniteStateMachine,UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
      language: CSharp
      name:
        CSharp: IdleState(FiniteStateMachine, FiniteStateMachineData)
        VB: New(FiniteStateMachine, FiniteStateMachineData)
      nameWithType:
        CSharp: IdleState.IdleState(FiniteStateMachine, FiniteStateMachineData)
        VB: IdleState.New(FiniteStateMachine, FiniteStateMachineData)
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.IdleState.IdleState(UCT.Overworld.FiniteStateMachine.FiniteStateMachine, UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
        VB: UCT.Overworld.FiniteStateMachine.IdleState.New(UCT.Overworld.FiniteStateMachine.FiniteStateMachine, UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: .ctor
        path: ''
        startLine: 25153
      syntax:
        content:
          CSharp: public IdleState(FiniteStateMachine fsm, FiniteStateMachineData data)
          VB: Public Sub New(fsm As FiniteStateMachine, data As FiniteStateMachineData)
        parameters:
        - id: fsm
          type: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        - id: data
          type: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
      overload: UCT.Overworld.FiniteStateMachine.IdleState.#ctor*
    - id: UCT.Overworld.FiniteStateMachine.IdleState.OnEnter
      commentId: M:UCT.Overworld.FiniteStateMachine.IdleState.OnEnter
      language: CSharp
      name:
        CSharp: OnEnter()
        VB: OnEnter()
      nameWithType:
        CSharp: IdleState.OnEnter()
        VB: IdleState.OnEnter()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.IdleState.OnEnter()
        VB: UCT.Overworld.FiniteStateMachine.IdleState.OnEnter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnEnter
        path: ''
        startLine: 25159
      syntax:
        content:
          CSharp: public void OnEnter()
          VB: Public Sub OnEnter()
      overload: UCT.Overworld.FiniteStateMachine.IdleState.OnEnter*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnEnter
    - id: UCT.Overworld.FiniteStateMachine.IdleState.OnUpdate
      commentId: M:UCT.Overworld.FiniteStateMachine.IdleState.OnUpdate
      language: CSharp
      name:
        CSharp: OnUpdate()
        VB: OnUpdate()
      nameWithType:
        CSharp: IdleState.OnUpdate()
        VB: IdleState.OnUpdate()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.IdleState.OnUpdate()
        VB: UCT.Overworld.FiniteStateMachine.IdleState.OnUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnUpdate
        path: ''
        startLine: 25167
      syntax:
        content:
          CSharp: public void OnUpdate()
          VB: Public Sub OnUpdate()
      overload: UCT.Overworld.FiniteStateMachine.IdleState.OnUpdate*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnUpdate
    - id: UCT.Overworld.FiniteStateMachine.IdleState.OnFixedUpdate
      commentId: M:UCT.Overworld.FiniteStateMachine.IdleState.OnFixedUpdate
      language: CSharp
      name:
        CSharp: OnFixedUpdate()
        VB: OnFixedUpdate()
      nameWithType:
        CSharp: IdleState.OnFixedUpdate()
        VB: IdleState.OnFixedUpdate()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.IdleState.OnFixedUpdate()
        VB: UCT.Overworld.FiniteStateMachine.IdleState.OnFixedUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnFixedUpdate
        path: ''
        startLine: 25172
      syntax:
        content:
          CSharp: public void OnFixedUpdate()
          VB: Public Sub OnFixedUpdate()
      overload: UCT.Overworld.FiniteStateMachine.IdleState.OnFixedUpdate*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate
    - id: UCT.Overworld.FiniteStateMachine.IdleState.OnExit
      commentId: M:UCT.Overworld.FiniteStateMachine.IdleState.OnExit
      language: CSharp
      name:
        CSharp: OnExit()
        VB: OnExit()
      nameWithType:
        CSharp: IdleState.OnExit()
        VB: IdleState.OnExit()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.IdleState.OnExit()
        VB: UCT.Overworld.FiniteStateMachine.IdleState.OnExit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnExit
        path: ''
        startLine: 25177
      syntax:
        content:
          CSharp: public void OnExit()
          VB: Public Sub OnExit()
      overload: UCT.Overworld.FiniteStateMachine.IdleState.OnExit*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnExit
  - id: UCT.Overworld.FiniteStateMachine.WalkState
    commentId: T:UCT.Overworld.FiniteStateMachine.WalkState
    language: CSharp
    name:
      CSharp: WalkState
      VB: WalkState
    nameWithType:
      CSharp: WalkState
      VB: WalkState
    qualifiedName:
      CSharp: UCT.Overworld.FiniteStateMachine.WalkState
      VB: UCT.Overworld.FiniteStateMachine.WalkState
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld.FiniteStateMachine
    source:
      id: WalkState
      path: ''
      startLine: 25183
    syntax:
      content:
        CSharp: 'public class WalkState : IState'
        VB: Public Class WalkState Implements IState
    inheritance:
    - System.Object
    implements:
    - UCT.Overworld.FiniteStateMachine.IState
    items:
    - id: UCT.Overworld.FiniteStateMachine.WalkState.#ctor(UCT.Overworld.FiniteStateMachine.FiniteStateMachine,UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
      commentId: M:UCT.Overworld.FiniteStateMachine.WalkState.#ctor(UCT.Overworld.FiniteStateMachine.FiniteStateMachine,UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
      language: CSharp
      name:
        CSharp: WalkState(FiniteStateMachine, FiniteStateMachineData)
        VB: New(FiniteStateMachine, FiniteStateMachineData)
      nameWithType:
        CSharp: WalkState.WalkState(FiniteStateMachine, FiniteStateMachineData)
        VB: WalkState.New(FiniteStateMachine, FiniteStateMachineData)
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.WalkState.WalkState(UCT.Overworld.FiniteStateMachine.FiniteStateMachine, UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
        VB: UCT.Overworld.FiniteStateMachine.WalkState.New(UCT.Overworld.FiniteStateMachine.FiniteStateMachine, UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: .ctor
        path: ''
        startLine: 25191
      syntax:
        content:
          CSharp: public WalkState(FiniteStateMachine fsm, FiniteStateMachineData data)
          VB: Public Sub New(fsm As FiniteStateMachine, data As FiniteStateMachineData)
        parameters:
        - id: fsm
          type: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        - id: data
          type: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
      overload: UCT.Overworld.FiniteStateMachine.WalkState.#ctor*
    - id: UCT.Overworld.FiniteStateMachine.WalkState.OnEnter
      commentId: M:UCT.Overworld.FiniteStateMachine.WalkState.OnEnter
      language: CSharp
      name:
        CSharp: OnEnter()
        VB: OnEnter()
      nameWithType:
        CSharp: WalkState.OnEnter()
        VB: WalkState.OnEnter()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.WalkState.OnEnter()
        VB: UCT.Overworld.FiniteStateMachine.WalkState.OnEnter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnEnter
        path: ''
        startLine: 25197
      syntax:
        content:
          CSharp: public void OnEnter()
          VB: Public Sub OnEnter()
      overload: UCT.Overworld.FiniteStateMachine.WalkState.OnEnter*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnEnter
    - id: UCT.Overworld.FiniteStateMachine.WalkState.OnUpdate
      commentId: M:UCT.Overworld.FiniteStateMachine.WalkState.OnUpdate
      language: CSharp
      name:
        CSharp: OnUpdate()
        VB: OnUpdate()
      nameWithType:
        CSharp: WalkState.OnUpdate()
        VB: WalkState.OnUpdate()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.WalkState.OnUpdate()
        VB: UCT.Overworld.FiniteStateMachine.WalkState.OnUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnUpdate
        path: ''
        startLine: 25205
      syntax:
        content:
          CSharp: public void OnUpdate()
          VB: Public Sub OnUpdate()
      overload: UCT.Overworld.FiniteStateMachine.WalkState.OnUpdate*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnUpdate
    - id: UCT.Overworld.FiniteStateMachine.WalkState.OnFixedUpdate
      commentId: M:UCT.Overworld.FiniteStateMachine.WalkState.OnFixedUpdate
      language: CSharp
      name:
        CSharp: OnFixedUpdate()
        VB: OnFixedUpdate()
      nameWithType:
        CSharp: WalkState.OnFixedUpdate()
        VB: WalkState.OnFixedUpdate()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.WalkState.OnFixedUpdate()
        VB: UCT.Overworld.FiniteStateMachine.WalkState.OnFixedUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnFixedUpdate
        path: ''
        startLine: 25210
      syntax:
        content:
          CSharp: public void OnFixedUpdate()
          VB: Public Sub OnFixedUpdate()
      overload: UCT.Overworld.FiniteStateMachine.WalkState.OnFixedUpdate*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate
    - id: UCT.Overworld.FiniteStateMachine.WalkState.OnExit
      commentId: M:UCT.Overworld.FiniteStateMachine.WalkState.OnExit
      language: CSharp
      name:
        CSharp: OnExit()
        VB: OnExit()
      nameWithType:
        CSharp: WalkState.OnExit()
        VB: WalkState.OnExit()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.WalkState.OnExit()
        VB: UCT.Overworld.FiniteStateMachine.WalkState.OnExit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnExit
        path: ''
        startLine: 25226
      syntax:
        content:
          CSharp: public void OnExit()
          VB: Public Sub OnExit()
      overload: UCT.Overworld.FiniteStateMachine.WalkState.OnExit*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnExit
  - id: UCT.Overworld.FiniteStateMachine.RunState
    commentId: T:UCT.Overworld.FiniteStateMachine.RunState
    language: CSharp
    name:
      CSharp: RunState
      VB: RunState
    nameWithType:
      CSharp: RunState
      VB: RunState
    qualifiedName:
      CSharp: UCT.Overworld.FiniteStateMachine.RunState
      VB: UCT.Overworld.FiniteStateMachine.RunState
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld.FiniteStateMachine
    source:
      id: RunState
      path: ''
      startLine: 25233
    syntax:
      content:
        CSharp: 'public class RunState : IState'
        VB: Public Class RunState Implements IState
    inheritance:
    - System.Object
    implements:
    - UCT.Overworld.FiniteStateMachine.IState
    items:
    - id: UCT.Overworld.FiniteStateMachine.RunState.#ctor(UCT.Overworld.FiniteStateMachine.FiniteStateMachine,UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
      commentId: M:UCT.Overworld.FiniteStateMachine.RunState.#ctor(UCT.Overworld.FiniteStateMachine.FiniteStateMachine,UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
      language: CSharp
      name:
        CSharp: RunState(FiniteStateMachine, FiniteStateMachineData)
        VB: New(FiniteStateMachine, FiniteStateMachineData)
      nameWithType:
        CSharp: RunState.RunState(FiniteStateMachine, FiniteStateMachineData)
        VB: RunState.New(FiniteStateMachine, FiniteStateMachineData)
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.RunState.RunState(UCT.Overworld.FiniteStateMachine.FiniteStateMachine, UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
        VB: UCT.Overworld.FiniteStateMachine.RunState.New(UCT.Overworld.FiniteStateMachine.FiniteStateMachine, UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: .ctor
        path: ''
        startLine: 25241
      syntax:
        content:
          CSharp: public RunState(FiniteStateMachine fsm, FiniteStateMachineData data)
          VB: Public Sub New(fsm As FiniteStateMachine, data As FiniteStateMachineData)
        parameters:
        - id: fsm
          type: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        - id: data
          type: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
      overload: UCT.Overworld.FiniteStateMachine.RunState.#ctor*
    - id: UCT.Overworld.FiniteStateMachine.RunState.OnEnter
      commentId: M:UCT.Overworld.FiniteStateMachine.RunState.OnEnter
      language: CSharp
      name:
        CSharp: OnEnter()
        VB: OnEnter()
      nameWithType:
        CSharp: RunState.OnEnter()
        VB: RunState.OnEnter()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.RunState.OnEnter()
        VB: UCT.Overworld.FiniteStateMachine.RunState.OnEnter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnEnter
        path: ''
        startLine: 25247
      syntax:
        content:
          CSharp: public void OnEnter()
          VB: Public Sub OnEnter()
      overload: UCT.Overworld.FiniteStateMachine.RunState.OnEnter*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnEnter
    - id: UCT.Overworld.FiniteStateMachine.RunState.OnUpdate
      commentId: M:UCT.Overworld.FiniteStateMachine.RunState.OnUpdate
      language: CSharp
      name:
        CSharp: OnUpdate()
        VB: OnUpdate()
      nameWithType:
        CSharp: RunState.OnUpdate()
        VB: RunState.OnUpdate()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.RunState.OnUpdate()
        VB: UCT.Overworld.FiniteStateMachine.RunState.OnUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnUpdate
        path: ''
        startLine: 25255
      syntax:
        content:
          CSharp: public void OnUpdate()
          VB: Public Sub OnUpdate()
      overload: UCT.Overworld.FiniteStateMachine.RunState.OnUpdate*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnUpdate
    - id: UCT.Overworld.FiniteStateMachine.RunState.OnFixedUpdate
      commentId: M:UCT.Overworld.FiniteStateMachine.RunState.OnFixedUpdate
      language: CSharp
      name:
        CSharp: OnFixedUpdate()
        VB: OnFixedUpdate()
      nameWithType:
        CSharp: RunState.OnFixedUpdate()
        VB: RunState.OnFixedUpdate()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.RunState.OnFixedUpdate()
        VB: UCT.Overworld.FiniteStateMachine.RunState.OnFixedUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnFixedUpdate
        path: ''
        startLine: 25260
      syntax:
        content:
          CSharp: public void OnFixedUpdate()
          VB: Public Sub OnFixedUpdate()
      overload: UCT.Overworld.FiniteStateMachine.RunState.OnFixedUpdate*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate
    - id: UCT.Overworld.FiniteStateMachine.RunState.OnExit
      commentId: M:UCT.Overworld.FiniteStateMachine.RunState.OnExit
      language: CSharp
      name:
        CSharp: OnExit()
        VB: OnExit()
      nameWithType:
        CSharp: RunState.OnExit()
        VB: RunState.OnExit()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.RunState.OnExit()
        VB: UCT.Overworld.FiniteStateMachine.RunState.OnExit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnExit
        path: ''
        startLine: 25275
      syntax:
        content:
          CSharp: public void OnExit()
          VB: Public Sub OnExit()
      overload: UCT.Overworld.FiniteStateMachine.RunState.OnExit*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnExit
  - id: UCT.Overworld.FiniteStateMachine.SpinState
    commentId: T:UCT.Overworld.FiniteStateMachine.SpinState
    language: CSharp
    name:
      CSharp: SpinState
      VB: SpinState
    nameWithType:
      CSharp: SpinState
      VB: SpinState
    qualifiedName:
      CSharp: UCT.Overworld.FiniteStateMachine.SpinState
      VB: UCT.Overworld.FiniteStateMachine.SpinState
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld.FiniteStateMachine
    source:
      id: SpinState
      path: ''
      startLine: 25281
    syntax:
      content:
        CSharp: 'public class SpinState : IState'
        VB: Public Class SpinState Implements IState
    inheritance:
    - System.Object
    implements:
    - UCT.Overworld.FiniteStateMachine.IState
    items:
    - id: UCT.Overworld.FiniteStateMachine.SpinState.#ctor(UCT.Overworld.FiniteStateMachine.FiniteStateMachine,UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
      commentId: M:UCT.Overworld.FiniteStateMachine.SpinState.#ctor(UCT.Overworld.FiniteStateMachine.FiniteStateMachine,UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
      language: CSharp
      name:
        CSharp: SpinState(FiniteStateMachine, FiniteStateMachineData)
        VB: New(FiniteStateMachine, FiniteStateMachineData)
      nameWithType:
        CSharp: SpinState.SpinState(FiniteStateMachine, FiniteStateMachineData)
        VB: SpinState.New(FiniteStateMachine, FiniteStateMachineData)
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.SpinState.SpinState(UCT.Overworld.FiniteStateMachine.FiniteStateMachine, UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
        VB: UCT.Overworld.FiniteStateMachine.SpinState.New(UCT.Overworld.FiniteStateMachine.FiniteStateMachine, UCT.Overworld.FiniteStateMachine.FiniteStateMachineData)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: .ctor
        path: ''
        startLine: 25293
      syntax:
        content:
          CSharp: public SpinState(FiniteStateMachine fsm, FiniteStateMachineData data)
          VB: Public Sub New(fsm As FiniteStateMachine, data As FiniteStateMachineData)
        parameters:
        - id: fsm
          type: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        - id: data
          type: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
      overload: UCT.Overworld.FiniteStateMachine.SpinState.#ctor*
    - id: UCT.Overworld.FiniteStateMachine.SpinState.OnEnter
      commentId: M:UCT.Overworld.FiniteStateMachine.SpinState.OnEnter
      language: CSharp
      name:
        CSharp: OnEnter()
        VB: OnEnter()
      nameWithType:
        CSharp: SpinState.OnEnter()
        VB: SpinState.OnEnter()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.SpinState.OnEnter()
        VB: UCT.Overworld.FiniteStateMachine.SpinState.OnEnter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnEnter
        path: ''
        startLine: 25299
      syntax:
        content:
          CSharp: public void OnEnter()
          VB: Public Sub OnEnter()
      overload: UCT.Overworld.FiniteStateMachine.SpinState.OnEnter*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnEnter
    - id: UCT.Overworld.FiniteStateMachine.SpinState.OnUpdate
      commentId: M:UCT.Overworld.FiniteStateMachine.SpinState.OnUpdate
      language: CSharp
      name:
        CSharp: OnUpdate()
        VB: OnUpdate()
      nameWithType:
        CSharp: SpinState.OnUpdate()
        VB: SpinState.OnUpdate()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.SpinState.OnUpdate()
        VB: UCT.Overworld.FiniteStateMachine.SpinState.OnUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnUpdate
        path: ''
        startLine: 25307
      syntax:
        content:
          CSharp: public void OnUpdate()
          VB: Public Sub OnUpdate()
      overload: UCT.Overworld.FiniteStateMachine.SpinState.OnUpdate*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnUpdate
    - id: UCT.Overworld.FiniteStateMachine.SpinState.OnFixedUpdate
      commentId: M:UCT.Overworld.FiniteStateMachine.SpinState.OnFixedUpdate
      language: CSharp
      name:
        CSharp: OnFixedUpdate()
        VB: OnFixedUpdate()
      nameWithType:
        CSharp: SpinState.OnFixedUpdate()
        VB: SpinState.OnFixedUpdate()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.SpinState.OnFixedUpdate()
        VB: UCT.Overworld.FiniteStateMachine.SpinState.OnFixedUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnFixedUpdate
        path: ''
        startLine: 25313
      syntax:
        content:
          CSharp: public void OnFixedUpdate()
          VB: Public Sub OnFixedUpdate()
      overload: UCT.Overworld.FiniteStateMachine.SpinState.OnFixedUpdate*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate
    - id: UCT.Overworld.FiniteStateMachine.SpinState.OnExit
      commentId: M:UCT.Overworld.FiniteStateMachine.SpinState.OnExit
      language: CSharp
      name:
        CSharp: OnExit()
        VB: OnExit()
      nameWithType:
        CSharp: SpinState.OnExit()
        VB: SpinState.OnExit()
      qualifiedName:
        CSharp: UCT.Overworld.FiniteStateMachine.SpinState.OnExit()
        VB: UCT.Overworld.FiniteStateMachine.SpinState.OnExit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.FiniteStateMachine
      source:
        id: OnExit
        path: ''
        startLine: 25332
      syntax:
        content:
          CSharp: public void OnExit()
          VB: Public Sub OnExit()
      overload: UCT.Overworld.FiniteStateMachine.SpinState.OnExit*
      implements:
      - UCT.Overworld.FiniteStateMachine.IState.OnExit
- id: UCT.Overworld.Corridor
  commentId: N:UCT.Overworld.Corridor
  language: CSharp
  name:
    CSharp: UCT.Overworld.Corridor
    VB: UCT.Overworld.Corridor
  nameWithType:
    CSharp: UCT.Overworld.Corridor
    VB: UCT.Overworld.Corridor
  qualifiedName:
    CSharp: UCT.Overworld.Corridor
    VB: UCT.Overworld.Corridor
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.Overworld.Corridor.ColumnsMove
    commentId: T:UCT.Overworld.Corridor.ColumnsMove
    language: CSharp
    name:
      CSharp: ColumnsMove
      VB: ColumnsMove
    nameWithType:
      CSharp: ColumnsMove
      VB: ColumnsMove
    qualifiedName:
      CSharp: UCT.Overworld.Corridor.ColumnsMove
      VB: UCT.Overworld.Corridor.ColumnsMove
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Overworld.Corridor
    source:
      id: ColumnsMove
      path: ''
      startLine: 25345
    summary: "\n长廊柱子移动\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ColumnsMove : MonoBehaviour'
        VB: Public Class ColumnsMove Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Overworld.Corridor.ColumnsMove.speed
      commentId: F:UCT.Overworld.Corridor.ColumnsMove.speed
      language: CSharp
      name:
        CSharp: speed
        VB: speed
      nameWithType:
        CSharp: ColumnsMove.speed
        VB: ColumnsMove.speed
      qualifiedName:
        CSharp: UCT.Overworld.Corridor.ColumnsMove.speed
        VB: UCT.Overworld.Corridor.ColumnsMove.speed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Overworld.Corridor
      source:
        id: speed
        path: ''
        startLine: 25347
      syntax:
        content:
          CSharp: public float speed
          VB: Public speed As Single
        return:
          type: System.Single
- id: UCT.Core
  commentId: N:UCT.Core
  language: CSharp
  name:
    CSharp: UCT.Core
    VB: UCT.Core
  nameWithType:
    CSharp: UCT.Core
    VB: UCT.Core
  qualifiedName:
    CSharp: UCT.Core
    VB: UCT.Core
  type: Namespace
  assemblies:
  - cs.temp.dll
  items:
  - id: UCT.Core.TypeWritterTagProcessor
    commentId: T:UCT.Core.TypeWritterTagProcessor
    language: CSharp
    name:
      CSharp: TypeWritterTagProcessor
      VB: TypeWritterTagProcessor
    nameWithType:
      CSharp: TypeWritterTagProcessor
      VB: TypeWritterTagProcessor
    qualifiedName:
      CSharp: UCT.Core.TypeWritterTagProcessor
      VB: UCT.Core.TypeWritterTagProcessor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Core
    source:
      id: TypeWritterTagProcessor
      path: ''
      startLine: 25869
    summary: "\nTypeWritterTagProcessor字典映射部分\n"
    example: []
    syntax:
      content:
        CSharp: public static class TypeWritterTagProcessor
        VB: Public Module TypeWritterTagProcessor
    inheritance:
    - System.Object
    items:
    - id: UCT.Core.TypeWritterTagProcessor.SetItemDataName(System.String)
      commentId: M:UCT.Core.TypeWritterTagProcessor.SetItemDataName(System.String)
      language: CSharp
      name:
        CSharp: SetItemDataName(string)
        VB: SetItemDataName(String)
      nameWithType:
        CSharp: TypeWritterTagProcessor.SetItemDataName(string)
        VB: TypeWritterTagProcessor.SetItemDataName(String)
      qualifiedName:
        CSharp: UCT.Core.TypeWritterTagProcessor.SetItemDataName(string)
        VB: UCT.Core.TypeWritterTagProcessor.SetItemDataName(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: SetItemDataName
        path: ''
        startLine: 25396
      syntax:
        content:
          CSharp: public static void SetItemDataName(string dataName)
          VB: Public Shared Sub SetItemDataName(dataName As String)
        parameters:
        - id: dataName
          type: System.String
      overload: UCT.Core.TypeWritterTagProcessor.SetItemDataName*
    - id: UCT.Core.TypeWritterTagProcessor.TypeWritterProcessTag(UCT.Core.TypeWritter,TMP_Text,System.Int32@,System.Int32@,System.String@,System.Boolean@)
      commentId: M:UCT.Core.TypeWritterTagProcessor.TypeWritterProcessTag(UCT.Core.TypeWritter,TMP_Text,System.Int32@,System.Int32@,System.String@,System.Boolean@)
      language: CSharp
      name:
        CSharp: TypeWritterProcessTag(TypeWritter, TMP_Text, ref int, out int, out string, out bool)
        VB: TypeWritterProcessTag(TypeWritter, TMP_Text, Integer, Integer, String, Boolean)
      nameWithType:
        CSharp: TypeWritterTagProcessor.TypeWritterProcessTag(TypeWritter, TMP_Text, ref int, out int, out string, out bool)
        VB: TypeWritterTagProcessor.TypeWritterProcessTag(TypeWritter, TMP_Text, Integer, Integer, String, Boolean)
      qualifiedName:
        CSharp: UCT.Core.TypeWritterTagProcessor.TypeWritterProcessTag(UCT.Core.TypeWritter, TMP_Text, ref int, out int, out string, out bool)
        VB: UCT.Core.TypeWritterTagProcessor.TypeWritterProcessTag(UCT.Core.TypeWritter, TMP_Text, Integer, Integer, String, Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: TypeWritterProcessTag
        path: ''
        startLine: 25411
      summary: "\n识别打字机的自定义富文本标签并执行相关方法\n"
      example: []
      syntax:
        content:
          CSharp: public static void TypeWritterProcessTag(TypeWritter typeWritter, TMP_Text tmpText, ref int index, out int yieldNum, out string yieldString, out bool startPassText)
          VB: Public Shared Sub TypeWritterProcessTag(typeWritter As TypeWritter, tmpText As TMP_Text, index As Integer, yieldNum As Integer, yieldString As String, startPassText As Boolean)
        parameters:
        - id: typeWritter
          type: UCT.Core.TypeWritter
          description: 打字机
        - id: tmpText
          type: Global.TMP_Text
          description: 打字机应用的TMP文本
        - id: index
          type: System.Int32
          description: 打字机执行中的索引
        - id: yieldNum
          type: System.Int32
          description: 打字机在这次自定义富文本执行后停顿的时间。如果为O则不会停顿。
        - id: yieldString
          type: System.String
          description: 打字机停顿过程中会逐步输出的文本内容。根据yieldNum决定一次的输出字数。
        - id: startPassText
          type: System.Boolean
          description: 是否执行PassText
      overload: UCT.Core.TypeWritterTagProcessor.TypeWritterProcessTag*
    - id: UCT.Core.TypeWritterTagProcessor.GetTypeWritterStopTime(UCT.Core.TypeWritter)
      commentId: M:UCT.Core.TypeWritterTagProcessor.GetTypeWritterStopTime(UCT.Core.TypeWritter)
      language: CSharp
      name:
        CSharp: GetTypeWritterStopTime(TypeWritter)
        VB: GetTypeWritterStopTime(TypeWritter)
      nameWithType:
        CSharp: TypeWritterTagProcessor.GetTypeWritterStopTime(TypeWritter)
        VB: TypeWritterTagProcessor.GetTypeWritterStopTime(TypeWritter)
      qualifiedName:
        CSharp: UCT.Core.TypeWritterTagProcessor.GetTypeWritterStopTime(UCT.Core.TypeWritter)
        VB: UCT.Core.TypeWritterTagProcessor.GetTypeWritterStopTime(UCT.Core.TypeWritter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: GetTypeWritterStopTime
        path: ''
        startLine: 25688
      syntax:
        content:
          CSharp: public static float GetTypeWritterStopTime(TypeWritter typeWritter)
          VB: Public Shared Function GetTypeWritterStopTime(typeWritter As TypeWritter) As Single
        parameters:
        - id: typeWritter
          type: UCT.Core.TypeWritter
        return:
          type: System.Single
      overload: UCT.Core.TypeWritterTagProcessor.GetTypeWritterStopTime*
    - id: UCT.Core.TypeWritterTagProcessor.TypeWritterPlayFx(UCT.Core.TypeWritter)
      commentId: M:UCT.Core.TypeWritterTagProcessor.TypeWritterPlayFx(UCT.Core.TypeWritter)
      language: CSharp
      name:
        CSharp: TypeWritterPlayFx(TypeWritter)
        VB: TypeWritterPlayFx(TypeWritter)
      nameWithType:
        CSharp: TypeWritterTagProcessor.TypeWritterPlayFx(TypeWritter)
        VB: TypeWritterTagProcessor.TypeWritterPlayFx(TypeWritter)
      qualifiedName:
        CSharp: UCT.Core.TypeWritterTagProcessor.TypeWritterPlayFx(UCT.Core.TypeWritter)
        VB: UCT.Core.TypeWritterTagProcessor.TypeWritterPlayFx(UCT.Core.TypeWritter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: TypeWritterPlayFx
        path: ''
        startLine: 25694
      syntax:
        content:
          CSharp: public static void TypeWritterPlayFx(TypeWritter typeWritter)
          VB: Public Shared Sub TypeWritterPlayFx(typeWritter As TypeWritter)
        parameters:
        - id: typeWritter
          type: UCT.Core.TypeWritter
      overload: UCT.Core.TypeWritterTagProcessor.TypeWritterPlayFx*
    - id: UCT.Core.TypeWritterTagProcessor.SetSpeedMode(UCT.Core.TypeWritter)
      commentId: M:UCT.Core.TypeWritterTagProcessor.SetSpeedMode(UCT.Core.TypeWritter)
      language: CSharp
      name:
        CSharp: SetSpeedMode(TypeWritter)
        VB: SetSpeedMode(TypeWritter)
      nameWithType:
        CSharp: TypeWritterTagProcessor.SetSpeedMode(TypeWritter)
        VB: TypeWritterTagProcessor.SetSpeedMode(TypeWritter)
      qualifiedName:
        CSharp: UCT.Core.TypeWritterTagProcessor.SetSpeedMode(UCT.Core.TypeWritter)
        VB: UCT.Core.TypeWritterTagProcessor.SetSpeedMode(UCT.Core.TypeWritter)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: SetSpeedMode
        path: ''
        startLine: 25730
      syntax:
        content:
          CSharp: public static void SetSpeedMode(TypeWritter typeWritter)
          VB: Public Shared Sub SetSpeedMode(typeWritter As TypeWritter)
        parameters:
        - id: typeWritter
          type: UCT.Core.TypeWritter
      overload: UCT.Core.TypeWritterTagProcessor.SetSpeedMode*
    - id: UCT.Core.TypeWritterTagProcessor.ConvertStaticTagHandlers(System.String,System.String,System.Boolean,System.String,System.Collections.Generic.List{System.String})
      commentId: M:UCT.Core.TypeWritterTagProcessor.ConvertStaticTagHandlers(System.String,System.String,System.Boolean,System.String,System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: ConvertStaticTagHandlers(string, string, bool, string, List<string>)
        VB: ConvertStaticTagHandlers(String, String, Boolean, String, List(Of String))
      nameWithType:
        CSharp: TypeWritterTagProcessor.ConvertStaticTagHandlers(string, string, bool, string, List<string>)
        VB: TypeWritterTagProcessor.ConvertStaticTagHandlers(String, String, Boolean, String, List(Of String))
      qualifiedName:
        CSharp: UCT.Core.TypeWritterTagProcessor.ConvertStaticTagHandlers(string, string, bool, string, System.Collections.Generic.List<string>)
        VB: UCT.Core.TypeWritterTagProcessor.ConvertStaticTagHandlers(String, String, Boolean, String, System.Collections.Generic.List(Of String))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: ConvertStaticTagHandlers
        path: ''
        startLine: 25744
      summary: "\n检测富文本符号并转换\n"
      example: []
      syntax:
        content:
          CSharp: public static string ConvertStaticTagHandlers(string text, string inputText, bool isData, string inputName, List<string> ex)
          VB: Public Shared Function ConvertStaticTagHandlers(text As String, inputText As String, isData As Boolean, inputName As String, ex As List(Of String)) As String
        parameters:
        - id: text
          type: System.String
        - id: inputText
          type: System.String
        - id: isData
          type: System.Boolean
        - id: inputName
          type: System.String
        - id: ex
          type: System.Collections.Generic.List{System.String}
        return:
          type: System.String
      overload: UCT.Core.TypeWritterTagProcessor.ConvertStaticTagHandlers*
  - id: UCT.Core.MainControl
    commentId: T:UCT.Core.MainControl
    language: CSharp
    name:
      CSharp: MainControl
      VB: MainControl
    nameWithType:
      CSharp: MainControl
      VB: MainControl
    qualifiedName:
      CSharp: UCT.Core.MainControl
      VB: UCT.Core.MainControl
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Core
    source:
      id: MainControl
      path: ''
      startLine: 26169
    summary: "\n调用所有ScriptableObject，对场景进行初始化\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MainControl : MonoBehaviour'
        VB: Public Class MainControl Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Core.MainControl.sceneState
      commentId: F:UCT.Core.MainControl.sceneState
      language: CSharp
      name:
        CSharp: sceneState
        VB: sceneState
      nameWithType:
        CSharp: MainControl.sceneState
        VB: MainControl.sceneState
      qualifiedName:
        CSharp: UCT.Core.MainControl.sceneState
        VB: UCT.Core.MainControl.sceneState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: sceneState
        path: ''
        startLine: 26178
      syntax:
        content:
          CSharp: public MainControl.SceneState sceneState
          VB: Public sceneState As MainControl.SceneState
        return:
          type: UCT.Core.MainControl.SceneState
    - id: UCT.Core.MainControl.languagePackId
      commentId: F:UCT.Core.MainControl.languagePackId
      language: CSharp
      name:
        CSharp: languagePackId
        VB: languagePackId
      nameWithType:
        CSharp: MainControl.languagePackId
        VB: MainControl.languagePackId
      qualifiedName:
        CSharp: UCT.Core.MainControl.languagePackId
        VB: UCT.Core.MainControl.languagePackId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: languagePackId
        path: ''
        startLine: 26180
      syntax:
        content:
          CSharp: public int languagePackId
          VB: Public languagePackId As Integer
        return:
          type: System.Int32
    - id: UCT.Core.MainControl.saveDataId
      commentId: F:UCT.Core.MainControl.saveDataId
      language: CSharp
      name:
        CSharp: saveDataId
        VB: saveDataId
      nameWithType:
        CSharp: MainControl.saveDataId
        VB: MainControl.saveDataId
      qualifiedName:
        CSharp: UCT.Core.MainControl.saveDataId
        VB: UCT.Core.MainControl.saveDataId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: saveDataId
        path: ''
        startLine: 26182
      syntax:
        content:
          CSharp: public int saveDataId
          VB: Public saveDataId As Integer
        return:
          type: System.Int32
    - id: UCT.Core.MainControl.isFadeTransitionEnabled
      commentId: F:UCT.Core.MainControl.isFadeTransitionEnabled
      language: CSharp
      name:
        CSharp: isFadeTransitionEnabled
        VB: isFadeTransitionEnabled
      nameWithType:
        CSharp: MainControl.isFadeTransitionEnabled
        VB: MainControl.isFadeTransitionEnabled
      qualifiedName:
        CSharp: UCT.Core.MainControl.isFadeTransitionEnabled
        VB: UCT.Core.MainControl.isFadeTransitionEnabled
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isFadeTransitionEnabled
        path: ''
        startLine: 26188
      syntax:
        content:
          CSharp: public bool isFadeTransitionEnabled
          VB: Public isFadeTransitionEnabled As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.MainControl.isFadeInDisabled
      commentId: F:UCT.Core.MainControl.isFadeInDisabled
      language: CSharp
      name:
        CSharp: isFadeInDisabled
        VB: isFadeInDisabled
      nameWithType:
        CSharp: MainControl.isFadeInDisabled
        VB: MainControl.isFadeInDisabled
      qualifiedName:
        CSharp: UCT.Core.MainControl.isFadeInDisabled
        VB: UCT.Core.MainControl.isFadeInDisabled
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isFadeInDisabled
        path: ''
        startLine: 26193
      syntax:
        content:
          CSharp: public bool isFadeInDisabled
          VB: Public isFadeInDisabled As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.MainControl.isFadeInUnpaused
      commentId: F:UCT.Core.MainControl.isFadeInUnpaused
      language: CSharp
      name:
        CSharp: isFadeInUnpaused
        VB: isFadeInUnpaused
      nameWithType:
        CSharp: MainControl.isFadeInUnpaused
        VB: MainControl.isFadeInUnpaused
      qualifiedName:
        CSharp: UCT.Core.MainControl.isFadeInUnpaused
        VB: UCT.Core.MainControl.isFadeInUnpaused
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isFadeInUnpaused
        path: ''
        startLine: 26198
      syntax:
        content:
          CSharp: public bool isFadeInUnpaused
          VB: Public isFadeInUnpaused As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.MainControl.sceneSwitchingFadeImage
      commentId: F:UCT.Core.MainControl.sceneSwitchingFadeImage
      language: CSharp
      name:
        CSharp: sceneSwitchingFadeImage
        VB: sceneSwitchingFadeImage
      nameWithType:
        CSharp: MainControl.sceneSwitchingFadeImage
        VB: MainControl.sceneSwitchingFadeImage
      qualifiedName:
        CSharp: UCT.Core.MainControl.sceneSwitchingFadeImage
        VB: UCT.Core.MainControl.sceneSwitchingFadeImage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: sceneSwitchingFadeImage
        path: ''
        startLine: 26201
      syntax:
        content:
          CSharp: public Image sceneSwitchingFadeImage
          VB: Public sceneSwitchingFadeImage As Image
        return:
          type: Global.Image
    - id: UCT.Core.MainControl.isSceneSwitching
      commentId: F:UCT.Core.MainControl.isSceneSwitching
      language: CSharp
      name:
        CSharp: isSceneSwitching
        VB: isSceneSwitching
      nameWithType:
        CSharp: MainControl.isSceneSwitching
        VB: MainControl.isSceneSwitching
      qualifiedName:
        CSharp: UCT.Core.MainControl.isSceneSwitching
        VB: UCT.Core.MainControl.isSceneSwitching
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isSceneSwitching
        path: ''
        startLine: 26204
      syntax:
        content:
          CSharp: public bool isSceneSwitching
          VB: Public isSceneSwitching As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.MainControl.cameraMainInBattle
      commentId: F:UCT.Core.MainControl.cameraMainInBattle
      language: CSharp
      name:
        CSharp: cameraMainInBattle
        VB: cameraMainInBattle
      nameWithType:
        CSharp: MainControl.cameraMainInBattle
        VB: MainControl.cameraMainInBattle
      qualifiedName:
        CSharp: UCT.Core.MainControl.cameraMainInBattle
        VB: UCT.Core.MainControl.cameraMainInBattle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: cameraMainInBattle
        path: ''
        startLine: 26206
      syntax:
        content:
          CSharp: public Camera cameraMainInBattle
          VB: Public cameraMainInBattle As Camera
        return:
          type: Global.Camera
    - id: UCT.Core.MainControl.mainCamera
      commentId: F:UCT.Core.MainControl.mainCamera
      language: CSharp
      name:
        CSharp: mainCamera
        VB: mainCamera
      nameWithType:
        CSharp: MainControl.mainCamera
        VB: MainControl.mainCamera
      qualifiedName:
        CSharp: UCT.Core.MainControl.mainCamera
        VB: UCT.Core.MainControl.mainCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: mainCamera
        path: ''
        startLine: 26208
      syntax:
        content:
          CSharp: public Camera mainCamera
          VB: Public mainCamera As Camera
        return:
          type: Global.Camera
    - id: UCT.Core.MainControl.mainBox
      commentId: F:UCT.Core.MainControl.mainBox
      language: CSharp
      name:
        CSharp: mainBox
        VB: mainBox
      nameWithType:
        CSharp: MainControl.mainBox
        VB: MainControl.mainBox
      qualifiedName:
        CSharp: UCT.Core.MainControl.mainBox
        VB: UCT.Core.MainControl.mainBox
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: mainBox
        path: ''
        startLine: 26209
      syntax:
        content:
          CSharp: public BoxDrawer mainBox
          VB: Public mainBox As BoxDrawer
        return:
          type: Global.BoxDrawer
    - id: UCT.Core.MainControl.playerControl
      commentId: F:UCT.Core.MainControl.playerControl
      language: CSharp
      name:
        CSharp: playerControl
        VB: playerControl
      nameWithType:
        CSharp: MainControl.playerControl
        VB: MainControl.playerControl
      qualifiedName:
        CSharp: UCT.Core.MainControl.playerControl
        VB: UCT.Core.MainControl.playerControl
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: playerControl
        path: ''
        startLine: 26212
      syntax:
        content:
          CSharp: public PlayerControl playerControl
          VB: Public playerControl As PlayerControl
        return:
          type: Global.PlayerControl
    - id: UCT.Core.MainControl.overworldControl
      commentId: F:UCT.Core.MainControl.overworldControl
      language: CSharp
      name:
        CSharp: overworldControl
        VB: overworldControl
      nameWithType:
        CSharp: MainControl.overworldControl
        VB: MainControl.overworldControl
      qualifiedName:
        CSharp: UCT.Core.MainControl.overworldControl
        VB: UCT.Core.MainControl.overworldControl
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: overworldControl
        path: ''
        startLine: 26215
      syntax:
        content:
          CSharp: public OverworldControl overworldControl
          VB: Public overworldControl As OverworldControl
        return:
          type: Global.OverworldControl
    - id: UCT.Core.MainControl.battlePlayerController
      commentId: F:UCT.Core.MainControl.battlePlayerController
      language: CSharp
      name:
        CSharp: battlePlayerController
        VB: battlePlayerController
      nameWithType:
        CSharp: MainControl.battlePlayerController
        VB: MainControl.battlePlayerController
      qualifiedName:
        CSharp: UCT.Core.MainControl.battlePlayerController
        VB: UCT.Core.MainControl.battlePlayerController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: battlePlayerController
        path: ''
        startLine: 26217
      syntax:
        content:
          CSharp: public BattlePlayerController battlePlayerController
          VB: Public battlePlayerController As BattlePlayerController
        return:
          type: Global.BattlePlayerController
    - id: UCT.Core.MainControl.selectUIController
      commentId: F:UCT.Core.MainControl.selectUIController
      language: CSharp
      name:
        CSharp: selectUIController
        VB: selectUIController
      nameWithType:
        CSharp: MainControl.selectUIController
        VB: MainControl.selectUIController
      qualifiedName:
        CSharp: UCT.Core.MainControl.selectUIController
        VB: UCT.Core.MainControl.selectUIController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: selectUIController
        path: ''
        startLine: 26219
      syntax:
        content:
          CSharp: public SelectUIController selectUIController
          VB: Public selectUIController As SelectUIController
        return:
          type: Global.SelectUIController
    - id: UCT.Core.MainControl.cameraShake
      commentId: F:UCT.Core.MainControl.cameraShake
      language: CSharp
      name:
        CSharp: cameraShake
        VB: cameraShake
      nameWithType:
        CSharp: MainControl.cameraShake
        VB: MainControl.cameraShake
      qualifiedName:
        CSharp: UCT.Core.MainControl.cameraShake
        VB: UCT.Core.MainControl.cameraShake
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: cameraShake
        path: ''
        startLine: 26221
      syntax:
        content:
          CSharp: public CameraShake cameraShake
          VB: Public cameraShake As CameraShake
        return:
          type: Global.CameraShake
    - id: UCT.Core.MainControl.cameraShake3D
      commentId: F:UCT.Core.MainControl.cameraShake3D
      language: CSharp
      name:
        CSharp: cameraShake3D
        VB: cameraShake3D
      nameWithType:
        CSharp: MainControl.cameraShake3D
        VB: MainControl.cameraShake3D
      qualifiedName:
        CSharp: UCT.Core.MainControl.cameraShake3D
        VB: UCT.Core.MainControl.cameraShake3D
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: cameraShake3D
        path: ''
        startLine: 26221
      syntax:
        content:
          CSharp: public CameraShake cameraShake3D
          VB: Public cameraShake3D As CameraShake
        return:
          type: Global.CameraShake
    - id: UCT.Core.MainControl.eventController
      commentId: F:UCT.Core.MainControl.eventController
      language: CSharp
      name:
        CSharp: eventController
        VB: eventController
      nameWithType:
        CSharp: MainControl.eventController
        VB: MainControl.eventController
      qualifiedName:
        CSharp: UCT.Core.MainControl.eventController
        VB: UCT.Core.MainControl.eventController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: eventController
        path: ''
        startLine: 26224
      syntax:
        content:
          CSharp: public EventController eventController
          VB: Public eventController As EventController
        return:
          type: Global.EventController
    - id: UCT.Core.MainControl.hitVolume
      commentId: F:UCT.Core.MainControl.hitVolume
      language: CSharp
      name:
        CSharp: hitVolume
        VB: hitVolume
      nameWithType:
        CSharp: MainControl.hitVolume
        VB: MainControl.hitVolume
      qualifiedName:
        CSharp: UCT.Core.MainControl.hitVolume
        VB: UCT.Core.MainControl.hitVolume
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: hitVolume
        path: ''
        startLine: 26225
      syntax:
        content:
          CSharp: public UnityEngine.Rendering.Volume hitVolume
          VB: Public hitVolume As UnityEngine.Rendering.Volume
        return:
          type: Global.UnityEngine.Rendering.Volume
    - id: UCT.Core.MainControl.ItemController
      commentId: F:UCT.Core.MainControl.ItemController
      language: CSharp
      name:
        CSharp: ItemController
        VB: ItemController
      nameWithType:
        CSharp: MainControl.ItemController
        VB: MainControl.ItemController
      qualifiedName:
        CSharp: UCT.Core.MainControl.ItemController
        VB: UCT.Core.MainControl.ItemController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: ItemController
        path: ''
        startLine: 26227
      syntax:
        content:
          CSharp: public readonly ItemController ItemController
          VB: Public ReadOnly ItemController As ItemController
        return:
          type: Global.ItemController
    - id: UCT.Core.MainControl.OverworldPlayerBehaviour
      commentId: P:UCT.Core.MainControl.OverworldPlayerBehaviour
      language: CSharp
      name:
        CSharp: OverworldPlayerBehaviour
        VB: OverworldPlayerBehaviour
      nameWithType:
        CSharp: MainControl.OverworldPlayerBehaviour
        VB: MainControl.OverworldPlayerBehaviour
      qualifiedName:
        CSharp: UCT.Core.MainControl.OverworldPlayerBehaviour
        VB: UCT.Core.MainControl.OverworldPlayerBehaviour
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: OverworldPlayerBehaviour
        path: ''
        startLine: 26245
      syntax:
        content:
          CSharp: public static OverworldPlayerBehaviour OverworldPlayerBehaviour { get; }
          VB: Public Shared Property OverworldPlayerBehaviour As OverworldPlayerBehaviour
        parameters: []
        return:
          type: Global.OverworldPlayerBehaviour
      overload: UCT.Core.MainControl.OverworldPlayerBehaviour*
    - id: UCT.Core.MainControl.OverworldBulletPool
      commentId: P:UCT.Core.MainControl.OverworldBulletPool
      language: CSharp
      name:
        CSharp: OverworldBulletPool
        VB: OverworldBulletPool
      nameWithType:
        CSharp: MainControl.OverworldBulletPool
        VB: MainControl.OverworldBulletPool
      qualifiedName:
        CSharp: UCT.Core.MainControl.OverworldBulletPool
        VB: UCT.Core.MainControl.OverworldBulletPool
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: OverworldBulletPool
        path: ''
        startLine: 26246
      syntax:
        content:
          CSharp: public static ObjectPool OverworldBulletPool { get; }
          VB: Public Shared Property OverworldBulletPool As ObjectPool
        parameters: []
        return:
          type: UCT.Core.ObjectPool
      overload: UCT.Core.MainControl.OverworldBulletPool*
    - id: UCT.Core.MainControl.Instance
      commentId: P:UCT.Core.MainControl.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: MainControl.Instance
        VB: MainControl.Instance
      qualifiedName:
        CSharp: UCT.Core.MainControl.Instance
        VB: UCT.Core.MainControl.Instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: Instance
        path: ''
        startLine: 26248
      syntax:
        content:
          CSharp: public static MainControl Instance { get; }
          VB: Public Shared Property Instance As MainControl
        parameters: []
        return:
          type: UCT.Core.MainControl
      overload: UCT.Core.MainControl.Instance*
    - id: UCT.Core.MainControl.LanguagePackageExternalNumber
      commentId: P:UCT.Core.MainControl.LanguagePackageExternalNumber
      language: CSharp
      name:
        CSharp: LanguagePackageExternalNumber
        VB: LanguagePackageExternalNumber
      nameWithType:
        CSharp: MainControl.LanguagePackageExternalNumber
        VB: MainControl.LanguagePackageExternalNumber
      qualifiedName:
        CSharp: UCT.Core.MainControl.LanguagePackageExternalNumber
        VB: UCT.Core.MainControl.LanguagePackageExternalNumber
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: LanguagePackageExternalNumber
        path: ''
        startLine: 26250
      syntax:
        content:
          CSharp: public static int LanguagePackageExternalNumber { get; }
          VB: Public Shared Property LanguagePackageExternalNumber As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Core.MainControl.LanguagePackageExternalNumber*
    - id: UCT.Core.MainControl.LanguagePackageInternalNumber
      commentId: P:UCT.Core.MainControl.LanguagePackageInternalNumber
      language: CSharp
      name:
        CSharp: LanguagePackageInternalNumber
        VB: LanguagePackageInternalNumber
      nameWithType:
        CSharp: MainControl.LanguagePackageInternalNumber
        VB: MainControl.LanguagePackageInternalNumber
      qualifiedName:
        CSharp: UCT.Core.MainControl.LanguagePackageInternalNumber
        VB: UCT.Core.MainControl.LanguagePackageInternalNumber
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: LanguagePackageInternalNumber
        path: ''
        startLine: 26252
      syntax:
        content:
          CSharp: public static int LanguagePackageInternalNumber { get; }
          VB: Public Shared ReadOnly Property LanguagePackageInternalNumber As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Core.MainControl.LanguagePackageInternalNumber*
    - id: UCT.Core.MainControl.LanguagePackControl
      commentId: P:UCT.Core.MainControl.LanguagePackControl
      language: CSharp
      name:
        CSharp: LanguagePackControl
        VB: LanguagePackControl
      nameWithType:
        CSharp: MainControl.LanguagePackControl
        VB: MainControl.LanguagePackControl
      qualifiedName:
        CSharp: UCT.Core.MainControl.LanguagePackControl
        VB: UCT.Core.MainControl.LanguagePackControl
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: LanguagePackControl
        path: ''
        startLine: 26253
      syntax:
        content:
          CSharp: public LanguagePackControl LanguagePackControl { get; }
          VB: Public Property LanguagePackControl As LanguagePackControl
        parameters: []
        return:
          type: Global.LanguagePackControl
      overload: UCT.Core.MainControl.LanguagePackControl*
    - id: UCT.Core.MainControl.AudioControl
      commentId: P:UCT.Core.MainControl.AudioControl
      language: CSharp
      name:
        CSharp: AudioControl
        VB: AudioControl
      nameWithType:
        CSharp: MainControl.AudioControl
        VB: MainControl.AudioControl
      qualifiedName:
        CSharp: UCT.Core.MainControl.AudioControl
        VB: UCT.Core.MainControl.AudioControl
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: AudioControl
        path: ''
        startLine: 26254
      syntax:
        content:
          CSharp: public AudioControl AudioControl { get; }
          VB: Public Property AudioControl As AudioControl
        parameters: []
        return:
          type: Global.AudioControl
      overload: UCT.Core.MainControl.AudioControl*
    - id: UCT.Core.MainControl.BattleControl
      commentId: P:UCT.Core.MainControl.BattleControl
      language: CSharp
      name:
        CSharp: BattleControl
        VB: BattleControl
      nameWithType:
        CSharp: MainControl.BattleControl
        VB: MainControl.BattleControl
      qualifiedName:
        CSharp: UCT.Core.MainControl.BattleControl
        VB: UCT.Core.MainControl.BattleControl
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: BattleControl
        path: ''
        startLine: 26255
      syntax:
        content:
          CSharp: public BattleControl BattleControl { get; }
          VB: Public Property BattleControl As BattleControl
        parameters: []
        return:
          type: Global.BattleControl
      overload: UCT.Core.MainControl.BattleControl*
    - id: UCT.Core.MainControl.CharacterSpriteManagers
      commentId: P:UCT.Core.MainControl.CharacterSpriteManagers
      language: CSharp
      name:
        CSharp: CharacterSpriteManagers
        VB: CharacterSpriteManagers
      nameWithType:
        CSharp: MainControl.CharacterSpriteManagers
        VB: MainControl.CharacterSpriteManagers
      qualifiedName:
        CSharp: UCT.Core.MainControl.CharacterSpriteManagers
        VB: UCT.Core.MainControl.CharacterSpriteManagers
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: CharacterSpriteManagers
        path: ''
        startLine: 26256
      syntax:
        content:
          CSharp: public CharacterSpriteManager[] CharacterSpriteManagers { get; }
          VB: Public Property CharacterSpriteManagers As CharacterSpriteManager()
        parameters: []
        return:
          type: Global.CharacterSpriteManager[]
      overload: UCT.Core.MainControl.CharacterSpriteManagers*
    - id: UCT.Core.MainControl.Start
      commentId: M:UCT.Core.MainControl.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: MainControl.Start()
        VB: MainControl.Start()
      qualifiedName:
        CSharp: UCT.Core.MainControl.Start()
        VB: UCT.Core.MainControl.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: Start
        path: ''
        startLine: 26303
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start()
      overload: UCT.Core.MainControl.Start*
    - id: UCT.Core.MainControl.SetLanguagePackageExternalNumber(System.Int32)
      commentId: M:UCT.Core.MainControl.SetLanguagePackageExternalNumber(System.Int32)
      language: CSharp
      name:
        CSharp: SetLanguagePackageExternalNumber(int)
        VB: SetLanguagePackageExternalNumber(Integer)
      nameWithType:
        CSharp: MainControl.SetLanguagePackageExternalNumber(int)
        VB: MainControl.SetLanguagePackageExternalNumber(Integer)
      qualifiedName:
        CSharp: UCT.Core.MainControl.SetLanguagePackageExternalNumber(int)
        VB: UCT.Core.MainControl.SetLanguagePackageExternalNumber(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: SetLanguagePackageExternalNumber
        path: ''
        startLine: 26429
      syntax:
        content:
          CSharp: public static void SetLanguagePackageExternalNumber(int value)
          VB: Public Shared Sub SetLanguagePackageExternalNumber(value As Integer)
        parameters:
        - id: value
          type: System.Int32
      overload: UCT.Core.MainControl.SetLanguagePackageExternalNumber*
    - id: UCT.Core.MainControl.GetOverworldPlayerBehaviour
      commentId: M:UCT.Core.MainControl.GetOverworldPlayerBehaviour
      language: CSharp
      name:
        CSharp: GetOverworldPlayerBehaviour()
        VB: GetOverworldPlayerBehaviour()
      nameWithType:
        CSharp: MainControl.GetOverworldPlayerBehaviour()
        VB: MainControl.GetOverworldPlayerBehaviour()
      qualifiedName:
        CSharp: UCT.Core.MainControl.GetOverworldPlayerBehaviour()
        VB: UCT.Core.MainControl.GetOverworldPlayerBehaviour()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: GetOverworldPlayerBehaviour
        path: ''
        startLine: 26434
      syntax:
        content:
          CSharp: public static void GetOverworldPlayerBehaviour()
          VB: Public Shared Sub GetOverworldPlayerBehaviour()
      overload: UCT.Core.MainControl.GetOverworldPlayerBehaviour*
    - id: UCT.Core.MainControl.Initialization(System.Int32)
      commentId: M:UCT.Core.MainControl.Initialization(System.Int32)
      language: CSharp
      name:
        CSharp: Initialization(int)
        VB: Initialization(Integer)
      nameWithType:
        CSharp: MainControl.Initialization(int)
        VB: MainControl.Initialization(Integer)
      qualifiedName:
        CSharp: UCT.Core.MainControl.Initialization(int)
        VB: UCT.Core.MainControl.Initialization(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: Initialization
        path: ''
        startLine: 26480
      summary: "\n初始化加载一大堆数据\n"
      example: []
      syntax:
        content:
          CSharp: public void Initialization(int languageId)
          VB: Public Sub Initialization(languageId As Integer)
        parameters:
        - id: languageId
          type: System.Int32
      overload: UCT.Core.MainControl.Initialization*
    - id: UCT.Core.MainControl.InitializationScene
      commentId: M:UCT.Core.MainControl.InitializationScene
      language: CSharp
      name:
        CSharp: InitializationScene()
        VB: InitializationScene()
      nameWithType:
        CSharp: MainControl.InitializationScene()
        VB: MainControl.InitializationScene()
      qualifiedName:
        CSharp: UCT.Core.MainControl.InitializationScene()
        VB: UCT.Core.MainControl.InitializationScene()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: InitializationScene
        path: ''
        startLine: 26516
      syntax:
        content:
          CSharp: public void InitializationScene()
          VB: Public Sub InitializationScene()
      overload: UCT.Core.MainControl.InitializationScene*
    - id: UCT.Core.MainControl.HitPlayer(System.Int32)
      commentId: M:UCT.Core.MainControl.HitPlayer(System.Int32)
      language: CSharp
      name:
        CSharp: HitPlayer(int)
        VB: HitPlayer(Integer)
      nameWithType:
        CSharp: MainControl.HitPlayer(int)
        VB: MainControl.HitPlayer(Integer)
      qualifiedName:
        CSharp: UCT.Core.MainControl.HitPlayer(int)
        VB: UCT.Core.MainControl.HitPlayer(Integer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: HitPlayer
        path: ''
        startLine: 26696
      syntax:
        content:
          CSharp: public bool HitPlayer(int damage)
          VB: Public Function HitPlayer(damage As Integer) As Boolean
        parameters:
        - id: damage
          type: System.Int32
        return:
          type: System.Boolean
      overload: UCT.Core.MainControl.HitPlayer*
    - id: UCT.Core.MainControl.EnterChase
      commentId: M:UCT.Core.MainControl.EnterChase
      language: CSharp
      name:
        CSharp: EnterChase()
        VB: EnterChase()
      nameWithType:
        CSharp: MainControl.EnterChase()
        VB: MainControl.EnterChase()
      qualifiedName:
        CSharp: UCT.Core.MainControl.EnterChase()
        VB: UCT.Core.MainControl.EnterChase()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: EnterChase
        path: ''
        startLine: 26722
      syntax:
        content:
          CSharp: public void EnterChase()
          VB: Public Sub EnterChase()
      overload: UCT.Core.MainControl.EnterChase*
    - id: UCT.Core.MainControl.ExitChase
      commentId: M:UCT.Core.MainControl.ExitChase
      language: CSharp
      name:
        CSharp: ExitChase()
        VB: ExitChase()
      nameWithType:
        CSharp: MainControl.ExitChase()
        VB: MainControl.ExitChase()
      qualifiedName:
        CSharp: UCT.Core.MainControl.ExitChase()
        VB: UCT.Core.MainControl.ExitChase()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: ExitChase
        path: ''
        startLine: 26780
      syntax:
        content:
          CSharp: public void ExitChase()
          VB: Public Sub ExitChase()
      overload: UCT.Core.MainControl.ExitChase*
    - id: UCT.Core.MainControl.KillPlayer(Vector3)
      commentId: M:UCT.Core.MainControl.KillPlayer(Vector3)
      language: CSharp
      name:
        CSharp: KillPlayer(Vector3)
        VB: KillPlayer(Vector3)
      nameWithType:
        CSharp: MainControl.KillPlayer(Vector3)
        VB: MainControl.KillPlayer(Vector3)
      qualifiedName:
        CSharp: UCT.Core.MainControl.KillPlayer(Vector3)
        VB: UCT.Core.MainControl.KillPlayer(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: KillPlayer
        path: ''
        startLine: 26836
      syntax:
        content:
          CSharp: public void KillPlayer(Vector3 lastPosition)
          VB: Public Sub KillPlayer(lastPosition As Vector3)
        parameters:
        - id: lastPosition
          type: Global.Vector3
      overload: UCT.Core.MainControl.KillPlayer*
  - id: UCT.Core.MainControl.SceneState
    commentId: T:UCT.Core.MainControl.SceneState
    language: CSharp
    name:
      CSharp: MainControl.SceneState
      VB: MainControl.SceneState
    nameWithType:
      CSharp: MainControl.SceneState
      VB: MainControl.SceneState
    qualifiedName:
      CSharp: UCT.Core.MainControl.SceneState
      VB: UCT.Core.MainControl.SceneState
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Core
    source:
      id: SceneState
      path: ''
      startLine: 26171
    syntax:
      content:
        CSharp: public enum MainControl.SceneState
        VB: Public Enum MainControl.SceneState
    items:
    - id: UCT.Core.MainControl.SceneState.Normal
      commentId: F:UCT.Core.MainControl.SceneState.Normal
      language: CSharp
      name:
        CSharp: Normal
        VB: Normal
      nameWithType:
        CSharp: MainControl.SceneState.Normal
        VB: MainControl.SceneState.Normal
      qualifiedName:
        CSharp: UCT.Core.MainControl.SceneState.Normal
        VB: UCT.Core.MainControl.SceneState.Normal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: Normal
        path: ''
        startLine: 26173
      syntax:
        content:
          CSharp: Normal = 0
          VB: Normal = 0
        return:
          type: UCT.Core.MainControl.SceneState
    - id: UCT.Core.MainControl.SceneState.Overworld
      commentId: F:UCT.Core.MainControl.SceneState.Overworld
      language: CSharp
      name:
        CSharp: Overworld
        VB: Overworld
      nameWithType:
        CSharp: MainControl.SceneState.Overworld
        VB: MainControl.SceneState.Overworld
      qualifiedName:
        CSharp: UCT.Core.MainControl.SceneState.Overworld
        VB: UCT.Core.MainControl.SceneState.Overworld
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: Overworld
        path: ''
        startLine: 26174
      syntax:
        content:
          CSharp: Overworld = 1
          VB: Overworld = 1
        return:
          type: UCT.Core.MainControl.SceneState
    - id: UCT.Core.MainControl.SceneState.Battle
      commentId: F:UCT.Core.MainControl.SceneState.Battle
      language: CSharp
      name:
        CSharp: Battle
        VB: Battle
      nameWithType:
        CSharp: MainControl.SceneState.Battle
        VB: MainControl.SceneState.Battle
      qualifiedName:
        CSharp: UCT.Core.MainControl.SceneState.Battle
        VB: UCT.Core.MainControl.SceneState.Battle
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: Battle
        path: ''
        startLine: 26175
      syntax:
        content:
          CSharp: Battle = 2
          VB: Battle = 2
        return:
          type: UCT.Core.MainControl.SceneState
  - id: UCT.Core.MainControlSummon
    commentId: T:UCT.Core.MainControlSummon
    language: CSharp
    name:
      CSharp: MainControlSummon
      VB: MainControlSummon
    nameWithType:
      CSharp: MainControlSummon
      VB: MainControlSummon
    qualifiedName:
      CSharp: UCT.Core.MainControlSummon
      VB: UCT.Core.MainControlSummon
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Core
    source:
      id: MainControlSummon
      path: ''
      startLine: 26876
    summary: "\n生成总控，并在切换场景时保留已生成的总控。\n以此只调用一次MainControl的数据加载。\n同时会生成BGMControl\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MainControlSummon : MonoBehaviour'
        VB: Public Class MainControlSummon Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Core.MainControlSummon.isCameraLimit
      commentId: F:UCT.Core.MainControlSummon.isCameraLimit
      language: CSharp
      name:
        CSharp: isCameraLimit
        VB: isCameraLimit
      nameWithType:
        CSharp: MainControlSummon.isCameraLimit
        VB: MainControlSummon.isCameraLimit
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.isCameraLimit
        VB: UCT.Core.MainControlSummon.isCameraLimit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isCameraLimit
        path: ''
        startLine: 26879
      syntax:
        content:
          CSharp: public bool isCameraLimit
          VB: Public isCameraLimit As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.MainControlSummon.isCameraFollow
      commentId: F:UCT.Core.MainControlSummon.isCameraFollow
      language: CSharp
      name:
        CSharp: isCameraFollow
        VB: isCameraFollow
      nameWithType:
        CSharp: MainControlSummon.isCameraFollow
        VB: MainControlSummon.isCameraFollow
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.isCameraFollow
        VB: UCT.Core.MainControlSummon.isCameraFollow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isCameraFollow
        path: ''
        startLine: 26881
      syntax:
        content:
          CSharp: public bool isCameraFollow
          VB: Public isCameraFollow As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.MainControlSummon.cameraMinX
      commentId: F:UCT.Core.MainControlSummon.cameraMinX
      language: CSharp
      name:
        CSharp: cameraMinX
        VB: cameraMinX
      nameWithType:
        CSharp: MainControlSummon.cameraMinX
        VB: MainControlSummon.cameraMinX
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.cameraMinX
        VB: UCT.Core.MainControlSummon.cameraMinX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: cameraMinX
        path: ''
        startLine: 26884
      syntax:
        content:
          CSharp: public float cameraMinX
          VB: Public cameraMinX As Single
        return:
          type: System.Single
    - id: UCT.Core.MainControlSummon.cameraMinY
      commentId: F:UCT.Core.MainControlSummon.cameraMinY
      language: CSharp
      name:
        CSharp: cameraMinY
        VB: cameraMinY
      nameWithType:
        CSharp: MainControlSummon.cameraMinY
        VB: MainControlSummon.cameraMinY
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.cameraMinY
        VB: UCT.Core.MainControlSummon.cameraMinY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: cameraMinY
        path: ''
        startLine: 26887
      syntax:
        content:
          CSharp: public float cameraMinY
          VB: Public cameraMinY As Single
        return:
          type: System.Single
    - id: UCT.Core.MainControlSummon.cameraMaxX
      commentId: F:UCT.Core.MainControlSummon.cameraMaxX
      language: CSharp
      name:
        CSharp: cameraMaxX
        VB: cameraMaxX
      nameWithType:
        CSharp: MainControlSummon.cameraMaxX
        VB: MainControlSummon.cameraMaxX
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.cameraMaxX
        VB: UCT.Core.MainControlSummon.cameraMaxX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: cameraMaxX
        path: ''
        startLine: 26890
      syntax:
        content:
          CSharp: public float cameraMaxX
          VB: Public cameraMaxX As Single
        return:
          type: System.Single
    - id: UCT.Core.MainControlSummon.cameraMaxY
      commentId: F:UCT.Core.MainControlSummon.cameraMaxY
      language: CSharp
      name:
        CSharp: cameraMaxY
        VB: cameraMaxY
      nameWithType:
        CSharp: MainControlSummon.cameraMaxY
        VB: MainControlSummon.cameraMaxY
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.cameraMaxY
        VB: UCT.Core.MainControlSummon.cameraMaxY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: cameraMaxY
        path: ''
        startLine: 26893
      syntax:
        content:
          CSharp: public float cameraMaxY
          VB: Public cameraMaxY As Single
        return:
          type: System.Single
    - id: UCT.Core.MainControlSummon.walkFxRange
      commentId: F:UCT.Core.MainControlSummon.walkFxRange
      language: CSharp
      name:
        CSharp: walkFxRange
        VB: walkFxRange
      nameWithType:
        CSharp: MainControlSummon.walkFxRange
        VB: MainControlSummon.walkFxRange
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.walkFxRange
        VB: UCT.Core.MainControlSummon.walkFxRange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: walkFxRange
        path: ''
        startLine: 26898
      syntax:
        content:
          CSharp: public Vector2 walkFxRange
          VB: Public walkFxRange As Vector2
        return:
          type: Global.Vector2
    - id: UCT.Core.MainControlSummon.isShadow
      commentId: F:UCT.Core.MainControlSummon.isShadow
      language: CSharp
      name:
        CSharp: isShadow
        VB: isShadow
      nameWithType:
        CSharp: MainControlSummon.isShadow
        VB: MainControlSummon.isShadow
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.isShadow
        VB: UCT.Core.MainControlSummon.isShadow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isShadow
        path: ''
        startLine: 26900
      syntax:
        content:
          CSharp: public bool isShadow
          VB: Public isShadow As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.MainControlSummon.renderMode
      commentId: F:UCT.Core.MainControlSummon.renderMode
      language: CSharp
      name:
        CSharp: renderMode
        VB: renderMode
      nameWithType:
        CSharp: MainControlSummon.renderMode
        VB: MainControlSummon.renderMode
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.renderMode
        VB: UCT.Core.MainControlSummon.renderMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: renderMode
        path: ''
        startLine: 26904
      syntax:
        content:
          CSharp: public RenderMode renderMode
          VB: Public renderMode As RenderMode
        return:
          type: Global.RenderMode
    - id: UCT.Core.MainControlSummon.frameSpriteIndex
      commentId: F:UCT.Core.MainControlSummon.frameSpriteIndex
      language: CSharp
      name:
        CSharp: frameSpriteIndex
        VB: frameSpriteIndex
      nameWithType:
        CSharp: MainControlSummon.frameSpriteIndex
        VB: MainControlSummon.frameSpriteIndex
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.frameSpriteIndex
        VB: UCT.Core.MainControlSummon.frameSpriteIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: frameSpriteIndex
        path: ''
        startLine: 26907
      syntax:
        content:
          CSharp: public int frameSpriteIndex
          VB: Public frameSpriteIndex As Integer
        return:
          type: System.Int32
    - id: UCT.Core.MainControlSummon.bgmClip
      commentId: F:UCT.Core.MainControlSummon.bgmClip
      language: CSharp
      name:
        CSharp: bgmClip
        VB: bgmClip
      nameWithType:
        CSharp: MainControlSummon.bgmClip
        VB: MainControlSummon.bgmClip
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.bgmClip
        VB: UCT.Core.MainControlSummon.bgmClip
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: bgmClip
        path: ''
        startLine: 26912
      syntax:
        content:
          CSharp: public AudioClip bgmClip
          VB: Public bgmClip As AudioClip
        return:
          type: Global.AudioClip
    - id: UCT.Core.MainControlSummon.volume
      commentId: F:UCT.Core.MainControlSummon.volume
      language: CSharp
      name:
        CSharp: volume
        VB: volume
      nameWithType:
        CSharp: MainControlSummon.volume
        VB: MainControlSummon.volume
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.volume
        VB: UCT.Core.MainControlSummon.volume
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: volume
        path: ''
        startLine: 26915
      syntax:
        content:
          CSharp: public float volume
          VB: Public volume As Single
        return:
          type: System.Single
    - id: UCT.Core.MainControlSummon.pitch
      commentId: F:UCT.Core.MainControlSummon.pitch
      language: CSharp
      name:
        CSharp: pitch
        VB: pitch
      nameWithType:
        CSharp: MainControlSummon.pitch
        VB: MainControlSummon.pitch
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.pitch
        VB: UCT.Core.MainControlSummon.pitch
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: pitch
        path: ''
        startLine: 26918
      syntax:
        content:
          CSharp: public float pitch
          VB: Public pitch As Single
        return:
          type: System.Single
    - id: UCT.Core.MainControlSummon.loop
      commentId: F:UCT.Core.MainControlSummon.loop
      language: CSharp
      name:
        CSharp: loop
        VB: loop
      nameWithType:
        CSharp: MainControlSummon.loop
        VB: MainControlSummon.loop
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.loop
        VB: UCT.Core.MainControlSummon.loop
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: loop
        path: ''
        startLine: 26921
      syntax:
        content:
          CSharp: public bool loop
          VB: Public [loop] As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.MainControlSummon.fadeIn
      commentId: F:UCT.Core.MainControlSummon.fadeIn
      language: CSharp
      name:
        CSharp: fadeIn
        VB: fadeIn
      nameWithType:
        CSharp: MainControlSummon.fadeIn
        VB: MainControlSummon.fadeIn
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.fadeIn
        VB: UCT.Core.MainControlSummon.fadeIn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: fadeIn
        path: ''
        startLine: 26924
      syntax:
        content:
          CSharp: public bool fadeIn
          VB: Public fadeIn As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.MainControlSummon.sceneState
      commentId: F:UCT.Core.MainControlSummon.sceneState
      language: CSharp
      name:
        CSharp: sceneState
        VB: sceneState
      nameWithType:
        CSharp: MainControlSummon.sceneState
        VB: MainControlSummon.sceneState
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.sceneState
        VB: UCT.Core.MainControlSummon.sceneState
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: sceneState
        path: ''
        startLine: 26929
      syntax:
        content:
          CSharp: public MainControl.SceneState sceneState
          VB: Public sceneState As MainControl.SceneState
        return:
          type: UCT.Core.MainControl.SceneState
    - id: UCT.Core.MainControlSummon.isFadeTransitionEnabled
      commentId: F:UCT.Core.MainControlSummon.isFadeTransitionEnabled
      language: CSharp
      name:
        CSharp: isFadeTransitionEnabled
        VB: isFadeTransitionEnabled
      nameWithType:
        CSharp: MainControlSummon.isFadeTransitionEnabled
        VB: MainControlSummon.isFadeTransitionEnabled
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.isFadeTransitionEnabled
        VB: UCT.Core.MainControlSummon.isFadeTransitionEnabled
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isFadeTransitionEnabled
        path: ''
        startLine: 26932
      syntax:
        content:
          CSharp: public bool isFadeTransitionEnabled
          VB: Public isFadeTransitionEnabled As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.MainControlSummon.isFadeInDisabled
      commentId: F:UCT.Core.MainControlSummon.isFadeInDisabled
      language: CSharp
      name:
        CSharp: isFadeInDisabled
        VB: isFadeInDisabled
      nameWithType:
        CSharp: MainControlSummon.isFadeInDisabled
        VB: MainControlSummon.isFadeInDisabled
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.isFadeInDisabled
        VB: UCT.Core.MainControlSummon.isFadeInDisabled
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isFadeInDisabled
        path: ''
        startLine: 26938
      syntax:
        content:
          CSharp: public bool isFadeInDisabled
          VB: Public isFadeInDisabled As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.MainControlSummon.isFadeInUnpaused
      commentId: F:UCT.Core.MainControlSummon.isFadeInUnpaused
      language: CSharp
      name:
        CSharp: isFadeInUnpaused
        VB: isFadeInUnpaused
      nameWithType:
        CSharp: MainControlSummon.isFadeInUnpaused
        VB: MainControlSummon.isFadeInUnpaused
      qualifiedName:
        CSharp: UCT.Core.MainControlSummon.isFadeInUnpaused
        VB: UCT.Core.MainControlSummon.isFadeInUnpaused
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isFadeInUnpaused
        path: ''
        startLine: 26944
      syntax:
        content:
          CSharp: public bool isFadeInUnpaused
          VB: Public isFadeInUnpaused As Boolean
        return:
          type: System.Boolean
  - id: UCT.Core.TypeWritterSelectController
    commentId: T:UCT.Core.TypeWritterSelectController
    language: CSharp
    name:
      CSharp: TypeWritterSelectController
      VB: TypeWritterSelectController
    nameWithType:
      CSharp: TypeWritterSelectController
      VB: TypeWritterSelectController
    qualifiedName:
      CSharp: UCT.Core.TypeWritterSelectController
      VB: UCT.Core.TypeWritterSelectController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Core
    source:
      id: TypeWritterSelectController
      path: ''
      startLine: 27139
    summary: "\n使用ink语言，控制对话中的选项。\n"
    example: []
    syntax:
      content:
        CSharp: public class TypeWritterSelectController
        VB: Public Class TypeWritterSelectController
    inheritance:
    - System.Object
    items:
    - id: UCT.Core.TypeWritterSelectController.Story
      commentId: P:UCT.Core.TypeWritterSelectController.Story
      language: CSharp
      name:
        CSharp: Story
        VB: Story
      nameWithType:
        CSharp: TypeWritterSelectController.Story
        VB: TypeWritterSelectController.Story
      qualifiedName:
        CSharp: UCT.Core.TypeWritterSelectController.Story
        VB: UCT.Core.TypeWritterSelectController.Story
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: Story
        path: ''
        startLine: 27141
      syntax:
        content:
          CSharp: public Story Story { get; }
          VB: Public Property Story As Story
        parameters: []
        return:
          type: Global.Story
      overload: UCT.Core.TypeWritterSelectController.Story*
    - id: UCT.Core.TypeWritterSelectController.IsSelecting
      commentId: P:UCT.Core.TypeWritterSelectController.IsSelecting
      language: CSharp
      name:
        CSharp: IsSelecting
        VB: IsSelecting
      nameWithType:
        CSharp: TypeWritterSelectController.IsSelecting
        VB: TypeWritterSelectController.IsSelecting
      qualifiedName:
        CSharp: UCT.Core.TypeWritterSelectController.IsSelecting
        VB: UCT.Core.TypeWritterSelectController.IsSelecting
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: IsSelecting
        path: ''
        startLine: 27142
      syntax:
        content:
          CSharp: public bool IsSelecting { get; set; }
          VB: Public Property IsSelecting As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: UCT.Core.TypeWritterSelectController.IsSelecting*
    - id: UCT.Core.TypeWritterSelectController.GlobalItemIndex
      commentId: P:UCT.Core.TypeWritterSelectController.GlobalItemIndex
      language: CSharp
      name:
        CSharp: GlobalItemIndex
        VB: GlobalItemIndex
      nameWithType:
        CSharp: TypeWritterSelectController.GlobalItemIndex
        VB: TypeWritterSelectController.GlobalItemIndex
      qualifiedName:
        CSharp: UCT.Core.TypeWritterSelectController.GlobalItemIndex
        VB: UCT.Core.TypeWritterSelectController.GlobalItemIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: GlobalItemIndex
        path: ''
        startLine: 27143
      syntax:
        content:
          CSharp: public int GlobalItemIndex { get; set; }
          VB: Public Property GlobalItemIndex As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Core.TypeWritterSelectController.GlobalItemIndex*
    - id: UCT.Core.TypeWritterSelectController.VisibleItemIndex
      commentId: P:UCT.Core.TypeWritterSelectController.VisibleItemIndex
      language: CSharp
      name:
        CSharp: VisibleItemIndex
        VB: VisibleItemIndex
      nameWithType:
        CSharp: TypeWritterSelectController.VisibleItemIndex
        VB: TypeWritterSelectController.VisibleItemIndex
      qualifiedName:
        CSharp: UCT.Core.TypeWritterSelectController.VisibleItemIndex
        VB: UCT.Core.TypeWritterSelectController.VisibleItemIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: VisibleItemIndex
        path: ''
        startLine: 27144
      syntax:
        content:
          CSharp: public int VisibleItemIndex { get; set; }
          VB: Public Property VisibleItemIndex As Integer
        parameters: []
        return:
          type: System.Int32
      overload: UCT.Core.TypeWritterSelectController.VisibleItemIndex*
    - id: UCT.Core.TypeWritterSelectController.SetStory(Story)
      commentId: M:UCT.Core.TypeWritterSelectController.SetStory(Story)
      language: CSharp
      name:
        CSharp: SetStory(Story)
        VB: SetStory(Story)
      nameWithType:
        CSharp: TypeWritterSelectController.SetStory(Story)
        VB: TypeWritterSelectController.SetStory(Story)
      qualifiedName:
        CSharp: UCT.Core.TypeWritterSelectController.SetStory(Story)
        VB: UCT.Core.TypeWritterSelectController.SetStory(Story)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: SetStory
        path: ''
        startLine: 27146
      syntax:
        content:
          CSharp: public void SetStory(Story story)
          VB: Public Sub SetStory(story As Story)
        parameters:
        - id: story
          type: Global.Story
      overload: UCT.Core.TypeWritterSelectController.SetStory*
    - id: UCT.Core.TypeWritterSelectController.GetStoryDialogue
      commentId: M:UCT.Core.TypeWritterSelectController.GetStoryDialogue
      language: CSharp
      name:
        CSharp: GetStoryDialogue()
        VB: GetStoryDialogue()
      nameWithType:
        CSharp: TypeWritterSelectController.GetStoryDialogue()
        VB: TypeWritterSelectController.GetStoryDialogue()
      qualifiedName:
        CSharp: UCT.Core.TypeWritterSelectController.GetStoryDialogue()
        VB: UCT.Core.TypeWritterSelectController.GetStoryDialogue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: GetStoryDialogue
        path: ''
        startLine: 27162
      syntax:
        content:
          CSharp: public string GetStoryDialogue()
          VB: Public Function GetStoryDialogue() As String
        return:
          type: System.String
      overload: UCT.Core.TypeWritterSelectController.GetStoryDialogue*
  - id: UCT.Core.SaveController
    commentId: T:UCT.Core.SaveController
    language: CSharp
    name:
      CSharp: SaveController
      VB: SaveController
    nameWithType:
      CSharp: SaveController
      VB: SaveController
    qualifiedName:
      CSharp: UCT.Core.SaveController
      VB: UCT.Core.SaveController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Core
    source:
      id: SaveController
      path: ''
      startLine: 27195
    summary: "\n存档存储的数据\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SaveController : MonoBehaviour'
        VB: Public Class SaveController Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Core.SaveController.SaveData(PlayerControl,System.String)
      commentId: M:UCT.Core.SaveController.SaveData(PlayerControl,System.String)
      language: CSharp
      name:
        CSharp: SaveData(PlayerControl, string)
        VB: SaveData(PlayerControl, String)
      nameWithType:
        CSharp: SaveController.SaveData(PlayerControl, string)
        VB: SaveController.SaveData(PlayerControl, String)
      qualifiedName:
        CSharp: UCT.Core.SaveController.SaveData(PlayerControl, string)
        VB: UCT.Core.SaveController.SaveData(PlayerControl, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: SaveData
        path: ''
        startLine: 27199
      syntax:
        content:
          CSharp: public static void SaveData(PlayerControl data, string dataName)
          VB: Public Shared Sub SaveData(data As PlayerControl, dataName As String)
        parameters:
        - id: data
          type: Global.PlayerControl
        - id: dataName
          type: System.String
      overload: UCT.Core.SaveController.SaveData*
    - id: UCT.Core.SaveController.LoadData(System.String)
      commentId: M:UCT.Core.SaveController.LoadData(System.String)
      language: CSharp
      name:
        CSharp: LoadData(string)
        VB: LoadData(String)
      nameWithType:
        CSharp: SaveController.LoadData(string)
        VB: SaveController.LoadData(String)
      qualifiedName:
        CSharp: UCT.Core.SaveController.LoadData(string)
        VB: UCT.Core.SaveController.LoadData(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: LoadData
        path: ''
        startLine: 27218
      syntax:
        content:
          CSharp: public static PlayerControl LoadData(string dataName)
          VB: Public Shared Function LoadData(dataName As String) As PlayerControl
        parameters:
        - id: dataName
          type: System.String
        return:
          type: Global.PlayerControl
      overload: UCT.Core.SaveController.LoadData*
    - id: UCT.Core.SaveController.GetDataNumber
      commentId: M:UCT.Core.SaveController.GetDataNumber
      language: CSharp
      name:
        CSharp: GetDataNumber()
        VB: GetDataNumber()
      nameWithType:
        CSharp: SaveController.GetDataNumber()
        VB: SaveController.GetDataNumber()
      qualifiedName:
        CSharp: UCT.Core.SaveController.GetDataNumber()
        VB: UCT.Core.SaveController.GetDataNumber()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: GetDataNumber
        path: ''
        startLine: 27236
      syntax:
        content:
          CSharp: public static int GetDataNumber()
          VB: Public Shared Function GetDataNumber() As Integer
        return:
          type: System.Int32
      overload: UCT.Core.SaveController.GetDataNumber*
    - id: UCT.Core.SaveController.DeleteData(System.String)
      commentId: M:UCT.Core.SaveController.DeleteData(System.String)
      language: CSharp
      name:
        CSharp: DeleteData(string)
        VB: DeleteData(String)
      nameWithType:
        CSharp: SaveController.DeleteData(string)
        VB: SaveController.DeleteData(String)
      qualifiedName:
        CSharp: UCT.Core.SaveController.DeleteData(string)
        VB: UCT.Core.SaveController.DeleteData(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: DeleteData
        path: ''
        startLine: 27250
      syntax:
        content:
          CSharp: public static void DeleteData(string dataName)
          VB: Public Shared Sub DeleteData(dataName As String)
        parameters:
        - id: dataName
          type: System.String
      overload: UCT.Core.SaveController.DeleteData*
  - id: UCT.Core.TypeWritter
    commentId: T:UCT.Core.TypeWritter
    language: CSharp
    name:
      CSharp: TypeWritter
      VB: TypeWritter
    nameWithType:
      CSharp: TypeWritter
      VB: TypeWritter
    qualifiedName:
      CSharp: UCT.Core.TypeWritter
      VB: UCT.Core.TypeWritter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Core
    source:
      id: TypeWritter
      path: ''
      startLine: 27409
    summary: "\n打字机系统\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TypeWritter : MonoBehaviour'
        VB: Public Class TypeWritter Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Core.TypeWritter.originString
      commentId: F:UCT.Core.TypeWritter.originString
      language: CSharp
      name:
        CSharp: originString
        VB: originString
      nameWithType:
        CSharp: TypeWritter.originString
        VB: TypeWritter.originString
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.originString
        VB: UCT.Core.TypeWritter.originString
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: originString
        path: ''
        startLine: 27421
      syntax:
        content:
          CSharp: public string originString
          VB: Public originString As String
        return:
          type: System.String
    - id: UCT.Core.TypeWritter.endString
      commentId: F:UCT.Core.TypeWritter.endString
      language: CSharp
      name:
        CSharp: endString
        VB: endString
      nameWithType:
        CSharp: TypeWritter.endString
        VB: TypeWritter.endString
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.endString
        VB: UCT.Core.TypeWritter.endString
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: endString
        path: ''
        startLine: 27421
      syntax:
        content:
          CSharp: public string endString
          VB: Public endString As String
        return:
          type: System.String
    - id: UCT.Core.TypeWritter.passTextString
      commentId: F:UCT.Core.TypeWritter.passTextString
      language: CSharp
      name:
        CSharp: passTextString
        VB: passTextString
      nameWithType:
        CSharp: TypeWritter.passTextString
        VB: TypeWritter.passTextString
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.passTextString
        VB: UCT.Core.TypeWritter.passTextString
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: passTextString
        path: ''
        startLine: 27421
      syntax:
        content:
          CSharp: public string passTextString
          VB: Public passTextString As String
        return:
          type: System.String
    - id: UCT.Core.TypeWritter.isRunning
      commentId: F:UCT.Core.TypeWritter.isRunning
      language: CSharp
      name:
        CSharp: isRunning
        VB: isRunning
      nameWithType:
        CSharp: TypeWritter.isRunning
        VB: TypeWritter.isRunning
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.isRunning
        VB: UCT.Core.TypeWritter.isRunning
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isRunning
        path: ''
        startLine: 27424
      syntax:
        content:
          CSharp: public bool isRunning
          VB: Public isRunning As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.TypeWritter.isTyping
      commentId: F:UCT.Core.TypeWritter.isTyping
      language: CSharp
      name:
        CSharp: isTyping
        VB: isTyping
      nameWithType:
        CSharp: TypeWritter.isTyping
        VB: TypeWritter.isTyping
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.isTyping
        VB: UCT.Core.TypeWritter.isTyping
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isTyping
        path: ''
        startLine: 27427
      syntax:
        content:
          CSharp: public bool isTyping
          VB: Public isTyping As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.TypeWritter.hpSave
      commentId: F:UCT.Core.TypeWritter.hpSave
      language: CSharp
      name:
        CSharp: hpSave
        VB: hpSave
      nameWithType:
        CSharp: TypeWritter.hpSave
        VB: TypeWritter.hpSave
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.hpSave
        VB: UCT.Core.TypeWritter.hpSave
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: hpSave
        path: ''
        startLine: 27429
      syntax:
        content:
          CSharp: public int hpSave
          VB: Public hpSave As Integer
        return:
          type: System.Int32
    - id: UCT.Core.TypeWritter.cantSkip
      commentId: F:UCT.Core.TypeWritter.cantSkip
      language: CSharp
      name:
        CSharp: cantSkip
        VB: cantSkip
      nameWithType:
        CSharp: TypeWritter.cantSkip
        VB: TypeWritter.cantSkip
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.cantSkip
        VB: UCT.Core.TypeWritter.cantSkip
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: cantSkip
        path: ''
        startLine: 27432
      syntax:
        content:
          CSharp: public bool cantSkip
          VB: Public cantSkip As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.TypeWritter.isSkip
      commentId: F:UCT.Core.TypeWritter.isSkip
      language: CSharp
      name:
        CSharp: isSkip
        VB: isSkip
      nameWithType:
        CSharp: TypeWritter.isSkip
        VB: TypeWritter.isSkip
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.isSkip
        VB: UCT.Core.TypeWritter.isSkip
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isSkip
        path: ''
        startLine: 27435
      syntax:
        content:
          CSharp: public bool isSkip
          VB: Public isSkip As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.TypeWritter.clockTime
      commentId: F:UCT.Core.TypeWritter.clockTime
      language: CSharp
      name:
        CSharp: clockTime
        VB: clockTime
      nameWithType:
        CSharp: TypeWritter.clockTime
        VB: TypeWritter.clockTime
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.clockTime
        VB: UCT.Core.TypeWritter.clockTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: clockTime
        path: ''
        startLine: 27437
      syntax:
        content:
          CSharp: public float clockTime
          VB: Public clockTime As Single
        return:
          type: System.Single
    - id: UCT.Core.TypeWritter.passText
      commentId: F:UCT.Core.TypeWritter.passText
      language: CSharp
      name:
        CSharp: passText
        VB: passText
      nameWithType:
        CSharp: TypeWritter.passText
        VB: TypeWritter.passText
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.passText
        VB: UCT.Core.TypeWritter.passText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: passText
        path: ''
        startLine: 27438
      syntax:
        content:
          CSharp: public bool passText
          VB: Public passText As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.TypeWritter.overworldSpriteChanger
      commentId: F:UCT.Core.TypeWritter.overworldSpriteChanger
      language: CSharp
      name:
        CSharp: overworldSpriteChanger
        VB: overworldSpriteChanger
      nameWithType:
        CSharp: TypeWritter.overworldSpriteChanger
        VB: TypeWritter.overworldSpriteChanger
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.overworldSpriteChanger
        VB: UCT.Core.TypeWritter.overworldSpriteChanger
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: overworldSpriteChanger
        path: ''
        startLine: 27441
      syntax:
        content:
          CSharp: public OverworldSpriteChanger overworldSpriteChanger
          VB: Public overworldSpriteChanger As OverworldSpriteChanger
        return:
          type: Global.OverworldSpriteChanger
    - id: UCT.Core.TypeWritter.fxClip
      commentId: F:UCT.Core.TypeWritter.fxClip
      language: CSharp
      name:
        CSharp: fxClip
        VB: fxClip
      nameWithType:
        CSharp: TypeWritter.fxClip
        VB: TypeWritter.fxClip
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.fxClip
        VB: UCT.Core.TypeWritter.fxClip
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: fxClip
        path: ''
        startLine: 27444
      syntax:
        content:
          CSharp: public AudioClip fxClip
          VB: Public fxClip As AudioClip
        return:
          type: Global.AudioClip
    - id: UCT.Core.TypeWritter.characterSpriteManager
      commentId: F:UCT.Core.TypeWritter.characterSpriteManager
      language: CSharp
      name:
        CSharp: characterSpriteManager
        VB: characterSpriteManager
      nameWithType:
        CSharp: TypeWritter.characterSpriteManager
        VB: TypeWritter.characterSpriteManager
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.characterSpriteManager
        VB: UCT.Core.TypeWritter.characterSpriteManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: characterSpriteManager
        path: ''
        startLine: 27446
      syntax:
        content:
          CSharp: public CharacterSpriteManager characterSpriteManager
          VB: Public characterSpriteManager As CharacterSpriteManager
        return:
          type: Global.CharacterSpriteManager
    - id: UCT.Core.TypeWritter.pitch
      commentId: F:UCT.Core.TypeWritter.pitch
      language: CSharp
      name:
        CSharp: pitch
        VB: pitch
      nameWithType:
        CSharp: TypeWritter.pitch
        VB: TypeWritter.pitch
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.pitch
        VB: UCT.Core.TypeWritter.pitch
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: pitch
        path: ''
        startLine: 27448
      syntax:
        content:
          CSharp: public float pitch
          VB: Public pitch As Single
        return:
          type: System.Single
    - id: UCT.Core.TypeWritter.volume
      commentId: F:UCT.Core.TypeWritter.volume
      language: CSharp
      name:
        CSharp: volume
        VB: volume
      nameWithType:
        CSharp: TypeWritter.volume
        VB: TypeWritter.volume
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.volume
        VB: UCT.Core.TypeWritter.volume
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: volume
        path: ''
        startLine: 27450
      syntax:
        content:
          CSharp: public float volume
          VB: Public volume As Single
        return:
          type: System.Single
    - id: UCT.Core.TypeWritter.speed
      commentId: F:UCT.Core.TypeWritter.speed
      language: CSharp
      name:
        CSharp: speed
        VB: speed
      nameWithType:
        CSharp: TypeWritter.speed
        VB: TypeWritter.speed
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.speed
        VB: UCT.Core.TypeWritter.speed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: speed
        path: ''
        startLine: 27453
      syntax:
        content:
          CSharp: public float speed
          VB: Public speed As Single
        return:
          type: System.Single
    - id: UCT.Core.TypeWritter.currentSpeed
      commentId: F:UCT.Core.TypeWritter.currentSpeed
      language: CSharp
      name:
        CSharp: currentSpeed
        VB: currentSpeed
      nameWithType:
        CSharp: TypeWritter.currentSpeed
        VB: TypeWritter.currentSpeed
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.currentSpeed
        VB: UCT.Core.TypeWritter.currentSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: currentSpeed
        path: ''
        startLine: 27455
      syntax:
        content:
          CSharp: public float currentSpeed
          VB: Public currentSpeed As Single
        return:
          type: System.Single
    - id: UCT.Core.TypeWritter.speedSlow
      commentId: F:UCT.Core.TypeWritter.speedSlow
      language: CSharp
      name:
        CSharp: speedSlow
        VB: speedSlow
      nameWithType:
        CSharp: TypeWritter.speedSlow
        VB: TypeWritter.speedSlow
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.speedSlow
        VB: UCT.Core.TypeWritter.speedSlow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: speedSlow
        path: ''
        startLine: 27458
      syntax:
        content:
          CSharp: public float speedSlow
          VB: Public speedSlow As Single
        return:
          type: System.Single
    - id: UCT.Core.TypeWritter.skipClock
      commentId: F:UCT.Core.TypeWritter.skipClock
      language: CSharp
      name:
        CSharp: skipClock
        VB: skipClock
      nameWithType:
        CSharp: TypeWritter.skipClock
        VB: TypeWritter.skipClock
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.skipClock
        VB: UCT.Core.TypeWritter.skipClock
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: skipClock
        path: ''
        startLine: 27461
      syntax:
        content:
          CSharp: public float skipClock
          VB: Public skipClock As Single
        return:
          type: System.Single
    - id: UCT.Core.TypeWritter.audioMixerGroup
      commentId: F:UCT.Core.TypeWritter.audioMixerGroup
      language: CSharp
      name:
        CSharp: audioMixerGroup
        VB: audioMixerGroup
      nameWithType:
        CSharp: TypeWritter.audioMixerGroup
        VB: TypeWritter.audioMixerGroup
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.audioMixerGroup
        VB: UCT.Core.TypeWritter.audioMixerGroup
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: audioMixerGroup
        path: ''
        startLine: 27463
      syntax:
        content:
          CSharp: public AudioMixerGroup audioMixerGroup
          VB: Public audioMixerGroup As AudioMixerGroup
        return:
          type: Global.AudioMixerGroup
    - id: UCT.Core.TypeWritter.fontIndex
      commentId: F:UCT.Core.TypeWritter.fontIndex
      language: CSharp
      name:
        CSharp: fontIndex
        VB: fontIndex
      nameWithType:
        CSharp: TypeWritter.fontIndex
        VB: TypeWritter.fontIndex
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.fontIndex
        VB: UCT.Core.TypeWritter.fontIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: fontIndex
        path: ''
        startLine: 27466
      syntax:
        content:
          CSharp: public int fontIndex
          VB: Public fontIndex As Integer
        return:
          type: System.Int32
    - id: UCT.Core.TypeWritter.dynamicType
      commentId: F:UCT.Core.TypeWritter.dynamicType
      language: CSharp
      name:
        CSharp: dynamicType
        VB: dynamicType
      nameWithType:
        CSharp: TypeWritter.dynamicType
        VB: TypeWritter.dynamicType
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.dynamicType
        VB: UCT.Core.TypeWritter.dynamicType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: dynamicType
        path: ''
        startLine: 27468
      syntax:
        content:
          CSharp: public OverworldControl.DynamicType dynamicType
          VB: Public dynamicType As OverworldControl.DynamicType
        return:
          type: Global.OverworldControl.DynamicType
    - id: UCT.Core.TypeWritter.isJumpingText
      commentId: F:UCT.Core.TypeWritter.isJumpingText
      language: CSharp
      name:
        CSharp: isJumpingText
        VB: isJumpingText
      nameWithType:
        CSharp: TypeWritter.isJumpingText
        VB: TypeWritter.isJumpingText
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.isJumpingText
        VB: UCT.Core.TypeWritter.isJumpingText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isJumpingText
        path: ''
        startLine: 27470
      syntax:
        content:
          CSharp: public bool isJumpingText
          VB: Public isJumpingText As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.TypeWritter.isUsedFx
      commentId: F:UCT.Core.TypeWritter.isUsedFx
      language: CSharp
      name:
        CSharp: isUsedFx
        VB: isUsedFx
      nameWithType:
        CSharp: TypeWritter.isUsedFx
        VB: TypeWritter.isUsedFx
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.isUsedFx
        VB: UCT.Core.TypeWritter.isUsedFx
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isUsedFx
        path: ''
        startLine: 27472
      syntax:
        content:
          CSharp: public bool isUsedFx
          VB: Public isUsedFx As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.TypeWritter.typeMode
      commentId: F:UCT.Core.TypeWritter.typeMode
      language: CSharp
      name:
        CSharp: typeMode
        VB: typeMode
      nameWithType:
        CSharp: TypeWritter.typeMode
        VB: TypeWritter.typeMode
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.typeMode
        VB: UCT.Core.TypeWritter.typeMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: typeMode
        path: ''
        startLine: 27474
      syntax:
        content:
          CSharp: public TypeWritter.TypeMode typeMode
          VB: Public typeMode As TypeWritter.TypeMode
        return:
          type: UCT.Core.TypeWritter.TypeMode
    - id: UCT.Core.TypeWritter.OnClose
      commentId: F:UCT.Core.TypeWritter.OnClose
      language: CSharp
      name:
        CSharp: OnClose
        VB: OnClose
      nameWithType:
        CSharp: TypeWritter.OnClose
        VB: TypeWritter.OnClose
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.OnClose
        VB: UCT.Core.TypeWritter.OnClose
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: OnClose
        path: ''
        startLine: 27487
      summary: "\n打字机关闭时调用\n"
      example: []
      syntax:
        content:
          CSharp: public Action OnClose
          VB: Public OnClose As Action
        return:
          type: System.Action
    - id: UCT.Core.TypeWritter.SelectController
      commentId: F:UCT.Core.TypeWritter.SelectController
      language: CSharp
      name:
        CSharp: SelectController
        VB: SelectController
      nameWithType:
        CSharp: TypeWritter.SelectController
        VB: TypeWritter.SelectController
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.SelectController
        VB: UCT.Core.TypeWritter.SelectController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: SelectController
        path: ''
        startLine: 27489
      syntax:
        content:
          CSharp: public TypeWritterSelectController SelectController
          VB: Public SelectController As TypeWritterSelectController
        return:
          type: UCT.Core.TypeWritterSelectController
    - id: UCT.Core.TypeWritter.StartTypeWritter(System.String,TMP_Text)
      commentId: M:UCT.Core.TypeWritter.StartTypeWritter(System.String,TMP_Text)
      language: CSharp
      name:
        CSharp: StartTypeWritter(string, TMP_Text)
        VB: StartTypeWritter(String, TMP_Text)
      nameWithType:
        CSharp: TypeWritter.StartTypeWritter(string, TMP_Text)
        VB: TypeWritter.StartTypeWritter(String, TMP_Text)
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.StartTypeWritter(string, TMP_Text)
        VB: UCT.Core.TypeWritter.StartTypeWritter(String, TMP_Text)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: StartTypeWritter
        path: ''
        startLine: 27631
      summary: "\n开启打字机。\n"
      example: []
      syntax:
        content:
          CSharp: public void StartTypeWritter(string text, TMP_Text tmpText)
          VB: Public Sub StartTypeWritter(text As String, tmpText As TMP_Text)
        parameters:
        - id: text
          type: System.String
        - id: tmpText
          type: Global.TMP_Text
      overload: UCT.Core.TypeWritter.StartTypeWritter*
    - id: UCT.Core.TypeWritter.TypeStop
      commentId: M:UCT.Core.TypeWritter.TypeStop
      language: CSharp
      name:
        CSharp: TypeStop()
        VB: TypeStop()
      nameWithType:
        CSharp: TypeWritter.TypeStop()
        VB: TypeWritter.TypeStop()
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.TypeStop()
        VB: UCT.Core.TypeWritter.TypeStop()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: TypeStop
        path: ''
        startLine: 27671
      syntax:
        content:
          CSharp: public void TypeStop()
          VB: Public Sub TypeStop()
      overload: UCT.Core.TypeWritter.TypeStop*
    - id: UCT.Core.TypeWritter.TypePause(System.Boolean)
      commentId: M:UCT.Core.TypeWritter.TypePause(System.Boolean)
      language: CSharp
      name:
        CSharp: TypePause(bool)
        VB: TypePause(Boolean)
      nameWithType:
        CSharp: TypeWritter.TypePause(bool)
        VB: TypeWritter.TypePause(Boolean)
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.TypePause(bool)
        VB: UCT.Core.TypeWritter.TypePause(Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: TypePause
        path: ''
        startLine: 27685
      syntax:
        content:
          CSharp: public static void TypePause(bool pause)
          VB: Public Shared Sub TypePause(pause As Boolean)
        parameters:
        - id: pause
          type: System.Boolean
      overload: UCT.Core.TypeWritter.TypePause*
    - id: UCT.Core.TypeWritter.PassTextWithDelay(System.String,System.Single)
      commentId: M:UCT.Core.TypeWritter.PassTextWithDelay(System.String,System.Single)
      language: CSharp
      name:
        CSharp: PassTextWithDelay(string, float)
        VB: PassTextWithDelay(String, Single)
      nameWithType:
        CSharp: TypeWritter.PassTextWithDelay(string, float)
        VB: TypeWritter.PassTextWithDelay(String, Single)
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.PassTextWithDelay(string, float)
        VB: UCT.Core.TypeWritter.PassTextWithDelay(String, Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: PassTextWithDelay
        path: ''
        startLine: 27894
      syntax:
        content:
          CSharp: public void PassTextWithDelay(string inputText, float delayInSeconds)
          VB: Public Sub PassTextWithDelay(inputText As String, delayInSeconds As Single)
        parameters:
        - id: inputText
          type: System.String
        - id: delayInSeconds
          type: System.Single
      overload: UCT.Core.TypeWritter.PassTextWithDelay*
  - id: UCT.Core.TypeWritter.TypeMode
    commentId: T:UCT.Core.TypeWritter.TypeMode
    language: CSharp
    name:
      CSharp: TypeWritter.TypeMode
      VB: TypeWritter.TypeMode
    nameWithType:
      CSharp: TypeWritter.TypeMode
      VB: TypeWritter.TypeMode
    qualifiedName:
      CSharp: UCT.Core.TypeWritter.TypeMode
      VB: UCT.Core.TypeWritter.TypeMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: UCT.Core
    source:
      id: TypeMode
      path: ''
      startLine: 27411
    syntax:
      content:
        CSharp: public enum TypeWritter.TypeMode
        VB: Public Enum TypeWritter.TypeMode
    items:
    - id: UCT.Core.TypeWritter.TypeMode.Default
      commentId: F:UCT.Core.TypeWritter.TypeMode.Default
      language: CSharp
      name:
        CSharp: Default
        VB: Default
      nameWithType:
        CSharp: TypeWritter.TypeMode.Default
        VB: TypeWritter.TypeMode.Default
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.TypeMode.Default
        VB: UCT.Core.TypeWritter.TypeMode.Default
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: Default
        path: ''
        startLine: 27414
      syntax:
        content:
          CSharp: Default = 0
          VB: Default = 0
        return:
          type: UCT.Core.TypeWritter.TypeMode
    - id: UCT.Core.TypeWritter.TypeMode.IgnorePlayerInput
      commentId: F:UCT.Core.TypeWritter.TypeMode.IgnorePlayerInput
      language: CSharp
      name:
        CSharp: IgnorePlayerInput
        VB: IgnorePlayerInput
      nameWithType:
        CSharp: TypeWritter.TypeMode.IgnorePlayerInput
        VB: TypeWritter.TypeMode.IgnorePlayerInput
      qualifiedName:
        CSharp: UCT.Core.TypeWritter.TypeMode.IgnorePlayerInput
        VB: UCT.Core.TypeWritter.TypeMode.IgnorePlayerInput
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: IgnorePlayerInput
        path: ''
        startLine: 27415
      syntax:
        content:
          CSharp: IgnorePlayerInput = 1
          VB: IgnorePlayerInput = 1
        return:
          type: UCT.Core.TypeWritter.TypeMode
  - id: UCT.Core.TypeWritterDynamicController
    commentId: T:UCT.Core.TypeWritterDynamicController
    language: CSharp
    name:
      CSharp: TypeWritterDynamicController
      VB: TypeWritterDynamicController
    nameWithType:
      CSharp: TypeWritterDynamicController
      VB: TypeWritterDynamicController
    qualifiedName:
      CSharp: UCT.Core.TypeWritterDynamicController
      VB: UCT.Core.TypeWritterDynamicController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Core
    source:
      id: TypeWritterDynamicController
      path: ''
      startLine: 27936
    syntax:
      content:
        CSharp: public static class TypeWritterDynamicController
        VB: Public Module TypeWritterDynamicController
    inheritance:
    - System.Object
    items:
    - id: UCT.Core.TypeWritterDynamicController.DynamicTmp(UCT.Core.TypeWritter,TMP_Text,System.Int32,OverworldControl.DynamicType)
      commentId: M:UCT.Core.TypeWritterDynamicController.DynamicTmp(UCT.Core.TypeWritter,TMP_Text,System.Int32,OverworldControl.DynamicType)
      language: CSharp
      name:
        CSharp: DynamicTmp(TypeWritter, TMP_Text, int, DynamicType)
        VB: DynamicTmp(TypeWritter, TMP_Text, Integer, DynamicType)
      nameWithType:
        CSharp: TypeWritterDynamicController.DynamicTmp(TypeWritter, TMP_Text, int, OverworldControl.DynamicType)
        VB: TypeWritterDynamicController.DynamicTmp(TypeWritter, TMP_Text, Integer, OverworldControl.DynamicType)
      qualifiedName:
        CSharp: UCT.Core.TypeWritterDynamicController.DynamicTmp(UCT.Core.TypeWritter, TMP_Text, int, OverworldControl.DynamicType)
        VB: UCT.Core.TypeWritterDynamicController.DynamicTmp(UCT.Core.TypeWritter, TMP_Text, Integer, OverworldControl.DynamicType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: DynamicTmp
        path: ''
        startLine: 27938
      syntax:
        content:
          CSharp: public static IEnumerator DynamicTmp(TypeWritter typeWritter, TMP_Text tmpText, int number, OverworldControl.DynamicType inputDynamicType)
          VB: Public Shared Function DynamicTmp(typeWritter As TypeWritter, tmpText As TMP_Text, number As Integer, inputDynamicType As OverworldControl.DynamicType) As IEnumerator
        parameters:
        - id: typeWritter
          type: UCT.Core.TypeWritter
        - id: tmpText
          type: Global.TMP_Text
        - id: number
          type: System.Int32
        - id: inputDynamicType
          type: Global.OverworldControl.DynamicType
        return:
          type: System.Collections.Generic.IEnumerator
      overload: UCT.Core.TypeWritterDynamicController.DynamicTmp*
  - id: UCT.Core.ItemScroller
    commentId: T:UCT.Core.ItemScroller
    language: CSharp
    name:
      CSharp: ItemScroller
      VB: ItemScroller
    nameWithType:
      CSharp: ItemScroller
      VB: ItemScroller
    qualifiedName:
      CSharp: UCT.Core.ItemScroller
      VB: UCT.Core.ItemScroller
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Core
    source:
      id: ItemScroller
      path: ''
      startLine: 28093
    summary: "\n物品选择控制器\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ItemScroller : MonoBehaviour'
        VB: Public Class ItemScroller Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Core.ItemScroller.Open(System.Int32,System.Single)
      commentId: M:UCT.Core.ItemScroller.Open(System.Int32,System.Single)
      language: CSharp
      name:
        CSharp: Open(int, float)
        VB: Open(Integer, Single)
      nameWithType:
        CSharp: ItemScroller.Open(int, float)
        VB: ItemScroller.Open(Integer, Single)
      qualifiedName:
        CSharp: UCT.Core.ItemScroller.Open(int, float)
        VB: UCT.Core.ItemScroller.Open(Integer, Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: Open
        path: ''
        startLine: 28153
      syntax:
        content:
          CSharp: public void Open(int itemCount, float tweenXValue)
          VB: Public Sub Open(itemCount As Integer, tweenXValue As Single)
        parameters:
        - id: itemCount
          type: System.Int32
        - id: tweenXValue
          type: System.Single
      overload: UCT.Core.ItemScroller.Open*
    - id: UCT.Core.ItemScroller.Close
      commentId: M:UCT.Core.ItemScroller.Close
      language: CSharp
      name:
        CSharp: Close()
        VB: Close()
      nameWithType:
        CSharp: ItemScroller.Close()
        VB: ItemScroller.Close()
      qualifiedName:
        CSharp: UCT.Core.ItemScroller.Close()
        VB: UCT.Core.ItemScroller.Close()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: Close
        path: ''
        startLine: 28224
      syntax:
        content:
          CSharp: public void Close()
          VB: Public Sub Close()
      overload: UCT.Core.ItemScroller.Close*
    - id: UCT.Core.ItemScroller.UpdateHandleItemInput(System.Int32,System.Int32,System.Int32,System.Action{System.Int32,System.Int32})
      commentId: M:UCT.Core.ItemScroller.UpdateHandleItemInput(System.Int32,System.Int32,System.Int32,System.Action{System.Int32,System.Int32})
      language: CSharp
      name:
        CSharp: UpdateHandleItemInput(int, int, int, Action<int, int>)
        VB: UpdateHandleItemInput(Integer, Integer, Integer, Action(Of Integer, Integer))
      nameWithType:
        CSharp: ItemScroller.UpdateHandleItemInput(int, int, int, Action<int, int>)
        VB: ItemScroller.UpdateHandleItemInput(Integer, Integer, Integer, Action(Of Integer, Integer))
      qualifiedName:
        CSharp: UCT.Core.ItemScroller.UpdateHandleItemInput(int, int, int, System.Action<int, int>)
        VB: UCT.Core.ItemScroller.UpdateHandleItemInput(Integer, Integer, Integer, System.Action(Of Integer, Integer))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: UpdateHandleItemInput
        path: ''
        startLine: 28244
      summary: "\n处理类似物品选择控制器的计算\n"
      example: []
      syntax:
        content:
          CSharp: public (int globalItemIndex, int visibleItemIndex) UpdateHandleItemInput(int globalItemIndex, int visibleItemIndex, int count, Action<int, int> onKeyDown)
          VB: Public Function UpdateHandleItemInput(globalItemIndex As Integer, visibleItemIndex As Integer, count As Integer, onKeyDown As Action(Of Integer, Integer)) As (globalItemIndex As Integer, visibleItemIndex As Integer)
        parameters:
        - id: globalItemIndex
          type: System.Int32
        - id: visibleItemIndex
          type: System.Int32
        - id: count
          type: System.Int32
        - id: onKeyDown
          type: System.Action{System.Int32,System.Int32}
        return:
          type: System.ValueTuple{System.Int32,System.Int32}
      overload: UCT.Core.ItemScroller.UpdateHandleItemInput*
  - id: UCT.Core.ObjectPool
    commentId: T:UCT.Core.ObjectPool
    language: CSharp
    name:
      CSharp: ObjectPool
      VB: ObjectPool
    nameWithType:
      CSharp: ObjectPool
      VB: ObjectPool
    qualifiedName:
      CSharp: UCT.Core.ObjectPool
      VB: UCT.Core.ObjectPool
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UCT.Core
    source:
      id: ObjectPool
      path: ''
      startLine: 28309
    syntax:
      content:
        CSharp: 'public class ObjectPool : MonoBehaviour'
        VB: Public Class ObjectPool Inherits MonoBehaviour
    inheritance:
    - System.Object
    items:
    - id: UCT.Core.ObjectPool.isStartFillPool
      commentId: F:UCT.Core.ObjectPool.isStartFillPool
      language: CSharp
      name:
        CSharp: isStartFillPool
        VB: isStartFillPool
      nameWithType:
        CSharp: ObjectPool.isStartFillPool
        VB: ObjectPool.isStartFillPool
      qualifiedName:
        CSharp: UCT.Core.ObjectPool.isStartFillPool
        VB: UCT.Core.ObjectPool.isStartFillPool
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: isStartFillPool
        path: ''
        startLine: 28311
      syntax:
        content:
          CSharp: public bool isStartFillPool
          VB: Public isStartFillPool As Boolean
        return:
          type: System.Boolean
    - id: UCT.Core.ObjectPool.count
      commentId: F:UCT.Core.ObjectPool.count
      language: CSharp
      name:
        CSharp: count
        VB: count
      nameWithType:
        CSharp: ObjectPool.count
        VB: ObjectPool.count
      qualifiedName:
        CSharp: UCT.Core.ObjectPool.count
        VB: UCT.Core.ObjectPool.count
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: count
        path: ''
        startLine: 28314
      syntax:
        content:
          CSharp: public int count
          VB: Public count As Integer
        return:
          type: System.Int32
    - id: UCT.Core.ObjectPool.poolObject
      commentId: F:UCT.Core.ObjectPool.poolObject
      language: CSharp
      name:
        CSharp: poolObject
        VB: poolObject
      nameWithType:
        CSharp: ObjectPool.poolObject
        VB: ObjectPool.poolObject
      qualifiedName:
        CSharp: UCT.Core.ObjectPool.poolObject
        VB: UCT.Core.ObjectPool.poolObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: poolObject
        path: ''
        startLine: 28316
      syntax:
        content:
          CSharp: public GameObject poolObject
          VB: Public poolObject As GameObject
        return:
          type: Global.GameObject
    - id: UCT.Core.ObjectPool.parent
      commentId: F:UCT.Core.ObjectPool.parent
      language: CSharp
      name:
        CSharp: parent
        VB: parent
      nameWithType:
        CSharp: ObjectPool.parent
        VB: ObjectPool.parent
      qualifiedName:
        CSharp: UCT.Core.ObjectPool.parent
        VB: UCT.Core.ObjectPool.parent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: parent
        path: ''
        startLine: 28317
      syntax:
        content:
          CSharp: public Transform parent
          VB: Public parent As Transform
        return:
          type: Global.Transform
    - id: UCT.Core.ObjectPool.FillPool``1
      commentId: M:UCT.Core.ObjectPool.FillPool``1
      language: CSharp
      name:
        CSharp: FillPool<T>()
        VB: FillPool(Of T)()
      nameWithType:
        CSharp: ObjectPool.FillPool<T>()
        VB: ObjectPool.FillPool(Of T)()
      qualifiedName:
        CSharp: UCT.Core.ObjectPool.FillPool<T>()
        VB: UCT.Core.ObjectPool.FillPool(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: FillPool
        path: ''
        startLine: 28333
      summary: "\n初始化/填充对象池\n"
      example: []
      syntax:
        content:
          CSharp: 'public void FillPool<T>() where T : Component'
          VB: Public Sub FillPool(Of T As Component)()
        typeParameters:
        - id: T
      overload: UCT.Core.ObjectPool.FillPool*
    - id: UCT.Core.ObjectPool.ReturnPool``1(GameObject,``0)
      commentId: M:UCT.Core.ObjectPool.ReturnPool``1(GameObject,``0)
      language: CSharp
      name:
        CSharp: ReturnPool<T>(GameObject, T)
        VB: ReturnPool(Of T)(GameObject, T)
      nameWithType:
        CSharp: ObjectPool.ReturnPool<T>(GameObject, T)
        VB: ObjectPool.ReturnPool(Of T)(GameObject, T)
      qualifiedName:
        CSharp: UCT.Core.ObjectPool.ReturnPool<T>(GameObject, T)
        VB: UCT.Core.ObjectPool.ReturnPool(Of T)(GameObject, T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: ReturnPool
        path: ''
        startLine: 28362
      summary: "\n返回对象池\n"
      example: []
      syntax:
        content:
          CSharp: 'public virtual void ReturnPool<T>(GameObject inputGameObject, T script) where T : Component'
          VB: Public Overridable Sub ReturnPool(Of T As Component)(inputGameObject As GameObject, script As T)
        parameters:
        - id: inputGameObject
          type: Global.GameObject
        - id: script
          type: '{T}'
        typeParameters:
        - id: T
      overload: UCT.Core.ObjectPool.ReturnPool*
    - id: UCT.Core.ObjectPool.ReturnPool``1(``0)
      commentId: M:UCT.Core.ObjectPool.ReturnPool``1(``0)
      language: CSharp
      name:
        CSharp: ReturnPool<T>(T)
        VB: ReturnPool(Of T)(T)
      nameWithType:
        CSharp: ObjectPool.ReturnPool<T>(T)
        VB: ObjectPool.ReturnPool(Of T)(T)
      qualifiedName:
        CSharp: UCT.Core.ObjectPool.ReturnPool<T>(T)
        VB: UCT.Core.ObjectPool.ReturnPool(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: ReturnPool
        path: ''
        startLine: 28375
      syntax:
        content:
          CSharp: 'public void ReturnPool<T>(T script) where T : Component'
          VB: Public Sub ReturnPool(Of T As Component)(script As T)
        parameters:
        - id: script
          type: '{T}'
        typeParameters:
        - id: T
      overload: UCT.Core.ObjectPool.ReturnPool*
    - id: UCT.Core.ObjectPool.GetFromPool``1
      commentId: M:UCT.Core.ObjectPool.GetFromPool``1
      language: CSharp
      name:
        CSharp: GetFromPool<T>()
        VB: GetFromPool(Of T)()
      nameWithType:
        CSharp: ObjectPool.GetFromPool<T>()
        VB: ObjectPool.GetFromPool(Of T)()
      qualifiedName:
        CSharp: UCT.Core.ObjectPool.GetFromPool<T>()
        VB: UCT.Core.ObjectPool.GetFromPool(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UCT.Core
      source:
        id: GetFromPool
        path: ''
        startLine: 28383
      summary: "\n获取对象池中的物体或脚本\n"
      example: []
      syntax:
        content:
          CSharp: 'public virtual T GetFromPool<T>() where T : Component'
          VB: Public Overridable Function GetFromPool(Of T As Component)() As T
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: UCT.Core.ObjectPool.GetFromPool*
references:
  System:
    name:
      CSharp:
      - id: System
        name: System
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
    nameWithType:
      CSharp:
      - id: System
        name: System
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        isExternal: true
    nameWithType:
      CSharp:
      - id: System.Object
        name: object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System.Object
        name: object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  Global.SerializedProperty:
    name:
      CSharp:
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      VB:
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      VB:
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      VB:
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
    isDefinition: true
  System.String:
    name:
      CSharp:
      - id: System.String
        name: string
        isExternal: true
      VB:
      - id: System.String
        name: String
        isExternal: true
    nameWithType:
      CSharp:
      - id: System.String
        name: string
        isExternal: true
      VB:
      - id: System.String
        name: String
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System.String
        name: string
        isExternal: true
      VB:
      - id: System.String
        name: String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Editor.EditorService.CopyProperty*:
    name:
      CSharp:
      - id: Editor.EditorService.CopyProperty*
        name: CopyProperty
      VB:
      - id: Editor.EditorService.CopyProperty*
        name: CopyProperty
    nameWithType:
      CSharp:
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.CopyProperty*
        name: CopyProperty
      VB:
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.CopyProperty*
        name: CopyProperty
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.CopyProperty*
        name: CopyProperty
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.CopyProperty*
        name: CopyProperty
    isDefinition: true
    commentId: Overload:Editor.EditorService.CopyProperty
  T:
    name:
      CSharp:
      - name: T
      VB:
      - name: T
    nameWithType:
      CSharp:
      - name: T
      VB:
      - name: T
    qualifiedName:
      CSharp:
      - name: T
      VB:
      - name: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
      VB:
      - name: T
    nameWithType:
      CSharp:
      - name: T
      VB:
      - name: T
    qualifiedName:
      CSharp:
      - name: T
      VB:
      - name: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  Editor.EditorService.ResetProperty*:
    name:
      CSharp:
      - id: Editor.EditorService.ResetProperty*
        name: ResetProperty
      VB:
      - id: Editor.EditorService.ResetProperty*
        name: ResetProperty
    nameWithType:
      CSharp:
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.ResetProperty*
        name: ResetProperty
      VB:
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.ResetProperty*
        name: ResetProperty
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.ResetProperty*
        name: ResetProperty
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.ResetProperty*
        name: ResetProperty
    isDefinition: true
    commentId: Overload:Editor.EditorService.ResetProperty
  Global.Rect:
    name:
      CSharp:
      - id: Global.Rect
        name: Rect
        isExternal: true
      VB:
      - id: Global.Rect
        name: Rect
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Rect
        name: Rect
        isExternal: true
      VB:
      - id: Global.Rect
        name: Rect
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Rect
        name: Rect
        isExternal: true
      VB:
      - id: Global.Rect
        name: Rect
        isExternal: true
    isDefinition: true
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: float
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        isExternal: true
    nameWithType:
      CSharp:
      - id: System.Single
        name: float
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System.Single
        name: float
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  Editor.EditorService.DrawHorizontalLine*:
    name:
      CSharp:
      - id: Editor.EditorService.DrawHorizontalLine*
        name: DrawHorizontalLine
      VB:
      - id: Editor.EditorService.DrawHorizontalLine*
        name: DrawHorizontalLine
    nameWithType:
      CSharp:
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.DrawHorizontalLine*
        name: DrawHorizontalLine
      VB:
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.DrawHorizontalLine*
        name: DrawHorizontalLine
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.DrawHorizontalLine*
        name: DrawHorizontalLine
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.DrawHorizontalLine*
        name: DrawHorizontalLine
    isDefinition: true
    commentId: Overload:Editor.EditorService.DrawHorizontalLine
  Editor.EditorService.DrawVerticalLine*:
    name:
      CSharp:
      - id: Editor.EditorService.DrawVerticalLine*
        name: DrawVerticalLine
      VB:
      - id: Editor.EditorService.DrawVerticalLine*
        name: DrawVerticalLine
    nameWithType:
      CSharp:
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.DrawVerticalLine*
        name: DrawVerticalLine
      VB:
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.DrawVerticalLine*
        name: DrawVerticalLine
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.DrawVerticalLine*
        name: DrawVerticalLine
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.DrawVerticalLine*
        name: DrawVerticalLine
    isDefinition: true
    commentId: Overload:Editor.EditorService.DrawVerticalLine
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic:
    name:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
    nameWithType:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.Dictionary{{TEnum},System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - name: TEnum
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: TEnum
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - name: TEnum
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: TEnum
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - name: TEnum
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: TEnum
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{``0,System.String}
  Global.GUIStyle:
    name:
      CSharp:
      - id: Global.GUIStyle
        name: GUIStyle
        isExternal: true
      VB:
      - id: Global.GUIStyle
        name: GUIStyle
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.GUIStyle
        name: GUIStyle
        isExternal: true
      VB:
      - id: Global.GUIStyle
        name: GUIStyle
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.GUIStyle
        name: GUIStyle
        isExternal: true
      VB:
      - id: Global.GUIStyle
        name: GUIStyle
        isExternal: true
    isDefinition: true
    commentId: '!:Global.GUIStyle'
  Editor.EditorService.EnumPopup*:
    name:
      CSharp:
      - id: Editor.EditorService.EnumPopup*
        name: EnumPopup
      VB:
      - id: Editor.EditorService.EnumPopup*
        name: EnumPopup
    nameWithType:
      CSharp:
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.EnumPopup*
        name: EnumPopup
      VB:
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.EnumPopup*
        name: EnumPopup
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.EnumPopup*
        name: EnumPopup
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.EditorService*
        name: EditorService
      - name: .
      - id: Editor.EditorService.EnumPopup*
        name: EnumPopup
    isDefinition: true
    commentId: Overload:Editor.EditorService.EnumPopup
  Editor.EditorService:
    name:
      CSharp:
      - id: Editor.EditorService
        name: EditorService
      VB:
      - id: Editor.EditorService
        name: EditorService
    nameWithType:
      CSharp:
      - id: Editor.EditorService
        name: EditorService
      VB:
      - id: Editor.EditorService
        name: EditorService
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.EditorService
        name: EditorService
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.EditorService
        name: EditorService
    isDefinition: true
    commentId: T:Editor.EditorService
  Editor:
    name:
      CSharp:
      - id: Editor
        name: Editor
      VB:
      - id: Editor
        name: Editor
    nameWithType:
      CSharp:
      - id: Editor
        name: Editor
      VB:
      - id: Editor
        name: Editor
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      VB:
      - id: Editor
        name: Editor
    isDefinition: true
    commentId: N:Editor
  Editor.Default.SetTmpExtraPadding:
    name:
      CSharp:
      - id: Editor.Default.SetTmpExtraPadding
        name: SetTmpExtraPadding
      VB:
      - id: Editor.Default.SetTmpExtraPadding
        name: SetTmpExtraPadding
    nameWithType:
      CSharp:
      - id: Editor.Default.SetTmpExtraPadding
        name: SetTmpExtraPadding
      VB:
      - id: Editor.Default.SetTmpExtraPadding
        name: SetTmpExtraPadding
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Default
        name: Default
      - name: .
      - id: Editor.Default.SetTmpExtraPadding
        name: SetTmpExtraPadding
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Default
        name: Default
      - name: .
      - id: Editor.Default.SetTmpExtraPadding
        name: SetTmpExtraPadding
    isDefinition: true
    commentId: T:Editor.Default.SetTmpExtraPadding
  Global.Texture2D:
    name:
      CSharp:
      - id: Global.Texture2D
        name: Texture2D
        isExternal: true
      VB:
      - id: Global.Texture2D
        name: Texture2D
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Texture2D
        name: Texture2D
        isExternal: true
      VB:
      - id: Global.Texture2D
        name: Texture2D
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Texture2D
        name: Texture2D
        isExternal: true
      VB:
      - id: Global.Texture2D
        name: Texture2D
        isExternal: true
    isDefinition: true
  System.Object[]:
    name:
      CSharp:
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
    isDefinition: false
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: int
        isExternal: true
      VB:
      - id: System.Int32
        name: Integer
        isExternal: true
    nameWithType:
      CSharp:
      - id: System.Int32
        name: int
        isExternal: true
      VB:
      - id: System.Int32
        name: Integer
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System.Int32
        name: int
        isExternal: true
      VB:
      - id: System.Int32
        name: Integer
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Editor.Default.ScriptableObjectIconSetter.RenderStaticPreview*:
    name:
      CSharp:
      - id: Editor.Default.ScriptableObjectIconSetter.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor.Default.ScriptableObjectIconSetter.RenderStaticPreview*
        name: RenderStaticPreview
    nameWithType:
      CSharp:
      - id: Editor.Default.ScriptableObjectIconSetter*
        name: ScriptableObjectIconSetter
      - name: .
      - id: Editor.Default.ScriptableObjectIconSetter.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor.Default.ScriptableObjectIconSetter*
        name: ScriptableObjectIconSetter
      - name: .
      - id: Editor.Default.ScriptableObjectIconSetter.RenderStaticPreview*
        name: RenderStaticPreview
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Default*
        name: Default
      - name: .
      - id: Editor.Default.ScriptableObjectIconSetter*
        name: ScriptableObjectIconSetter
      - name: .
      - id: Editor.Default.ScriptableObjectIconSetter.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Default*
        name: Default
      - name: .
      - id: Editor.Default.ScriptableObjectIconSetter*
        name: ScriptableObjectIconSetter
      - name: .
      - id: Editor.Default.ScriptableObjectIconSetter.RenderStaticPreview*
        name: RenderStaticPreview
    isDefinition: true
    commentId: Overload:Editor.Default.ScriptableObjectIconSetter.RenderStaticPreview
  Editor.Default.ScriptableObjectIconSetter:
    name:
      CSharp:
      - id: Editor.Default.ScriptableObjectIconSetter
        name: ScriptableObjectIconSetter
      VB:
      - id: Editor.Default.ScriptableObjectIconSetter
        name: ScriptableObjectIconSetter
    nameWithType:
      CSharp:
      - id: Editor.Default.ScriptableObjectIconSetter
        name: ScriptableObjectIconSetter
      VB:
      - id: Editor.Default.ScriptableObjectIconSetter
        name: ScriptableObjectIconSetter
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Default
        name: Default
      - name: .
      - id: Editor.Default.ScriptableObjectIconSetter
        name: ScriptableObjectIconSetter
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Default
        name: Default
      - name: .
      - id: Editor.Default.ScriptableObjectIconSetter
        name: ScriptableObjectIconSetter
    isDefinition: true
    commentId: T:Editor.Default.ScriptableObjectIconSetter
  Editor.Default.WelcomeToUctWindow.CreateGUI*:
    name:
      CSharp:
      - id: Editor.Default.WelcomeToUctWindow.CreateGUI*
        name: CreateGUI
      VB:
      - id: Editor.Default.WelcomeToUctWindow.CreateGUI*
        name: CreateGUI
    nameWithType:
      CSharp:
      - id: Editor.Default.WelcomeToUctWindow*
        name: WelcomeToUctWindow
      - name: .
      - id: Editor.Default.WelcomeToUctWindow.CreateGUI*
        name: CreateGUI
      VB:
      - id: Editor.Default.WelcomeToUctWindow*
        name: WelcomeToUctWindow
      - name: .
      - id: Editor.Default.WelcomeToUctWindow.CreateGUI*
        name: CreateGUI
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Default*
        name: Default
      - name: .
      - id: Editor.Default.WelcomeToUctWindow*
        name: WelcomeToUctWindow
      - name: .
      - id: Editor.Default.WelcomeToUctWindow.CreateGUI*
        name: CreateGUI
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Default*
        name: Default
      - name: .
      - id: Editor.Default.WelcomeToUctWindow*
        name: WelcomeToUctWindow
      - name: .
      - id: Editor.Default.WelcomeToUctWindow.CreateGUI*
        name: CreateGUI
    isDefinition: true
    commentId: Overload:Editor.Default.WelcomeToUctWindow.CreateGUI
  Editor.Default.WelcomeToUctWindow.ShowExample*:
    name:
      CSharp:
      - id: Editor.Default.WelcomeToUctWindow.ShowExample*
        name: ShowExample
      VB:
      - id: Editor.Default.WelcomeToUctWindow.ShowExample*
        name: ShowExample
    nameWithType:
      CSharp:
      - id: Editor.Default.WelcomeToUctWindow*
        name: WelcomeToUctWindow
      - name: .
      - id: Editor.Default.WelcomeToUctWindow.ShowExample*
        name: ShowExample
      VB:
      - id: Editor.Default.WelcomeToUctWindow*
        name: WelcomeToUctWindow
      - name: .
      - id: Editor.Default.WelcomeToUctWindow.ShowExample*
        name: ShowExample
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Default*
        name: Default
      - name: .
      - id: Editor.Default.WelcomeToUctWindow*
        name: WelcomeToUctWindow
      - name: .
      - id: Editor.Default.WelcomeToUctWindow.ShowExample*
        name: ShowExample
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Default*
        name: Default
      - name: .
      - id: Editor.Default.WelcomeToUctWindow*
        name: WelcomeToUctWindow
      - name: .
      - id: Editor.Default.WelcomeToUctWindow.ShowExample*
        name: ShowExample
    isDefinition: true
    commentId: Overload:Editor.Default.WelcomeToUctWindow.ShowExample
  Editor.Default.WelcomeToUctWindow:
    name:
      CSharp:
      - id: Editor.Default.WelcomeToUctWindow
        name: WelcomeToUctWindow
      VB:
      - id: Editor.Default.WelcomeToUctWindow
        name: WelcomeToUctWindow
    nameWithType:
      CSharp:
      - id: Editor.Default.WelcomeToUctWindow
        name: WelcomeToUctWindow
      VB:
      - id: Editor.Default.WelcomeToUctWindow
        name: WelcomeToUctWindow
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Default
        name: Default
      - name: .
      - id: Editor.Default.WelcomeToUctWindow
        name: WelcomeToUctWindow
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Default
        name: Default
      - name: .
      - id: Editor.Default.WelcomeToUctWindow
        name: WelcomeToUctWindow
    isDefinition: true
    commentId: T:Editor.Default.WelcomeToUctWindow
  Editor.Default:
    name:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Default
        name: Default
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Default
        name: Default
    nameWithType:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Default
        name: Default
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Default
        name: Default
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Default
        name: Default
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Default
        name: Default
    isDefinition: true
    commentId: N:Editor.Default
  Editor.Inspector.CharacterSpriteManagerInspector.RenderStaticPreview*:
    name:
      CSharp:
      - id: Editor.Inspector.CharacterSpriteManagerInspector.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor.Inspector.CharacterSpriteManagerInspector.RenderStaticPreview*
        name: RenderStaticPreview
    nameWithType:
      CSharp:
      - id: Editor.Inspector.CharacterSpriteManagerInspector*
        name: CharacterSpriteManagerInspector
      - name: .
      - id: Editor.Inspector.CharacterSpriteManagerInspector.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor.Inspector.CharacterSpriteManagerInspector*
        name: CharacterSpriteManagerInspector
      - name: .
      - id: Editor.Inspector.CharacterSpriteManagerInspector.RenderStaticPreview*
        name: RenderStaticPreview
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.CharacterSpriteManagerInspector*
        name: CharacterSpriteManagerInspector
      - name: .
      - id: Editor.Inspector.CharacterSpriteManagerInspector.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.CharacterSpriteManagerInspector*
        name: CharacterSpriteManagerInspector
      - name: .
      - id: Editor.Inspector.CharacterSpriteManagerInspector.RenderStaticPreview*
        name: RenderStaticPreview
    isDefinition: true
    commentId: Overload:Editor.Inspector.CharacterSpriteManagerInspector.RenderStaticPreview
  Editor.Inspector.CharacterSpriteManagerInspector.OnInspectorGUI*:
    name:
      CSharp:
      - id: Editor.Inspector.CharacterSpriteManagerInspector.OnInspectorGUI*
        name: OnInspectorGUI
      VB:
      - id: Editor.Inspector.CharacterSpriteManagerInspector.OnInspectorGUI*
        name: OnInspectorGUI
    nameWithType:
      CSharp:
      - id: Editor.Inspector.CharacterSpriteManagerInspector*
        name: CharacterSpriteManagerInspector
      - name: .
      - id: Editor.Inspector.CharacterSpriteManagerInspector.OnInspectorGUI*
        name: OnInspectorGUI
      VB:
      - id: Editor.Inspector.CharacterSpriteManagerInspector*
        name: CharacterSpriteManagerInspector
      - name: .
      - id: Editor.Inspector.CharacterSpriteManagerInspector.OnInspectorGUI*
        name: OnInspectorGUI
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.CharacterSpriteManagerInspector*
        name: CharacterSpriteManagerInspector
      - name: .
      - id: Editor.Inspector.CharacterSpriteManagerInspector.OnInspectorGUI*
        name: OnInspectorGUI
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.CharacterSpriteManagerInspector*
        name: CharacterSpriteManagerInspector
      - name: .
      - id: Editor.Inspector.CharacterSpriteManagerInspector.OnInspectorGUI*
        name: OnInspectorGUI
    isDefinition: true
    commentId: Overload:Editor.Inspector.CharacterSpriteManagerInspector.OnInspectorGUI
  Editor.Inspector.CharacterSpriteManagerInspector:
    name:
      CSharp:
      - id: Editor.Inspector.CharacterSpriteManagerInspector
        name: CharacterSpriteManagerInspector
      VB:
      - id: Editor.Inspector.CharacterSpriteManagerInspector
        name: CharacterSpriteManagerInspector
    nameWithType:
      CSharp:
      - id: Editor.Inspector.CharacterSpriteManagerInspector
        name: CharacterSpriteManagerInspector
      VB:
      - id: Editor.Inspector.CharacterSpriteManagerInspector
        name: CharacterSpriteManagerInspector
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.CharacterSpriteManagerInspector
        name: CharacterSpriteManagerInspector
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.CharacterSpriteManagerInspector
        name: CharacterSpriteManagerInspector
    isDefinition: true
    commentId: T:Editor.Inspector.CharacterSpriteManagerInspector
  Editor.Inspector.MusicDataInspector.RenderStaticPreview*:
    name:
      CSharp:
      - id: Editor.Inspector.MusicDataInspector.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor.Inspector.MusicDataInspector.RenderStaticPreview*
        name: RenderStaticPreview
    nameWithType:
      CSharp:
      - id: Editor.Inspector.MusicDataInspector*
        name: MusicDataInspector
      - name: .
      - id: Editor.Inspector.MusicDataInspector.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor.Inspector.MusicDataInspector*
        name: MusicDataInspector
      - name: .
      - id: Editor.Inspector.MusicDataInspector.RenderStaticPreview*
        name: RenderStaticPreview
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.MusicDataInspector*
        name: MusicDataInspector
      - name: .
      - id: Editor.Inspector.MusicDataInspector.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.MusicDataInspector*
        name: MusicDataInspector
      - name: .
      - id: Editor.Inspector.MusicDataInspector.RenderStaticPreview*
        name: RenderStaticPreview
    isDefinition: true
    commentId: Overload:Editor.Inspector.MusicDataInspector.RenderStaticPreview
  Editor.Inspector.MusicDataInspector:
    name:
      CSharp:
      - id: Editor.Inspector.MusicDataInspector
        name: MusicDataInspector
      VB:
      - id: Editor.Inspector.MusicDataInspector
        name: MusicDataInspector
    nameWithType:
      CSharp:
      - id: Editor.Inspector.MusicDataInspector
        name: MusicDataInspector
      VB:
      - id: Editor.Inspector.MusicDataInspector
        name: MusicDataInspector
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.MusicDataInspector
        name: MusicDataInspector
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.MusicDataInspector
        name: MusicDataInspector
    isDefinition: true
    commentId: T:Editor.Inspector.MusicDataInspector
  Editor.Inspector.SpriteExpressionCollectionInspector.OnInspectorGUI*:
    name:
      CSharp:
      - id: Editor.Inspector.SpriteExpressionCollectionInspector.OnInspectorGUI*
        name: OnInspectorGUI
      VB:
      - id: Editor.Inspector.SpriteExpressionCollectionInspector.OnInspectorGUI*
        name: OnInspectorGUI
    nameWithType:
      CSharp:
      - id: Editor.Inspector.SpriteExpressionCollectionInspector*
        name: SpriteExpressionCollectionInspector
      - name: .
      - id: Editor.Inspector.SpriteExpressionCollectionInspector.OnInspectorGUI*
        name: OnInspectorGUI
      VB:
      - id: Editor.Inspector.SpriteExpressionCollectionInspector*
        name: SpriteExpressionCollectionInspector
      - name: .
      - id: Editor.Inspector.SpriteExpressionCollectionInspector.OnInspectorGUI*
        name: OnInspectorGUI
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.SpriteExpressionCollectionInspector*
        name: SpriteExpressionCollectionInspector
      - name: .
      - id: Editor.Inspector.SpriteExpressionCollectionInspector.OnInspectorGUI*
        name: OnInspectorGUI
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.SpriteExpressionCollectionInspector*
        name: SpriteExpressionCollectionInspector
      - name: .
      - id: Editor.Inspector.SpriteExpressionCollectionInspector.OnInspectorGUI*
        name: OnInspectorGUI
    isDefinition: true
    commentId: Overload:Editor.Inspector.SpriteExpressionCollectionInspector.OnInspectorGUI
  Editor.Inspector.SpriteExpressionCollectionInspector.RenderStaticPreview*:
    name:
      CSharp:
      - id: Editor.Inspector.SpriteExpressionCollectionInspector.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor.Inspector.SpriteExpressionCollectionInspector.RenderStaticPreview*
        name: RenderStaticPreview
    nameWithType:
      CSharp:
      - id: Editor.Inspector.SpriteExpressionCollectionInspector*
        name: SpriteExpressionCollectionInspector
      - name: .
      - id: Editor.Inspector.SpriteExpressionCollectionInspector.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor.Inspector.SpriteExpressionCollectionInspector*
        name: SpriteExpressionCollectionInspector
      - name: .
      - id: Editor.Inspector.SpriteExpressionCollectionInspector.RenderStaticPreview*
        name: RenderStaticPreview
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.SpriteExpressionCollectionInspector*
        name: SpriteExpressionCollectionInspector
      - name: .
      - id: Editor.Inspector.SpriteExpressionCollectionInspector.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.SpriteExpressionCollectionInspector*
        name: SpriteExpressionCollectionInspector
      - name: .
      - id: Editor.Inspector.SpriteExpressionCollectionInspector.RenderStaticPreview*
        name: RenderStaticPreview
    isDefinition: true
    commentId: Overload:Editor.Inspector.SpriteExpressionCollectionInspector.RenderStaticPreview
  Editor.Inspector.SpriteExpressionCollectionInspector:
    name:
      CSharp:
      - id: Editor.Inspector.SpriteExpressionCollectionInspector
        name: SpriteExpressionCollectionInspector
      VB:
      - id: Editor.Inspector.SpriteExpressionCollectionInspector
        name: SpriteExpressionCollectionInspector
    nameWithType:
      CSharp:
      - id: Editor.Inspector.SpriteExpressionCollectionInspector
        name: SpriteExpressionCollectionInspector
      VB:
      - id: Editor.Inspector.SpriteExpressionCollectionInspector
        name: SpriteExpressionCollectionInspector
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.SpriteExpressionCollectionInspector
        name: SpriteExpressionCollectionInspector
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.SpriteExpressionCollectionInspector
        name: SpriteExpressionCollectionInspector
    isDefinition: true
    commentId: T:Editor.Inspector.SpriteExpressionCollectionInspector
  Editor.Inspector.BulletControlInspector.RenderStaticPreview*:
    name:
      CSharp:
      - id: Editor.Inspector.BulletControlInspector.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor.Inspector.BulletControlInspector.RenderStaticPreview*
        name: RenderStaticPreview
    nameWithType:
      CSharp:
      - id: Editor.Inspector.BulletControlInspector*
        name: BulletControlInspector
      - name: .
      - id: Editor.Inspector.BulletControlInspector.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor.Inspector.BulletControlInspector*
        name: BulletControlInspector
      - name: .
      - id: Editor.Inspector.BulletControlInspector.RenderStaticPreview*
        name: RenderStaticPreview
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.BulletControlInspector*
        name: BulletControlInspector
      - name: .
      - id: Editor.Inspector.BulletControlInspector.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.BulletControlInspector*
        name: BulletControlInspector
      - name: .
      - id: Editor.Inspector.BulletControlInspector.RenderStaticPreview*
        name: RenderStaticPreview
    isDefinition: true
    commentId: Overload:Editor.Inspector.BulletControlInspector.RenderStaticPreview
  Global.VisualElement:
    name:
      CSharp:
      - id: Global.VisualElement
        name: VisualElement
        isExternal: true
      VB:
      - id: Global.VisualElement
        name: VisualElement
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.VisualElement
        name: VisualElement
        isExternal: true
      VB:
      - id: Global.VisualElement
        name: VisualElement
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.VisualElement
        name: VisualElement
        isExternal: true
      VB:
      - id: Global.VisualElement
        name: VisualElement
        isExternal: true
    isDefinition: true
    commentId: '!:Global.VisualElement'
  Editor.Inspector.BulletControlInspector.CreateInspectorGUI*:
    name:
      CSharp:
      - id: Editor.Inspector.BulletControlInspector.CreateInspectorGUI*
        name: CreateInspectorGUI
      VB:
      - id: Editor.Inspector.BulletControlInspector.CreateInspectorGUI*
        name: CreateInspectorGUI
    nameWithType:
      CSharp:
      - id: Editor.Inspector.BulletControlInspector*
        name: BulletControlInspector
      - name: .
      - id: Editor.Inspector.BulletControlInspector.CreateInspectorGUI*
        name: CreateInspectorGUI
      VB:
      - id: Editor.Inspector.BulletControlInspector*
        name: BulletControlInspector
      - name: .
      - id: Editor.Inspector.BulletControlInspector.CreateInspectorGUI*
        name: CreateInspectorGUI
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.BulletControlInspector*
        name: BulletControlInspector
      - name: .
      - id: Editor.Inspector.BulletControlInspector.CreateInspectorGUI*
        name: CreateInspectorGUI
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.BulletControlInspector*
        name: BulletControlInspector
      - name: .
      - id: Editor.Inspector.BulletControlInspector.CreateInspectorGUI*
        name: CreateInspectorGUI
    isDefinition: true
    commentId: Overload:Editor.Inspector.BulletControlInspector.CreateInspectorGUI
  Editor.Inspector.BulletControlInspector:
    name:
      CSharp:
      - id: Editor.Inspector.BulletControlInspector
        name: BulletControlInspector
      VB:
      - id: Editor.Inspector.BulletControlInspector
        name: BulletControlInspector
    nameWithType:
      CSharp:
      - id: Editor.Inspector.BulletControlInspector
        name: BulletControlInspector
      VB:
      - id: Editor.Inspector.BulletControlInspector
        name: BulletControlInspector
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.BulletControlInspector
        name: BulletControlInspector
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.BulletControlInspector
        name: BulletControlInspector
    isDefinition: true
    commentId: T:Editor.Inspector.BulletControlInspector
  Editor.Inspector:
    name:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
    nameWithType:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
    isDefinition: true
    commentId: N:Editor.Inspector
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic.List{System.Single}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.Single
        name: float
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Single
        name: Single
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.Single
        name: float
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Single
        name: Single
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.Single
        name: float
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Single
        name: Single
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Single}
  Editor.Inspector.EventSystem.OverworldStatusChangerInspector.OnInspectorGUI*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector.OnInspectorGUI*
        name: OnInspectorGUI
      VB:
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector.OnInspectorGUI*
        name: OnInspectorGUI
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector*
        name: OverworldStatusChangerInspector
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector.OnInspectorGUI*
        name: OnInspectorGUI
      VB:
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector*
        name: OverworldStatusChangerInspector
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector.OnInspectorGUI*
        name: OnInspectorGUI
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector*
        name: OverworldStatusChangerInspector
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector.OnInspectorGUI*
        name: OnInspectorGUI
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector*
        name: OverworldStatusChangerInspector
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector.OnInspectorGUI*
        name: OnInspectorGUI
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.OverworldStatusChangerInspector.OnInspectorGUI
  Editor.Inspector.EventSystem.OverworldStatusChangerInspector:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector
        name: OverworldStatusChangerInspector
      VB:
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector
        name: OverworldStatusChangerInspector
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector
        name: OverworldStatusChangerInspector
      VB:
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector
        name: OverworldStatusChangerInspector
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector
        name: OverworldStatusChangerInspector
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldStatusChangerInspector
        name: OverworldStatusChangerInspector
    isDefinition: true
    commentId: T:Editor.Inspector.EventSystem.OverworldStatusChangerInspector
  Editor.Inspector.EventSystem.OverworldEventTriggerEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor.OnInspectorGUI*
        name: OnInspectorGUI
      VB:
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor.OnInspectorGUI*
        name: OnInspectorGUI
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor*
        name: OverworldEventTriggerEditor
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor.OnInspectorGUI*
        name: OnInspectorGUI
      VB:
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor*
        name: OverworldEventTriggerEditor
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor.OnInspectorGUI*
        name: OnInspectorGUI
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor*
        name: OverworldEventTriggerEditor
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor.OnInspectorGUI*
        name: OnInspectorGUI
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor*
        name: OverworldEventTriggerEditor
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor.OnInspectorGUI*
        name: OnInspectorGUI
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.OverworldEventTriggerEditor.OnInspectorGUI
  Editor.Inspector.EventSystem.OverworldEventTriggerEditor:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor
        name: OverworldEventTriggerEditor
      VB:
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor
        name: OverworldEventTriggerEditor
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor
        name: OverworldEventTriggerEditor
      VB:
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor
        name: OverworldEventTriggerEditor
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor
        name: OverworldEventTriggerEditor
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.OverworldEventTriggerEditor
        name: OverworldEventTriggerEditor
    isDefinition: true
    commentId: T:Editor.Inspector.EventSystem.OverworldEventTriggerEditor
  Global.FactEntry[]:
    name:
      CSharp:
      - id: Global.FactEntry
        name: FactEntry
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.FactEntry
        name: FactEntry
        isExternal: true
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Global.FactEntry
        name: FactEntry
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.FactEntry
        name: FactEntry
        isExternal: true
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Global.FactEntry
        name: FactEntry
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.FactEntry
        name: FactEntry
        isExternal: true
      - name: (
      - name: )
    isDefinition: false
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: bool
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        isExternal: true
    nameWithType:
      CSharp:
      - id: System.Boolean
        name: bool
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System.Boolean
        name: bool
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Editor.Inspector.EventSystem.EntrySaver.GetFactEntry*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.EntrySaver.GetFactEntry*
        name: GetFactEntry
      VB:
      - id: Editor.Inspector.EventSystem.EntrySaver.GetFactEntry*
        name: GetFactEntry
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.GetFactEntry*
        name: GetFactEntry
      VB:
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.GetFactEntry*
        name: GetFactEntry
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.GetFactEntry*
        name: GetFactEntry
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.GetFactEntry*
        name: GetFactEntry
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.EntrySaver.GetFactEntry
  Global.EventEntry[]:
    name:
      CSharp:
      - id: Global.EventEntry
        name: EventEntry
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.EventEntry
        name: EventEntry
        isExternal: true
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Global.EventEntry
        name: EventEntry
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.EventEntry
        name: EventEntry
        isExternal: true
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Global.EventEntry
        name: EventEntry
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.EventEntry
        name: EventEntry
        isExternal: true
      - name: (
      - name: )
    isDefinition: false
  Editor.Inspector.EventSystem.EntrySaver.GetEventEntry*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.EntrySaver.GetEventEntry*
        name: GetEventEntry
      VB:
      - id: Editor.Inspector.EventSystem.EntrySaver.GetEventEntry*
        name: GetEventEntry
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.GetEventEntry*
        name: GetEventEntry
      VB:
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.GetEventEntry*
        name: GetEventEntry
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.GetEventEntry*
        name: GetEventEntry
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.GetEventEntry*
        name: GetEventEntry
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.EntrySaver.GetEventEntry
  Global.RuleEntry[]:
    name:
      CSharp:
      - id: Global.RuleEntry
        name: RuleEntry
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.RuleEntry
        name: RuleEntry
        isExternal: true
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Global.RuleEntry
        name: RuleEntry
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.RuleEntry
        name: RuleEntry
        isExternal: true
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Global.RuleEntry
        name: RuleEntry
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.RuleEntry
        name: RuleEntry
        isExternal: true
      - name: (
      - name: )
    isDefinition: false
  Editor.Inspector.EventSystem.EntrySaver.GetRuleEntry*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.EntrySaver.GetRuleEntry*
        name: GetRuleEntry
      VB:
      - id: Editor.Inspector.EventSystem.EntrySaver.GetRuleEntry*
        name: GetRuleEntry
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.GetRuleEntry*
        name: GetRuleEntry
      VB:
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.GetRuleEntry*
        name: GetRuleEntry
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.GetRuleEntry*
        name: GetRuleEntry
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.GetRuleEntry*
        name: GetRuleEntry
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.EntrySaver.GetRuleEntry
  Editor.Inspector.EventSystem.EntrySaver.EventEntryField*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.EntrySaver.EventEntryField*
        name: EventEntryField
      VB:
      - id: Editor.Inspector.EventSystem.EntrySaver.EventEntryField*
        name: EventEntryField
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.EventEntryField*
        name: EventEntryField
      VB:
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.EventEntryField*
        name: EventEntryField
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.EventEntryField*
        name: EventEntryField
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.EventEntryField*
        name: EventEntryField
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.EntrySaver.EventEntryField
  Editor.Inspector.EventSystem.EntrySaver.FactEntryField*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.EntrySaver.FactEntryField*
        name: FactEntryField
      VB:
      - id: Editor.Inspector.EventSystem.EntrySaver.FactEntryField*
        name: FactEntryField
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.FactEntryField*
        name: FactEntryField
      VB:
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.FactEntryField*
        name: FactEntryField
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.FactEntryField*
        name: FactEntryField
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver*
        name: EntrySaver
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver.FactEntryField*
        name: FactEntryField
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.EntrySaver.FactEntryField
  Editor.Inspector.EventSystem.EntrySaver:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.EntrySaver
        name: EntrySaver
      VB:
      - id: Editor.Inspector.EventSystem.EntrySaver
        name: EntrySaver
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.EntrySaver
        name: EntrySaver
      VB:
      - id: Editor.Inspector.EventSystem.EntrySaver
        name: EntrySaver
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver
        name: EntrySaver
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EntrySaver
        name: EntrySaver
    isDefinition: true
    commentId: T:Editor.Inspector.EventSystem.EntrySaver
  Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName*
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName*
        name: PropertyName
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName*
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName*
        name: PropertyName
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName*
        name: PropertyName
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName*
        name: PropertyName
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName
  Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath*
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath*
        name: IconPath
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath*
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath*
        name: IconPath
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath*
        name: IconPath
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath*
        name: IconPath
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath
  Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd*
        name: OnEnableAdd
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd*
        name: OnEnableAdd
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd*
        name: OnEnableAdd
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd*
        name: OnEnableAdd
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd*
        name: OnEnableAdd
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd*
        name: OnEnableAdd
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd
  Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement*
        name: DrawElement
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement*
        name: DrawElement
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement*
        name: DrawElement
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement*
        name: DrawElement
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement*
        name: DrawElement
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement*
        name: DrawElement
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement
  Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection*
        name: RenameDetection
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection*
        name: RenameDetection
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection*
        name: RenameDetection
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection*
        name: RenameDetection
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection*
        name: RenameDetection
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection*
        name: RenameDetection
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection
  Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader*
        name: DrawHeader
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader*
        name: DrawHeader
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader*
        name: DrawHeader
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader*
        name: DrawHeader
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader*
        name: DrawHeader
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader*
        name: DrawHeader
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader
  Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement*
        name: OnAddElement
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement*
        name: OnAddElement
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement*
        name: OnAddElement
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement*
        name: OnAddElement
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement*
        name: OnAddElement
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement*
        name: OnAddElement
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement
  Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement*
        name: OnRemoveElement
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement*
        name: OnRemoveElement
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement*
        name: OnRemoveElement
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement*
        name: OnRemoveElement
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement*
        name: OnRemoveElement
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement*
        name: OnRemoveElement
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement
  Global.SerializedObject:
    name:
      CSharp:
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      VB:
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      VB:
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      VB:
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
    isDefinition: true
    commentId: '!:Global.SerializedObject'
  Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName*
        name: GetSceneName
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName*
        name: GetSceneName
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName*
        name: GetSceneName
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName*
        name: GetSceneName
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName*
        name: GetSceneName
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName*
        name: GetSceneName
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName
  Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI*
        name: OnInspectorGUI
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI*
        name: OnInspectorGUI
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI*
        name: OnInspectorGUI
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI*
        name: OnInspectorGUI
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI*
        name: OnInspectorGUI
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI*
        name: OnInspectorGUI
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI
  Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview*
        name: RenderStaticPreview
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview*
        name: RenderStaticPreview
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview*
        name: RenderStaticPreview
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1*
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview*
        name: RenderStaticPreview
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview
  Editor.Inspector.EventSystem.ReorderableListInspector`1:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    isDefinition: true
    commentId: T:Editor.Inspector.EventSystem.ReorderableListInspector`1
  Editor.Inspector.EventSystem:
    name:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
    nameWithType:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
    isDefinition: true
    commentId: N:Editor.Inspector.EventSystem
  Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1
    parent: Editor.Inspector.EventSystem
    commentId: T:Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}
  Editor.Inspector.EventSystem.ReorderableListInspector`1.elementHeight:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.elementHeight
        name: elementHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.elementHeight
        name: elementHeight
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.elementHeight
        name: elementHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.elementHeight
        name: elementHeight
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.elementHeight
        name: elementHeight
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.elementHeight
        name: elementHeight
    isDefinition: true
    commentId: F:Editor.Inspector.EventSystem.ReorderableListInspector`1.elementHeight
  Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.elementHeight:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.elementHeight
        name: elementHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.elementHeight
        name: elementHeight
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.elementHeight
        name: elementHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.elementHeight
        name: elementHeight
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.elementHeight
        name: elementHeight
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.elementHeight
        name: elementHeight
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.elementHeight
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}
    commentId: F:Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.elementHeight
  Editor.Inspector.EventSystem.ReorderableListInspector`1.extraHeight:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.extraHeight
        name: extraHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.extraHeight
        name: extraHeight
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.extraHeight
        name: extraHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.extraHeight
        name: extraHeight
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.extraHeight
        name: extraHeight
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.extraHeight
        name: extraHeight
    isDefinition: true
    commentId: F:Editor.Inspector.EventSystem.ReorderableListInspector`1.extraHeight
  Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.extraHeight:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.extraHeight
        name: extraHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.extraHeight
        name: extraHeight
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.extraHeight
        name: extraHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.extraHeight
        name: extraHeight
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.extraHeight
        name: extraHeight
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.extraHeight
        name: extraHeight
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.extraHeight
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}
    commentId: F:Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.extraHeight
  Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName(SerializedObject):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
    isDefinition: true
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName(SerializedObject)
  Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.GetSceneName(SerializedObject):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName(SerializedObject)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.GetSceneName(SerializedObject)
  Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
    isDefinition: true
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI
  Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnInspectorGUI:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnInspectorGUI
  Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: true
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
  Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
  Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName
        name: PropertyName
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName
        name: PropertyName
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName
        name: PropertyName
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName
        name: PropertyName
    isDefinition: true
    commentId: P:Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName
  Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.PropertyName:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.PropertyName
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.PropertyName
        name: PropertyName
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.PropertyName
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.PropertyName
        name: PropertyName
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.PropertyName
        name: PropertyName
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.PropertyName
        name: PropertyName
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}
    commentId: P:Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.PropertyName
  Editor.Inspector.EventSystem.FactTableInspector.PropertyName*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector.PropertyName*
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector.PropertyName*
        name: PropertyName
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.PropertyName*
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.PropertyName*
        name: PropertyName
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.PropertyName*
        name: PropertyName
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.PropertyName*
        name: PropertyName
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.FactTableInspector.PropertyName
  Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath
        name: IconPath
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath
        name: IconPath
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath
        name: IconPath
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath
        name: IconPath
    isDefinition: true
    commentId: P:Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath
  Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.IconPath:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.IconPath
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.IconPath
        name: IconPath
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.IconPath
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.IconPath
        name: IconPath
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.IconPath
        name: IconPath
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.IconPath
        name: IconPath
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}
    commentId: P:Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.IconPath
  Editor.Inspector.EventSystem.FactTableInspector.IconPath*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector.IconPath*
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector.IconPath*
        name: IconPath
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.IconPath*
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.IconPath*
        name: IconPath
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.IconPath*
        name: IconPath
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.IconPath*
        name: IconPath
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.FactTableInspector.IconPath
  Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
    isDefinition: true
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd
  Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnEnableAdd:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnEnableAdd
  Editor.Inspector.EventSystem.FactTableInspector.OnEnableAdd*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnEnableAdd*
        name: OnEnableAdd
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnEnableAdd*
        name: OnEnableAdd
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnEnableAdd*
        name: OnEnableAdd
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnEnableAdd*
        name: OnEnableAdd
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnEnableAdd*
        name: OnEnableAdd
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnEnableAdd*
        name: OnEnableAdd
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.FactTableInspector.OnEnableAdd
  Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement(Rect,SerializedProperty,System.Int32):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: true
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement(Rect,SerializedProperty,System.Int32)
  Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawElement(Rect,SerializedProperty,System.Int32):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement(Rect,SerializedProperty,System.Int32)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawElement(Rect,SerializedProperty,System.Int32)
  Editor.Inspector.EventSystem.FactTableInspector.DrawElement*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector.DrawElement*
        name: DrawElement
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector.DrawElement*
        name: DrawElement
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.DrawElement*
        name: DrawElement
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.DrawElement*
        name: DrawElement
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.DrawElement*
        name: DrawElement
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.DrawElement*
        name: DrawElement
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.FactTableInspector.DrawElement
  Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader(Rect):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
    isDefinition: true
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader(Rect)
  Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawHeader(Rect):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader(Rect)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.DrawHeader(Rect)
  Editor.Inspector.EventSystem.FactTableInspector.DrawHeader*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector.DrawHeader*
        name: DrawHeader
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector.DrawHeader*
        name: DrawHeader
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.DrawHeader*
        name: DrawHeader
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.DrawHeader*
        name: DrawHeader
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.DrawHeader*
        name: DrawHeader
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.DrawHeader*
        name: DrawHeader
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.FactTableInspector.DrawHeader
  Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection(SerializedProperty):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    isDefinition: true
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection(SerializedProperty)
  Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenameDetection(SerializedProperty):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection(SerializedProperty)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.RenameDetection(SerializedProperty)
  Editor.Inspector.EventSystem.FactTableInspector.RenameDetection*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector.RenameDetection*
        name: RenameDetection
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector.RenameDetection*
        name: RenameDetection
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.RenameDetection*
        name: RenameDetection
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.RenameDetection*
        name: RenameDetection
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.RenameDetection*
        name: RenameDetection
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.RenameDetection*
        name: RenameDetection
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.FactTableInspector.RenameDetection
  Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement(SerializedProperty):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    isDefinition: true
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement(SerializedProperty)
  Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnAddElement(SerializedProperty):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement(SerializedProperty)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnAddElement(SerializedProperty)
  Editor.Inspector.EventSystem.FactTableInspector.OnAddElement*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnAddElement*
        name: OnAddElement
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnAddElement*
        name: OnAddElement
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnAddElement*
        name: OnAddElement
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnAddElement*
        name: OnAddElement
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnAddElement*
        name: OnAddElement
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnAddElement*
        name: OnAddElement
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.FactTableInspector.OnAddElement
  Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement(SerializedProperty,System.Int32):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: true
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement(SerializedProperty,System.Int32)
  Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnRemoveElement(SerializedProperty,System.Int32):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.FactTable
        name: FactTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement(SerializedProperty,System.Int32)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{FactTable}.OnRemoveElement(SerializedProperty,System.Int32)
  Editor.Inspector.EventSystem.FactTableInspector.OnRemoveElement*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnRemoveElement*
        name: OnRemoveElement
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnRemoveElement*
        name: OnRemoveElement
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnRemoveElement*
        name: OnRemoveElement
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnRemoveElement*
        name: OnRemoveElement
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnRemoveElement*
        name: OnRemoveElement
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector*
        name: FactTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector.OnRemoveElement*
        name: OnRemoveElement
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.FactTableInspector.OnRemoveElement
  Editor.Inspector.EventSystem.FactTableInspector:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector
        name: FactTableInspector
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector
        name: FactTableInspector
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.FactTableInspector
        name: FactTableInspector
      VB:
      - id: Editor.Inspector.EventSystem.FactTableInspector
        name: FactTableInspector
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector
        name: FactTableInspector
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.FactTableInspector
        name: FactTableInspector
    isDefinition: true
    commentId: T:Editor.Inspector.EventSystem.FactTableInspector
  Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1
    parent: Editor.Inspector.EventSystem
    commentId: T:Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}
  Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.elementHeight:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.elementHeight
        name: elementHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.elementHeight
        name: elementHeight
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.elementHeight
        name: elementHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.elementHeight
        name: elementHeight
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.elementHeight
        name: elementHeight
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.elementHeight
        name: elementHeight
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.elementHeight
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}
    commentId: F:Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.elementHeight
  Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.extraHeight:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.extraHeight
        name: extraHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.extraHeight
        name: extraHeight
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.extraHeight
        name: extraHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.extraHeight
        name: extraHeight
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.extraHeight
        name: extraHeight
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.extraHeight
        name: extraHeight
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.extraHeight
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}
    commentId: F:Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.extraHeight
  Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.GetSceneName(SerializedObject):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName(SerializedObject)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.GetSceneName(SerializedObject)
  Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnInspectorGUI:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnInspectorGUI
  Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
  Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.PropertyName:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.PropertyName
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.PropertyName
        name: PropertyName
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.PropertyName
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.PropertyName
        name: PropertyName
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.PropertyName
        name: PropertyName
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.PropertyName
        name: PropertyName
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}
    commentId: P:Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.PropertyName
  Editor.Inspector.EventSystem.EventTableInspector.PropertyName*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector.PropertyName*
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector.PropertyName*
        name: PropertyName
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.PropertyName*
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.PropertyName*
        name: PropertyName
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.PropertyName*
        name: PropertyName
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.PropertyName*
        name: PropertyName
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.EventTableInspector.PropertyName
  Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.IconPath:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.IconPath
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.IconPath
        name: IconPath
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.IconPath
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.IconPath
        name: IconPath
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.IconPath
        name: IconPath
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.IconPath
        name: IconPath
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}
    commentId: P:Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.IconPath
  Editor.Inspector.EventSystem.EventTableInspector.IconPath*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector.IconPath*
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector.IconPath*
        name: IconPath
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.IconPath*
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.IconPath*
        name: IconPath
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.IconPath*
        name: IconPath
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.IconPath*
        name: IconPath
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.EventTableInspector.IconPath
  Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnEnableAdd:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnEnableAdd
  Editor.Inspector.EventSystem.EventTableInspector.OnEnableAdd*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnEnableAdd*
        name: OnEnableAdd
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnEnableAdd*
        name: OnEnableAdd
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnEnableAdd*
        name: OnEnableAdd
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnEnableAdd*
        name: OnEnableAdd
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnEnableAdd*
        name: OnEnableAdd
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnEnableAdd*
        name: OnEnableAdd
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.EventTableInspector.OnEnableAdd
  Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawElement(Rect,SerializedProperty,System.Int32):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement(Rect,SerializedProperty,System.Int32)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawElement(Rect,SerializedProperty,System.Int32)
  Editor.Inspector.EventSystem.EventTableInspector.DrawElement*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector.DrawElement*
        name: DrawElement
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector.DrawElement*
        name: DrawElement
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.DrawElement*
        name: DrawElement
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.DrawElement*
        name: DrawElement
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.DrawElement*
        name: DrawElement
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.DrawElement*
        name: DrawElement
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.EventTableInspector.DrawElement
  Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenameDetection(SerializedProperty):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection(SerializedProperty)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.RenameDetection(SerializedProperty)
  Editor.Inspector.EventSystem.EventTableInspector.RenameDetection*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector.RenameDetection*
        name: RenameDetection
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector.RenameDetection*
        name: RenameDetection
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.RenameDetection*
        name: RenameDetection
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.RenameDetection*
        name: RenameDetection
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.RenameDetection*
        name: RenameDetection
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.RenameDetection*
        name: RenameDetection
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.EventTableInspector.RenameDetection
  Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawHeader(Rect):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader(Rect)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.DrawHeader(Rect)
  Editor.Inspector.EventSystem.EventTableInspector.DrawHeader*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector.DrawHeader*
        name: DrawHeader
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector.DrawHeader*
        name: DrawHeader
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.DrawHeader*
        name: DrawHeader
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.DrawHeader*
        name: DrawHeader
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.DrawHeader*
        name: DrawHeader
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.DrawHeader*
        name: DrawHeader
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.EventTableInspector.DrawHeader
  Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnAddElement(SerializedProperty):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement(SerializedProperty)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnAddElement(SerializedProperty)
  Editor.Inspector.EventSystem.EventTableInspector.OnAddElement*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnAddElement*
        name: OnAddElement
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnAddElement*
        name: OnAddElement
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnAddElement*
        name: OnAddElement
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnAddElement*
        name: OnAddElement
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnAddElement*
        name: OnAddElement
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnAddElement*
        name: OnAddElement
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.EventTableInspector.OnAddElement
  Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnRemoveElement(SerializedProperty,System.Int32):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.EventTable
        name: EventTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement(SerializedProperty,System.Int32)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{EventTable}.OnRemoveElement(SerializedProperty,System.Int32)
  Editor.Inspector.EventSystem.EventTableInspector.OnRemoveElement*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnRemoveElement*
        name: OnRemoveElement
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnRemoveElement*
        name: OnRemoveElement
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnRemoveElement*
        name: OnRemoveElement
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnRemoveElement*
        name: OnRemoveElement
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnRemoveElement*
        name: OnRemoveElement
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector*
        name: EventTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector.OnRemoveElement*
        name: OnRemoveElement
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.EventTableInspector.OnRemoveElement
  Editor.Inspector.EventSystem.EventTableInspector:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector
        name: EventTableInspector
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector
        name: EventTableInspector
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.EventTableInspector
        name: EventTableInspector
      VB:
      - id: Editor.Inspector.EventSystem.EventTableInspector
        name: EventTableInspector
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector
        name: EventTableInspector
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.EventTableInspector
        name: EventTableInspector
    isDefinition: true
    commentId: T:Editor.Inspector.EventSystem.EventTableInspector
  Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1
    parent: Editor.Inspector.EventSystem
    commentId: T:Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}
  Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.elementHeight:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.elementHeight
        name: elementHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.elementHeight
        name: elementHeight
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.elementHeight
        name: elementHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.elementHeight
        name: elementHeight
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.elementHeight
        name: elementHeight
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.elementHeight
        name: elementHeight
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.elementHeight
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}
    commentId: F:Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.elementHeight
  Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.extraHeight:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.extraHeight
        name: extraHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.extraHeight
        name: extraHeight
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.extraHeight
        name: extraHeight
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.extraHeight
        name: extraHeight
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.extraHeight
        name: extraHeight
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.extraHeight
        name: extraHeight
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.extraHeight
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}
    commentId: F:Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.extraHeight
  Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.GetSceneName(SerializedObject):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.GetSceneName(SerializedObject)
        name: GetSceneName
      - name: (
      - id: Global.SerializedObject
        name: SerializedObject
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.GetSceneName(SerializedObject)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.GetSceneName(SerializedObject)
  Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnInspectorGUI:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnInspectorGUI
        name: OnInspectorGUI
      - name: (
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnInspectorGUI
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnInspectorGUI
  Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
        name: RenderStaticPreview
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenderStaticPreview(System.String,System.Object[],System.Int32,System.Int32)
  Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.PropertyName:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.PropertyName
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.PropertyName
        name: PropertyName
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.PropertyName
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.PropertyName
        name: PropertyName
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.PropertyName
        name: PropertyName
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.PropertyName
        name: PropertyName
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.PropertyName
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}
    commentId: P:Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.PropertyName
  Editor.Inspector.EventSystem.RuleTableInspector.PropertyName*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.PropertyName*
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.PropertyName*
        name: PropertyName
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.PropertyName*
        name: PropertyName
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.PropertyName*
        name: PropertyName
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.PropertyName*
        name: PropertyName
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.PropertyName*
        name: PropertyName
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.RuleTableInspector.PropertyName
  Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.IconPath:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.IconPath
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.IconPath
        name: IconPath
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.IconPath
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.IconPath
        name: IconPath
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.IconPath
        name: IconPath
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.IconPath
        name: IconPath
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.IconPath
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}
    commentId: P:Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.IconPath
  Editor.Inspector.EventSystem.RuleTableInspector.IconPath*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.IconPath*
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.IconPath*
        name: IconPath
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.IconPath*
        name: IconPath
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.IconPath*
        name: IconPath
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.IconPath*
        name: IconPath
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.IconPath*
        name: IconPath
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.RuleTableInspector.IconPath
  Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnEnableAdd:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnEnableAdd
        name: OnEnableAdd
      - name: (
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnEnableAdd
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnEnableAdd
  Editor.Inspector.EventSystem.RuleTableInspector.OnEnableAdd*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnEnableAdd*
        name: OnEnableAdd
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnEnableAdd*
        name: OnEnableAdd
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnEnableAdd*
        name: OnEnableAdd
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnEnableAdd*
        name: OnEnableAdd
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnEnableAdd*
        name: OnEnableAdd
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnEnableAdd*
        name: OnEnableAdd
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.RuleTableInspector.OnEnableAdd
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: string
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.String
        name: String
        isExternal: true
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: System.String
        name: string
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.String
        name: String
        isExternal: true
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: System.String
        name: string
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.String
        name: String
        isExternal: true
      - name: (
      - name: )
    isDefinition: false
  Editor.Inspector.EventSystem.RuleTableInspector.GetBattleConfigClassNames*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.GetBattleConfigClassNames*
        name: GetBattleConfigClassNames
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.GetBattleConfigClassNames*
        name: GetBattleConfigClassNames
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.GetBattleConfigClassNames*
        name: GetBattleConfigClassNames
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.GetBattleConfigClassNames*
        name: GetBattleConfigClassNames
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.GetBattleConfigClassNames*
        name: GetBattleConfigClassNames
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.GetBattleConfigClassNames*
        name: GetBattleConfigClassNames
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.RuleTableInspector.GetBattleConfigClassNames
  Editor.Inspector.EventSystem.RuleTableInspector.CalculateCriteriaSize*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.CalculateCriteriaSize*
        name: CalculateCriteriaSize
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.CalculateCriteriaSize*
        name: CalculateCriteriaSize
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.CalculateCriteriaSize*
        name: CalculateCriteriaSize
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.CalculateCriteriaSize*
        name: CalculateCriteriaSize
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.CalculateCriteriaSize*
        name: CalculateCriteriaSize
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.CalculateCriteriaSize*
        name: CalculateCriteriaSize
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.RuleTableInspector.CalculateCriteriaSize
  Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawElement(Rect,SerializedProperty,System.Int32):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawElement(Rect,SerializedProperty,System.Int32)
        name: DrawElement
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawElement(Rect,SerializedProperty,System.Int32)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawElement(Rect,SerializedProperty,System.Int32)
  Editor.Inspector.EventSystem.RuleTableInspector.DrawElement*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.DrawElement*
        name: DrawElement
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.DrawElement*
        name: DrawElement
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.DrawElement*
        name: DrawElement
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.DrawElement*
        name: DrawElement
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.DrawElement*
        name: DrawElement
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.DrawElement*
        name: DrawElement
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.RuleTableInspector.DrawElement
  Editor.Inspector.EventSystem.RuleTableInspector.EnsureUniqueTriggeredBy*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.EnsureUniqueTriggeredBy*
        name: EnsureUniqueTriggeredBy
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.EnsureUniqueTriggeredBy*
        name: EnsureUniqueTriggeredBy
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.EnsureUniqueTriggeredBy*
        name: EnsureUniqueTriggeredBy
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.EnsureUniqueTriggeredBy*
        name: EnsureUniqueTriggeredBy
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.EnsureUniqueTriggeredBy*
        name: EnsureUniqueTriggeredBy
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.EnsureUniqueTriggeredBy*
        name: EnsureUniqueTriggeredBy
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.RuleTableInspector.EnsureUniqueTriggeredBy
  Editor.Inspector.EventSystem.RuleTableInspector.CreateRuleCriteria*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.CreateRuleCriteria*
        name: CreateRuleCriteria
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.CreateRuleCriteria*
        name: CreateRuleCriteria
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.CreateRuleCriteria*
        name: CreateRuleCriteria
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.CreateRuleCriteria*
        name: CreateRuleCriteria
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.CreateRuleCriteria*
        name: CreateRuleCriteria
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.CreateRuleCriteria*
        name: CreateRuleCriteria
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.RuleTableInspector.CreateRuleCriteria
  Editor.Inspector.EventSystem.RuleTableInspector.GetRuleCriterionResult*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.GetRuleCriterionResult*
        name: GetRuleCriterionResult
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.GetRuleCriterionResult*
        name: GetRuleCriterionResult
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.GetRuleCriterionResult*
        name: GetRuleCriterionResult
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.GetRuleCriterionResult*
        name: GetRuleCriterionResult
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.GetRuleCriterionResult*
        name: GetRuleCriterionResult
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.GetRuleCriterionResult*
        name: GetRuleCriterionResult
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.RuleTableInspector.GetRuleCriterionResult
  Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenameDetection(SerializedProperty):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenameDetection(SerializedProperty)
        name: RenameDetection
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.RenameDetection(SerializedProperty)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.RenameDetection(SerializedProperty)
  Editor.Inspector.EventSystem.RuleTableInspector.RenameDetection*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.RenameDetection*
        name: RenameDetection
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.RenameDetection*
        name: RenameDetection
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.RenameDetection*
        name: RenameDetection
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.RenameDetection*
        name: RenameDetection
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.RenameDetection*
        name: RenameDetection
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.RenameDetection*
        name: RenameDetection
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.RuleTableInspector.RenameDetection
  Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawHeader(Rect):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawHeader(Rect)
        name: DrawHeader
      - name: (
      - id: Global.Rect
        name: Rect
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.DrawHeader(Rect)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.DrawHeader(Rect)
  Editor.Inspector.EventSystem.RuleTableInspector.DrawHeader*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.DrawHeader*
        name: DrawHeader
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.DrawHeader*
        name: DrawHeader
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.DrawHeader*
        name: DrawHeader
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.DrawHeader*
        name: DrawHeader
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.DrawHeader*
        name: DrawHeader
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.DrawHeader*
        name: DrawHeader
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.RuleTableInspector.DrawHeader
  Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnAddElement(SerializedProperty):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnAddElement(SerializedProperty)
        name: OnAddElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnAddElement(SerializedProperty)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnAddElement(SerializedProperty)
  Editor.Inspector.EventSystem.RuleTableInspector.OnAddElement*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnAddElement*
        name: OnAddElement
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnAddElement*
        name: OnAddElement
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnAddElement*
        name: OnAddElement
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnAddElement*
        name: OnAddElement
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnAddElement*
        name: OnAddElement
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnAddElement*
        name: OnAddElement
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.RuleTableInspector.OnAddElement
  Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnRemoveElement(SerializedProperty,System.Int32):
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: <
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: '>'
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector`1
        name: ReorderableListInspector
      - name: (
      - name: Of
      - name: " "
      - id: Global.RuleTable
        name: RuleTable
        isExternal: true
      - name: )
      - name: .
      - id: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnRemoveElement(SerializedProperty,System.Int32)
        name: OnRemoveElement
      - name: (
      - id: Global.SerializedProperty
        name: SerializedProperty
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: Editor.Inspector.EventSystem.ReorderableListInspector`1.OnRemoveElement(SerializedProperty,System.Int32)
    parent: Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}
    commentId: M:Editor.Inspector.EventSystem.ReorderableListInspector{RuleTable}.OnRemoveElement(SerializedProperty,System.Int32)
  Editor.Inspector.EventSystem.RuleTableInspector.OnRemoveElement*:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnRemoveElement*
        name: OnRemoveElement
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnRemoveElement*
        name: OnRemoveElement
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnRemoveElement*
        name: OnRemoveElement
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnRemoveElement*
        name: OnRemoveElement
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnRemoveElement*
        name: OnRemoveElement
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Inspector*
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem*
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector*
        name: RuleTableInspector
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector.OnRemoveElement*
        name: OnRemoveElement
    isDefinition: true
    commentId: Overload:Editor.Inspector.EventSystem.RuleTableInspector.OnRemoveElement
  Editor.Inspector.EventSystem.RuleTableInspector:
    name:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector
        name: RuleTableInspector
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector
        name: RuleTableInspector
    nameWithType:
      CSharp:
      - id: Editor.Inspector.EventSystem.RuleTableInspector
        name: RuleTableInspector
      VB:
      - id: Editor.Inspector.EventSystem.RuleTableInspector
        name: RuleTableInspector
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector
        name: RuleTableInspector
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Inspector
        name: Inspector
      - name: .
      - id: Editor.Inspector.EventSystem
        name: EventSystem
      - name: .
      - id: Editor.Inspector.EventSystem.RuleTableInspector
        name: RuleTableInspector
    isDefinition: true
    commentId: T:Editor.Inspector.EventSystem.RuleTableInspector
  Editor.Handler.OverworldSceneHandler.CreateLanguagePackFiles*:
    name:
      CSharp:
      - id: Editor.Handler.OverworldSceneHandler.CreateLanguagePackFiles*
        name: CreateLanguagePackFiles
      VB:
      - id: Editor.Handler.OverworldSceneHandler.CreateLanguagePackFiles*
        name: CreateLanguagePackFiles
    nameWithType:
      CSharp:
      - id: Editor.Handler.OverworldSceneHandler*
        name: OverworldSceneHandler
      - name: .
      - id: Editor.Handler.OverworldSceneHandler.CreateLanguagePackFiles*
        name: CreateLanguagePackFiles
      VB:
      - id: Editor.Handler.OverworldSceneHandler*
        name: OverworldSceneHandler
      - name: .
      - id: Editor.Handler.OverworldSceneHandler.CreateLanguagePackFiles*
        name: CreateLanguagePackFiles
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Handler*
        name: Handler
      - name: .
      - id: Editor.Handler.OverworldSceneHandler*
        name: OverworldSceneHandler
      - name: .
      - id: Editor.Handler.OverworldSceneHandler.CreateLanguagePackFiles*
        name: CreateLanguagePackFiles
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Handler*
        name: Handler
      - name: .
      - id: Editor.Handler.OverworldSceneHandler*
        name: OverworldSceneHandler
      - name: .
      - id: Editor.Handler.OverworldSceneHandler.CreateLanguagePackFiles*
        name: CreateLanguagePackFiles
    isDefinition: true
    commentId: Overload:Editor.Handler.OverworldSceneHandler.CreateLanguagePackFiles
  Editor.Handler.OverworldSceneHandler.EnsureScriptableObjects*:
    name:
      CSharp:
      - id: Editor.Handler.OverworldSceneHandler.EnsureScriptableObjects*
        name: EnsureScriptableObjects
      VB:
      - id: Editor.Handler.OverworldSceneHandler.EnsureScriptableObjects*
        name: EnsureScriptableObjects
    nameWithType:
      CSharp:
      - id: Editor.Handler.OverworldSceneHandler*
        name: OverworldSceneHandler
      - name: .
      - id: Editor.Handler.OverworldSceneHandler.EnsureScriptableObjects*
        name: EnsureScriptableObjects
      VB:
      - id: Editor.Handler.OverworldSceneHandler*
        name: OverworldSceneHandler
      - name: .
      - id: Editor.Handler.OverworldSceneHandler.EnsureScriptableObjects*
        name: EnsureScriptableObjects
    qualifiedName:
      CSharp:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Handler*
        name: Handler
      - name: .
      - id: Editor.Handler.OverworldSceneHandler*
        name: OverworldSceneHandler
      - name: .
      - id: Editor.Handler.OverworldSceneHandler.EnsureScriptableObjects*
        name: EnsureScriptableObjects
      VB:
      - id: Editor*
        name: Editor
      - name: .
      - id: Editor.Handler*
        name: Handler
      - name: .
      - id: Editor.Handler.OverworldSceneHandler*
        name: OverworldSceneHandler
      - name: .
      - id: Editor.Handler.OverworldSceneHandler.EnsureScriptableObjects*
        name: EnsureScriptableObjects
    isDefinition: true
    commentId: Overload:Editor.Handler.OverworldSceneHandler.EnsureScriptableObjects
  Editor.Handler.OverworldSceneHandler:
    name:
      CSharp:
      - id: Editor.Handler.OverworldSceneHandler
        name: OverworldSceneHandler
      VB:
      - id: Editor.Handler.OverworldSceneHandler
        name: OverworldSceneHandler
    nameWithType:
      CSharp:
      - id: Editor.Handler.OverworldSceneHandler
        name: OverworldSceneHandler
      VB:
      - id: Editor.Handler.OverworldSceneHandler
        name: OverworldSceneHandler
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Handler
        name: Handler
      - name: .
      - id: Editor.Handler.OverworldSceneHandler
        name: OverworldSceneHandler
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Handler
        name: Handler
      - name: .
      - id: Editor.Handler.OverworldSceneHandler
        name: OverworldSceneHandler
    isDefinition: true
    commentId: T:Editor.Handler.OverworldSceneHandler
  Editor.Handler:
    name:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Handler
        name: Handler
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Handler
        name: Handler
    nameWithType:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Handler
        name: Handler
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Handler
        name: Handler
    qualifiedName:
      CSharp:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Handler
        name: Handler
      VB:
      - id: Editor
        name: Editor
      - name: .
      - id: Editor.Handler
        name: Handler
    isDefinition: true
    commentId: N:Editor.Handler
  UCT.CameraLightController:
    name:
      CSharp:
      - id: UCT.CameraLightController
        name: CameraLightController
      VB:
      - id: UCT.CameraLightController
        name: CameraLightController
    nameWithType:
      CSharp:
      - id: UCT.CameraLightController
        name: CameraLightController
      VB:
      - id: UCT.CameraLightController
        name: CameraLightController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.CameraLightController
        name: CameraLightController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.CameraLightController
        name: CameraLightController
    isDefinition: true
    commentId: T:UCT.CameraLightController
  UCT:
    name:
      CSharp:
      - id: UCT
        name: UCT
      VB:
      - id: UCT
        name: UCT
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      VB:
      - id: UCT
        name: UCT
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      VB:
      - id: UCT
        name: UCT
    isDefinition: true
    commentId: N:UCT
  UCT.TmpDynamicFontController:
    name:
      CSharp:
      - id: UCT.TmpDynamicFontController
        name: TmpDynamicFontController
      VB:
      - id: UCT.TmpDynamicFontController
        name: TmpDynamicFontController
    nameWithType:
      CSharp:
      - id: UCT.TmpDynamicFontController
        name: TmpDynamicFontController
      VB:
      - id: UCT.TmpDynamicFontController
        name: TmpDynamicFontController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.TmpDynamicFontController
        name: TmpDynamicFontController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.TmpDynamicFontController
        name: TmpDynamicFontController
    isDefinition: true
    parent: UCT
    commentId: T:UCT.TmpDynamicFontController
  UCT.TmpDynamicFontController.Instance*:
    name:
      CSharp:
      - id: UCT.TmpDynamicFontController.Instance*
        name: Instance
      VB:
      - id: UCT.TmpDynamicFontController.Instance*
        name: Instance
    nameWithType:
      CSharp:
      - id: UCT.TmpDynamicFontController*
        name: TmpDynamicFontController
      - name: .
      - id: UCT.TmpDynamicFontController.Instance*
        name: Instance
      VB:
      - id: UCT.TmpDynamicFontController*
        name: TmpDynamicFontController
      - name: .
      - id: UCT.TmpDynamicFontController.Instance*
        name: Instance
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.TmpDynamicFontController*
        name: TmpDynamicFontController
      - name: .
      - id: UCT.TmpDynamicFontController.Instance*
        name: Instance
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.TmpDynamicFontController*
        name: TmpDynamicFontController
      - name: .
      - id: UCT.TmpDynamicFontController.Instance*
        name: Instance
    isDefinition: true
    commentId: Overload:UCT.TmpDynamicFontController.Instance
  System.Collections.Generic.List{TMP_Text}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.TMP_Text
        name: TMP_Text
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.TMP_Text
        name: TMP_Text
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.TMP_Text
        name: TMP_Text
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.TMP_Text
        name: TMP_Text
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.TMP_Text
        name: TMP_Text
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.TMP_Text
        name: TMP_Text
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{TMP_Text}
  UCT.TmpDynamicFontController.SimsunClear*:
    name:
      CSharp:
      - id: UCT.TmpDynamicFontController.SimsunClear*
        name: SimsunClear
      VB:
      - id: UCT.TmpDynamicFontController.SimsunClear*
        name: SimsunClear
    nameWithType:
      CSharp:
      - id: UCT.TmpDynamicFontController*
        name: TmpDynamicFontController
      - name: .
      - id: UCT.TmpDynamicFontController.SimsunClear*
        name: SimsunClear
      VB:
      - id: UCT.TmpDynamicFontController*
        name: TmpDynamicFontController
      - name: .
      - id: UCT.TmpDynamicFontController.SimsunClear*
        name: SimsunClear
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.TmpDynamicFontController*
        name: TmpDynamicFontController
      - name: .
      - id: UCT.TmpDynamicFontController.SimsunClear*
        name: SimsunClear
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.TmpDynamicFontController*
        name: TmpDynamicFontController
      - name: .
      - id: UCT.TmpDynamicFontController.SimsunClear*
        name: SimsunClear
    isDefinition: true
    commentId: Overload:UCT.TmpDynamicFontController.SimsunClear
  UCT.FollowSth.FollowTarget:
    name:
      CSharp:
      - id: UCT.FollowSth
        name: FollowSth
      - name: .
      - id: UCT.FollowSth.FollowTarget
        name: FollowTarget
      VB:
      - id: UCT.FollowSth
        name: FollowSth
      - name: .
      - id: UCT.FollowSth.FollowTarget
        name: FollowTarget
    nameWithType:
      CSharp:
      - id: UCT.FollowSth
        name: FollowSth
      - name: .
      - id: UCT.FollowSth.FollowTarget
        name: FollowTarget
      VB:
      - id: UCT.FollowSth
        name: FollowSth
      - name: .
      - id: UCT.FollowSth.FollowTarget
        name: FollowTarget
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.FollowSth
        name: FollowSth
      - name: .
      - id: UCT.FollowSth.FollowTarget
        name: FollowTarget
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.FollowSth
        name: FollowSth
      - name: .
      - id: UCT.FollowSth.FollowTarget
        name: FollowTarget
    isDefinition: true
    parent: UCT
    commentId: T:UCT.FollowSth.FollowTarget
  Global.GameObject:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        isExternal: true
      VB:
      - id: Global.GameObject
        name: GameObject
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        isExternal: true
      VB:
      - id: Global.GameObject
        name: GameObject
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        isExternal: true
      VB:
      - id: Global.GameObject
        name: GameObject
        isExternal: true
    isDefinition: true
  Global.Vector3:
    name:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      VB:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      VB:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      VB:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
    isDefinition: true
  UCT.FollowSth:
    name:
      CSharp:
      - id: UCT.FollowSth
        name: FollowSth
      VB:
      - id: UCT.FollowSth
        name: FollowSth
    nameWithType:
      CSharp:
      - id: UCT.FollowSth
        name: FollowSth
      VB:
      - id: UCT.FollowSth
        name: FollowSth
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.FollowSth
        name: FollowSth
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.FollowSth
        name: FollowSth
    isDefinition: true
    commentId: T:UCT.FollowSth
  Global.Vector2:
    name:
      CSharp:
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      VB:
      - id: Global.Vector2
        name: Vector2
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      VB:
      - id: Global.Vector2
        name: Vector2
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      VB:
      - id: Global.Vector2
        name: Vector2
        isExternal: true
    isDefinition: true
  UCT.ChangeClipWalk:
    name:
      CSharp:
      - id: UCT.ChangeClipWalk
        name: ChangeClipWalk
      VB:
      - id: UCT.ChangeClipWalk
        name: ChangeClipWalk
    nameWithType:
      CSharp:
      - id: UCT.ChangeClipWalk
        name: ChangeClipWalk
      VB:
      - id: UCT.ChangeClipWalk
        name: ChangeClipWalk
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.ChangeClipWalk
        name: ChangeClipWalk
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.ChangeClipWalk
        name: ChangeClipWalk
    isDefinition: true
    commentId: T:UCT.ChangeClipWalk
  UCT.MetronomeController:
    name:
      CSharp:
      - id: UCT.MetronomeController
        name: MetronomeController
      VB:
      - id: UCT.MetronomeController
        name: MetronomeController
    nameWithType:
      CSharp:
      - id: UCT.MetronomeController
        name: MetronomeController
      VB:
      - id: UCT.MetronomeController
        name: MetronomeController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.MetronomeController
        name: MetronomeController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.MetronomeController
        name: MetronomeController
    isDefinition: true
    commentId: T:UCT.MetronomeController
  Global.Color:
    name:
      CSharp:
      - id: Global.Color
        name: Color
        isExternal: true
      VB:
      - id: Global.Color
        name: Color
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Color
        name: Color
        isExternal: true
      VB:
      - id: Global.Color
        name: Color
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Color
        name: Color
        isExternal: true
      VB:
      - id: Global.Color
        name: Color
        isExternal: true
    isDefinition: true
  UCT.ColorEx.WhiteClear*:
    name:
      CSharp:
      - id: UCT.ColorEx.WhiteClear*
        name: WhiteClear
      VB:
      - id: UCT.ColorEx.WhiteClear*
        name: WhiteClear
    nameWithType:
      CSharp:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.WhiteClear*
        name: WhiteClear
      VB:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.WhiteClear*
        name: WhiteClear
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.WhiteClear*
        name: WhiteClear
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.WhiteClear*
        name: WhiteClear
    isDefinition: true
    commentId: Overload:UCT.ColorEx.WhiteClear
  UCT.ColorEx.RedClear*:
    name:
      CSharp:
      - id: UCT.ColorEx.RedClear*
        name: RedClear
      VB:
      - id: UCT.ColorEx.RedClear*
        name: RedClear
    nameWithType:
      CSharp:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.RedClear*
        name: RedClear
      VB:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.RedClear*
        name: RedClear
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.RedClear*
        name: RedClear
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.RedClear*
        name: RedClear
    isDefinition: true
    commentId: Overload:UCT.ColorEx.RedClear
  UCT.ColorEx.HalfAlpha*:
    name:
      CSharp:
      - id: UCT.ColorEx.HalfAlpha*
        name: HalfAlpha
      VB:
      - id: UCT.ColorEx.HalfAlpha*
        name: HalfAlpha
    nameWithType:
      CSharp:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.HalfAlpha*
        name: HalfAlpha
      VB:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.HalfAlpha*
        name: HalfAlpha
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.HalfAlpha*
        name: HalfAlpha
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.HalfAlpha*
        name: HalfAlpha
    isDefinition: true
    commentId: Overload:UCT.ColorEx.HalfAlpha
  UCT.ColorEx.Purple*:
    name:
      CSharp:
      - id: UCT.ColorEx.Purple*
        name: Purple
      VB:
      - id: UCT.ColorEx.Purple*
        name: Purple
    nameWithType:
      CSharp:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Purple*
        name: Purple
      VB:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Purple*
        name: Purple
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Purple*
        name: Purple
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Purple*
        name: Purple
    isDefinition: true
    commentId: Overload:UCT.ColorEx.Purple
  UCT.ColorEx.Magenta*:
    name:
      CSharp:
      - id: UCT.ColorEx.Magenta*
        name: Magenta
      VB:
      - id: UCT.ColorEx.Magenta*
        name: Magenta
    nameWithType:
      CSharp:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Magenta*
        name: Magenta
      VB:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Magenta*
        name: Magenta
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Magenta*
        name: Magenta
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Magenta*
        name: Magenta
    isDefinition: true
    commentId: Overload:UCT.ColorEx.Magenta
  UCT.ColorEx.Orange*:
    name:
      CSharp:
      - id: UCT.ColorEx.Orange*
        name: Orange
      VB:
      - id: UCT.ColorEx.Orange*
        name: Orange
    nameWithType:
      CSharp:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Orange*
        name: Orange
      VB:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Orange*
        name: Orange
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Orange*
        name: Orange
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Orange*
        name: Orange
    isDefinition: true
    commentId: Overload:UCT.ColorEx.Orange
  UCT.ColorEx.Gold*:
    name:
      CSharp:
      - id: UCT.ColorEx.Gold*
        name: Gold
      VB:
      - id: UCT.ColorEx.Gold*
        name: Gold
    nameWithType:
      CSharp:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Gold*
        name: Gold
      VB:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Gold*
        name: Gold
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Gold*
        name: Gold
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Gold*
        name: Gold
    isDefinition: true
    commentId: Overload:UCT.ColorEx.Gold
  UCT.ColorEx.Teal*:
    name:
      CSharp:
      - id: UCT.ColorEx.Teal*
        name: Teal
      VB:
      - id: UCT.ColorEx.Teal*
        name: Teal
    nameWithType:
      CSharp:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Teal*
        name: Teal
      VB:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Teal*
        name: Teal
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Teal*
        name: Teal
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Teal*
        name: Teal
    isDefinition: true
    commentId: Overload:UCT.ColorEx.Teal
  UCT.ColorEx.Olive*:
    name:
      CSharp:
      - id: UCT.ColorEx.Olive*
        name: Olive
      VB:
      - id: UCT.ColorEx.Olive*
        name: Olive
    nameWithType:
      CSharp:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Olive*
        name: Olive
      VB:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Olive*
        name: Olive
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Olive*
        name: Olive
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Olive*
        name: Olive
    isDefinition: true
    commentId: Overload:UCT.ColorEx.Olive
  UCT.ColorEx.Navy*:
    name:
      CSharp:
      - id: UCT.ColorEx.Navy*
        name: Navy
      VB:
      - id: UCT.ColorEx.Navy*
        name: Navy
    nameWithType:
      CSharp:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Navy*
        name: Navy
      VB:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Navy*
        name: Navy
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Navy*
        name: Navy
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Navy*
        name: Navy
    isDefinition: true
    commentId: Overload:UCT.ColorEx.Navy
  UCT.ColorEx.Maroon*:
    name:
      CSharp:
      - id: UCT.ColorEx.Maroon*
        name: Maroon
      VB:
      - id: UCT.ColorEx.Maroon*
        name: Maroon
    nameWithType:
      CSharp:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Maroon*
        name: Maroon
      VB:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Maroon*
        name: Maroon
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Maroon*
        name: Maroon
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Maroon*
        name: Maroon
    isDefinition: true
    commentId: Overload:UCT.ColorEx.Maroon
  UCT.ColorEx.Pink*:
    name:
      CSharp:
      - id: UCT.ColorEx.Pink*
        name: Pink
      VB:
      - id: UCT.ColorEx.Pink*
        name: Pink
    nameWithType:
      CSharp:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Pink*
        name: Pink
      VB:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Pink*
        name: Pink
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Pink*
        name: Pink
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.Pink*
        name: Pink
    isDefinition: true
    commentId: Overload:UCT.ColorEx.Pink
  UCT.ColorEx.LightBlue*:
    name:
      CSharp:
      - id: UCT.ColorEx.LightBlue*
        name: LightBlue
      VB:
      - id: UCT.ColorEx.LightBlue*
        name: LightBlue
    nameWithType:
      CSharp:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.LightBlue*
        name: LightBlue
      VB:
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.LightBlue*
        name: LightBlue
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.LightBlue*
        name: LightBlue
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.ColorEx*
        name: ColorEx
      - name: .
      - id: UCT.ColorEx.LightBlue*
        name: LightBlue
    isDefinition: true
    commentId: Overload:UCT.ColorEx.LightBlue
  UCT.ColorEx:
    name:
      CSharp:
      - id: UCT.ColorEx
        name: ColorEx
      VB:
      - id: UCT.ColorEx
        name: ColorEx
    nameWithType:
      CSharp:
      - id: UCT.ColorEx
        name: ColorEx
      VB:
      - id: UCT.ColorEx
        name: ColorEx
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.ColorEx
        name: ColorEx
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.ColorEx
        name: ColorEx
    isDefinition: true
    commentId: T:UCT.ColorEx
  UCT.Debug.Log*:
    name:
      CSharp:
      - id: UCT.Debug.Log*
        name: Log
      VB:
      - id: UCT.Debug.Log*
        name: Log
    nameWithType:
      CSharp:
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.Log*
        name: Log
      VB:
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.Log*
        name: Log
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.Log*
        name: Log
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.Log*
        name: Log
    isDefinition: true
    commentId: Overload:UCT.Debug.Log
  UCT.Debug.LogWarning*:
    name:
      CSharp:
      - id: UCT.Debug.LogWarning*
        name: LogWarning
      VB:
      - id: UCT.Debug.LogWarning*
        name: LogWarning
    nameWithType:
      CSharp:
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.LogWarning*
        name: LogWarning
      VB:
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.LogWarning*
        name: LogWarning
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.LogWarning*
        name: LogWarning
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.LogWarning*
        name: LogWarning
    isDefinition: true
    commentId: Overload:UCT.Debug.LogWarning
  UCT.Debug.LogError*:
    name:
      CSharp:
      - id: UCT.Debug.LogError*
        name: LogError
      VB:
      - id: UCT.Debug.LogError*
        name: LogError
    nameWithType:
      CSharp:
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.LogError*
        name: LogError
      VB:
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.LogError*
        name: LogError
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.LogError*
        name: LogError
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.LogError*
        name: LogError
    isDefinition: true
    commentId: Overload:UCT.Debug.LogError
  UCT.Debug.DrawRay*:
    name:
      CSharp:
      - id: UCT.Debug.DrawRay*
        name: DrawRay
      VB:
      - id: UCT.Debug.DrawRay*
        name: DrawRay
    nameWithType:
      CSharp:
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.DrawRay*
        name: DrawRay
      VB:
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.DrawRay*
        name: DrawRay
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.DrawRay*
        name: DrawRay
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Debug*
        name: Debug
      - name: .
      - id: UCT.Debug.DrawRay*
        name: DrawRay
    isDefinition: true
    commentId: Overload:UCT.Debug.DrawRay
  UCT.Debug:
    name:
      CSharp:
      - id: UCT.Debug
        name: Debug
      VB:
      - id: UCT.Debug
        name: Debug
    nameWithType:
      CSharp:
      - id: UCT.Debug
        name: Debug
      VB:
      - id: UCT.Debug
        name: Debug
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Debug
        name: Debug
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Debug
        name: Debug
    isDefinition: true
    commentId: T:UCT.Debug
  UCT.Service.TextMeshProRichTextChecker.ContainsRichText*:
    name:
      CSharp:
      - id: UCT.Service.TextMeshProRichTextChecker.ContainsRichText*
        name: ContainsRichText
      VB:
      - id: UCT.Service.TextMeshProRichTextChecker.ContainsRichText*
        name: ContainsRichText
    nameWithType:
      CSharp:
      - id: UCT.Service.TextMeshProRichTextChecker*
        name: TextMeshProRichTextChecker
      - name: .
      - id: UCT.Service.TextMeshProRichTextChecker.ContainsRichText*
        name: ContainsRichText
      VB:
      - id: UCT.Service.TextMeshProRichTextChecker*
        name: TextMeshProRichTextChecker
      - name: .
      - id: UCT.Service.TextMeshProRichTextChecker.ContainsRichText*
        name: ContainsRichText
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextMeshProRichTextChecker*
        name: TextMeshProRichTextChecker
      - name: .
      - id: UCT.Service.TextMeshProRichTextChecker.ContainsRichText*
        name: ContainsRichText
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextMeshProRichTextChecker*
        name: TextMeshProRichTextChecker
      - name: .
      - id: UCT.Service.TextMeshProRichTextChecker.ContainsRichText*
        name: ContainsRichText
    isDefinition: true
    commentId: Overload:UCT.Service.TextMeshProRichTextChecker.ContainsRichText
  UCT.Service.TextMeshProRichTextChecker:
    name:
      CSharp:
      - id: UCT.Service.TextMeshProRichTextChecker
        name: TextMeshProRichTextChecker
      VB:
      - id: UCT.Service.TextMeshProRichTextChecker
        name: TextMeshProRichTextChecker
    nameWithType:
      CSharp:
      - id: UCT.Service.TextMeshProRichTextChecker
        name: TextMeshProRichTextChecker
      VB:
      - id: UCT.Service.TextMeshProRichTextChecker
        name: TextMeshProRichTextChecker
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.TextMeshProRichTextChecker
        name: TextMeshProRichTextChecker
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.TextMeshProRichTextChecker
        name: TextMeshProRichTextChecker
    isDefinition: true
    commentId: T:UCT.Service.TextMeshProRichTextChecker
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  UCT.Service.ListManipulationService.FindFirstNullOrEmptyIndex*:
    name:
      CSharp:
      - id: UCT.Service.ListManipulationService.FindFirstNullOrEmptyIndex*
        name: FindFirstNullOrEmptyIndex
      VB:
      - id: UCT.Service.ListManipulationService.FindFirstNullOrEmptyIndex*
        name: FindFirstNullOrEmptyIndex
    nameWithType:
      CSharp:
      - id: UCT.Service.ListManipulationService*
        name: ListManipulationService
      - name: .
      - id: UCT.Service.ListManipulationService.FindFirstNullOrEmptyIndex*
        name: FindFirstNullOrEmptyIndex
      VB:
      - id: UCT.Service.ListManipulationService*
        name: ListManipulationService
      - name: .
      - id: UCT.Service.ListManipulationService.FindFirstNullOrEmptyIndex*
        name: FindFirstNullOrEmptyIndex
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.ListManipulationService*
        name: ListManipulationService
      - name: .
      - id: UCT.Service.ListManipulationService.FindFirstNullOrEmptyIndex*
        name: FindFirstNullOrEmptyIndex
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.ListManipulationService*
        name: ListManipulationService
      - name: .
      - id: UCT.Service.ListManipulationService.FindFirstNullOrEmptyIndex*
        name: FindFirstNullOrEmptyIndex
    isDefinition: true
    commentId: Overload:UCT.Service.ListManipulationService.FindFirstNullOrEmptyIndex
  UCT.Service.ListManipulationService.MoveNullOrEmptyToEnd*:
    name:
      CSharp:
      - id: UCT.Service.ListManipulationService.MoveNullOrEmptyToEnd*
        name: MoveNullOrEmptyToEnd
      VB:
      - id: UCT.Service.ListManipulationService.MoveNullOrEmptyToEnd*
        name: MoveNullOrEmptyToEnd
    nameWithType:
      CSharp:
      - id: UCT.Service.ListManipulationService*
        name: ListManipulationService
      - name: .
      - id: UCT.Service.ListManipulationService.MoveNullOrEmptyToEnd*
        name: MoveNullOrEmptyToEnd
      VB:
      - id: UCT.Service.ListManipulationService*
        name: ListManipulationService
      - name: .
      - id: UCT.Service.ListManipulationService.MoveNullOrEmptyToEnd*
        name: MoveNullOrEmptyToEnd
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.ListManipulationService*
        name: ListManipulationService
      - name: .
      - id: UCT.Service.ListManipulationService.MoveNullOrEmptyToEnd*
        name: MoveNullOrEmptyToEnd
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.ListManipulationService*
        name: ListManipulationService
      - name: .
      - id: UCT.Service.ListManipulationService.MoveNullOrEmptyToEnd*
        name: MoveNullOrEmptyToEnd
    isDefinition: true
    commentId: Overload:UCT.Service.ListManipulationService.MoveNullOrEmptyToEnd
  UCT.Service.ListManipulationService.CheckAllDataNamesInItemList*:
    name:
      CSharp:
      - id: UCT.Service.ListManipulationService.CheckAllDataNamesInItemList*
        name: CheckAllDataNamesInItemList
      VB:
      - id: UCT.Service.ListManipulationService.CheckAllDataNamesInItemList*
        name: CheckAllDataNamesInItemList
    nameWithType:
      CSharp:
      - id: UCT.Service.ListManipulationService*
        name: ListManipulationService
      - name: .
      - id: UCT.Service.ListManipulationService.CheckAllDataNamesInItemList*
        name: CheckAllDataNamesInItemList
      VB:
      - id: UCT.Service.ListManipulationService*
        name: ListManipulationService
      - name: .
      - id: UCT.Service.ListManipulationService.CheckAllDataNamesInItemList*
        name: CheckAllDataNamesInItemList
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.ListManipulationService*
        name: ListManipulationService
      - name: .
      - id: UCT.Service.ListManipulationService.CheckAllDataNamesInItemList*
        name: CheckAllDataNamesInItemList
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.ListManipulationService*
        name: ListManipulationService
      - name: .
      - id: UCT.Service.ListManipulationService.CheckAllDataNamesInItemList*
        name: CheckAllDataNamesInItemList
    isDefinition: true
    commentId: Overload:UCT.Service.ListManipulationService.CheckAllDataNamesInItemList
  UCT.Service.ListManipulationService:
    name:
      CSharp:
      - id: UCT.Service.ListManipulationService
        name: ListManipulationService
      VB:
      - id: UCT.Service.ListManipulationService
        name: ListManipulationService
    nameWithType:
      CSharp:
      - id: UCT.Service.ListManipulationService
        name: ListManipulationService
      VB:
      - id: UCT.Service.ListManipulationService
        name: ListManipulationService
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.ListManipulationService
        name: ListManipulationService
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.ListManipulationService
        name: ListManipulationService
    isDefinition: true
    commentId: T:UCT.Service.ListManipulationService
  Global.Story:
    name:
      CSharp:
      - id: Global.Story
        name: Story
        isExternal: true
      VB:
      - id: Global.Story
        name: Story
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Story
        name: Story
        isExternal: true
      VB:
      - id: Global.Story
        name: Story
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Story
        name: Story
        isExternal: true
      VB:
      - id: Global.Story
        name: Story
        isExternal: true
    isDefinition: true
  UCT.Service.InkService.ReadInkJsonFileFromLocalPath*:
    name:
      CSharp:
      - id: UCT.Service.InkService.ReadInkJsonFileFromLocalPath*
        name: ReadInkJsonFileFromLocalPath
      VB:
      - id: UCT.Service.InkService.ReadInkJsonFileFromLocalPath*
        name: ReadInkJsonFileFromLocalPath
    nameWithType:
      CSharp:
      - id: UCT.Service.InkService*
        name: InkService
      - name: .
      - id: UCT.Service.InkService.ReadInkJsonFileFromLocalPath*
        name: ReadInkJsonFileFromLocalPath
      VB:
      - id: UCT.Service.InkService*
        name: InkService
      - name: .
      - id: UCT.Service.InkService.ReadInkJsonFileFromLocalPath*
        name: ReadInkJsonFileFromLocalPath
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.InkService*
        name: InkService
      - name: .
      - id: UCT.Service.InkService.ReadInkJsonFileFromLocalPath*
        name: ReadInkJsonFileFromLocalPath
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.InkService*
        name: InkService
      - name: .
      - id: UCT.Service.InkService.ReadInkJsonFileFromLocalPath*
        name: ReadInkJsonFileFromLocalPath
    isDefinition: true
    commentId: Overload:UCT.Service.InkService.ReadInkJsonFileFromLocalPath
  UCT.Service.InkService.ReadInkJsonFileFromResources*:
    name:
      CSharp:
      - id: UCT.Service.InkService.ReadInkJsonFileFromResources*
        name: ReadInkJsonFileFromResources
      VB:
      - id: UCT.Service.InkService.ReadInkJsonFileFromResources*
        name: ReadInkJsonFileFromResources
    nameWithType:
      CSharp:
      - id: UCT.Service.InkService*
        name: InkService
      - name: .
      - id: UCT.Service.InkService.ReadInkJsonFileFromResources*
        name: ReadInkJsonFileFromResources
      VB:
      - id: UCT.Service.InkService*
        name: InkService
      - name: .
      - id: UCT.Service.InkService.ReadInkJsonFileFromResources*
        name: ReadInkJsonFileFromResources
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.InkService*
        name: InkService
      - name: .
      - id: UCT.Service.InkService.ReadInkJsonFileFromResources*
        name: ReadInkJsonFileFromResources
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.InkService*
        name: InkService
      - name: .
      - id: UCT.Service.InkService.ReadInkJsonFileFromResources*
        name: ReadInkJsonFileFromResources
    isDefinition: true
    commentId: Overload:UCT.Service.InkService.ReadInkJsonFileFromResources
  UCT.Service.InkService:
    name:
      CSharp:
      - id: UCT.Service.InkService
        name: InkService
      VB:
      - id: UCT.Service.InkService
        name: InkService
    nameWithType:
      CSharp:
      - id: UCT.Service.InkService
        name: InkService
      VB:
      - id: UCT.Service.InkService
        name: InkService
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.InkService
        name: InkService
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.InkService
        name: InkService
    isDefinition: true
    commentId: T:UCT.Service.InkService
  Global.GameItem:
    name:
      CSharp:
      - id: Global.GameItem
        name: GameItem
        isExternal: true
      VB:
      - id: Global.GameItem
        name: GameItem
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.GameItem
        name: GameItem
        isExternal: true
      VB:
      - id: Global.GameItem
        name: GameItem
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.GameItem
        name: GameItem
        isExternal: true
      VB:
      - id: Global.GameItem
        name: GameItem
        isExternal: true
    isDefinition: true
    commentId: '!:Global.GameItem'
  UCT.Service.DataHandlerService.GetItemFormDataName*:
    name:
      CSharp:
      - id: UCT.Service.DataHandlerService.GetItemFormDataName*
        name: GetItemFormDataName
      VB:
      - id: UCT.Service.DataHandlerService.GetItemFormDataName*
        name: GetItemFormDataName
    nameWithType:
      CSharp:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.GetItemFormDataName*
        name: GetItemFormDataName
      VB:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.GetItemFormDataName*
        name: GetItemFormDataName
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.GetItemFormDataName*
        name: GetItemFormDataName
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.GetItemFormDataName*
        name: GetItemFormDataName
    isDefinition: true
    commentId: Overload:UCT.Service.DataHandlerService.GetItemFormDataName
  UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackName*:
    name:
      CSharp:
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackName*
        name: ItemDataNameGetLanguagePackName
      VB:
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackName*
        name: ItemDataNameGetLanguagePackName
    nameWithType:
      CSharp:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackName*
        name: ItemDataNameGetLanguagePackName
      VB:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackName*
        name: ItemDataNameGetLanguagePackName
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackName*
        name: ItemDataNameGetLanguagePackName
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackName*
        name: ItemDataNameGetLanguagePackName
    isDefinition: true
    commentId: Overload:UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackName
  UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackUseText*:
    name:
      CSharp:
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackUseText*
        name: ItemDataNameGetLanguagePackUseText
      VB:
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackUseText*
        name: ItemDataNameGetLanguagePackUseText
    nameWithType:
      CSharp:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackUseText*
        name: ItemDataNameGetLanguagePackUseText
      VB:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackUseText*
        name: ItemDataNameGetLanguagePackUseText
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackUseText*
        name: ItemDataNameGetLanguagePackUseText
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackUseText*
        name: ItemDataNameGetLanguagePackUseText
    isDefinition: true
    commentId: Overload:UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackUseText
  UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackInfoText*:
    name:
      CSharp:
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackInfoText*
        name: ItemDataNameGetLanguagePackInfoText
      VB:
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackInfoText*
        name: ItemDataNameGetLanguagePackInfoText
    nameWithType:
      CSharp:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackInfoText*
        name: ItemDataNameGetLanguagePackInfoText
      VB:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackInfoText*
        name: ItemDataNameGetLanguagePackInfoText
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackInfoText*
        name: ItemDataNameGetLanguagePackInfoText
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackInfoText*
        name: ItemDataNameGetLanguagePackInfoText
    isDefinition: true
    commentId: Overload:UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackInfoText
  UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackDropText*:
    name:
      CSharp:
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackDropText*
        name: ItemDataNameGetLanguagePackDropText
      VB:
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackDropText*
        name: ItemDataNameGetLanguagePackDropText
    nameWithType:
      CSharp:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackDropText*
        name: ItemDataNameGetLanguagePackDropText
      VB:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackDropText*
        name: ItemDataNameGetLanguagePackDropText
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackDropText*
        name: ItemDataNameGetLanguagePackDropText
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackDropText*
        name: ItemDataNameGetLanguagePackDropText
    isDefinition: true
    commentId: Overload:UCT.Service.DataHandlerService.ItemDataNameGetLanguagePackDropText
  UCT.Service.DataHandlerService.LoadItemData*:
    name:
      CSharp:
      - id: UCT.Service.DataHandlerService.LoadItemData*
        name: LoadItemData
      VB:
      - id: UCT.Service.DataHandlerService.LoadItemData*
        name: LoadItemData
    nameWithType:
      CSharp:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.LoadItemData*
        name: LoadItemData
      VB:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.LoadItemData*
        name: LoadItemData
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.LoadItemData*
        name: LoadItemData
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.LoadItemData*
        name: LoadItemData
    isDefinition: true
    commentId: Overload:UCT.Service.DataHandlerService.LoadItemData
  UCT.Service.DataHandlerService.ChangeItemData*:
    name:
      CSharp:
      - id: UCT.Service.DataHandlerService.ChangeItemData*
        name: ChangeItemData
      VB:
      - id: UCT.Service.DataHandlerService.ChangeItemData*
        name: ChangeItemData
    nameWithType:
      CSharp:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ChangeItemData*
        name: ChangeItemData
      VB:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ChangeItemData*
        name: ChangeItemData
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ChangeItemData*
        name: ChangeItemData
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.ChangeItemData*
        name: ChangeItemData
    isDefinition: true
    commentId: Overload:UCT.Service.DataHandlerService.ChangeItemData
  UCT.Service.DataHandlerService.GetLanguageInsideId*:
    name:
      CSharp:
      - id: UCT.Service.DataHandlerService.GetLanguageInsideId*
        name: GetLanguageInsideId
      VB:
      - id: UCT.Service.DataHandlerService.GetLanguageInsideId*
        name: GetLanguageInsideId
    nameWithType:
      CSharp:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.GetLanguageInsideId*
        name: GetLanguageInsideId
      VB:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.GetLanguageInsideId*
        name: GetLanguageInsideId
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.GetLanguageInsideId*
        name: GetLanguageInsideId
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.GetLanguageInsideId*
        name: GetLanguageInsideId
    isDefinition: true
    commentId: Overload:UCT.Service.DataHandlerService.GetLanguageInsideId
  UCT.Service.DataHandlerService.LanguagePackDetection*:
    name:
      CSharp:
      - id: UCT.Service.DataHandlerService.LanguagePackDetection*
        name: LanguagePackDetection
      VB:
      - id: UCT.Service.DataHandlerService.LanguagePackDetection*
        name: LanguagePackDetection
    nameWithType:
      CSharp:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.LanguagePackDetection*
        name: LanguagePackDetection
      VB:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.LanguagePackDetection*
        name: LanguagePackDetection
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.LanguagePackDetection*
        name: LanguagePackDetection
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.LanguagePackDetection*
        name: LanguagePackDetection
    isDefinition: true
    commentId: Overload:UCT.Service.DataHandlerService.LanguagePackDetection
  UCT.Service.DataHandlerService.LoadLanguageData*:
    name:
      CSharp:
      - id: UCT.Service.DataHandlerService.LoadLanguageData*
        name: LoadLanguageData
      VB:
      - id: UCT.Service.DataHandlerService.LoadLanguageData*
        name: LoadLanguageData
    nameWithType:
      CSharp:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.LoadLanguageData*
        name: LoadLanguageData
      VB:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.LoadLanguageData*
        name: LoadLanguageData
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.LoadLanguageData*
        name: LoadLanguageData
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.LoadLanguageData*
        name: LoadLanguageData
    isDefinition: true
    commentId: Overload:UCT.Service.DataHandlerService.LoadLanguageData
  UCT.Service.DataHandlerService.InitializationLanguagePackFullWidth*:
    name:
      CSharp:
      - id: UCT.Service.DataHandlerService.InitializationLanguagePackFullWidth*
        name: InitializationLanguagePackFullWidth
      VB:
      - id: UCT.Service.DataHandlerService.InitializationLanguagePackFullWidth*
        name: InitializationLanguagePackFullWidth
    nameWithType:
      CSharp:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.InitializationLanguagePackFullWidth*
        name: InitializationLanguagePackFullWidth
      VB:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.InitializationLanguagePackFullWidth*
        name: InitializationLanguagePackFullWidth
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.InitializationLanguagePackFullWidth*
        name: InitializationLanguagePackFullWidth
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.InitializationLanguagePackFullWidth*
        name: InitializationLanguagePackFullWidth
    isDefinition: true
    commentId: Overload:UCT.Service.DataHandlerService.InitializationLanguagePackFullWidth
  Global.PlayerControl:
    name:
      CSharp:
      - id: Global.PlayerControl
        name: PlayerControl
        isExternal: true
      VB:
      - id: Global.PlayerControl
        name: PlayerControl
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.PlayerControl
        name: PlayerControl
        isExternal: true
      VB:
      - id: Global.PlayerControl
        name: PlayerControl
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.PlayerControl
        name: PlayerControl
        isExternal: true
      VB:
      - id: Global.PlayerControl
        name: PlayerControl
        isExternal: true
    isDefinition: true
  UCT.Service.DataHandlerService.SetPlayerControl*:
    name:
      CSharp:
      - id: UCT.Service.DataHandlerService.SetPlayerControl*
        name: SetPlayerControl
      VB:
      - id: UCT.Service.DataHandlerService.SetPlayerControl*
        name: SetPlayerControl
    nameWithType:
      CSharp:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.SetPlayerControl*
        name: SetPlayerControl
      VB:
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.SetPlayerControl*
        name: SetPlayerControl
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.SetPlayerControl*
        name: SetPlayerControl
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService*
        name: DataHandlerService
      - name: .
      - id: UCT.Service.DataHandlerService.SetPlayerControl*
        name: SetPlayerControl
    isDefinition: true
    commentId: Overload:UCT.Service.DataHandlerService.SetPlayerControl
  UCT.Service.DataHandlerService:
    name:
      CSharp:
      - id: UCT.Service.DataHandlerService
        name: DataHandlerService
      VB:
      - id: UCT.Service.DataHandlerService
        name: DataHandlerService
    nameWithType:
      CSharp:
      - id: UCT.Service.DataHandlerService
        name: DataHandlerService
      VB:
      - id: UCT.Service.DataHandlerService
        name: DataHandlerService
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService
        name: DataHandlerService
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.DataHandlerService
        name: DataHandlerService
    isDefinition: true
    commentId: T:UCT.Service.DataHandlerService
  UCT.Service.TextProcessingService.SplitStringToListWithDelimiter*:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService.SplitStringToListWithDelimiter*
        name: SplitStringToListWithDelimiter
      VB:
      - id: UCT.Service.TextProcessingService.SplitStringToListWithDelimiter*
        name: SplitStringToListWithDelimiter
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.SplitStringToListWithDelimiter*
        name: SplitStringToListWithDelimiter
      VB:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.SplitStringToListWithDelimiter*
        name: SplitStringToListWithDelimiter
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.SplitStringToListWithDelimiter*
        name: SplitStringToListWithDelimiter
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.SplitStringToListWithDelimiter*
        name: SplitStringToListWithDelimiter
    isDefinition: true
    commentId: Overload:UCT.Service.TextProcessingService.SplitStringToListWithDelimiter
  System.Char:
    name:
      CSharp:
      - id: System.Char
        name: char
        isExternal: true
      VB:
      - id: System.Char
        name: Char
        isExternal: true
    nameWithType:
      CSharp:
      - id: System.Char
        name: char
        isExternal: true
      VB:
      - id: System.Char
        name: Char
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System.Char
        name: char
        isExternal: true
      VB:
      - id: System.Char
        name: Char
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Char
  UCT.Service.TextProcessingService.BatchGetFirstChildStringByPrefix*:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService.BatchGetFirstChildStringByPrefix*
        name: BatchGetFirstChildStringByPrefix
      VB:
      - id: UCT.Service.TextProcessingService.BatchGetFirstChildStringByPrefix*
        name: BatchGetFirstChildStringByPrefix
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.BatchGetFirstChildStringByPrefix*
        name: BatchGetFirstChildStringByPrefix
      VB:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.BatchGetFirstChildStringByPrefix*
        name: BatchGetFirstChildStringByPrefix
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.BatchGetFirstChildStringByPrefix*
        name: BatchGetFirstChildStringByPrefix
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.BatchGetFirstChildStringByPrefix*
        name: BatchGetFirstChildStringByPrefix
    isDefinition: true
    commentId: Overload:UCT.Service.TextProcessingService.BatchGetFirstChildStringByPrefix
  UCT.Service.TextProcessingService.GetFirstChildStringByPrefix*:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService.GetFirstChildStringByPrefix*
        name: GetFirstChildStringByPrefix
      VB:
      - id: UCT.Service.TextProcessingService.GetFirstChildStringByPrefix*
        name: GetFirstChildStringByPrefix
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.GetFirstChildStringByPrefix*
        name: GetFirstChildStringByPrefix
      VB:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.GetFirstChildStringByPrefix*
        name: GetFirstChildStringByPrefix
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.GetFirstChildStringByPrefix*
        name: GetFirstChildStringByPrefix
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.GetFirstChildStringByPrefix*
        name: GetFirstChildStringByPrefix
    isDefinition: true
    commentId: Overload:UCT.Service.TextProcessingService.GetFirstChildStringByPrefix
  UCT.Service.TextProcessingService.GetAllChildStringsByPrefix*:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService.GetAllChildStringsByPrefix*
        name: GetAllChildStringsByPrefix
      VB:
      - id: UCT.Service.TextProcessingService.GetAllChildStringsByPrefix*
        name: GetAllChildStringsByPrefix
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.GetAllChildStringsByPrefix*
        name: GetAllChildStringsByPrefix
      VB:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.GetAllChildStringsByPrefix*
        name: GetAllChildStringsByPrefix
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.GetAllChildStringsByPrefix*
        name: GetAllChildStringsByPrefix
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.GetAllChildStringsByPrefix*
        name: GetAllChildStringsByPrefix
    isDefinition: true
    commentId: Overload:UCT.Service.TextProcessingService.GetAllChildStringsByPrefix
  System.Collections.Generic.List{System.String}[]:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: '>'
      - name: '['
      - name: ']'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: '>'
      - name: '['
      - name: ']'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: '>'
      - name: '['
      - name: ']'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
      - name: (
      - name: )
    isDefinition: false
  UCT.Service.TextProcessingService.ClassifyStringsByPrefix*:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService.ClassifyStringsByPrefix*
        name: ClassifyStringsByPrefix
      VB:
      - id: UCT.Service.TextProcessingService.ClassifyStringsByPrefix*
        name: ClassifyStringsByPrefix
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.ClassifyStringsByPrefix*
        name: ClassifyStringsByPrefix
      VB:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.ClassifyStringsByPrefix*
        name: ClassifyStringsByPrefix
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.ClassifyStringsByPrefix*
        name: ClassifyStringsByPrefix
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.ClassifyStringsByPrefix*
        name: ClassifyStringsByPrefix
    isDefinition: true
    commentId: Overload:UCT.Service.TextProcessingService.ClassifyStringsByPrefix
  UCT.Service.TextProcessingService.FormatTimeToHoursMinutes*:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService.FormatTimeToHoursMinutes*
        name: FormatTimeToHoursMinutes
      VB:
      - id: UCT.Service.TextProcessingService.FormatTimeToHoursMinutes*
        name: FormatTimeToHoursMinutes
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.FormatTimeToHoursMinutes*
        name: FormatTimeToHoursMinutes
      VB:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.FormatTimeToHoursMinutes*
        name: FormatTimeToHoursMinutes
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.FormatTimeToHoursMinutes*
        name: FormatTimeToHoursMinutes
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.FormatTimeToHoursMinutes*
        name: FormatTimeToHoursMinutes
    isDefinition: true
    commentId: Overload:UCT.Service.TextProcessingService.FormatTimeToHoursMinutes
  UCT.Service.TextProcessingService.FormatTimeToMinutesSeconds*:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService.FormatTimeToMinutesSeconds*
        name: FormatTimeToMinutesSeconds
      VB:
      - id: UCT.Service.TextProcessingService.FormatTimeToMinutesSeconds*
        name: FormatTimeToMinutesSeconds
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.FormatTimeToMinutesSeconds*
        name: FormatTimeToMinutesSeconds
      VB:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.FormatTimeToMinutesSeconds*
        name: FormatTimeToMinutesSeconds
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.FormatTimeToMinutesSeconds*
        name: FormatTimeToMinutesSeconds
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.FormatTimeToMinutesSeconds*
        name: FormatTimeToMinutesSeconds
    isDefinition: true
    commentId: Overload:UCT.Service.TextProcessingService.FormatTimeToMinutesSeconds
  UCT.Service.TextProcessingService.RemoveSubstring*:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService.RemoveSubstring*
        name: RemoveSubstring
      VB:
      - id: UCT.Service.TextProcessingService.RemoveSubstring*
        name: RemoveSubstring
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RemoveSubstring*
        name: RemoveSubstring
      VB:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RemoveSubstring*
        name: RemoveSubstring
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RemoveSubstring*
        name: RemoveSubstring
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RemoveSubstring*
        name: RemoveSubstring
    isDefinition: true
    commentId: Overload:UCT.Service.TextProcessingService.RemoveSubstring
  UCT.Service.TextProcessingService.RandomString*:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService.RandomString*
        name: RandomString
      VB:
      - id: UCT.Service.TextProcessingService.RandomString*
        name: RandomString
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RandomString*
        name: RandomString
      VB:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RandomString*
        name: RandomString
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RandomString*
        name: RandomString
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RandomString*
        name: RandomString
    isDefinition: true
    commentId: Overload:UCT.Service.TextProcessingService.RandomString
  UCT.Service.TextProcessingService.StringColor*:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService.StringColor*
        name: StringColor
      VB:
      - id: UCT.Service.TextProcessingService.StringColor*
        name: StringColor
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.StringColor*
        name: StringColor
      VB:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.StringColor*
        name: StringColor
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.StringColor*
        name: StringColor
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.StringColor*
        name: StringColor
    isDefinition: true
    commentId: Overload:UCT.Service.TextProcessingService.StringColor
  UCT.Service.TextProcessingService.RandomStringColor*:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService.RandomStringColor*
        name: RandomStringColor
      VB:
      - id: UCT.Service.TextProcessingService.RandomStringColor*
        name: RandomStringColor
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RandomStringColor*
        name: RandomStringColor
      VB:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RandomStringColor*
        name: RandomStringColor
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RandomStringColor*
        name: RandomStringColor
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RandomStringColor*
        name: RandomStringColor
    isDefinition: true
    commentId: Overload:UCT.Service.TextProcessingService.RandomStringColor
  UCT.Service.TextProcessingService.ConvertLettersCase*:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService.ConvertLettersCase*
        name: ConvertLettersCase
      VB:
      - id: UCT.Service.TextProcessingService.ConvertLettersCase*
        name: ConvertLettersCase
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.ConvertLettersCase*
        name: ConvertLettersCase
      VB:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.ConvertLettersCase*
        name: ConvertLettersCase
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.ConvertLettersCase*
        name: ConvertLettersCase
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.ConvertLettersCase*
        name: ConvertLettersCase
    isDefinition: true
    commentId: Overload:UCT.Service.TextProcessingService.ConvertLettersCase
  UCT.Service.TextProcessingService.RealVector2ToStringVector2*:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService.RealVector2ToStringVector2*
        name: RealVector2ToStringVector2
      VB:
      - id: UCT.Service.TextProcessingService.RealVector2ToStringVector2*
        name: RealVector2ToStringVector2
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RealVector2ToStringVector2*
        name: RealVector2ToStringVector2
      VB:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RealVector2ToStringVector2*
        name: RealVector2ToStringVector2
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RealVector2ToStringVector2*
        name: RealVector2ToStringVector2
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.RealVector2ToStringVector2*
        name: RealVector2ToStringVector2
    isDefinition: true
    commentId: Overload:UCT.Service.TextProcessingService.RealVector2ToStringVector2
  UCT.Service.TextProcessingService.StringVector2ToRealVector2*:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService.StringVector2ToRealVector2*
        name: StringVector2ToRealVector2
      VB:
      - id: UCT.Service.TextProcessingService.StringVector2ToRealVector2*
        name: StringVector2ToRealVector2
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.StringVector2ToRealVector2*
        name: StringVector2ToRealVector2
      VB:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.StringVector2ToRealVector2*
        name: StringVector2ToRealVector2
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.StringVector2ToRealVector2*
        name: StringVector2ToRealVector2
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.StringVector2ToRealVector2*
        name: StringVector2ToRealVector2
    isDefinition: true
    commentId: Overload:UCT.Service.TextProcessingService.StringVector2ToRealVector2
  UCT.Service.TextProcessingService.ToFirstLetterUpperCase*:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService.ToFirstLetterUpperCase*
        name: ToFirstLetterUpperCase
      VB:
      - id: UCT.Service.TextProcessingService.ToFirstLetterUpperCase*
        name: ToFirstLetterUpperCase
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.ToFirstLetterUpperCase*
        name: ToFirstLetterUpperCase
      VB:
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.ToFirstLetterUpperCase*
        name: ToFirstLetterUpperCase
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.ToFirstLetterUpperCase*
        name: ToFirstLetterUpperCase
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService*
        name: TextProcessingService
      - name: .
      - id: UCT.Service.TextProcessingService.ToFirstLetterUpperCase*
        name: ToFirstLetterUpperCase
    isDefinition: true
    commentId: Overload:UCT.Service.TextProcessingService.ToFirstLetterUpperCase
  UCT.Service.TextProcessingService:
    name:
      CSharp:
      - id: UCT.Service.TextProcessingService
        name: TextProcessingService
      VB:
      - id: UCT.Service.TextProcessingService
        name: TextProcessingService
    nameWithType:
      CSharp:
      - id: UCT.Service.TextProcessingService
        name: TextProcessingService
      VB:
      - id: UCT.Service.TextProcessingService
        name: TextProcessingService
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService
        name: TextProcessingService
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.TextProcessingService
        name: TextProcessingService
    isDefinition: true
    commentId: T:UCT.Service.TextProcessingService
  System.Collections.Generic.List{Vector2}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Vector2}
  Global.Quaternion:
    name:
      CSharp:
      - id: Global.Quaternion
        name: Quaternion
        isExternal: true
      VB:
      - id: Global.Quaternion
        name: Quaternion
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Quaternion
        name: Quaternion
        isExternal: true
      VB:
      - id: Global.Quaternion
        name: Quaternion
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Quaternion
        name: Quaternion
        isExternal: true
      VB:
      - id: Global.Quaternion
        name: Quaternion
        isExternal: true
    isDefinition: true
  Global.Transform:
    name:
      CSharp:
      - id: Global.Transform
        name: Transform
        isExternal: true
      VB:
      - id: Global.Transform
        name: Transform
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Transform
        name: Transform
        isExternal: true
      VB:
      - id: Global.Transform
        name: Transform
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Transform
        name: Transform
        isExternal: true
      VB:
      - id: Global.Transform
        name: Transform
        isExternal: true
    isDefinition: true
  Global.LineRenderer:
    name:
      CSharp:
      - id: Global.LineRenderer
        name: LineRenderer
        isExternal: true
      VB:
      - id: Global.LineRenderer
        name: LineRenderer
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.LineRenderer
        name: LineRenderer
        isExternal: true
      VB:
      - id: Global.LineRenderer
        name: LineRenderer
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.LineRenderer
        name: LineRenderer
        isExternal: true
      VB:
      - id: Global.LineRenderer
        name: LineRenderer
        isExternal: true
    isDefinition: true
  Global.EdgeCollider2D:
    name:
      CSharp:
      - id: Global.EdgeCollider2D
        name: EdgeCollider2D
        isExternal: true
      VB:
      - id: Global.EdgeCollider2D
        name: EdgeCollider2D
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.EdgeCollider2D
        name: EdgeCollider2D
        isExternal: true
      VB:
      - id: Global.EdgeCollider2D
        name: EdgeCollider2D
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.EdgeCollider2D
        name: EdgeCollider2D
        isExternal: true
      VB:
      - id: Global.EdgeCollider2D
        name: EdgeCollider2D
        isExternal: true
    isDefinition: true
  Global.MeshFilter:
    name:
      CSharp:
      - id: Global.MeshFilter
        name: MeshFilter
        isExternal: true
      VB:
      - id: Global.MeshFilter
        name: MeshFilter
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.MeshFilter
        name: MeshFilter
        isExternal: true
      VB:
      - id: Global.MeshFilter
        name: MeshFilter
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.MeshFilter
        name: MeshFilter
        isExternal: true
      VB:
      - id: Global.MeshFilter
        name: MeshFilter
        isExternal: true
    isDefinition: true
  UCT.Service.BoxService.SummonBox*:
    name:
      CSharp:
      - id: UCT.Service.BoxService.SummonBox*
        name: SummonBox
      VB:
      - id: UCT.Service.BoxService.SummonBox*
        name: SummonBox
    nameWithType:
      CSharp:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.SummonBox*
        name: SummonBox
      VB:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.SummonBox*
        name: SummonBox
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.SummonBox*
        name: SummonBox
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.SummonBox*
        name: SummonBox
    isDefinition: true
    commentId: Overload:UCT.Service.BoxService.SummonBox
  UCT.Service.BoxService.GetRealPoints*:
    name:
      CSharp:
      - id: UCT.Service.BoxService.GetRealPoints*
        name: GetRealPoints
      VB:
      - id: UCT.Service.BoxService.GetRealPoints*
        name: GetRealPoints
    nameWithType:
      CSharp:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.GetRealPoints*
        name: GetRealPoints
      VB:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.GetRealPoints*
        name: GetRealPoints
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.GetRealPoints*
        name: GetRealPoints
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.GetRealPoints*
        name: GetRealPoints
    isDefinition: true
    commentId: Overload:UCT.Service.BoxService.GetRealPoints
  UCT.Service.BoxService.FindIntersections*:
    name:
      CSharp:
      - id: UCT.Service.BoxService.FindIntersections*
        name: FindIntersections
      VB:
      - id: UCT.Service.BoxService.FindIntersections*
        name: FindIntersections
    nameWithType:
      CSharp:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.FindIntersections*
        name: FindIntersections
      VB:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.FindIntersections*
        name: FindIntersections
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.FindIntersections*
        name: FindIntersections
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.FindIntersections*
        name: FindIntersections
    isDefinition: true
    commentId: Overload:UCT.Service.BoxService.FindIntersections
  UCT.Service.BoxService.ProcessPolygons*:
    name:
      CSharp:
      - id: UCT.Service.BoxService.ProcessPolygons*
        name: ProcessPolygons
      VB:
      - id: UCT.Service.BoxService.ProcessPolygons*
        name: ProcessPolygons
    nameWithType:
      CSharp:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.ProcessPolygons*
        name: ProcessPolygons
      VB:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.ProcessPolygons*
        name: ProcessPolygons
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.ProcessPolygons*
        name: ProcessPolygons
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.ProcessPolygons*
        name: ProcessPolygons
    isDefinition: true
    commentId: Overload:UCT.Service.BoxService.ProcessPolygons
  UCT.Service.BoxService.AddAndSubLists*:
    name:
      CSharp:
      - id: UCT.Service.BoxService.AddAndSubLists*
        name: AddAndSubLists
      VB:
      - id: UCT.Service.BoxService.AddAndSubLists*
        name: AddAndSubLists
    nameWithType:
      CSharp:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.AddAndSubLists*
        name: AddAndSubLists
      VB:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.AddAndSubLists*
        name: AddAndSubLists
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.AddAndSubLists*
        name: AddAndSubLists
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.AddAndSubLists*
        name: AddAndSubLists
    isDefinition: true
    commentId: Overload:UCT.Service.BoxService.AddAndSubLists
  System.Collections.Generic.List{{T}}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{``0}
  UCT.Service.BoxService.AddLists*:
    name:
      CSharp:
      - id: UCT.Service.BoxService.AddLists*
        name: AddLists
      VB:
      - id: UCT.Service.BoxService.AddLists*
        name: AddLists
    nameWithType:
      CSharp:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.AddLists*
        name: AddLists
      VB:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.AddLists*
        name: AddLists
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.AddLists*
        name: AddLists
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.AddLists*
        name: AddLists
    isDefinition: true
    commentId: Overload:UCT.Service.BoxService.AddLists
  UCT.Service.BoxService.GetUnion*:
    name:
      CSharp:
      - id: UCT.Service.BoxService.GetUnion*
        name: GetUnion
      VB:
      - id: UCT.Service.BoxService.GetUnion*
        name: GetUnion
    nameWithType:
      CSharp:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.GetUnion*
        name: GetUnion
      VB:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.GetUnion*
        name: GetUnion
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.GetUnion*
        name: GetUnion
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.GetUnion*
        name: GetUnion
    isDefinition: true
    commentId: Overload:UCT.Service.BoxService.GetUnion
  UCT.Service.BoxService.GetDifference*:
    name:
      CSharp:
      - id: UCT.Service.BoxService.GetDifference*
        name: GetDifference
      VB:
      - id: UCT.Service.BoxService.GetDifference*
        name: GetDifference
    nameWithType:
      CSharp:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.GetDifference*
        name: GetDifference
      VB:
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.GetDifference*
        name: GetDifference
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.GetDifference*
        name: GetDifference
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.BoxService*
        name: BoxService
      - name: .
      - id: UCT.Service.BoxService.GetDifference*
        name: GetDifference
    isDefinition: true
    commentId: Overload:UCT.Service.BoxService.GetDifference
  UCT.Service.BoxService:
    name:
      CSharp:
      - id: UCT.Service.BoxService
        name: BoxService
      VB:
      - id: UCT.Service.BoxService
        name: BoxService
    nameWithType:
      CSharp:
      - id: UCT.Service.BoxService
        name: BoxService
      VB:
      - id: UCT.Service.BoxService
        name: BoxService
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.BoxService
        name: BoxService
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.BoxService
        name: BoxService
    isDefinition: true
    commentId: T:UCT.Service.BoxService
  UCT.Service.HangulComposerService.ComposeHangul*:
    name:
      CSharp:
      - id: UCT.Service.HangulComposerService.ComposeHangul*
        name: ComposeHangul
      VB:
      - id: UCT.Service.HangulComposerService.ComposeHangul*
        name: ComposeHangul
    nameWithType:
      CSharp:
      - id: UCT.Service.HangulComposerService*
        name: HangulComposerService
      - name: .
      - id: UCT.Service.HangulComposerService.ComposeHangul*
        name: ComposeHangul
      VB:
      - id: UCT.Service.HangulComposerService*
        name: HangulComposerService
      - name: .
      - id: UCT.Service.HangulComposerService.ComposeHangul*
        name: ComposeHangul
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.HangulComposerService*
        name: HangulComposerService
      - name: .
      - id: UCT.Service.HangulComposerService.ComposeHangul*
        name: ComposeHangul
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.HangulComposerService*
        name: HangulComposerService
      - name: .
      - id: UCT.Service.HangulComposerService.ComposeHangul*
        name: ComposeHangul
    isDefinition: true
    commentId: Overload:UCT.Service.HangulComposerService.ComposeHangul
  UCT.Service.HangulComposerService:
    name:
      CSharp:
      - id: UCT.Service.HangulComposerService
        name: HangulComposerService
      VB:
      - id: UCT.Service.HangulComposerService
        name: HangulComposerService
    nameWithType:
      CSharp:
      - id: UCT.Service.HangulComposerService
        name: HangulComposerService
      VB:
      - id: UCT.Service.HangulComposerService
        name: HangulComposerService
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.HangulComposerService
        name: HangulComposerService
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.HangulComposerService
        name: HangulComposerService
    isDefinition: true
    commentId: T:UCT.Service.HangulComposerService
  UCT.Service.GameUtilityService.SetCanvasFrameSprite*:
    name:
      CSharp:
      - id: UCT.Service.GameUtilityService.SetCanvasFrameSprite*
        name: SetCanvasFrameSprite
      VB:
      - id: UCT.Service.GameUtilityService.SetCanvasFrameSprite*
        name: SetCanvasFrameSprite
    nameWithType:
      CSharp:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.SetCanvasFrameSprite*
        name: SetCanvasFrameSprite
      VB:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.SetCanvasFrameSprite*
        name: SetCanvasFrameSprite
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.SetCanvasFrameSprite*
        name: SetCanvasFrameSprite
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.SetCanvasFrameSprite*
        name: SetCanvasFrameSprite
    isDefinition: true
    commentId: Overload:UCT.Service.GameUtilityService.SetCanvasFrameSprite
  UCT.Service.GameUtilityService.SetResolution*:
    name:
      CSharp:
      - id: UCT.Service.GameUtilityService.SetResolution*
        name: SetResolution
      VB:
      - id: UCT.Service.GameUtilityService.SetResolution*
        name: SetResolution
    nameWithType:
      CSharp:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.SetResolution*
        name: SetResolution
      VB:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.SetResolution*
        name: SetResolution
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.SetResolution*
        name: SetResolution
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.SetResolution*
        name: SetResolution
    isDefinition: true
    commentId: Overload:UCT.Service.GameUtilityService.SetResolution
  UCT.Service.GameUtilityService.SwitchScene*:
    name:
      CSharp:
      - id: UCT.Service.GameUtilityService.SwitchScene*
        name: SwitchScene
      VB:
      - id: UCT.Service.GameUtilityService.SwitchScene*
        name: SwitchScene
    nameWithType:
      CSharp:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.SwitchScene*
        name: SwitchScene
      VB:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.SwitchScene*
        name: SwitchScene
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.SwitchScene*
        name: SwitchScene
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.SwitchScene*
        name: SwitchScene
    isDefinition: true
    commentId: Overload:UCT.Service.GameUtilityService.SwitchScene
  UCT.Service.GameUtilityService.FadeOutToWhiteAndSwitchScene*:
    name:
      CSharp:
      - id: UCT.Service.GameUtilityService.FadeOutToWhiteAndSwitchScene*
        name: FadeOutToWhiteAndSwitchScene
      VB:
      - id: UCT.Service.GameUtilityService.FadeOutToWhiteAndSwitchScene*
        name: FadeOutToWhiteAndSwitchScene
    nameWithType:
      CSharp:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.FadeOutToWhiteAndSwitchScene*
        name: FadeOutToWhiteAndSwitchScene
      VB:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.FadeOutToWhiteAndSwitchScene*
        name: FadeOutToWhiteAndSwitchScene
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.FadeOutToWhiteAndSwitchScene*
        name: FadeOutToWhiteAndSwitchScene
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.FadeOutToWhiteAndSwitchScene*
        name: FadeOutToWhiteAndSwitchScene
    isDefinition: true
    commentId: Overload:UCT.Service.GameUtilityService.FadeOutToWhiteAndSwitchScene
  System.Action:
    name:
      CSharp:
      - id: System.Action
        name: Action
        isExternal: true
      VB:
      - id: System.Action
        name: Action
        isExternal: true
    nameWithType:
      CSharp:
      - id: System.Action
        name: Action
        isExternal: true
      VB:
      - id: System.Action
        name: Action
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action
        name: Action
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action
        name: Action
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Action
  UCT.Service.GameUtilityService.FadeOutAndSwitchScene*:
    name:
      CSharp:
      - id: UCT.Service.GameUtilityService.FadeOutAndSwitchScene*
        name: FadeOutAndSwitchScene
      VB:
      - id: UCT.Service.GameUtilityService.FadeOutAndSwitchScene*
        name: FadeOutAndSwitchScene
    nameWithType:
      CSharp:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.FadeOutAndSwitchScene*
        name: FadeOutAndSwitchScene
      VB:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.FadeOutAndSwitchScene*
        name: FadeOutAndSwitchScene
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.FadeOutAndSwitchScene*
        name: FadeOutAndSwitchScene
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.FadeOutAndSwitchScene*
        name: FadeOutAndSwitchScene
    isDefinition: true
    commentId: Overload:UCT.Service.GameUtilityService.FadeOutAndSwitchScene
  UCT.Service.GameUtilityService.UpdateResolutionSettings*:
    name:
      CSharp:
      - id: UCT.Service.GameUtilityService.UpdateResolutionSettings*
        name: UpdateResolutionSettings
      VB:
      - id: UCT.Service.GameUtilityService.UpdateResolutionSettings*
        name: UpdateResolutionSettings
    nameWithType:
      CSharp:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.UpdateResolutionSettings*
        name: UpdateResolutionSettings
      VB:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.UpdateResolutionSettings*
        name: UpdateResolutionSettings
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.UpdateResolutionSettings*
        name: UpdateResolutionSettings
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.UpdateResolutionSettings*
        name: UpdateResolutionSettings
    isDefinition: true
    commentId: Overload:UCT.Service.GameUtilityService.UpdateResolutionSettings
  UCT.Service.GameUtilityService.ToggleAllSfx*:
    name:
      CSharp:
      - id: UCT.Service.GameUtilityService.ToggleAllSfx*
        name: ToggleAllSfx
      VB:
      - id: UCT.Service.GameUtilityService.ToggleAllSfx*
        name: ToggleAllSfx
    nameWithType:
      CSharp:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.ToggleAllSfx*
        name: ToggleAllSfx
      VB:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.ToggleAllSfx*
        name: ToggleAllSfx
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.ToggleAllSfx*
        name: ToggleAllSfx
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.ToggleAllSfx*
        name: ToggleAllSfx
    isDefinition: true
    commentId: Overload:UCT.Service.GameUtilityService.ToggleAllSfx
  UCT.Service.GameUtilityService.GetRandomColor*:
    name:
      CSharp:
      - id: UCT.Service.GameUtilityService.GetRandomColor*
        name: GetRandomColor
      VB:
      - id: UCT.Service.GameUtilityService.GetRandomColor*
        name: GetRandomColor
    nameWithType:
      CSharp:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.GetRandomColor*
        name: GetRandomColor
      VB:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.GetRandomColor*
        name: GetRandomColor
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.GetRandomColor*
        name: GetRandomColor
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.GetRandomColor*
        name: GetRandomColor
    isDefinition: true
    commentId: Overload:UCT.Service.GameUtilityService.GetRandomColor
  UCT.Service.GameUtilityService.GetDifferentRandomColor*:
    name:
      CSharp:
      - id: UCT.Service.GameUtilityService.GetDifferentRandomColor*
        name: GetDifferentRandomColor
      VB:
      - id: UCT.Service.GameUtilityService.GetDifferentRandomColor*
        name: GetDifferentRandomColor
    nameWithType:
      CSharp:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.GetDifferentRandomColor*
        name: GetDifferentRandomColor
      VB:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.GetDifferentRandomColor*
        name: GetDifferentRandomColor
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.GetDifferentRandomColor*
        name: GetDifferentRandomColor
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.GetDifferentRandomColor*
        name: GetDifferentRandomColor
    isDefinition: true
    commentId: Overload:UCT.Service.GameUtilityService.GetDifferentRandomColor
  UCT.Service.GameUtilityService.GetSimilarButDifferentColor*:
    name:
      CSharp:
      - id: UCT.Service.GameUtilityService.GetSimilarButDifferentColor*
        name: GetSimilarButDifferentColor
      VB:
      - id: UCT.Service.GameUtilityService.GetSimilarButDifferentColor*
        name: GetSimilarButDifferentColor
    nameWithType:
      CSharp:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.GetSimilarButDifferentColor*
        name: GetSimilarButDifferentColor
      VB:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.GetSimilarButDifferentColor*
        name: GetSimilarButDifferentColor
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.GetSimilarButDifferentColor*
        name: GetSimilarButDifferentColor
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.GetSimilarButDifferentColor*
        name: GetSimilarButDifferentColor
    isDefinition: true
    commentId: Overload:UCT.Service.GameUtilityService.GetSimilarButDifferentColor
  UCT.Service.GameUtilityService.RefreshTheScene*:
    name:
      CSharp:
      - id: UCT.Service.GameUtilityService.RefreshTheScene*
        name: RefreshTheScene
      VB:
      - id: UCT.Service.GameUtilityService.RefreshTheScene*
        name: RefreshTheScene
    nameWithType:
      CSharp:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.RefreshTheScene*
        name: RefreshTheScene
      VB:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.RefreshTheScene*
        name: RefreshTheScene
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.RefreshTheScene*
        name: RefreshTheScene
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.RefreshTheScene*
        name: RefreshTheScene
    isDefinition: true
    commentId: Overload:UCT.Service.GameUtilityService.RefreshTheScene
  UCT.Service.GameUtilityService.IsGamePausedOrSetting*:
    name:
      CSharp:
      - id: UCT.Service.GameUtilityService.IsGamePausedOrSetting*
        name: IsGamePausedOrSetting
      VB:
      - id: UCT.Service.GameUtilityService.IsGamePausedOrSetting*
        name: IsGamePausedOrSetting
    nameWithType:
      CSharp:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.IsGamePausedOrSetting*
        name: IsGamePausedOrSetting
      VB:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.IsGamePausedOrSetting*
        name: IsGamePausedOrSetting
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.IsGamePausedOrSetting*
        name: IsGamePausedOrSetting
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.IsGamePausedOrSetting*
        name: IsGamePausedOrSetting
    isDefinition: true
    commentId: Overload:UCT.Service.GameUtilityService.IsGamePausedOrSetting
  UCT.Service.GameUtilityService.FormatWithLeadingZero*:
    name:
      CSharp:
      - id: UCT.Service.GameUtilityService.FormatWithLeadingZero*
        name: FormatWithLeadingZero
      VB:
      - id: UCT.Service.GameUtilityService.FormatWithLeadingZero*
        name: FormatWithLeadingZero
    nameWithType:
      CSharp:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.FormatWithLeadingZero*
        name: FormatWithLeadingZero
      VB:
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.FormatWithLeadingZero*
        name: FormatWithLeadingZero
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.FormatWithLeadingZero*
        name: FormatWithLeadingZero
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService*
        name: GameUtilityService
      - name: .
      - id: UCT.Service.GameUtilityService.FormatWithLeadingZero*
        name: FormatWithLeadingZero
    isDefinition: true
    commentId: Overload:UCT.Service.GameUtilityService.FormatWithLeadingZero
  UCT.Service.GameUtilityService:
    name:
      CSharp:
      - id: UCT.Service.GameUtilityService
        name: GameUtilityService
      VB:
      - id: UCT.Service.GameUtilityService
        name: GameUtilityService
    nameWithType:
      CSharp:
      - id: UCT.Service.GameUtilityService
        name: GameUtilityService
      VB:
      - id: UCT.Service.GameUtilityService
        name: GameUtilityService
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService
        name: GameUtilityService
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.GameUtilityService
        name: GameUtilityService
    isDefinition: true
    commentId: T:UCT.Service.GameUtilityService
  Global.KeyCode:
    name:
      CSharp:
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      VB:
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      VB:
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      VB:
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
    isDefinition: true
  UCT.Service.InputService.GetKeyDown*:
    name:
      CSharp:
      - id: UCT.Service.InputService.GetKeyDown*
        name: GetKeyDown
      VB:
      - id: UCT.Service.InputService.GetKeyDown*
        name: GetKeyDown
    nameWithType:
      CSharp:
      - id: UCT.Service.InputService*
        name: InputService
      - name: .
      - id: UCT.Service.InputService.GetKeyDown*
        name: GetKeyDown
      VB:
      - id: UCT.Service.InputService*
        name: InputService
      - name: .
      - id: UCT.Service.InputService.GetKeyDown*
        name: GetKeyDown
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.InputService*
        name: InputService
      - name: .
      - id: UCT.Service.InputService.GetKeyDown*
        name: GetKeyDown
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.InputService*
        name: InputService
      - name: .
      - id: UCT.Service.InputService.GetKeyDown*
        name: GetKeyDown
    isDefinition: true
    commentId: Overload:UCT.Service.InputService.GetKeyDown
  UCT.Service.InputService.GetKey*:
    name:
      CSharp:
      - id: UCT.Service.InputService.GetKey*
        name: GetKey
      VB:
      - id: UCT.Service.InputService.GetKey*
        name: GetKey
    nameWithType:
      CSharp:
      - id: UCT.Service.InputService*
        name: InputService
      - name: .
      - id: UCT.Service.InputService.GetKey*
        name: GetKey
      VB:
      - id: UCT.Service.InputService*
        name: InputService
      - name: .
      - id: UCT.Service.InputService.GetKey*
        name: GetKey
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.InputService*
        name: InputService
      - name: .
      - id: UCT.Service.InputService.GetKey*
        name: GetKey
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.InputService*
        name: InputService
      - name: .
      - id: UCT.Service.InputService.GetKey*
        name: GetKey
    isDefinition: true
    commentId: Overload:UCT.Service.InputService.GetKey
  UCT.Service.InputService.GetKeyUp*:
    name:
      CSharp:
      - id: UCT.Service.InputService.GetKeyUp*
        name: GetKeyUp
      VB:
      - id: UCT.Service.InputService.GetKeyUp*
        name: GetKeyUp
    nameWithType:
      CSharp:
      - id: UCT.Service.InputService*
        name: InputService
      - name: .
      - id: UCT.Service.InputService.GetKeyUp*
        name: GetKeyUp
      VB:
      - id: UCT.Service.InputService*
        name: InputService
      - name: .
      - id: UCT.Service.InputService.GetKeyUp*
        name: GetKeyUp
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.InputService*
        name: InputService
      - name: .
      - id: UCT.Service.InputService.GetKeyUp*
        name: GetKeyUp
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.InputService*
        name: InputService
      - name: .
      - id: UCT.Service.InputService.GetKeyUp*
        name: GetKeyUp
    isDefinition: true
    commentId: Overload:UCT.Service.InputService.GetKeyUp
  UCT.Service.InputService:
    name:
      CSharp:
      - id: UCT.Service.InputService
        name: InputService
      VB:
      - id: UCT.Service.InputService
        name: InputService
    nameWithType:
      CSharp:
      - id: UCT.Service.InputService
        name: InputService
      VB:
      - id: UCT.Service.InputService
        name: InputService
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.InputService
        name: InputService
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.InputService
        name: InputService
    isDefinition: true
    commentId: T:UCT.Service.InputService
  UCT.Service.IMethodWrapper.Invoke*:
    name:
      CSharp:
      - id: UCT.Service.IMethodWrapper.Invoke*
        name: Invoke
      VB:
      - id: UCT.Service.IMethodWrapper.Invoke*
        name: Invoke
    nameWithType:
      CSharp:
      - id: UCT.Service.IMethodWrapper*
        name: IMethodWrapper
      - name: .
      - id: UCT.Service.IMethodWrapper.Invoke*
        name: Invoke
      VB:
      - id: UCT.Service.IMethodWrapper*
        name: IMethodWrapper
      - name: .
      - id: UCT.Service.IMethodWrapper.Invoke*
        name: Invoke
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper*
        name: IMethodWrapper
      - name: .
      - id: UCT.Service.IMethodWrapper.Invoke*
        name: Invoke
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper*
        name: IMethodWrapper
      - name: .
      - id: UCT.Service.IMethodWrapper.Invoke*
        name: Invoke
    isDefinition: true
    commentId: Overload:UCT.Service.IMethodWrapper.Invoke
  UCT.Service.IMethodWrapper:
    name:
      CSharp:
      - id: UCT.Service.IMethodWrapper
        name: IMethodWrapper
      VB:
      - id: UCT.Service.IMethodWrapper
        name: IMethodWrapper
    nameWithType:
      CSharp:
      - id: UCT.Service.IMethodWrapper
        name: IMethodWrapper
      VB:
      - id: UCT.Service.IMethodWrapper
        name: IMethodWrapper
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper
        name: IMethodWrapper
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper
        name: IMethodWrapper
    isDefinition: true
    parent: UCT.Service
    commentId: T:UCT.Service.IMethodWrapper
  UCT.Service:
    name:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
    isDefinition: true
    commentId: N:UCT.Service
  System.Action`1:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    nameWithType:
      CSharp:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    isDefinition: true
    commentId: T:System.Action`1
  System.Action{System.Object[]}:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: '>'
      VB:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: '>'
      VB:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: )
    isDefinition: false
    definition: System.Action`1
    parent: System
    commentId: T:System.Action{System.Object[]}
  UCT.Service.MethodWrapper.#ctor*:
    name:
      CSharp:
      - id: UCT.Service.MethodWrapper.#ctor*
        name: MethodWrapper
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Service.MethodWrapper*
        name: MethodWrapper
      - name: .
      - id: UCT.Service.MethodWrapper.#ctor*
        name: MethodWrapper
      VB:
      - id: UCT.Service.MethodWrapper*
        name: MethodWrapper
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MethodWrapper*
        name: MethodWrapper
      - name: .
      - id: UCT.Service.MethodWrapper.#ctor*
        name: MethodWrapper
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MethodWrapper*
        name: MethodWrapper
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Service.MethodWrapper.#ctor
  UCT.Service.MethodWrapper.Invoke*:
    name:
      CSharp:
      - id: UCT.Service.MethodWrapper.Invoke*
        name: Invoke
      VB:
      - id: UCT.Service.MethodWrapper.Invoke*
        name: Invoke
    nameWithType:
      CSharp:
      - id: UCT.Service.MethodWrapper*
        name: MethodWrapper
      - name: .
      - id: UCT.Service.MethodWrapper.Invoke*
        name: Invoke
      VB:
      - id: UCT.Service.MethodWrapper*
        name: MethodWrapper
      - name: .
      - id: UCT.Service.MethodWrapper.Invoke*
        name: Invoke
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MethodWrapper*
        name: MethodWrapper
      - name: .
      - id: UCT.Service.MethodWrapper.Invoke*
        name: Invoke
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MethodWrapper*
        name: MethodWrapper
      - name: .
      - id: UCT.Service.MethodWrapper.Invoke*
        name: Invoke
    isDefinition: true
    commentId: Overload:UCT.Service.MethodWrapper.Invoke
  UCT.Service.IMethodWrapper.Invoke(System.Object[]):
    name:
      CSharp:
      - id: UCT.Service.IMethodWrapper.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: params
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: )
      VB:
      - id: UCT.Service.IMethodWrapper.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: ParamArray
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Service.IMethodWrapper
        name: IMethodWrapper
      - name: .
      - id: UCT.Service.IMethodWrapper.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: params
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: )
      VB:
      - id: UCT.Service.IMethodWrapper
        name: IMethodWrapper
      - name: .
      - id: UCT.Service.IMethodWrapper.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: ParamArray
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper
        name: IMethodWrapper
      - name: .
      - id: UCT.Service.IMethodWrapper.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: params
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper
        name: IMethodWrapper
      - name: .
      - id: UCT.Service.IMethodWrapper.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: ParamArray
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: )
    isDefinition: true
    parent: UCT.Service.IMethodWrapper
    commentId: M:UCT.Service.IMethodWrapper.Invoke(System.Object[])
  UCT.Service.MethodWrapper:
    name:
      CSharp:
      - id: UCT.Service.MethodWrapper
        name: MethodWrapper
      VB:
      - id: UCT.Service.MethodWrapper
        name: MethodWrapper
    nameWithType:
      CSharp:
      - id: UCT.Service.MethodWrapper
        name: MethodWrapper
      VB:
      - id: UCT.Service.MethodWrapper
        name: MethodWrapper
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.MethodWrapper
        name: MethodWrapper
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.MethodWrapper
        name: MethodWrapper
    isDefinition: true
    commentId: T:UCT.Service.MethodWrapper
  TResult:
    name:
      CSharp:
      - name: TResult
      VB:
      - name: TResult
    nameWithType:
      CSharp:
      - name: TResult
      VB:
      - name: TResult
    qualifiedName:
      CSharp:
      - name: TResult
      VB:
      - name: TResult
    isDefinition: true
  '{TResult}':
    name:
      CSharp:
      - name: TResult
      VB:
      - name: TResult
    nameWithType:
      CSharp:
      - name: TResult
      VB:
      - name: TResult
    qualifiedName:
      CSharp:
      - name: TResult
      VB:
      - name: TResult
    isDefinition: false
    definition: TResult
    commentId: '!:TResult'
  UCT.Service.IMethodWrapper`1.Invoke*:
    name:
      CSharp:
      - id: UCT.Service.IMethodWrapper`1.Invoke*
        name: Invoke
      VB:
      - id: UCT.Service.IMethodWrapper`1.Invoke*
        name: Invoke
    nameWithType:
      CSharp:
      - id: UCT.Service.IMethodWrapper`1*
        name: IMethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      - name: .
      - id: UCT.Service.IMethodWrapper`1.Invoke*
        name: Invoke
      VB:
      - id: UCT.Service.IMethodWrapper`1*
        name: IMethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
      - name: .
      - id: UCT.Service.IMethodWrapper`1.Invoke*
        name: Invoke
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper`1*
        name: IMethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      - name: .
      - id: UCT.Service.IMethodWrapper`1.Invoke*
        name: Invoke
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper`1*
        name: IMethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
      - name: .
      - id: UCT.Service.IMethodWrapper`1.Invoke*
        name: Invoke
    isDefinition: true
    commentId: Overload:UCT.Service.IMethodWrapper`1.Invoke
  UCT.Service.IMethodWrapper`1:
    name:
      CSharp:
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      VB:
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      VB:
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
    isDefinition: true
    commentId: T:UCT.Service.IMethodWrapper`1
  UCT.Service.IMethodWrapper{{TResult}}:
    name:
      CSharp:
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      VB:
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      VB:
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
    isDefinition: false
    definition: UCT.Service.IMethodWrapper`1
    parent: UCT.Service
    commentId: T:UCT.Service.IMethodWrapper{`0}
  System.Func`2:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: <
      - name: T
      - name: ','
      - name: " "
      - name: TResult
      - name: '>'
      VB:
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: ','
      - name: " "
      - name: TResult
      - name: )
    nameWithType:
      CSharp:
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: <
      - name: T
      - name: ','
      - name: " "
      - name: TResult
      - name: '>'
      VB:
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: ','
      - name: " "
      - name: TResult
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: <
      - name: T
      - name: ','
      - name: " "
      - name: TResult
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: ','
      - name: " "
      - name: TResult
      - name: )
    isDefinition: true
    commentId: T:System.Func`2
  System.Func{System.Object[],{TResult}}:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: <
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - name: TResult
      - name: '>'
      VB:
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - name: TResult
      - name: )
    nameWithType:
      CSharp:
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: <
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - name: TResult
      - name: '>'
      VB:
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - name: TResult
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: <
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - name: TResult
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - name: TResult
      - name: )
    isDefinition: false
    definition: System.Func`2
    parent: System
    commentId: T:System.Func{System.Object[],`0}
  UCT.Service.MethodWrapper`1.#ctor*:
    name:
      CSharp:
      - id: UCT.Service.MethodWrapper`1.#ctor*
        name: MethodWrapper
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Service.MethodWrapper`1*
        name: MethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      - name: .
      - id: UCT.Service.MethodWrapper`1.#ctor*
        name: MethodWrapper
      VB:
      - id: UCT.Service.MethodWrapper`1*
        name: MethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MethodWrapper`1*
        name: MethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      - name: .
      - id: UCT.Service.MethodWrapper`1.#ctor*
        name: MethodWrapper
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MethodWrapper`1*
        name: MethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Service.MethodWrapper`1.#ctor
  UCT.Service.MethodWrapper`1.Invoke*:
    name:
      CSharp:
      - id: UCT.Service.MethodWrapper`1.Invoke*
        name: Invoke
      VB:
      - id: UCT.Service.MethodWrapper`1.Invoke*
        name: Invoke
    nameWithType:
      CSharp:
      - id: UCT.Service.MethodWrapper`1*
        name: MethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      - name: .
      - id: UCT.Service.MethodWrapper`1.Invoke*
        name: Invoke
      VB:
      - id: UCT.Service.MethodWrapper`1*
        name: MethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
      - name: .
      - id: UCT.Service.MethodWrapper`1.Invoke*
        name: Invoke
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MethodWrapper`1*
        name: MethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      - name: .
      - id: UCT.Service.MethodWrapper`1.Invoke*
        name: Invoke
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MethodWrapper`1*
        name: MethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
      - name: .
      - id: UCT.Service.MethodWrapper`1.Invoke*
        name: Invoke
    isDefinition: true
    commentId: Overload:UCT.Service.MethodWrapper`1.Invoke
  UCT.Service.IMethodWrapper`1.Invoke(System.Object[]):
    name:
      CSharp:
      - id: UCT.Service.IMethodWrapper`1.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: params
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: )
      VB:
      - id: UCT.Service.IMethodWrapper`1.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: ParamArray
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      - name: .
      - id: UCT.Service.IMethodWrapper`1.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: params
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: )
      VB:
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
      - name: .
      - id: UCT.Service.IMethodWrapper`1.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: ParamArray
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      - name: .
      - id: UCT.Service.IMethodWrapper`1.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: params
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
      - name: .
      - id: UCT.Service.IMethodWrapper`1.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: ParamArray
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: )
    isDefinition: true
    commentId: M:UCT.Service.IMethodWrapper`1.Invoke(System.Object[])
  UCT.Service.IMethodWrapper{{TResult}}.Invoke(System.Object[]):
    name:
      CSharp:
      - id: UCT.Service.IMethodWrapper{`0}.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: params
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: )
      VB:
      - id: UCT.Service.IMethodWrapper{`0}.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: ParamArray
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      - name: .
      - id: UCT.Service.IMethodWrapper{`0}.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: params
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: )
      VB:
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
      - name: .
      - id: UCT.Service.IMethodWrapper{`0}.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: ParamArray
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      - name: .
      - id: UCT.Service.IMethodWrapper{`0}.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: params
      - name: " "
      - id: System.Object
        name: object
        isExternal: true
      - name: '['
      - name: ']'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.IMethodWrapper`1
        name: IMethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
      - name: .
      - id: UCT.Service.IMethodWrapper{`0}.Invoke(System.Object[])
        name: Invoke
      - name: (
      - name: ParamArray
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: (
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Service.IMethodWrapper`1.Invoke(System.Object[])
    parent: UCT.Service.IMethodWrapper{{TResult}}
    commentId: M:UCT.Service.IMethodWrapper{`0}.Invoke(System.Object[])
  UCT.Service.MethodWrapper`1:
    name:
      CSharp:
      - id: UCT.Service.MethodWrapper`1
        name: MethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      VB:
      - id: UCT.Service.MethodWrapper`1
        name: MethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Service.MethodWrapper`1
        name: MethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      VB:
      - id: UCT.Service.MethodWrapper`1
        name: MethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.MethodWrapper`1
        name: MethodWrapper
      - name: <
      - name: TResult
      - name: '>'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.MethodWrapper`1
        name: MethodWrapper
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
    isDefinition: true
    commentId: T:UCT.Service.MethodWrapper`1
  UCT.Service.EnumService.GetMaxEnumValue*:
    name:
      CSharp:
      - id: UCT.Service.EnumService.GetMaxEnumValue*
        name: GetMaxEnumValue
      VB:
      - id: UCT.Service.EnumService.GetMaxEnumValue*
        name: GetMaxEnumValue
    nameWithType:
      CSharp:
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.GetMaxEnumValue*
        name: GetMaxEnumValue
      VB:
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.GetMaxEnumValue*
        name: GetMaxEnumValue
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.GetMaxEnumValue*
        name: GetMaxEnumValue
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.GetMaxEnumValue*
        name: GetMaxEnumValue
    isDefinition: true
    commentId: Overload:UCT.Service.EnumService.GetMaxEnumValue
  UCT.Service.EnumService.GetMinEnumValue*:
    name:
      CSharp:
      - id: UCT.Service.EnumService.GetMinEnumValue*
        name: GetMinEnumValue
      VB:
      - id: UCT.Service.EnumService.GetMinEnumValue*
        name: GetMinEnumValue
    nameWithType:
      CSharp:
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.GetMinEnumValue*
        name: GetMinEnumValue
      VB:
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.GetMinEnumValue*
        name: GetMinEnumValue
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.GetMinEnumValue*
        name: GetMinEnumValue
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.GetMinEnumValue*
        name: GetMinEnumValue
    isDefinition: true
    commentId: Overload:UCT.Service.EnumService.GetMinEnumValue
  UCT.Service.EnumService.IncrementEnum*:
    name:
      CSharp:
      - id: UCT.Service.EnumService.IncrementEnum*
        name: IncrementEnum
      VB:
      - id: UCT.Service.EnumService.IncrementEnum*
        name: IncrementEnum
    nameWithType:
      CSharp:
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.IncrementEnum*
        name: IncrementEnum
      VB:
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.IncrementEnum*
        name: IncrementEnum
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.IncrementEnum*
        name: IncrementEnum
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.IncrementEnum*
        name: IncrementEnum
    isDefinition: true
    commentId: Overload:UCT.Service.EnumService.IncrementEnum
  UCT.Service.EnumService.DecrementEnum*:
    name:
      CSharp:
      - id: UCT.Service.EnumService.DecrementEnum*
        name: DecrementEnum
      VB:
      - id: UCT.Service.EnumService.DecrementEnum*
        name: DecrementEnum
    nameWithType:
      CSharp:
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.DecrementEnum*
        name: DecrementEnum
      VB:
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.DecrementEnum*
        name: DecrementEnum
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.DecrementEnum*
        name: DecrementEnum
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnumService*
        name: EnumService
      - name: .
      - id: UCT.Service.EnumService.DecrementEnum*
        name: DecrementEnum
    isDefinition: true
    commentId: Overload:UCT.Service.EnumService.DecrementEnum
  UCT.Service.EnumService:
    name:
      CSharp:
      - id: UCT.Service.EnumService
        name: EnumService
      VB:
      - id: UCT.Service.EnumService
        name: EnumService
    nameWithType:
      CSharp:
      - id: UCT.Service.EnumService
        name: EnumService
      VB:
      - id: UCT.Service.EnumService
        name: EnumService
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnumService
        name: EnumService
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnumService
        name: EnumService
    isDefinition: true
    commentId: T:UCT.Service.EnumService
  UCT.Service.EnemiesXmlDialogParser.Dialog:
    name:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Dialog
        name: Dialog
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Dialog
        name: Dialog
    nameWithType:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Dialog
        name: Dialog
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Dialog
        name: Dialog
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Dialog
        name: Dialog
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Dialog
        name: Dialog
    isDefinition: true
    parent: UCT.Service
    commentId: T:UCT.Service.EnemiesXmlDialogParser.Dialog
  UCT.Service.EnemiesXmlDialogParser.GetDialogInfo*:
    name:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser.GetDialogInfo*
        name: GetDialogInfo
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser.GetDialogInfo*
        name: GetDialogInfo
    nameWithType:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetDialogInfo*
        name: GetDialogInfo
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetDialogInfo*
        name: GetDialogInfo
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetDialogInfo*
        name: GetDialogInfo
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetDialogInfo*
        name: GetDialogInfo
    isDefinition: true
    commentId: Overload:UCT.Service.EnemiesXmlDialogParser.GetDialogInfo
  System.Collections.Generic.List{UCT.Service.EnemiesXmlDialogParser.Message}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message
        name: Message
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message
        name: Message
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message
        name: Message
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message
        name: Message
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message
        name: Message
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message
        name: Message
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{UCT.Service.EnemiesXmlDialogParser.Message}
  UCT.Service.EnemiesXmlDialogParser.GetMessagesInDialog*:
    name:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser.GetMessagesInDialog*
        name: GetMessagesInDialog
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser.GetMessagesInDialog*
        name: GetMessagesInDialog
    nameWithType:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetMessagesInDialog*
        name: GetMessagesInDialog
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetMessagesInDialog*
        name: GetMessagesInDialog
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetMessagesInDialog*
        name: GetMessagesInDialog
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetMessagesInDialog*
        name: GetMessagesInDialog
    isDefinition: true
    commentId: Overload:UCT.Service.EnemiesXmlDialogParser.GetMessagesInDialog
  UCT.Service.EnemiesXmlDialogParser.Message:
    name:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message
        name: Message
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message
        name: Message
    nameWithType:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message
        name: Message
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message
        name: Message
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message
        name: Message
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message
        name: Message
    isDefinition: true
    parent: UCT.Service
    commentId: T:UCT.Service.EnemiesXmlDialogParser.Message
  UCT.Service.EnemiesXmlDialogParser.GetMessageInfo*:
    name:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser.GetMessageInfo*
        name: GetMessageInfo
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser.GetMessageInfo*
        name: GetMessageInfo
    nameWithType:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetMessageInfo*
        name: GetMessageInfo
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetMessageInfo*
        name: GetMessageInfo
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetMessageInfo*
        name: GetMessageInfo
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetMessageInfo*
        name: GetMessageInfo
    isDefinition: true
    commentId: Overload:UCT.Service.EnemiesXmlDialogParser.GetMessageInfo
  System.Collections.Generic.List{UCT.Service.EnemiesXmlDialogParser.Bubble}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Bubble
        name: Bubble
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Bubble
        name: Bubble
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Bubble
        name: Bubble
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Bubble
        name: Bubble
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Bubble
        name: Bubble
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Bubble
        name: Bubble
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{UCT.Service.EnemiesXmlDialogParser.Bubble}
  UCT.Service.EnemiesXmlDialogParser.GetBubbles*:
    name:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser.GetBubbles*
        name: GetBubbles
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser.GetBubbles*
        name: GetBubbles
    nameWithType:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetBubbles*
        name: GetBubbles
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetBubbles*
        name: GetBubbles
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetBubbles*
        name: GetBubbles
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.GetBubbles*
        name: GetBubbles
    isDefinition: true
    commentId: Overload:UCT.Service.EnemiesXmlDialogParser.GetBubbles
  UCT.Service.EnemiesXmlDialogParser:
    name:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
    nameWithType:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
    isDefinition: true
    commentId: T:UCT.Service.EnemiesXmlDialogParser
  UCT.Service.EnemiesXmlDialogParser.DialogType:
    name:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.DialogType
        name: DialogType
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.DialogType
        name: DialogType
    nameWithType:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.DialogType
        name: DialogType
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.DialogType
        name: DialogType
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.DialogType
        name: DialogType
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.DialogType
        name: DialogType
    isDefinition: true
    parent: UCT.Service
    commentId: T:UCT.Service.EnemiesXmlDialogParser.DialogType
  UCT.Service.EnemiesXmlDialogParser.MessageMode:
    name:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.MessageMode
        name: MessageMode
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.MessageMode
        name: MessageMode
    nameWithType:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.MessageMode
        name: MessageMode
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.MessageMode
        name: MessageMode
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.MessageMode
        name: MessageMode
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.MessageMode
        name: MessageMode
    isDefinition: true
    parent: UCT.Service
    commentId: T:UCT.Service.EnemiesXmlDialogParser.MessageMode
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        isExternal: true
    nameWithType:
      CSharp:
      - id: System.ValueType
        name: ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.ValueType
        name: ValueType
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.ValueType
        name: ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  UCT.Service.EnemiesXmlDialogParser.Message.Equals*:
    name:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser.Message.Equals*
        name: Equals
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser.Message.Equals*
        name: Equals
    nameWithType:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message*
        name: Message
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message.Equals*
        name: Equals
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message*
        name: Message
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message.Equals*
        name: Equals
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message*
        name: Message
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message.Equals*
        name: Equals
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message*
        name: Message
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message.Equals*
        name: Equals
    isDefinition: true
    commentId: Overload:UCT.Service.EnemiesXmlDialogParser.Message.Equals
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        isExternal: true
      - name: (
      - id: System.Object
        name: object
        isExternal: true
      - name: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        isExternal: true
      - name: (
      - id: System.Object
        name: Object
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.ValueType
        name: ValueType
        isExternal: true
      - name: .
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        isExternal: true
      - name: (
      - id: System.Object
        name: object
        isExternal: true
      - name: )
      VB:
      - id: System.ValueType
        name: ValueType
        isExternal: true
      - name: .
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        isExternal: true
      - name: (
      - id: System.Object
        name: Object
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.ValueType
        name: ValueType
        isExternal: true
      - name: .
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        isExternal: true
      - name: (
      - id: System.Object
        name: object
        isExternal: true
      - name: )
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.ValueType
        name: ValueType
        isExternal: true
      - name: .
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        isExternal: true
      - name: (
      - id: System.Object
        name: Object
        isExternal: true
      - name: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        isExternal: true
      - name: (
      - name: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        isExternal: true
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: System.ValueType
        name: ValueType
        isExternal: true
      - name: .
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        isExternal: true
      - name: (
      - name: )
      VB:
      - id: System.ValueType
        name: ValueType
        isExternal: true
      - name: .
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        isExternal: true
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.ValueType
        name: ValueType
        isExternal: true
      - name: .
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        isExternal: true
      - name: (
      - name: )
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.ValueType
        name: ValueType
        isExternal: true
      - name: .
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        isExternal: true
      - name: (
      - name: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  UCT.Service.EnemiesXmlDialogParser.Message.GetHashCode*:
    name:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser.Message.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser.Message.GetHashCode*
        name: GetHashCode
    nameWithType:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message*
        name: Message
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message*
        name: Message
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message.GetHashCode*
        name: GetHashCode
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message*
        name: Message
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser*
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message*
        name: Message
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Message.GetHashCode*
        name: GetHashCode
    isDefinition: true
    commentId: Overload:UCT.Service.EnemiesXmlDialogParser.Message.GetHashCode
  UCT.Service.EnemiesXmlDialogParser.Bubble:
    name:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Bubble
        name: Bubble
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Bubble
        name: Bubble
    nameWithType:
      CSharp:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Bubble
        name: Bubble
      VB:
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Bubble
        name: Bubble
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Bubble
        name: Bubble
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
      - name: .
      - id: UCT.Service.EnemiesXmlDialogParser.Bubble
        name: Bubble
    isDefinition: true
    commentId: T:UCT.Service.EnemiesXmlDialogParser.Bubble
  UCT.Service.MathUtilityService.WeightedRandom*:
    name:
      CSharp:
      - id: UCT.Service.MathUtilityService.WeightedRandom*
        name: WeightedRandom
      VB:
      - id: UCT.Service.MathUtilityService.WeightedRandom*
        name: WeightedRandom
    nameWithType:
      CSharp:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.WeightedRandom*
        name: WeightedRandom
      VB:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.WeightedRandom*
        name: WeightedRandom
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.WeightedRandom*
        name: WeightedRandom
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.WeightedRandom*
        name: WeightedRandom
    isDefinition: true
    commentId: Overload:UCT.Service.MathUtilityService.WeightedRandom
  UCT.Service.MathUtilityService.GetRandomUnit*:
    name:
      CSharp:
      - id: UCT.Service.MathUtilityService.GetRandomUnit*
        name: GetRandomUnit
      VB:
      - id: UCT.Service.MathUtilityService.GetRandomUnit*
        name: GetRandomUnit
    nameWithType:
      CSharp:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetRandomUnit*
        name: GetRandomUnit
      VB:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetRandomUnit*
        name: GetRandomUnit
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetRandomUnit*
        name: GetRandomUnit
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetRandomUnit*
        name: GetRandomUnit
    isDefinition: true
    commentId: Overload:UCT.Service.MathUtilityService.GetRandomUnit
  UCT.Service.MathUtilityService.RandomPointOnSphereSurface*:
    name:
      CSharp:
      - id: UCT.Service.MathUtilityService.RandomPointOnSphereSurface*
        name: RandomPointOnSphereSurface
      VB:
      - id: UCT.Service.MathUtilityService.RandomPointOnSphereSurface*
        name: RandomPointOnSphereSurface
    nameWithType:
      CSharp:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.RandomPointOnSphereSurface*
        name: RandomPointOnSphereSurface
      VB:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.RandomPointOnSphereSurface*
        name: RandomPointOnSphereSurface
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.RandomPointOnSphereSurface*
        name: RandomPointOnSphereSurface
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.RandomPointOnSphereSurface*
        name: RandomPointOnSphereSurface
    isDefinition: true
    commentId: Overload:UCT.Service.MathUtilityService.RandomPointOnSphereSurface
  UCT.Service.MathUtilityService.GetGreaterNumber*:
    name:
      CSharp:
      - id: UCT.Service.MathUtilityService.GetGreaterNumber*
        name: GetGreaterNumber
      VB:
      - id: UCT.Service.MathUtilityService.GetGreaterNumber*
        name: GetGreaterNumber
    nameWithType:
      CSharp:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetGreaterNumber*
        name: GetGreaterNumber
      VB:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetGreaterNumber*
        name: GetGreaterNumber
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetGreaterNumber*
        name: GetGreaterNumber
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetGreaterNumber*
        name: GetGreaterNumber
    isDefinition: true
    commentId: Overload:UCT.Service.MathUtilityService.GetGreaterNumber
  UCT.Service.MathUtilityService.GetSmallerNumber*:
    name:
      CSharp:
      - id: UCT.Service.MathUtilityService.GetSmallerNumber*
        name: GetSmallerNumber
      VB:
      - id: UCT.Service.MathUtilityService.GetSmallerNumber*
        name: GetSmallerNumber
    nameWithType:
      CSharp:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetSmallerNumber*
        name: GetSmallerNumber
      VB:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetSmallerNumber*
        name: GetSmallerNumber
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetSmallerNumber*
        name: GetSmallerNumber
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetSmallerNumber*
        name: GetSmallerNumber
    isDefinition: true
    commentId: Overload:UCT.Service.MathUtilityService.GetSmallerNumber
  System.Collections.Generic.List{System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Int32}
  UCT.Service.MathUtilityService.GetResolutionWidthsWithHeights*:
    name:
      CSharp:
      - id: UCT.Service.MathUtilityService.GetResolutionWidthsWithHeights*
        name: GetResolutionWidthsWithHeights
      VB:
      - id: UCT.Service.MathUtilityService.GetResolutionWidthsWithHeights*
        name: GetResolutionWidthsWithHeights
    nameWithType:
      CSharp:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetResolutionWidthsWithHeights*
        name: GetResolutionWidthsWithHeights
      VB:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetResolutionWidthsWithHeights*
        name: GetResolutionWidthsWithHeights
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetResolutionWidthsWithHeights*
        name: GetResolutionWidthsWithHeights
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.GetResolutionWidthsWithHeights*
        name: GetResolutionWidthsWithHeights
    isDefinition: true
    commentId: Overload:UCT.Service.MathUtilityService.GetResolutionWidthsWithHeights
  UCT.Service.MathUtilityService.DbToNormalizedValue*:
    name:
      CSharp:
      - id: UCT.Service.MathUtilityService.DbToNormalizedValue*
        name: DbToNormalizedValue
      VB:
      - id: UCT.Service.MathUtilityService.DbToNormalizedValue*
        name: DbToNormalizedValue
    nameWithType:
      CSharp:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.DbToNormalizedValue*
        name: DbToNormalizedValue
      VB:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.DbToNormalizedValue*
        name: DbToNormalizedValue
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.DbToNormalizedValue*
        name: DbToNormalizedValue
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.DbToNormalizedValue*
        name: DbToNormalizedValue
    isDefinition: true
    commentId: Overload:UCT.Service.MathUtilityService.DbToNormalizedValue
  UCT.Service.MathUtilityService.NormalizedValueToDb*:
    name:
      CSharp:
      - id: UCT.Service.MathUtilityService.NormalizedValueToDb*
        name: NormalizedValueToDb
      VB:
      - id: UCT.Service.MathUtilityService.NormalizedValueToDb*
        name: NormalizedValueToDb
    nameWithType:
      CSharp:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.NormalizedValueToDb*
        name: NormalizedValueToDb
      VB:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.NormalizedValueToDb*
        name: NormalizedValueToDb
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.NormalizedValueToDb*
        name: NormalizedValueToDb
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.NormalizedValueToDb*
        name: NormalizedValueToDb
    isDefinition: true
    commentId: Overload:UCT.Service.MathUtilityService.NormalizedValueToDb
  UCT.Service.MathUtilityService.IsPointInPolygon*:
    name:
      CSharp:
      - id: UCT.Service.MathUtilityService.IsPointInPolygon*
        name: IsPointInPolygon
      VB:
      - id: UCT.Service.MathUtilityService.IsPointInPolygon*
        name: IsPointInPolygon
    nameWithType:
      CSharp:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.IsPointInPolygon*
        name: IsPointInPolygon
      VB:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.IsPointInPolygon*
        name: IsPointInPolygon
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.IsPointInPolygon*
        name: IsPointInPolygon
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.IsPointInPolygon*
        name: IsPointInPolygon
    isDefinition: true
    commentId: Overload:UCT.Service.MathUtilityService.IsPointInPolygon
  UCT.Service.MathUtilityService.CalculateDisplacedPoint*:
    name:
      CSharp:
      - id: UCT.Service.MathUtilityService.CalculateDisplacedPoint*
        name: CalculateDisplacedPoint
      VB:
      - id: UCT.Service.MathUtilityService.CalculateDisplacedPoint*
        name: CalculateDisplacedPoint
    nameWithType:
      CSharp:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.CalculateDisplacedPoint*
        name: CalculateDisplacedPoint
      VB:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.CalculateDisplacedPoint*
        name: CalculateDisplacedPoint
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.CalculateDisplacedPoint*
        name: CalculateDisplacedPoint
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.CalculateDisplacedPoint*
        name: CalculateDisplacedPoint
    isDefinition: true
    commentId: Overload:UCT.Service.MathUtilityService.CalculateDisplacedPoint
  UCT.Service.MathUtilityService.CalculateInwardOffset*:
    name:
      CSharp:
      - id: UCT.Service.MathUtilityService.CalculateInwardOffset*
        name: CalculateInwardOffset
      VB:
      - id: UCT.Service.MathUtilityService.CalculateInwardOffset*
        name: CalculateInwardOffset
    nameWithType:
      CSharp:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.CalculateInwardOffset*
        name: CalculateInwardOffset
      VB:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.CalculateInwardOffset*
        name: CalculateInwardOffset
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.CalculateInwardOffset*
        name: CalculateInwardOffset
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.CalculateInwardOffset*
        name: CalculateInwardOffset
    isDefinition: true
    commentId: Overload:UCT.Service.MathUtilityService.CalculateInwardOffset
  UCT.Service.MathUtilityService.CheckPointBeyondPolygon*:
    name:
      CSharp:
      - id: UCT.Service.MathUtilityService.CheckPointBeyondPolygon*
        name: CheckPointBeyondPolygon
      VB:
      - id: UCT.Service.MathUtilityService.CheckPointBeyondPolygon*
        name: CheckPointBeyondPolygon
    nameWithType:
      CSharp:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.CheckPointBeyondPolygon*
        name: CheckPointBeyondPolygon
      VB:
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.CheckPointBeyondPolygon*
        name: CheckPointBeyondPolygon
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.CheckPointBeyondPolygon*
        name: CheckPointBeyondPolygon
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService*
        name: MathUtilityService
      - name: .
      - id: UCT.Service.MathUtilityService.CheckPointBeyondPolygon*
        name: CheckPointBeyondPolygon
    isDefinition: true
    commentId: Overload:UCT.Service.MathUtilityService.CheckPointBeyondPolygon
  UCT.Service.MathUtilityService:
    name:
      CSharp:
      - id: UCT.Service.MathUtilityService
        name: MathUtilityService
      VB:
      - id: UCT.Service.MathUtilityService
        name: MathUtilityService
    nameWithType:
      CSharp:
      - id: UCT.Service.MathUtilityService
        name: MathUtilityService
      VB:
      - id: UCT.Service.MathUtilityService
        name: MathUtilityService
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService
        name: MathUtilityService
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.MathUtilityService
        name: MathUtilityService
    isDefinition: true
    commentId: T:UCT.Service.MathUtilityService
  UCT.Service.ChineseCharacterStrokesService.GetCharactersByStrokeCount*:
    name:
      CSharp:
      - id: UCT.Service.ChineseCharacterStrokesService.GetCharactersByStrokeCount*
        name: GetCharactersByStrokeCount
      VB:
      - id: UCT.Service.ChineseCharacterStrokesService.GetCharactersByStrokeCount*
        name: GetCharactersByStrokeCount
    nameWithType:
      CSharp:
      - id: UCT.Service.ChineseCharacterStrokesService*
        name: ChineseCharacterStrokesService
      - name: .
      - id: UCT.Service.ChineseCharacterStrokesService.GetCharactersByStrokeCount*
        name: GetCharactersByStrokeCount
      VB:
      - id: UCT.Service.ChineseCharacterStrokesService*
        name: ChineseCharacterStrokesService
      - name: .
      - id: UCT.Service.ChineseCharacterStrokesService.GetCharactersByStrokeCount*
        name: GetCharactersByStrokeCount
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.ChineseCharacterStrokesService*
        name: ChineseCharacterStrokesService
      - name: .
      - id: UCT.Service.ChineseCharacterStrokesService.GetCharactersByStrokeCount*
        name: GetCharactersByStrokeCount
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Service*
        name: Service
      - name: .
      - id: UCT.Service.ChineseCharacterStrokesService*
        name: ChineseCharacterStrokesService
      - name: .
      - id: UCT.Service.ChineseCharacterStrokesService.GetCharactersByStrokeCount*
        name: GetCharactersByStrokeCount
    isDefinition: true
    commentId: Overload:UCT.Service.ChineseCharacterStrokesService.GetCharactersByStrokeCount
  UCT.Service.ChineseCharacterStrokesService:
    name:
      CSharp:
      - id: UCT.Service.ChineseCharacterStrokesService
        name: ChineseCharacterStrokesService
      VB:
      - id: UCT.Service.ChineseCharacterStrokesService
        name: ChineseCharacterStrokesService
    nameWithType:
      CSharp:
      - id: UCT.Service.ChineseCharacterStrokesService
        name: ChineseCharacterStrokesService
      VB:
      - id: UCT.Service.ChineseCharacterStrokesService
        name: ChineseCharacterStrokesService
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.ChineseCharacterStrokesService
        name: ChineseCharacterStrokesService
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Service
        name: Service
      - name: .
      - id: UCT.Service.ChineseCharacterStrokesService
        name: ChineseCharacterStrokesService
    isDefinition: true
    commentId: T:UCT.Service.ChineseCharacterStrokesService
  UCT.Battle:
    name:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
    isDefinition: true
    commentId: N:UCT.Battle
  UCT.Battle.EnemiesController:
    name:
      CSharp:
      - id: UCT.Battle.EnemiesController
        name: EnemiesController
      VB:
      - id: UCT.Battle.EnemiesController
        name: EnemiesController
    nameWithType:
      CSharp:
      - id: UCT.Battle.EnemiesController
        name: EnemiesController
      VB:
      - id: UCT.Battle.EnemiesController
        name: EnemiesController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.EnemiesController
        name: EnemiesController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.EnemiesController
        name: EnemiesController
    isDefinition: true
    parent: UCT.Battle
    commentId: T:UCT.Battle.EnemiesController
  UCT.Battle.TargetController:
    name:
      CSharp:
      - id: UCT.Battle.TargetController
        name: TargetController
      VB:
      - id: UCT.Battle.TargetController
        name: TargetController
    nameWithType:
      CSharp:
      - id: UCT.Battle.TargetController
        name: TargetController
      VB:
      - id: UCT.Battle.TargetController
        name: TargetController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.TargetController
        name: TargetController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.TargetController
        name: TargetController
    isDefinition: true
    commentId: T:UCT.Battle.TargetController
  UCT.Battle.TurnController:
    name:
      CSharp:
      - id: UCT.Battle.TurnController
        name: TurnController
      VB:
      - id: UCT.Battle.TurnController
        name: TurnController
    nameWithType:
      CSharp:
      - id: UCT.Battle.TurnController
        name: TurnController
      VB:
      - id: UCT.Battle.TurnController
        name: TurnController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.TurnController
        name: TurnController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.TurnController
        name: TurnController
    isDefinition: true
    parent: UCT.Battle
    commentId: T:UCT.Battle.TurnController
  UCT.Battle.TurnController.Instance*:
    name:
      CSharp:
      - id: UCT.Battle.TurnController.Instance*
        name: Instance
      VB:
      - id: UCT.Battle.TurnController.Instance*
        name: Instance
    nameWithType:
      CSharp:
      - id: UCT.Battle.TurnController*
        name: TurnController
      - name: .
      - id: UCT.Battle.TurnController.Instance*
        name: Instance
      VB:
      - id: UCT.Battle.TurnController*
        name: TurnController
      - name: .
      - id: UCT.Battle.TurnController.Instance*
        name: Instance
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.TurnController*
        name: TurnController
      - name: .
      - id: UCT.Battle.TurnController.Instance*
        name: Instance
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.TurnController*
        name: TurnController
      - name: .
      - id: UCT.Battle.TurnController.Instance*
        name: Instance
    isDefinition: true
    commentId: Overload:UCT.Battle.TurnController.Instance
  UCT.Battle.TurnController.EnterEnemyTurn*:
    name:
      CSharp:
      - id: UCT.Battle.TurnController.EnterEnemyTurn*
        name: EnterEnemyTurn
      VB:
      - id: UCT.Battle.TurnController.EnterEnemyTurn*
        name: EnterEnemyTurn
    nameWithType:
      CSharp:
      - id: UCT.Battle.TurnController*
        name: TurnController
      - name: .
      - id: UCT.Battle.TurnController.EnterEnemyTurn*
        name: EnterEnemyTurn
      VB:
      - id: UCT.Battle.TurnController*
        name: TurnController
      - name: .
      - id: UCT.Battle.TurnController.EnterEnemyTurn*
        name: EnterEnemyTurn
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.TurnController*
        name: TurnController
      - name: .
      - id: UCT.Battle.TurnController.EnterEnemyTurn*
        name: EnterEnemyTurn
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.TurnController*
        name: TurnController
      - name: .
      - id: UCT.Battle.TurnController.EnterEnemyTurn*
        name: EnterEnemyTurn
    isDefinition: true
    commentId: Overload:UCT.Battle.TurnController.EnterEnemyTurn
  UCT.Battle.TurnController.GetYellowBullet*:
    name:
      CSharp:
      - id: UCT.Battle.TurnController.GetYellowBullet*
        name: GetYellowBullet
      VB:
      - id: UCT.Battle.TurnController.GetYellowBullet*
        name: GetYellowBullet
    nameWithType:
      CSharp:
      - id: UCT.Battle.TurnController*
        name: TurnController
      - name: .
      - id: UCT.Battle.TurnController.GetYellowBullet*
        name: GetYellowBullet
      VB:
      - id: UCT.Battle.TurnController*
        name: TurnController
      - name: .
      - id: UCT.Battle.TurnController.GetYellowBullet*
        name: GetYellowBullet
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.TurnController*
        name: TurnController
      - name: .
      - id: UCT.Battle.TurnController.GetYellowBullet*
        name: GetYellowBullet
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.TurnController*
        name: TurnController
      - name: .
      - id: UCT.Battle.TurnController.GetYellowBullet*
        name: GetYellowBullet
    isDefinition: true
    commentId: Overload:UCT.Battle.TurnController.GetYellowBullet
  Global.SpriteRenderer:
    name:
      CSharp:
      - id: Global.SpriteRenderer
        name: SpriteRenderer
        isExternal: true
      VB:
      - id: Global.SpriteRenderer
        name: SpriteRenderer
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.SpriteRenderer
        name: SpriteRenderer
        isExternal: true
      VB:
      - id: Global.SpriteRenderer
        name: SpriteRenderer
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.SpriteRenderer
        name: SpriteRenderer
        isExternal: true
      VB:
      - id: Global.SpriteRenderer
        name: SpriteRenderer
        isExternal: true
    isDefinition: true
  System.Collections.Generic.List{BoxCollider2D}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.BoxCollider2D
        name: BoxCollider2D
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.BoxCollider2D
        name: BoxCollider2D
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.BoxCollider2D
        name: BoxCollider2D
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.BoxCollider2D
        name: BoxCollider2D
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.BoxCollider2D
        name: BoxCollider2D
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.BoxCollider2D
        name: BoxCollider2D
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{BoxCollider2D}
  Global.BattleControl.BulletColor:
    name:
      CSharp:
      - id: Global.BattleControl.BulletColor
        name: BulletColor
        isExternal: true
      VB:
      - id: Global.BattleControl.BulletColor
        name: BulletColor
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      - name: .
      - id: Global.BattleControl.BulletColor
        name: BulletColor
        isExternal: true
      VB:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      - name: .
      - id: Global.BattleControl.BulletColor
        name: BulletColor
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      - name: .
      - id: Global.BattleControl.BulletColor
        name: BulletColor
        isExternal: true
      VB:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      - name: .
      - id: Global.BattleControl.BulletColor
        name: BulletColor
        isExternal: true
    isDefinition: true
    commentId: '!:Global.BattleControl.BulletColor'
  UCT.Battle.BulletController.FollowMode:
    name:
      CSharp:
      - id: UCT.Battle.BulletController
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.FollowMode
        name: FollowMode
      VB:
      - id: UCT.Battle.BulletController
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.FollowMode
        name: FollowMode
    nameWithType:
      CSharp:
      - id: UCT.Battle.BulletController
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.FollowMode
        name: FollowMode
      VB:
      - id: UCT.Battle.BulletController
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.FollowMode
        name: FollowMode
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BulletController
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.FollowMode
        name: FollowMode
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BulletController
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.FollowMode
        name: FollowMode
    isDefinition: true
    parent: UCT.Battle
    commentId: T:UCT.Battle.BulletController.FollowMode
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    nameWithType:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Nullable`1
        name: Nullable
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Nullable`1
        name: Nullable
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{UCT.Battle.InitialTransform}:
    name:
      CSharp:
      - id: UCT.Battle.InitialTransform
        name: InitialTransform
      - name: '?'
      VB:
      - id: UCT.Battle.InitialTransform
        name: InitialTransform
      - name: '?'
    nameWithType:
      CSharp:
      - id: UCT.Battle.InitialTransform
        name: InitialTransform
      - name: '?'
      VB:
      - id: UCT.Battle.InitialTransform
        name: InitialTransform
      - name: '?'
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform
        name: InitialTransform
      - name: '?'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform
        name: InitialTransform
      - name: '?'
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{UCT.Battle.InitialTransform}
  System.Nullable{BattleControl.BulletColor}:
    name:
      CSharp:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      - name: .
      - id: Global.BattleControl.BulletColor
        name: BulletColor
        isExternal: true
      - name: '?'
      VB:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      - name: .
      - id: Global.BattleControl.BulletColor
        name: BulletColor
        isExternal: true
      - name: '?'
    nameWithType:
      CSharp:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      - name: .
      - id: Global.BattleControl.BulletColor
        name: BulletColor
        isExternal: true
      - name: '?'
      VB:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      - name: .
      - id: Global.BattleControl.BulletColor
        name: BulletColor
        isExternal: true
      - name: '?'
    qualifiedName:
      CSharp:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      - name: .
      - id: Global.BattleControl.BulletColor
        name: BulletColor
        isExternal: true
      - name: '?'
      VB:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      - name: .
      - id: Global.BattleControl.BulletColor
        name: BulletColor
        isExternal: true
      - name: '?'
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{BattleControl.BulletColor}
  System.Nullable{SpriteMaskInteraction}:
    name:
      CSharp:
      - id: Global.SpriteMaskInteraction
        name: SpriteMaskInteraction
        isExternal: true
      - name: '?'
      VB:
      - id: Global.SpriteMaskInteraction
        name: SpriteMaskInteraction
        isExternal: true
      - name: '?'
    nameWithType:
      CSharp:
      - id: Global.SpriteMaskInteraction
        name: SpriteMaskInteraction
        isExternal: true
      - name: '?'
      VB:
      - id: Global.SpriteMaskInteraction
        name: SpriteMaskInteraction
        isExternal: true
      - name: '?'
    qualifiedName:
      CSharp:
      - id: Global.SpriteMaskInteraction
        name: SpriteMaskInteraction
        isExternal: true
      - name: '?'
      VB:
      - id: Global.SpriteMaskInteraction
        name: SpriteMaskInteraction
        isExternal: true
      - name: '?'
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{SpriteMaskInteraction}
  UCT.Battle.BulletController.SetBullet*:
    name:
      CSharp:
      - id: UCT.Battle.BulletController.SetBullet*
        name: SetBullet
      VB:
      - id: UCT.Battle.BulletController.SetBullet*
        name: SetBullet
    nameWithType:
      CSharp:
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetBullet*
        name: SetBullet
      VB:
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetBullet*
        name: SetBullet
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetBullet*
        name: SetBullet
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetBullet*
        name: SetBullet
    isDefinition: true
    commentId: Overload:UCT.Battle.BulletController.SetBullet
  UCT.Battle.BulletController.SetYellowBulletHit*:
    name:
      CSharp:
      - id: UCT.Battle.BulletController.SetYellowBulletHit*
        name: SetYellowBulletHit
      VB:
      - id: UCT.Battle.BulletController.SetYellowBulletHit*
        name: SetYellowBulletHit
    nameWithType:
      CSharp:
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetYellowBulletHit*
        name: SetYellowBulletHit
      VB:
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetYellowBulletHit*
        name: SetYellowBulletHit
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetYellowBulletHit*
        name: SetYellowBulletHit
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetYellowBulletHit*
        name: SetYellowBulletHit
    isDefinition: true
    commentId: Overload:UCT.Battle.BulletController.SetYellowBulletHit
  UCT.Battle.BulletController.SetGreenArrowHit*:
    name:
      CSharp:
      - id: UCT.Battle.BulletController.SetGreenArrowHit*
        name: SetGreenArrowHit
      VB:
      - id: UCT.Battle.BulletController.SetGreenArrowHit*
        name: SetGreenArrowHit
    nameWithType:
      CSharp:
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetGreenArrowHit*
        name: SetGreenArrowHit
      VB:
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetGreenArrowHit*
        name: SetGreenArrowHit
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetGreenArrowHit*
        name: SetGreenArrowHit
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetGreenArrowHit*
        name: SetGreenArrowHit
    isDefinition: true
    commentId: Overload:UCT.Battle.BulletController.SetGreenArrowHit
  Global.SpriteMaskInteraction:
    name:
      CSharp:
      - id: Global.SpriteMaskInteraction
        name: SpriteMaskInteraction
        isExternal: true
      VB:
      - id: Global.SpriteMaskInteraction
        name: SpriteMaskInteraction
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.SpriteMaskInteraction
        name: SpriteMaskInteraction
        isExternal: true
      VB:
      - id: Global.SpriteMaskInteraction
        name: SpriteMaskInteraction
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.SpriteMaskInteraction
        name: SpriteMaskInteraction
        isExternal: true
      VB:
      - id: Global.SpriteMaskInteraction
        name: SpriteMaskInteraction
        isExternal: true
    isDefinition: true
  UCT.Battle.BulletController.SetMask*:
    name:
      CSharp:
      - id: UCT.Battle.BulletController.SetMask*
        name: SetMask
      VB:
      - id: UCT.Battle.BulletController.SetMask*
        name: SetMask
    nameWithType:
      CSharp:
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetMask*
        name: SetMask
      VB:
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetMask*
        name: SetMask
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetMask*
        name: SetMask
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BulletController*
        name: BulletController
      - name: .
      - id: UCT.Battle.BulletController.SetMask*
        name: SetMask
    isDefinition: true
    commentId: Overload:UCT.Battle.BulletController.SetMask
  UCT.Battle.BulletController:
    name:
      CSharp:
      - id: UCT.Battle.BulletController
        name: BulletController
      VB:
      - id: UCT.Battle.BulletController
        name: BulletController
    nameWithType:
      CSharp:
      - id: UCT.Battle.BulletController
        name: BulletController
      VB:
      - id: UCT.Battle.BulletController
        name: BulletController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BulletController
        name: BulletController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BulletController
        name: BulletController
    isDefinition: true
    commentId: T:UCT.Battle.BulletController
  Global.Ease:
    name:
      CSharp:
      - id: Global.Ease
        name: Ease
        isExternal: true
      VB:
      - id: Global.Ease
        name: Ease
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Ease
        name: Ease
        isExternal: true
      VB:
      - id: Global.Ease
        name: Ease
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Ease
        name: Ease
        isExternal: true
      VB:
      - id: Global.Ease
        name: Ease
        isExternal: true
    isDefinition: true
  UCT.Battle.CameraShake.Shake*:
    name:
      CSharp:
      - id: UCT.Battle.CameraShake.Shake*
        name: Shake
      VB:
      - id: UCT.Battle.CameraShake.Shake*
        name: Shake
    nameWithType:
      CSharp:
      - id: UCT.Battle.CameraShake*
        name: CameraShake
      - name: .
      - id: UCT.Battle.CameraShake.Shake*
        name: Shake
      VB:
      - id: UCT.Battle.CameraShake*
        name: CameraShake
      - name: .
      - id: UCT.Battle.CameraShake.Shake*
        name: Shake
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.CameraShake*
        name: CameraShake
      - name: .
      - id: UCT.Battle.CameraShake.Shake*
        name: Shake
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.CameraShake*
        name: CameraShake
      - name: .
      - id: UCT.Battle.CameraShake.Shake*
        name: Shake
    isDefinition: true
    commentId: Overload:UCT.Battle.CameraShake.Shake
  UCT.Battle.CameraShake:
    name:
      CSharp:
      - id: UCT.Battle.CameraShake
        name: CameraShake
      VB:
      - id: UCT.Battle.CameraShake
        name: CameraShake
    nameWithType:
      CSharp:
      - id: UCT.Battle.CameraShake
        name: CameraShake
      VB:
      - id: UCT.Battle.CameraShake
        name: CameraShake
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.CameraShake
        name: CameraShake
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.CameraShake
        name: CameraShake
    isDefinition: true
    commentId: T:UCT.Battle.CameraShake
  Global.TypeWritter:
    name:
      CSharp:
      - id: Global.TypeWritter
        name: TypeWritter
        isExternal: true
      VB:
      - id: Global.TypeWritter
        name: TypeWritter
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.TypeWritter
        name: TypeWritter
        isExternal: true
      VB:
      - id: Global.TypeWritter
        name: TypeWritter
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.TypeWritter
        name: TypeWritter
        isExternal: true
      VB:
      - id: Global.TypeWritter
        name: TypeWritter
        isExternal: true
    isDefinition: true
  Global.TextMeshPro:
    name:
      CSharp:
      - id: Global.TextMeshPro
        name: TextMeshPro
        isExternal: true
      VB:
      - id: Global.TextMeshPro
        name: TextMeshPro
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.TextMeshPro
        name: TextMeshPro
        isExternal: true
      VB:
      - id: Global.TextMeshPro
        name: TextMeshPro
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.TextMeshPro
        name: TextMeshPro
        isExternal: true
      VB:
      - id: Global.TextMeshPro
        name: TextMeshPro
        isExternal: true
    isDefinition: true
  Global.EnemiesXmlDialogParser.Message:
    name:
      CSharp:
      - id: Global.EnemiesXmlDialogParser.Message
        name: Message
        isExternal: true
      VB:
      - id: Global.EnemiesXmlDialogParser.Message
        name: Message
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
        isExternal: true
      - name: .
      - id: Global.EnemiesXmlDialogParser.Message
        name: Message
        isExternal: true
      VB:
      - id: Global.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
        isExternal: true
      - name: .
      - id: Global.EnemiesXmlDialogParser.Message
        name: Message
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
        isExternal: true
      - name: .
      - id: Global.EnemiesXmlDialogParser.Message
        name: Message
        isExternal: true
      VB:
      - id: Global.EnemiesXmlDialogParser
        name: EnemiesXmlDialogParser
        isExternal: true
      - name: .
      - id: Global.EnemiesXmlDialogParser.Message
        name: Message
        isExternal: true
    isDefinition: true
    commentId: '!:Global.EnemiesXmlDialogParser.Message'
  UCT.Battle.DialogBubbleBehaviour.PositionChange*:
    name:
      CSharp:
      - id: UCT.Battle.DialogBubbleBehaviour.PositionChange*
        name: PositionChange
      VB:
      - id: UCT.Battle.DialogBubbleBehaviour.PositionChange*
        name: PositionChange
    nameWithType:
      CSharp:
      - id: UCT.Battle.DialogBubbleBehaviour*
        name: DialogBubbleBehaviour
      - name: .
      - id: UCT.Battle.DialogBubbleBehaviour.PositionChange*
        name: PositionChange
      VB:
      - id: UCT.Battle.DialogBubbleBehaviour*
        name: DialogBubbleBehaviour
      - name: .
      - id: UCT.Battle.DialogBubbleBehaviour.PositionChange*
        name: PositionChange
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.DialogBubbleBehaviour*
        name: DialogBubbleBehaviour
      - name: .
      - id: UCT.Battle.DialogBubbleBehaviour.PositionChange*
        name: PositionChange
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.DialogBubbleBehaviour*
        name: DialogBubbleBehaviour
      - name: .
      - id: UCT.Battle.DialogBubbleBehaviour.PositionChange*
        name: PositionChange
    isDefinition: true
    commentId: Overload:UCT.Battle.DialogBubbleBehaviour.PositionChange
  UCT.Battle.DialogBubbleBehaviour:
    name:
      CSharp:
      - id: UCT.Battle.DialogBubbleBehaviour
        name: DialogBubbleBehaviour
      VB:
      - id: UCT.Battle.DialogBubbleBehaviour
        name: DialogBubbleBehaviour
    nameWithType:
      CSharp:
      - id: UCT.Battle.DialogBubbleBehaviour
        name: DialogBubbleBehaviour
      VB:
      - id: UCT.Battle.DialogBubbleBehaviour
        name: DialogBubbleBehaviour
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.DialogBubbleBehaviour
        name: DialogBubbleBehaviour
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.DialogBubbleBehaviour
        name: DialogBubbleBehaviour
    isDefinition: true
    commentId: T:UCT.Battle.DialogBubbleBehaviour
  Global.BulletControl:
    name:
      CSharp:
      - id: Global.BulletControl
        name: BulletControl
        isExternal: true
      VB:
      - id: Global.BulletControl
        name: BulletControl
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.BulletControl
        name: BulletControl
        isExternal: true
      VB:
      - id: Global.BulletControl
        name: BulletControl
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.BulletControl
        name: BulletControl
        isExternal: true
      VB:
      - id: Global.BulletControl
        name: BulletControl
        isExternal: true
    isDefinition: true
    commentId: '!:Global.BulletControl'
  UCT.Battle.BulletResourceManager.LoadBullet*:
    name:
      CSharp:
      - id: UCT.Battle.BulletResourceManager.LoadBullet*
        name: LoadBullet
      VB:
      - id: UCT.Battle.BulletResourceManager.LoadBullet*
        name: LoadBullet
    nameWithType:
      CSharp:
      - id: UCT.Battle.BulletResourceManager*
        name: BulletResourceManager
      - name: .
      - id: UCT.Battle.BulletResourceManager.LoadBullet*
        name: LoadBullet
      VB:
      - id: UCT.Battle.BulletResourceManager*
        name: BulletResourceManager
      - name: .
      - id: UCT.Battle.BulletResourceManager.LoadBullet*
        name: LoadBullet
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BulletResourceManager*
        name: BulletResourceManager
      - name: .
      - id: UCT.Battle.BulletResourceManager.LoadBullet*
        name: LoadBullet
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BulletResourceManager*
        name: BulletResourceManager
      - name: .
      - id: UCT.Battle.BulletResourceManager.LoadBullet*
        name: LoadBullet
    isDefinition: true
    commentId: Overload:UCT.Battle.BulletResourceManager.LoadBullet
  UCT.Battle.BulletResourceManager:
    name:
      CSharp:
      - id: UCT.Battle.BulletResourceManager
        name: BulletResourceManager
      VB:
      - id: UCT.Battle.BulletResourceManager
        name: BulletResourceManager
    nameWithType:
      CSharp:
      - id: UCT.Battle.BulletResourceManager
        name: BulletResourceManager
      VB:
      - id: UCT.Battle.BulletResourceManager
        name: BulletResourceManager
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BulletResourceManager
        name: BulletResourceManager
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BulletResourceManager
        name: BulletResourceManager
    isDefinition: true
    commentId: T:UCT.Battle.BulletResourceManager
  UCT.Battle.EnemiesHpLineController:
    name:
      CSharp:
      - id: UCT.Battle.EnemiesHpLineController
        name: EnemiesHpLineController
      VB:
      - id: UCT.Battle.EnemiesHpLineController
        name: EnemiesHpLineController
    nameWithType:
      CSharp:
      - id: UCT.Battle.EnemiesHpLineController
        name: EnemiesHpLineController
      VB:
      - id: UCT.Battle.EnemiesHpLineController
        name: EnemiesHpLineController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.EnemiesHpLineController
        name: EnemiesHpLineController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.EnemiesHpLineController
        name: EnemiesHpLineController
    isDefinition: true
    commentId: T:UCT.Battle.EnemiesHpLineController
  UCT.Battle.YellowBulletController:
    name:
      CSharp:
      - id: UCT.Battle.YellowBulletController
        name: YellowBulletController
      VB:
      - id: UCT.Battle.YellowBulletController
        name: YellowBulletController
    nameWithType:
      CSharp:
      - id: UCT.Battle.YellowBulletController
        name: YellowBulletController
      VB:
      - id: UCT.Battle.YellowBulletController
        name: YellowBulletController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.YellowBulletController
        name: YellowBulletController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.YellowBulletController
        name: YellowBulletController
    isDefinition: true
    commentId: T:UCT.Battle.YellowBulletController
  System.Collections.Generic.List{Sprite}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.Sprite
        name: Sprite
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.Sprite
        name: Sprite
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.Sprite
        name: Sprite
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.Sprite
        name: Sprite
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.Sprite
        name: Sprite
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.Sprite
        name: Sprite
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Sprite}
  UCT.Battle.BoardController:
    name:
      CSharp:
      - id: UCT.Battle.BoardController
        name: BoardController
      VB:
      - id: UCT.Battle.BoardController
        name: BoardController
    nameWithType:
      CSharp:
      - id: UCT.Battle.BoardController
        name: BoardController
      VB:
      - id: UCT.Battle.BoardController
        name: BoardController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BoardController
        name: BoardController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BoardController
        name: BoardController
    isDefinition: true
    commentId: T:UCT.Battle.BoardController
  System.Collections.Generic.List{SpriteRenderer}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.SpriteRenderer
        name: SpriteRenderer
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.SpriteRenderer
        name: SpriteRenderer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.SpriteRenderer
        name: SpriteRenderer
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.SpriteRenderer
        name: SpriteRenderer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.SpriteRenderer
        name: SpriteRenderer
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.SpriteRenderer
        name: SpriteRenderer
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{SpriteRenderer}
  UCT.Battle.SelectUIController.SelectedButton:
    name:
      CSharp:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.SelectedButton
        name: SelectedButton
      VB:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.SelectedButton
        name: SelectedButton
    nameWithType:
      CSharp:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.SelectedButton
        name: SelectedButton
      VB:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.SelectedButton
        name: SelectedButton
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.SelectedButton
        name: SelectedButton
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.SelectedButton
        name: SelectedButton
    isDefinition: true
    parent: UCT.Battle
    commentId: T:UCT.Battle.SelectUIController.SelectedButton
  UCT.Battle.SelectUIController.SelectedLayer:
    name:
      CSharp:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.SelectedLayer
        name: SelectedLayer
      VB:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.SelectedLayer
        name: SelectedLayer
    nameWithType:
      CSharp:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.SelectedLayer
        name: SelectedLayer
      VB:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.SelectedLayer
        name: SelectedLayer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.SelectedLayer
        name: SelectedLayer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.SelectedLayer
        name: SelectedLayer
    isDefinition: true
    parent: UCT.Battle
    commentId: T:UCT.Battle.SelectUIController.SelectedLayer
  System.Collections.Generic.List{UCT.Battle.EnemiesController}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.Battle.EnemiesController
        name: EnemiesController
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Battle.EnemiesController
        name: EnemiesController
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.Battle.EnemiesController
        name: EnemiesController
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Battle.EnemiesController
        name: EnemiesController
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.EnemiesController
        name: EnemiesController
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.EnemiesController
        name: EnemiesController
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{UCT.Battle.EnemiesController}
  UCT.Battle.PlayerLineController:
    name:
      CSharp:
      - id: UCT.Battle.PlayerLineController
        name: PlayerLineController
      VB:
      - id: UCT.Battle.PlayerLineController
        name: PlayerLineController
    nameWithType:
      CSharp:
      - id: UCT.Battle.PlayerLineController
        name: PlayerLineController
      VB:
      - id: UCT.Battle.PlayerLineController
        name: PlayerLineController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.PlayerLineController
        name: PlayerLineController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.PlayerLineController
        name: PlayerLineController
    isDefinition: true
    parent: UCT.Battle
    commentId: T:UCT.Battle.PlayerLineController
  UCT.Battle.SelectUIController.PlayerLineController*:
    name:
      CSharp:
      - id: UCT.Battle.SelectUIController.PlayerLineController*
        name: PlayerLineController
      VB:
      - id: UCT.Battle.SelectUIController.PlayerLineController*
        name: PlayerLineController
    nameWithType:
      CSharp:
      - id: UCT.Battle.SelectUIController*
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.PlayerLineController*
        name: PlayerLineController
      VB:
      - id: UCT.Battle.SelectUIController*
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.PlayerLineController*
        name: PlayerLineController
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.SelectUIController*
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.PlayerLineController*
        name: PlayerLineController
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.SelectUIController*
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.PlayerLineController*
        name: PlayerLineController
    isDefinition: true
    commentId: Overload:UCT.Battle.SelectUIController.PlayerLineController
  UCT.Battle.SelectUIController.EnterPlayerTurn*:
    name:
      CSharp:
      - id: UCT.Battle.SelectUIController.EnterPlayerTurn*
        name: EnterPlayerTurn
      VB:
      - id: UCT.Battle.SelectUIController.EnterPlayerTurn*
        name: EnterPlayerTurn
    nameWithType:
      CSharp:
      - id: UCT.Battle.SelectUIController*
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.EnterPlayerTurn*
        name: EnterPlayerTurn
      VB:
      - id: UCT.Battle.SelectUIController*
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.EnterPlayerTurn*
        name: EnterPlayerTurn
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.SelectUIController*
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.EnterPlayerTurn*
        name: EnterPlayerTurn
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.SelectUIController*
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.EnterPlayerTurn*
        name: EnterPlayerTurn
    isDefinition: true
    commentId: Overload:UCT.Battle.SelectUIController.EnterPlayerTurn
  UCT.Battle.SelectUIController.UITextMode:
    name:
      CSharp:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.UITextMode
        name: UITextMode
      VB:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.UITextMode
        name: UITextMode
    nameWithType:
      CSharp:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.UITextMode
        name: UITextMode
      VB:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.UITextMode
        name: UITextMode
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.UITextMode
        name: UITextMode
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.UITextMode
        name: UITextMode
    isDefinition: true
    parent: UCT.Battle
    commentId: T:UCT.Battle.SelectUIController.UITextMode
  UCT.Battle.SelectUIController.UITextUpdate*:
    name:
      CSharp:
      - id: UCT.Battle.SelectUIController.UITextUpdate*
        name: UITextUpdate
      VB:
      - id: UCT.Battle.SelectUIController.UITextUpdate*
        name: UITextUpdate
    nameWithType:
      CSharp:
      - id: UCT.Battle.SelectUIController*
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.UITextUpdate*
        name: UITextUpdate
      VB:
      - id: UCT.Battle.SelectUIController*
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.UITextUpdate*
        name: UITextUpdate
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.SelectUIController*
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.UITextUpdate*
        name: UITextUpdate
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.SelectUIController*
        name: SelectUIController
      - name: .
      - id: UCT.Battle.SelectUIController.UITextUpdate*
        name: UITextUpdate
    isDefinition: true
    commentId: Overload:UCT.Battle.SelectUIController.UITextUpdate
  UCT.Battle.SelectUIController:
    name:
      CSharp:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      VB:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
    nameWithType:
      CSharp:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      VB:
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.SelectUIController
        name: SelectUIController
    isDefinition: true
    commentId: T:UCT.Battle.SelectUIController
  UCT.Battle.SpriteSplitFly:
    name:
      CSharp:
      - id: UCT.Battle.SpriteSplitFly
        name: SpriteSplitFly
      VB:
      - id: UCT.Battle.SpriteSplitFly
        name: SpriteSplitFly
    nameWithType:
      CSharp:
      - id: UCT.Battle.SpriteSplitFly
        name: SpriteSplitFly
      VB:
      - id: UCT.Battle.SpriteSplitFly
        name: SpriteSplitFly
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.SpriteSplitFly
        name: SpriteSplitFly
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.SpriteSplitFly
        name: SpriteSplitFly
    isDefinition: true
    commentId: T:UCT.Battle.SpriteSplitFly
  Global.Animator:
    name:
      CSharp:
      - id: Global.Animator
        name: Animator
        isExternal: true
      VB:
      - id: Global.Animator
        name: Animator
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Animator
        name: Animator
        isExternal: true
      VB:
      - id: Global.Animator
        name: Animator
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Animator
        name: Animator
        isExternal: true
      VB:
      - id: Global.Animator
        name: Animator
        isExternal: true
    isDefinition: true
  UCT.Battle.SpriteSplitController:
    name:
      CSharp:
      - id: UCT.Battle.SpriteSplitController
        name: SpriteSplitController
      VB:
      - id: UCT.Battle.SpriteSplitController
        name: SpriteSplitController
    nameWithType:
      CSharp:
      - id: UCT.Battle.SpriteSplitController
        name: SpriteSplitController
      VB:
      - id: UCT.Battle.SpriteSplitController
        name: SpriteSplitController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.SpriteSplitController
        name: SpriteSplitController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.SpriteSplitController
        name: SpriteSplitController
    isDefinition: true
    parent: UCT.Battle
    commentId: T:UCT.Battle.SpriteSplitController
  System.Action[]:
    name:
      CSharp:
      - id: System.Action
        name: Action
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.Action
        name: Action
        isExternal: true
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: System.Action
        name: Action
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.Action
        name: Action
        isExternal: true
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action
        name: Action
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action
        name: Action
        isExternal: true
      - name: (
      - name: )
    isDefinition: false
  Global.IEnemy:
    name:
      CSharp:
      - id: Global.IEnemy
        name: IEnemy
        isExternal: true
      VB:
      - id: Global.IEnemy
        name: IEnemy
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.IEnemy
        name: IEnemy
        isExternal: true
      VB:
      - id: Global.IEnemy
        name: IEnemy
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.IEnemy
        name: IEnemy
        isExternal: true
      VB:
      - id: Global.IEnemy
        name: IEnemy
        isExternal: true
    isDefinition: true
    commentId: '!:Global.IEnemy'
  UCT.Battle.EnemiesController.Enemy*:
    name:
      CSharp:
      - id: UCT.Battle.EnemiesController.Enemy*
        name: Enemy
      VB:
      - id: UCT.Battle.EnemiesController.Enemy*
        name: Enemy
    nameWithType:
      CSharp:
      - id: UCT.Battle.EnemiesController*
        name: EnemiesController
      - name: .
      - id: UCT.Battle.EnemiesController.Enemy*
        name: Enemy
      VB:
      - id: UCT.Battle.EnemiesController*
        name: EnemiesController
      - name: .
      - id: UCT.Battle.EnemiesController.Enemy*
        name: Enemy
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.EnemiesController*
        name: EnemiesController
      - name: .
      - id: UCT.Battle.EnemiesController.Enemy*
        name: Enemy
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.EnemiesController*
        name: EnemiesController
      - name: .
      - id: UCT.Battle.EnemiesController.Enemy*
        name: Enemy
    isDefinition: true
    commentId: Overload:UCT.Battle.EnemiesController.Enemy
  UCT.Battle.EnemyState:
    name:
      CSharp:
      - id: UCT.Battle.EnemyState
        name: EnemyState
      VB:
      - id: UCT.Battle.EnemyState
        name: EnemyState
    nameWithType:
      CSharp:
      - id: UCT.Battle.EnemyState
        name: EnemyState
      VB:
      - id: UCT.Battle.EnemyState
        name: EnemyState
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.EnemyState
        name: EnemyState
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.EnemyState
        name: EnemyState
    isDefinition: true
    parent: UCT.Battle
    commentId: T:UCT.Battle.EnemyState
  System.Collections.Generic.List{AudioClip}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{AudioClip}
  UCT.Battle.GameOverController.PlayFX*:
    name:
      CSharp:
      - id: UCT.Battle.GameOverController.PlayFX*
        name: PlayFX
      VB:
      - id: UCT.Battle.GameOverController.PlayFX*
        name: PlayFX
    nameWithType:
      CSharp:
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.PlayFX*
        name: PlayFX
      VB:
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.PlayFX*
        name: PlayFX
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.PlayFX*
        name: PlayFX
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.PlayFX*
        name: PlayFX
    isDefinition: true
    commentId: Overload:UCT.Battle.GameOverController.PlayFX
  UCT.Battle.GameOverController.StartParticleSystem*:
    name:
      CSharp:
      - id: UCT.Battle.GameOverController.StartParticleSystem*
        name: StartParticleSystem
      VB:
      - id: UCT.Battle.GameOverController.StartParticleSystem*
        name: StartParticleSystem
    nameWithType:
      CSharp:
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.StartParticleSystem*
        name: StartParticleSystem
      VB:
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.StartParticleSystem*
        name: StartParticleSystem
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.StartParticleSystem*
        name: StartParticleSystem
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.StartParticleSystem*
        name: StartParticleSystem
    isDefinition: true
    commentId: Overload:UCT.Battle.GameOverController.StartParticleSystem
  UCT.Battle.GameOverController.Type*:
    name:
      CSharp:
      - id: UCT.Battle.GameOverController.Type*
        name: Type
      VB:
      - id: UCT.Battle.GameOverController.Type*
        name: Type
    nameWithType:
      CSharp:
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.Type*
        name: Type
      VB:
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.Type*
        name: Type
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.Type*
        name: Type
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.Type*
        name: Type
    isDefinition: true
    commentId: Overload:UCT.Battle.GameOverController.Type
  UCT.Battle.GameOverController.Prank*:
    name:
      CSharp:
      - id: UCT.Battle.GameOverController.Prank*
        name: Prank
      VB:
      - id: UCT.Battle.GameOverController.Prank*
        name: Prank
    nameWithType:
      CSharp:
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.Prank*
        name: Prank
      VB:
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.Prank*
        name: Prank
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.Prank*
        name: Prank
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.GameOverController*
        name: GameOverController
      - name: .
      - id: UCT.Battle.GameOverController.Prank*
        name: Prank
    isDefinition: true
    commentId: Overload:UCT.Battle.GameOverController.Prank
  UCT.Battle.GameOverController:
    name:
      CSharp:
      - id: UCT.Battle.GameOverController
        name: GameOverController
      VB:
      - id: UCT.Battle.GameOverController
        name: GameOverController
    nameWithType:
      CSharp:
      - id: UCT.Battle.GameOverController
        name: GameOverController
      VB:
      - id: UCT.Battle.GameOverController
        name: GameOverController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.GameOverController
        name: GameOverController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.GameOverController
        name: GameOverController
    isDefinition: true
    commentId: T:UCT.Battle.GameOverController
  System.Collections.Generic.List{LineRenderer}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.LineRenderer
        name: LineRenderer
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.LineRenderer
        name: LineRenderer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.LineRenderer
        name: LineRenderer
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.LineRenderer
        name: LineRenderer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.LineRenderer
        name: LineRenderer
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.LineRenderer
        name: LineRenderer
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{LineRenderer}
  UCT.Battle.PlayerLineController.GetFromPool*:
    name:
      CSharp:
      - id: UCT.Battle.PlayerLineController.GetFromPool*
        name: GetFromPool
      VB:
      - id: UCT.Battle.PlayerLineController.GetFromPool*
        name: GetFromPool
    nameWithType:
      CSharp:
      - id: UCT.Battle.PlayerLineController*
        name: PlayerLineController
      - name: .
      - id: UCT.Battle.PlayerLineController.GetFromPool*
        name: GetFromPool
      VB:
      - id: UCT.Battle.PlayerLineController*
        name: PlayerLineController
      - name: .
      - id: UCT.Battle.PlayerLineController.GetFromPool*
        name: GetFromPool
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.PlayerLineController*
        name: PlayerLineController
      - name: .
      - id: UCT.Battle.PlayerLineController.GetFromPool*
        name: GetFromPool
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.PlayerLineController*
        name: PlayerLineController
      - name: .
      - id: UCT.Battle.PlayerLineController.GetFromPool*
        name: GetFromPool
    isDefinition: true
    commentId: Overload:UCT.Battle.PlayerLineController.GetFromPool
  UCT.Battle.PlayerLineController.ReturnPool*:
    name:
      CSharp:
      - id: UCT.Battle.PlayerLineController.ReturnPool*
        name: ReturnPool
      VB:
      - id: UCT.Battle.PlayerLineController.ReturnPool*
        name: ReturnPool
    nameWithType:
      CSharp:
      - id: UCT.Battle.PlayerLineController*
        name: PlayerLineController
      - name: .
      - id: UCT.Battle.PlayerLineController.ReturnPool*
        name: ReturnPool
      VB:
      - id: UCT.Battle.PlayerLineController*
        name: PlayerLineController
      - name: .
      - id: UCT.Battle.PlayerLineController.ReturnPool*
        name: ReturnPool
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.PlayerLineController*
        name: PlayerLineController
      - name: .
      - id: UCT.Battle.PlayerLineController.ReturnPool*
        name: ReturnPool
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.PlayerLineController*
        name: PlayerLineController
      - name: .
      - id: UCT.Battle.PlayerLineController.ReturnPool*
        name: ReturnPool
    isDefinition: true
    commentId: Overload:UCT.Battle.PlayerLineController.ReturnPool
  UCT.Battle.BattlePlayerController.PlayerDirection:
    name:
      CSharp:
      - id: UCT.Battle.BattlePlayerController
        name: BattlePlayerController
      - name: .
      - id: UCT.Battle.BattlePlayerController.PlayerDirection
        name: PlayerDirection
      VB:
      - id: UCT.Battle.BattlePlayerController
        name: BattlePlayerController
      - name: .
      - id: UCT.Battle.BattlePlayerController.PlayerDirection
        name: PlayerDirection
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattlePlayerController
        name: BattlePlayerController
      - name: .
      - id: UCT.Battle.BattlePlayerController.PlayerDirection
        name: PlayerDirection
      VB:
      - id: UCT.Battle.BattlePlayerController
        name: BattlePlayerController
      - name: .
      - id: UCT.Battle.BattlePlayerController.PlayerDirection
        name: PlayerDirection
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattlePlayerController
        name: BattlePlayerController
      - name: .
      - id: UCT.Battle.BattlePlayerController.PlayerDirection
        name: PlayerDirection
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattlePlayerController
        name: BattlePlayerController
      - name: .
      - id: UCT.Battle.BattlePlayerController.PlayerDirection
        name: PlayerDirection
    isDefinition: true
    parent: UCT.Battle
    commentId: T:UCT.Battle.BattlePlayerController.PlayerDirection
  Global.ParticleSystem:
    name:
      CSharp:
      - id: Global.ParticleSystem
        name: ParticleSystem
        isExternal: true
      VB:
      - id: Global.ParticleSystem
        name: ParticleSystem
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.ParticleSystem
        name: ParticleSystem
        isExternal: true
      VB:
      - id: Global.ParticleSystem
        name: ParticleSystem
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.ParticleSystem
        name: ParticleSystem
        isExternal: true
      VB:
      - id: Global.ParticleSystem
        name: ParticleSystem
        isExternal: true
    isDefinition: true
    commentId: '!:Global.ParticleSystem'
  Global.CircleCollider2D:
    name:
      CSharp:
      - id: Global.CircleCollider2D
        name: CircleCollider2D
        isExternal: true
      VB:
      - id: Global.CircleCollider2D
        name: CircleCollider2D
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.CircleCollider2D
        name: CircleCollider2D
        isExternal: true
      VB:
      - id: Global.CircleCollider2D
        name: CircleCollider2D
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.CircleCollider2D
        name: CircleCollider2D
        isExternal: true
      VB:
      - id: Global.CircleCollider2D
        name: CircleCollider2D
        isExternal: true
    isDefinition: true
    commentId: '!:Global.CircleCollider2D'
  Global.BattleControl.PlayerColor:
    name:
      CSharp:
      - id: Global.BattleControl.PlayerColor
        name: PlayerColor
        isExternal: true
      VB:
      - id: Global.BattleControl.PlayerColor
        name: PlayerColor
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      - name: .
      - id: Global.BattleControl.PlayerColor
        name: PlayerColor
        isExternal: true
      VB:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      - name: .
      - id: Global.BattleControl.PlayerColor
        name: PlayerColor
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      - name: .
      - id: Global.BattleControl.PlayerColor
        name: PlayerColor
        isExternal: true
      VB:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      - name: .
      - id: Global.BattleControl.PlayerColor
        name: PlayerColor
        isExternal: true
    isDefinition: true
  UCT.Battle.BattlePlayerController.ChangePlayerColor*:
    name:
      CSharp:
      - id: UCT.Battle.BattlePlayerController.ChangePlayerColor*
        name: ChangePlayerColor
      VB:
      - id: UCT.Battle.BattlePlayerController.ChangePlayerColor*
        name: ChangePlayerColor
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattlePlayerController*
        name: BattlePlayerController
      - name: .
      - id: UCT.Battle.BattlePlayerController.ChangePlayerColor*
        name: ChangePlayerColor
      VB:
      - id: UCT.Battle.BattlePlayerController*
        name: BattlePlayerController
      - name: .
      - id: UCT.Battle.BattlePlayerController.ChangePlayerColor*
        name: ChangePlayerColor
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattlePlayerController*
        name: BattlePlayerController
      - name: .
      - id: UCT.Battle.BattlePlayerController.ChangePlayerColor*
        name: ChangePlayerColor
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattlePlayerController*
        name: BattlePlayerController
      - name: .
      - id: UCT.Battle.BattlePlayerController.ChangePlayerColor*
        name: ChangePlayerColor
    isDefinition: true
    commentId: Overload:UCT.Battle.BattlePlayerController.ChangePlayerColor
  UCT.Battle.BattlePlayerController:
    name:
      CSharp:
      - id: UCT.Battle.BattlePlayerController
        name: BattlePlayerController
      VB:
      - id: UCT.Battle.BattlePlayerController
        name: BattlePlayerController
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattlePlayerController
        name: BattlePlayerController
      VB:
      - id: UCT.Battle.BattlePlayerController
        name: BattlePlayerController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattlePlayerController
        name: BattlePlayerController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattlePlayerController
        name: BattlePlayerController
    isDefinition: true
    commentId: T:UCT.Battle.BattlePlayerController
  System.Nullable{Vector3}:
    name:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '?'
      VB:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '?'
    nameWithType:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '?'
      VB:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '?'
    qualifiedName:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '?'
      VB:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '?'
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{Vector3}
  UCT.Battle.InitialTransform.Position*:
    name:
      CSharp:
      - id: UCT.Battle.InitialTransform.Position*
        name: Position
      VB:
      - id: UCT.Battle.InitialTransform.Position*
        name: Position
    nameWithType:
      CSharp:
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Position*
        name: Position
      VB:
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Position*
        name: Position
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Position*
        name: Position
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Position*
        name: Position
    isDefinition: true
    commentId: Overload:UCT.Battle.InitialTransform.Position
  System.Nullable{Quaternion}:
    name:
      CSharp:
      - id: Global.Quaternion
        name: Quaternion
        isExternal: true
      - name: '?'
      VB:
      - id: Global.Quaternion
        name: Quaternion
        isExternal: true
      - name: '?'
    nameWithType:
      CSharp:
      - id: Global.Quaternion
        name: Quaternion
        isExternal: true
      - name: '?'
      VB:
      - id: Global.Quaternion
        name: Quaternion
        isExternal: true
      - name: '?'
    qualifiedName:
      CSharp:
      - id: Global.Quaternion
        name: Quaternion
        isExternal: true
      - name: '?'
      VB:
      - id: Global.Quaternion
        name: Quaternion
        isExternal: true
      - name: '?'
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{Quaternion}
  UCT.Battle.InitialTransform.Rotation*:
    name:
      CSharp:
      - id: UCT.Battle.InitialTransform.Rotation*
        name: Rotation
      VB:
      - id: UCT.Battle.InitialTransform.Rotation*
        name: Rotation
    nameWithType:
      CSharp:
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Rotation*
        name: Rotation
      VB:
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Rotation*
        name: Rotation
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Rotation*
        name: Rotation
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Rotation*
        name: Rotation
    isDefinition: true
    commentId: Overload:UCT.Battle.InitialTransform.Rotation
  UCT.Battle.InitialTransform.Scale*:
    name:
      CSharp:
      - id: UCT.Battle.InitialTransform.Scale*
        name: Scale
      VB:
      - id: UCT.Battle.InitialTransform.Scale*
        name: Scale
    nameWithType:
      CSharp:
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Scale*
        name: Scale
      VB:
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Scale*
        name: Scale
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Scale*
        name: Scale
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Scale*
        name: Scale
    isDefinition: true
    commentId: Overload:UCT.Battle.InitialTransform.Scale
  UCT.Battle.InitialTransform.#ctor*:
    name:
      CSharp:
      - id: UCT.Battle.InitialTransform.#ctor*
        name: InitialTransform
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.#ctor*
        name: InitialTransform
      VB:
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.#ctor*
        name: InitialTransform
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Battle.InitialTransform.#ctor
  UCT.Battle.InitialTransform:
    name:
      CSharp:
      - id: UCT.Battle.InitialTransform
        name: InitialTransform
      VB:
      - id: UCT.Battle.InitialTransform
        name: InitialTransform
    nameWithType:
      CSharp:
      - id: UCT.Battle.InitialTransform
        name: InitialTransform
      VB:
      - id: UCT.Battle.InitialTransform
        name: InitialTransform
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform
        name: InitialTransform
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform
        name: InitialTransform
    isDefinition: true
    parent: UCT.Battle
    commentId: T:UCT.Battle.InitialTransform
  UCT.Battle.InitialTransform.Equals*:
    name:
      CSharp:
      - id: UCT.Battle.InitialTransform.Equals*
        name: Equals
      VB:
      - id: UCT.Battle.InitialTransform.Equals*
        name: Equals
    nameWithType:
      CSharp:
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Equals*
        name: Equals
      VB:
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Equals*
        name: Equals
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Equals*
        name: Equals
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.Equals*
        name: Equals
    isDefinition: true
    commentId: Overload:UCT.Battle.InitialTransform.Equals
  UCT.Battle.InitialTransform.GetHashCode*:
    name:
      CSharp:
      - id: UCT.Battle.InitialTransform.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.Battle.InitialTransform.GetHashCode*
        name: GetHashCode
    nameWithType:
      CSharp:
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.GetHashCode*
        name: GetHashCode
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.InitialTransform*
        name: InitialTransform
      - name: .
      - id: UCT.Battle.InitialTransform.GetHashCode*
        name: GetHashCode
    isDefinition: true
    commentId: Overload:UCT.Battle.InitialTransform.GetHashCode
  UCT.Battle.ProjectionBox:
    name:
      CSharp:
      - id: UCT.Battle.ProjectionBox
        name: ProjectionBox
      VB:
      - id: UCT.Battle.ProjectionBox
        name: ProjectionBox
    nameWithType:
      CSharp:
      - id: UCT.Battle.ProjectionBox
        name: ProjectionBox
      VB:
      - id: UCT.Battle.ProjectionBox
        name: ProjectionBox
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.ProjectionBox
        name: ProjectionBox
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.ProjectionBox
        name: ProjectionBox
    isDefinition: true
    commentId: T:UCT.Battle.ProjectionBox
  System.Collections.Generic.List{Color}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.Color
        name: Color
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.Color
        name: Color
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.Color
        name: Color
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.Color
        name: Color
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.Color
        name: Color
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.Color
        name: Color
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Color}
  UCT.Battle.SpriteSplitController.spriteRenderer*:
    name:
      CSharp:
      - id: UCT.Battle.SpriteSplitController.spriteRenderer*
        name: spriteRenderer
      VB:
      - id: UCT.Battle.SpriteSplitController.spriteRenderer*
        name: spriteRenderer
    nameWithType:
      CSharp:
      - id: UCT.Battle.SpriteSplitController*
        name: SpriteSplitController
      - name: .
      - id: UCT.Battle.SpriteSplitController.spriteRenderer*
        name: spriteRenderer
      VB:
      - id: UCT.Battle.SpriteSplitController*
        name: SpriteSplitController
      - name: .
      - id: UCT.Battle.SpriteSplitController.spriteRenderer*
        name: spriteRenderer
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.SpriteSplitController*
        name: SpriteSplitController
      - name: .
      - id: UCT.Battle.SpriteSplitController.spriteRenderer*
        name: spriteRenderer
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.SpriteSplitController*
        name: SpriteSplitController
      - name: .
      - id: UCT.Battle.SpriteSplitController.spriteRenderer*
        name: spriteRenderer
    isDefinition: true
    commentId: Overload:UCT.Battle.SpriteSplitController.spriteRenderer
  UCT.Battle.SpriteSplitController.ReturnPool*:
    name:
      CSharp:
      - id: UCT.Battle.SpriteSplitController.ReturnPool*
        name: ReturnPool
      VB:
      - id: UCT.Battle.SpriteSplitController.ReturnPool*
        name: ReturnPool
    nameWithType:
      CSharp:
      - id: UCT.Battle.SpriteSplitController*
        name: SpriteSplitController
      - name: .
      - id: UCT.Battle.SpriteSplitController.ReturnPool*
        name: ReturnPool
      VB:
      - id: UCT.Battle.SpriteSplitController*
        name: SpriteSplitController
      - name: .
      - id: UCT.Battle.SpriteSplitController.ReturnPool*
        name: ReturnPool
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.SpriteSplitController*
        name: SpriteSplitController
      - name: .
      - id: UCT.Battle.SpriteSplitController.ReturnPool*
        name: ReturnPool
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.SpriteSplitController*
        name: SpriteSplitController
      - name: .
      - id: UCT.Battle.SpriteSplitController.ReturnPool*
        name: ReturnPool
    isDefinition: true
    commentId: Overload:UCT.Battle.SpriteSplitController.ReturnPool
  UCT.Battle.PolygonMask:
    name:
      CSharp:
      - id: UCT.Battle.PolygonMask
        name: PolygonMask
      VB:
      - id: UCT.Battle.PolygonMask
        name: PolygonMask
    nameWithType:
      CSharp:
      - id: UCT.Battle.PolygonMask
        name: PolygonMask
      VB:
      - id: UCT.Battle.PolygonMask
        name: PolygonMask
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.PolygonMask
        name: PolygonMask
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.PolygonMask
        name: PolygonMask
    isDefinition: true
    commentId: T:UCT.Battle.PolygonMask
  UCT.Battle.ProjectionCheckCollider:
    name:
      CSharp:
      - id: UCT.Battle.ProjectionCheckCollider
        name: ProjectionCheckCollider
      VB:
      - id: UCT.Battle.ProjectionCheckCollider
        name: ProjectionCheckCollider
    nameWithType:
      CSharp:
      - id: UCT.Battle.ProjectionCheckCollider
        name: ProjectionCheckCollider
      VB:
      - id: UCT.Battle.ProjectionCheckCollider
        name: ProjectionCheckCollider
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.ProjectionCheckCollider
        name: ProjectionCheckCollider
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.ProjectionCheckCollider
        name: ProjectionCheckCollider
    isDefinition: true
    commentId: T:UCT.Battle.ProjectionCheckCollider
  UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames*:
    name:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames*
        name: EnemyNames
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames*
        name: EnemyNames
    nameWithType:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig*
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames*
        name: EnemyNames
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig*
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames*
        name: EnemyNames
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs*
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig*
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames*
        name: EnemyNames
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs*
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig*
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames*
        name: EnemyNames
    isDefinition: true
    commentId: Overload:UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames
  System.Collections.Generic.List{System.Int32[]}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '['
      - name: ']'
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: (
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '['
      - name: ']'
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: (
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '['
      - name: ']'
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: (
      - name: )
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Int32[]}
  UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList*:
    name:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList*
        name: validIndicesList
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList*
        name: validIndicesList
    nameWithType:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig*
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList*
        name: validIndicesList
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig*
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList*
        name: validIndicesList
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs*
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig*
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList*
        name: validIndicesList
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs*
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig*
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList*
        name: validIndicesList
    isDefinition: true
    commentId: Overload:UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList
  System.Collections.Generic.IEnumerator`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerator`1
  System.Collections.Generic.IEnumerator{System.Single}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        isExternal: true
      - name: <
      - id: System.Single
        name: float
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Single
        name: Single
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        isExternal: true
      - name: <
      - id: System.Single
        name: float
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Single
        name: Single
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        isExternal: true
      - name: <
      - id: System.Single
        name: float
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Single
        name: Single
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerator`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerator{System.Single}
  System.Int32[]:
    name:
      CSharp:
      - id: System.Int32
        name: int
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: System.Int32
        name: int
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: System.Int32
        name: int
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: (
      - name: )
    isDefinition: false
  Global.ObjectPool:
    name:
      CSharp:
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      VB:
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      VB:
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      VB:
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
    isDefinition: true
  UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns*:
    name:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns*
        name: _EnemyTurns
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns*
        name: _EnemyTurns
    nameWithType:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig*
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns*
        name: _EnemyTurns
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig*
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns*
        name: _EnemyTurns
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs*
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig*
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns*
        name: _EnemyTurns
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs*
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig*
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns*
        name: _EnemyTurns
    isDefinition: true
    commentId: Overload:UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns
  UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig:
    name:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
    nameWithType:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
    isDefinition: true
    parent: UCT.Battle.MultiEnemiesConfigs
    commentId: T:UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
  UCT.Battle.MultiEnemiesConfigs:
    name:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
    isDefinition: true
    commentId: N:UCT.Battle.MultiEnemiesConfigs
  UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.EnemyNames*:
    name:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.EnemyNames*
        name: EnemyNames
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.EnemyNames*
        name: EnemyNames
    nameWithType:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config*
        name: Npc1AndNpc2Config
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.EnemyNames*
        name: EnemyNames
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config*
        name: Npc1AndNpc2Config
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.EnemyNames*
        name: EnemyNames
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs*
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config*
        name: Npc1AndNpc2Config
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.EnemyNames*
        name: EnemyNames
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs*
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config*
        name: Npc1AndNpc2Config
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.EnemyNames*
        name: EnemyNames
    isDefinition: true
    commentId: Overload:UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.EnemyNames
  UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames:
    name:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames
        name: EnemyNames
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames
        name: EnemyNames
    nameWithType:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames
        name: EnemyNames
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames
        name: EnemyNames
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames
        name: EnemyNames
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames
        name: EnemyNames
    isDefinition: true
    parent: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
    commentId: P:UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.EnemyNames
  UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.validIndicesList*:
    name:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.validIndicesList*
        name: validIndicesList
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.validIndicesList*
        name: validIndicesList
    nameWithType:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config*
        name: Npc1AndNpc2Config
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.validIndicesList*
        name: validIndicesList
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config*
        name: Npc1AndNpc2Config
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.validIndicesList*
        name: validIndicesList
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs*
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config*
        name: Npc1AndNpc2Config
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.validIndicesList*
        name: validIndicesList
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs*
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config*
        name: Npc1AndNpc2Config
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.validIndicesList*
        name: validIndicesList
    isDefinition: true
    commentId: Overload:UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config.validIndicesList
  UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList:
    name:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList
        name: validIndicesList
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList
        name: validIndicesList
    nameWithType:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList
        name: validIndicesList
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList
        name: validIndicesList
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList
        name: validIndicesList
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList
        name: validIndicesList
    isDefinition: true
    parent: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
    commentId: P:UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig.validIndicesList
  UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config._EnemyTurns*:
    name:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config._EnemyTurns*
        name: _EnemyTurns
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config._EnemyTurns*
        name: _EnemyTurns
    nameWithType:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config*
        name: Npc1AndNpc2Config
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config._EnemyTurns*
        name: _EnemyTurns
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config*
        name: Npc1AndNpc2Config
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config._EnemyTurns*
        name: _EnemyTurns
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs*
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config*
        name: Npc1AndNpc2Config
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config._EnemyTurns*
        name: _EnemyTurns
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs*
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config*
        name: Npc1AndNpc2Config
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config._EnemyTurns*
        name: _EnemyTurns
    isDefinition: true
    commentId: Overload:UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config._EnemyTurns
  UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns(System.Int32[],ObjectPool,ObjectPool):
    name:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns(System.Int32[],ObjectPool,ObjectPool)
        name: _EnemyTurns
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns(System.Int32[],ObjectPool,ObjectPool)
        name: _EnemyTurns
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns(System.Int32[],ObjectPool,ObjectPool)
        name: _EnemyTurns
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns(System.Int32[],ObjectPool,ObjectPool)
        name: _EnemyTurns
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns(System.Int32[],ObjectPool,ObjectPool)
        name: _EnemyTurns
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
        name: IMultiEnemiesConfig
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns(System.Int32[],ObjectPool,ObjectPool)
        name: _EnemyTurns
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig
    commentId: M:UCT.Battle.MultiEnemiesConfigs.IMultiEnemiesConfig._EnemyTurns(System.Int32[],ObjectPool,ObjectPool)
  UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config:
    name:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config
        name: Npc1AndNpc2Config
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config
        name: Npc1AndNpc2Config
    nameWithType:
      CSharp:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config
        name: Npc1AndNpc2Config
      VB:
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config
        name: Npc1AndNpc2Config
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config
        name: Npc1AndNpc2Config
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs
        name: MultiEnemiesConfigs
      - name: .
      - id: UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config
        name: Npc1AndNpc2Config
    isDefinition: true
    commentId: T:UCT.Battle.MultiEnemiesConfigs.Npc1AndNpc2Config
  UCT.Battle.BattleConfigs:
    name:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
    isDefinition: true
    commentId: N:UCT.Battle.BattleConfigs
  UCT.Battle.BattleConfigs.IBattleConfig:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
    isDefinition: true
    parent: UCT.Battle.BattleConfigs
    commentId: T:UCT.Battle.BattleConfigs.IBattleConfig
  Global.GameObject[]:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.GameObject
        name: GameObject
        isExternal: true
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.GameObject
        name: GameObject
        isExternal: true
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.GameObject
        name: GameObject
        isExternal: true
      - name: (
      - name: )
    isDefinition: false
  UCT.Battle.BattleConfigs.DemoBattle2.enemies*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.enemies*
        name: enemies
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.enemies*
        name: enemies
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.enemies*
        name: enemies
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.enemies*
        name: enemies
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.enemies*
        name: enemies
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.enemies*
        name: enemies
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle2.enemies
  UCT.Battle.BattleConfigs.IBattleConfig.enemies:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemies
        name: enemies
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemies
        name: enemies
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemies
        name: enemies
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemies
        name: enemies
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemies
        name: enemies
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemies
        name: enemies
    isDefinition: true
    parent: UCT.Battle.BattleConfigs.IBattleConfig
    commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.enemies
  System.Nullable{Vector3}[]:
    name:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '?'
      - name: '['
      - name: ']'
      VB:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '?'
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '?'
      - name: '['
      - name: ']'
      VB:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '?'
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '?'
      - name: '['
      - name: ']'
      VB:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '?'
      - name: (
      - name: )
    isDefinition: false
  UCT.Battle.BattleConfigs.DemoBattle2.enemiesStartPosition*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.enemiesStartPosition*
        name: enemiesStartPosition
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.enemiesStartPosition*
        name: enemiesStartPosition
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.enemiesStartPosition*
        name: enemiesStartPosition
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.enemiesStartPosition*
        name: enemiesStartPosition
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.enemiesStartPosition*
        name: enemiesStartPosition
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.enemiesStartPosition*
        name: enemiesStartPosition
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle2.enemiesStartPosition
  UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition
        name: enemiesStartPosition
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition
        name: enemiesStartPosition
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition
        name: enemiesStartPosition
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition
        name: enemiesStartPosition
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition
        name: enemiesStartPosition
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition
        name: enemiesStartPosition
    isDefinition: true
    parent: UCT.Battle.BattleConfigs.IBattleConfig
    commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition
  UCT.Battle.BattleConfigs.DemoBattle2.backGroundModel*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.backGroundModel*
        name: backGroundModel
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.backGroundModel*
        name: backGroundModel
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.backGroundModel*
        name: backGroundModel
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.backGroundModel*
        name: backGroundModel
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.backGroundModel*
        name: backGroundModel
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.backGroundModel*
        name: backGroundModel
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle2.backGroundModel
  UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel
        name: backGroundModel
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel
        name: backGroundModel
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel
        name: backGroundModel
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel
        name: backGroundModel
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel
        name: backGroundModel
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel
        name: backGroundModel
    isDefinition: true
    parent: UCT.Battle.BattleConfigs.IBattleConfig
    commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel
  Global.Material:
    name:
      CSharp:
      - id: Global.Material
        name: Material
        isExternal: true
      VB:
      - id: Global.Material
        name: Material
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Material
        name: Material
        isExternal: true
      VB:
      - id: Global.Material
        name: Material
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Material
        name: Material
        isExternal: true
      VB:
      - id: Global.Material
        name: Material
        isExternal: true
    isDefinition: true
  UCT.Battle.BattleConfigs.DemoBattle2.skyBox*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.skyBox*
        name: skyBox
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.skyBox*
        name: skyBox
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.skyBox*
        name: skyBox
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.skyBox*
        name: skyBox
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.skyBox*
        name: skyBox
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.skyBox*
        name: skyBox
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle2.skyBox
  UCT.Battle.BattleConfigs.IBattleConfig.skyBox:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.skyBox
        name: skyBox
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.skyBox
        name: skyBox
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.skyBox
        name: skyBox
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.skyBox
        name: skyBox
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.skyBox
        name: skyBox
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.skyBox
        name: skyBox
    isDefinition: true
    parent: UCT.Battle.BattleConfigs.IBattleConfig
    commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.skyBox
  Global.VolumeProfile:
    name:
      CSharp:
      - id: Global.VolumeProfile
        name: VolumeProfile
        isExternal: true
      VB:
      - id: Global.VolumeProfile
        name: VolumeProfile
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.VolumeProfile
        name: VolumeProfile
        isExternal: true
      VB:
      - id: Global.VolumeProfile
        name: VolumeProfile
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.VolumeProfile
        name: VolumeProfile
        isExternal: true
      VB:
      - id: Global.VolumeProfile
        name: VolumeProfile
        isExternal: true
    isDefinition: true
  UCT.Battle.BattleConfigs.DemoBattle2.volumeProfile*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.volumeProfile*
        name: volumeProfile
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.volumeProfile*
        name: volumeProfile
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.volumeProfile*
        name: volumeProfile
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.volumeProfile*
        name: volumeProfile
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.volumeProfile*
        name: volumeProfile
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.volumeProfile*
        name: volumeProfile
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle2.volumeProfile
  UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile
        name: volumeProfile
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile
        name: volumeProfile
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile
        name: volumeProfile
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile
        name: volumeProfile
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile
        name: volumeProfile
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile
        name: volumeProfile
    isDefinition: true
    parent: UCT.Battle.BattleConfigs.IBattleConfig
    commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile
  Global.AudioClip:
    name:
      CSharp:
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
      VB:
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
      VB:
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
      VB:
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
    isDefinition: true
  UCT.Battle.BattleConfigs.DemoBattle2.bgmClip*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.bgmClip*
        name: bgmClip
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.bgmClip*
        name: bgmClip
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.bgmClip*
        name: bgmClip
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.bgmClip*
        name: bgmClip
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.bgmClip*
        name: bgmClip
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.bgmClip*
        name: bgmClip
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle2.bgmClip
  UCT.Battle.BattleConfigs.IBattleConfig.bgmClip:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip
        name: bgmClip
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip
        name: bgmClip
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip
        name: bgmClip
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip
        name: bgmClip
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip
        name: bgmClip
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip
        name: bgmClip
    isDefinition: true
    parent: UCT.Battle.BattleConfigs.IBattleConfig
    commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.bgmClip
  UCT.Battle.BattleConfigs.DemoBattle2.volume*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.volume*
        name: volume
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.volume*
        name: volume
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.volume*
        name: volume
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.volume*
        name: volume
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.volume*
        name: volume
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.volume*
        name: volume
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle2.volume
  UCT.Battle.BattleConfigs.IBattleConfig.volume:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volume
        name: volume
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volume
        name: volume
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volume
        name: volume
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volume
        name: volume
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volume
        name: volume
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volume
        name: volume
    isDefinition: true
    parent: UCT.Battle.BattleConfigs.IBattleConfig
    commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.volume
  UCT.Battle.BattleConfigs.DemoBattle2.pitch*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.pitch*
        name: pitch
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.pitch*
        name: pitch
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.pitch*
        name: pitch
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.pitch*
        name: pitch
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.pitch*
        name: pitch
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.pitch*
        name: pitch
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle2.pitch
  UCT.Battle.BattleConfigs.IBattleConfig.pitch:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.pitch
        name: pitch
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.pitch
        name: pitch
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.pitch
        name: pitch
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.pitch
        name: pitch
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.pitch
        name: pitch
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.pitch
        name: pitch
    isDefinition: true
    parent: UCT.Battle.BattleConfigs.IBattleConfig
    commentId: P:UCT.Battle.BattleConfigs.IBattleConfig.pitch
  UCT.Battle.BattleConfigs.DemoBattle2.Turn*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.Turn*
        name: Turn
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2.Turn*
        name: Turn
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.Turn*
        name: Turn
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.Turn*
        name: Turn
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.Turn*
        name: Turn
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2*
        name: DemoBattle2
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2.Turn*
        name: Turn
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle2.Turn
  UCT.Battle.BattleConfigs.IBattleConfig.Turn(System.Int32,ObjectPool):
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.Turn(System.Int32,ObjectPool)
        name: Turn
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.Turn(System.Int32,ObjectPool)
        name: Turn
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.Turn(System.Int32,ObjectPool)
        name: Turn
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.Turn(System.Int32,ObjectPool)
        name: Turn
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.Turn(System.Int32,ObjectPool)
        name: Turn
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.Turn(System.Int32,ObjectPool)
        name: Turn
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Battle.BattleConfigs.IBattleConfig
    commentId: M:UCT.Battle.BattleConfigs.IBattleConfig.Turn(System.Int32,ObjectPool)
  UCT.Battle.BattleConfigs.DemoBattle2:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2
        name: DemoBattle2
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2
        name: DemoBattle2
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle2
        name: DemoBattle2
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle2
        name: DemoBattle2
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2
        name: DemoBattle2
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle2
        name: DemoBattle2
    isDefinition: true
    commentId: T:UCT.Battle.BattleConfigs.DemoBattle2
  UCT.Battle.BattleConfigs.IBattleConfig.enemies*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemies*
        name: enemies
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemies*
        name: enemies
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemies*
        name: enemies
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemies*
        name: enemies
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemies*
        name: enemies
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemies*
        name: enemies
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.IBattleConfig.enemies
  UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition*
        name: enemiesStartPosition
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition*
        name: enemiesStartPosition
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition*
        name: enemiesStartPosition
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition*
        name: enemiesStartPosition
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition*
        name: enemiesStartPosition
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition*
        name: enemiesStartPosition
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.IBattleConfig.enemiesStartPosition
  UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel*
        name: backGroundModel
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel*
        name: backGroundModel
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel*
        name: backGroundModel
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel*
        name: backGroundModel
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel*
        name: backGroundModel
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel*
        name: backGroundModel
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.IBattleConfig.backGroundModel
  UCT.Battle.BattleConfigs.IBattleConfig.skyBox*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.skyBox*
        name: skyBox
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.skyBox*
        name: skyBox
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.skyBox*
        name: skyBox
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.skyBox*
        name: skyBox
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.skyBox*
        name: skyBox
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.skyBox*
        name: skyBox
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.IBattleConfig.skyBox
  UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile*
        name: volumeProfile
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile*
        name: volumeProfile
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile*
        name: volumeProfile
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile*
        name: volumeProfile
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile*
        name: volumeProfile
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile*
        name: volumeProfile
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.IBattleConfig.volumeProfile
  UCT.Battle.BattleConfigs.IBattleConfig.bgmClip*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip*
        name: bgmClip
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip*
        name: bgmClip
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip*
        name: bgmClip
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip*
        name: bgmClip
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip*
        name: bgmClip
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.bgmClip*
        name: bgmClip
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.IBattleConfig.bgmClip
  UCT.Battle.BattleConfigs.IBattleConfig.volume*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volume*
        name: volume
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volume*
        name: volume
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volume*
        name: volume
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volume*
        name: volume
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volume*
        name: volume
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.volume*
        name: volume
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.IBattleConfig.volume
  UCT.Battle.BattleConfigs.IBattleConfig.pitch*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.pitch*
        name: pitch
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.pitch*
        name: pitch
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.pitch*
        name: pitch
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.pitch*
        name: pitch
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.pitch*
        name: pitch
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.pitch*
        name: pitch
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.IBattleConfig.pitch
  UCT.Battle.BattleConfigs.IBattleConfig.Turn*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.Turn*
        name: Turn
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig.Turn*
        name: Turn
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.Turn*
        name: Turn
      VB:
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.Turn*
        name: Turn
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.Turn*
        name: Turn
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig*
        name: IBattleConfig
      - name: .
      - id: UCT.Battle.BattleConfigs.IBattleConfig.Turn*
        name: Turn
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.IBattleConfig.Turn
  UCT.Battle.BattleConfigs.DemoBattle.enemies*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle.enemies*
        name: enemies
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle.enemies*
        name: enemies
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.enemies*
        name: enemies
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.enemies*
        name: enemies
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.enemies*
        name: enemies
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.enemies*
        name: enemies
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle.enemies
  UCT.Battle.BattleConfigs.DemoBattle.enemiesStartPosition*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle.enemiesStartPosition*
        name: enemiesStartPosition
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle.enemiesStartPosition*
        name: enemiesStartPosition
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.enemiesStartPosition*
        name: enemiesStartPosition
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.enemiesStartPosition*
        name: enemiesStartPosition
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.enemiesStartPosition*
        name: enemiesStartPosition
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.enemiesStartPosition*
        name: enemiesStartPosition
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle.enemiesStartPosition
  UCT.Battle.BattleConfigs.DemoBattle.backGroundModel*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle.backGroundModel*
        name: backGroundModel
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle.backGroundModel*
        name: backGroundModel
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.backGroundModel*
        name: backGroundModel
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.backGroundModel*
        name: backGroundModel
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.backGroundModel*
        name: backGroundModel
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.backGroundModel*
        name: backGroundModel
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle.backGroundModel
  UCT.Battle.BattleConfigs.DemoBattle.skyBox*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle.skyBox*
        name: skyBox
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle.skyBox*
        name: skyBox
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.skyBox*
        name: skyBox
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.skyBox*
        name: skyBox
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.skyBox*
        name: skyBox
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.skyBox*
        name: skyBox
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle.skyBox
  UCT.Battle.BattleConfigs.DemoBattle.volumeProfile*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle.volumeProfile*
        name: volumeProfile
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle.volumeProfile*
        name: volumeProfile
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.volumeProfile*
        name: volumeProfile
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.volumeProfile*
        name: volumeProfile
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.volumeProfile*
        name: volumeProfile
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.volumeProfile*
        name: volumeProfile
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle.volumeProfile
  UCT.Battle.BattleConfigs.DemoBattle.bgmClip*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle.bgmClip*
        name: bgmClip
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle.bgmClip*
        name: bgmClip
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.bgmClip*
        name: bgmClip
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.bgmClip*
        name: bgmClip
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.bgmClip*
        name: bgmClip
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.bgmClip*
        name: bgmClip
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle.bgmClip
  UCT.Battle.BattleConfigs.DemoBattle.volume*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle.volume*
        name: volume
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle.volume*
        name: volume
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.volume*
        name: volume
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.volume*
        name: volume
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.volume*
        name: volume
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.volume*
        name: volume
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle.volume
  UCT.Battle.BattleConfigs.DemoBattle.pitch*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle.pitch*
        name: pitch
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle.pitch*
        name: pitch
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.pitch*
        name: pitch
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.pitch*
        name: pitch
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.pitch*
        name: pitch
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.pitch*
        name: pitch
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle.pitch
  UCT.Battle.BattleConfigs.DemoBattle.Turn*:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle.Turn*
        name: Turn
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle.Turn*
        name: Turn
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.Turn*
        name: Turn
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.Turn*
        name: Turn
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.Turn*
        name: Turn
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs*
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle*
        name: DemoBattle
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle.Turn*
        name: Turn
    isDefinition: true
    commentId: Overload:UCT.Battle.BattleConfigs.DemoBattle.Turn
  UCT.Battle.BattleConfigs.DemoBattle:
    name:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle
        name: DemoBattle
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle
        name: DemoBattle
    nameWithType:
      CSharp:
      - id: UCT.Battle.BattleConfigs.DemoBattle
        name: DemoBattle
      VB:
      - id: UCT.Battle.BattleConfigs.DemoBattle
        name: DemoBattle
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle
        name: DemoBattle
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.BattleConfigs
        name: BattleConfigs
      - name: .
      - id: UCT.Battle.BattleConfigs.DemoBattle
        name: DemoBattle
    isDefinition: true
    commentId: T:UCT.Battle.BattleConfigs.DemoBattle
  UCT.Battle.Enemies:
    name:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
    isDefinition: true
    commentId: N:UCT.Battle.Enemies
  UCT.Battle.Enemies.IEnemy:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      VB:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      VB:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
    isDefinition: true
    parent: UCT.Battle.Enemies
    commentId: T:UCT.Battle.Enemies.IEnemy
  UCT.Battle.Enemies.IEnemyTurnNumber:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber
        name: IEnemyTurnNumber
      VB:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber
        name: IEnemyTurnNumber
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber
        name: IEnemyTurnNumber
      VB:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber
        name: IEnemyTurnNumber
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber
        name: IEnemyTurnNumber
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber
        name: IEnemyTurnNumber
    isDefinition: true
    parent: UCT.Battle.Enemies
    commentId: T:UCT.Battle.Enemies.IEnemyTurnNumber
  UCT.Battle.Enemies.Npc2Enemy.TurnGenerator*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy.TurnGenerator*
        name: TurnGenerator
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy.TurnGenerator*
        name: TurnGenerator
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.TurnGenerator*
        name: TurnGenerator
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.TurnGenerator*
        name: TurnGenerator
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.TurnGenerator*
        name: TurnGenerator
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.TurnGenerator*
        name: TurnGenerator
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc2Enemy.TurnGenerator
  UCT.Battle.Enemies.IEnemy.TurnGenerator:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy.TurnGenerator
        name: TurnGenerator
      VB:
      - id: UCT.Battle.Enemies.IEnemy.TurnGenerator
        name: TurnGenerator
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.TurnGenerator
        name: TurnGenerator
      VB:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.TurnGenerator
        name: TurnGenerator
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.TurnGenerator
        name: TurnGenerator
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.TurnGenerator
        name: TurnGenerator
    isDefinition: true
    parent: UCT.Battle.Enemies.IEnemy
    commentId: P:UCT.Battle.Enemies.IEnemy.TurnGenerator
  UCT.Battle.Enemies.Npc2Enemy.GetActOptions*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy.GetActOptions*
        name: GetActOptions
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy.GetActOptions*
        name: GetActOptions
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.GetActOptions*
        name: GetActOptions
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.GetActOptions*
        name: GetActOptions
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.GetActOptions*
        name: GetActOptions
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.GetActOptions*
        name: GetActOptions
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc2Enemy.GetActOptions
  UCT.Battle.Enemies.IEnemy.GetActOptions:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy.GetActOptions
        name: GetActOptions
      - name: (
      - name: )
      VB:
      - id: UCT.Battle.Enemies.IEnemy.GetActOptions
        name: GetActOptions
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActOptions
        name: GetActOptions
      - name: (
      - name: )
      VB:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActOptions
        name: GetActOptions
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActOptions
        name: GetActOptions
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActOptions
        name: GetActOptions
      - name: (
      - name: )
    isDefinition: true
    parent: UCT.Battle.Enemies.IEnemy
    commentId: M:UCT.Battle.Enemies.IEnemy.GetActOptions
  UCT.Battle.Enemies.MercyType[]:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.MercyType
        name: MercyType
      - name: '['
      - name: ']'
      VB:
      - id: UCT.Battle.Enemies.MercyType
        name: MercyType
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.MercyType
        name: MercyType
      - name: '['
      - name: ']'
      VB:
      - id: UCT.Battle.Enemies.MercyType
        name: MercyType
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.MercyType
        name: MercyType
      - name: '['
      - name: ']'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.MercyType
        name: MercyType
      - name: (
      - name: )
    isDefinition: false
  UCT.Battle.Enemies.Npc2Enemy.MercyTypes*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy.MercyTypes*
        name: MercyTypes
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy.MercyTypes*
        name: MercyTypes
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.MercyTypes*
        name: MercyTypes
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.MercyTypes*
        name: MercyTypes
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.MercyTypes*
        name: MercyTypes
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.MercyTypes*
        name: MercyTypes
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc2Enemy.MercyTypes
  UCT.Battle.Enemies.IEnemy.MercyTypes:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy.MercyTypes
        name: MercyTypes
      VB:
      - id: UCT.Battle.Enemies.IEnemy.MercyTypes
        name: MercyTypes
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.MercyTypes
        name: MercyTypes
      VB:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.MercyTypes
        name: MercyTypes
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.MercyTypes
        name: MercyTypes
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.MercyTypes
        name: MercyTypes
    isDefinition: true
    parent: UCT.Battle.Enemies.IEnemy
    commentId: P:UCT.Battle.Enemies.IEnemy.MercyTypes
  UCT.Battle.Enemies.Npc2Enemy.GetActLikeOptions*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy.GetActLikeOptions*
        name: GetActLikeOptions
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy.GetActLikeOptions*
        name: GetActLikeOptions
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.GetActLikeOptions*
        name: GetActLikeOptions
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.GetActLikeOptions*
        name: GetActLikeOptions
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.GetActLikeOptions*
        name: GetActLikeOptions
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.GetActLikeOptions*
        name: GetActLikeOptions
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc2Enemy.GetActLikeOptions
  UCT.Battle.Enemies.IEnemy.GetActLikeOptions:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy.GetActLikeOptions
        name: GetActLikeOptions
      - name: (
      - name: )
      VB:
      - id: UCT.Battle.Enemies.IEnemy.GetActLikeOptions
        name: GetActLikeOptions
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActLikeOptions
        name: GetActLikeOptions
      - name: (
      - name: )
      VB:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActLikeOptions
        name: GetActLikeOptions
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActLikeOptions
        name: GetActLikeOptions
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActLikeOptions
        name: GetActLikeOptions
      - name: (
      - name: )
    isDefinition: true
    parent: UCT.Battle.Enemies.IEnemy
    commentId: M:UCT.Battle.Enemies.IEnemy.GetActLikeOptions
  UCT.Battle.Enemies.Npc2Enemy._EnemyTurns*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy._EnemyTurns*
        name: _EnemyTurns
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy._EnemyTurns*
        name: _EnemyTurns
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy._EnemyTurns*
        name: _EnemyTurns
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy._EnemyTurns*
        name: _EnemyTurns
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy._EnemyTurns*
        name: _EnemyTurns
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy._EnemyTurns*
        name: _EnemyTurns
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc2Enemy._EnemyTurns
  UCT.Battle.Enemies.IEnemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool):
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool)
        name: _EnemyTurns
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
      VB:
      - id: UCT.Battle.Enemies.IEnemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool)
        name: _EnemyTurns
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool)
        name: _EnemyTurns
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
      VB:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool)
        name: _EnemyTurns
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool)
        name: _EnemyTurns
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool)
        name: _EnemyTurns
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.ObjectPool
        name: ObjectPool
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Battle.Enemies.IEnemy
    commentId: M:UCT.Battle.Enemies.IEnemy._EnemyTurns(System.Int32,ObjectPool,ObjectPool)
  UCT.Battle.Enemies.Npc2Enemy.state*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy.state*
        name: state
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy.state*
        name: state
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.state*
        name: state
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.state*
        name: state
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.state*
        name: state
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.state*
        name: state
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc2Enemy.state
  UCT.Battle.Enemies.IEnemy.state:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy.state
        name: state
      VB:
      - id: UCT.Battle.Enemies.IEnemy.state
        name: state
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.state
        name: state
      VB:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.state
        name: state
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.state
        name: state
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.state
        name: state
    isDefinition: true
    parent: UCT.Battle.Enemies.IEnemy
    commentId: P:UCT.Battle.Enemies.IEnemy.state
  UCT.Battle.Enemies.Npc2Enemy.exp*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy.exp*
        name: exp
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy.exp*
        name: exp
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.exp*
        name: exp
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.exp*
        name: exp
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.exp*
        name: exp
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.exp*
        name: exp
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc2Enemy.exp
  UCT.Battle.Enemies.IEnemy.exp:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy.exp
        name: exp
      VB:
      - id: UCT.Battle.Enemies.IEnemy.exp
        name: exp
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.exp
        name: exp
      VB:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.exp
        name: exp
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.exp
        name: exp
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.exp
        name: exp
    isDefinition: true
    parent: UCT.Battle.Enemies.IEnemy
    commentId: P:UCT.Battle.Enemies.IEnemy.exp
  UCT.Battle.Enemies.Npc2Enemy.gold*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy.gold*
        name: gold
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy.gold*
        name: gold
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.gold*
        name: gold
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.gold*
        name: gold
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.gold*
        name: gold
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy*
        name: Npc2Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy.gold*
        name: gold
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc2Enemy.gold
  UCT.Battle.Enemies.IEnemy.gold:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy.gold
        name: gold
      VB:
      - id: UCT.Battle.Enemies.IEnemy.gold
        name: gold
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.gold
        name: gold
      VB:
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.gold
        name: gold
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.gold
        name: gold
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.gold
        name: gold
    isDefinition: true
    parent: UCT.Battle.Enemies.IEnemy
    commentId: P:UCT.Battle.Enemies.IEnemy.gold
  UCT.Battle.Enemies.Npc2Enemy:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy
        name: Npc2Enemy
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy
        name: Npc2Enemy
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc2Enemy
        name: Npc2Enemy
      VB:
      - id: UCT.Battle.Enemies.Npc2Enemy
        name: Npc2Enemy
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy
        name: Npc2Enemy
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc2Enemy
        name: Npc2Enemy
    isDefinition: true
    commentId: T:UCT.Battle.Enemies.Npc2Enemy
  UCT.Battle.Enemies.IEnemy.TurnGenerator*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy.TurnGenerator*
        name: TurnGenerator
      VB:
      - id: UCT.Battle.Enemies.IEnemy.TurnGenerator*
        name: TurnGenerator
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.TurnGenerator*
        name: TurnGenerator
      VB:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.TurnGenerator*
        name: TurnGenerator
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.TurnGenerator*
        name: TurnGenerator
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.TurnGenerator*
        name: TurnGenerator
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.IEnemy.TurnGenerator
  UCT.Battle.Enemies.IEnemy.MercyTypes*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy.MercyTypes*
        name: MercyTypes
      VB:
      - id: UCT.Battle.Enemies.IEnemy.MercyTypes*
        name: MercyTypes
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.MercyTypes*
        name: MercyTypes
      VB:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.MercyTypes*
        name: MercyTypes
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.MercyTypes*
        name: MercyTypes
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.MercyTypes*
        name: MercyTypes
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.IEnemy.MercyTypes
  UCT.Battle.Enemies.IEnemy.state*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy.state*
        name: state
      VB:
      - id: UCT.Battle.Enemies.IEnemy.state*
        name: state
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.state*
        name: state
      VB:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.state*
        name: state
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.state*
        name: state
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.state*
        name: state
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.IEnemy.state
  UCT.Battle.Enemies.IEnemy.exp*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy.exp*
        name: exp
      VB:
      - id: UCT.Battle.Enemies.IEnemy.exp*
        name: exp
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.exp*
        name: exp
      VB:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.exp*
        name: exp
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.exp*
        name: exp
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.exp*
        name: exp
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.IEnemy.exp
  UCT.Battle.Enemies.IEnemy.gold*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy.gold*
        name: gold
      VB:
      - id: UCT.Battle.Enemies.IEnemy.gold*
        name: gold
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.gold*
        name: gold
      VB:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.gold*
        name: gold
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.gold*
        name: gold
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.gold*
        name: gold
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.IEnemy.gold
  UCT.Battle.Enemies.IEnemy.GetActOptions*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy.GetActOptions*
        name: GetActOptions
      VB:
      - id: UCT.Battle.Enemies.IEnemy.GetActOptions*
        name: GetActOptions
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActOptions*
        name: GetActOptions
      VB:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActOptions*
        name: GetActOptions
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActOptions*
        name: GetActOptions
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActOptions*
        name: GetActOptions
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.IEnemy.GetActOptions
  UCT.Battle.Enemies.IEnemy.GetActLikeOptions*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy.GetActLikeOptions*
        name: GetActLikeOptions
      VB:
      - id: UCT.Battle.Enemies.IEnemy.GetActLikeOptions*
        name: GetActLikeOptions
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActLikeOptions*
        name: GetActLikeOptions
      VB:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActLikeOptions*
        name: GetActLikeOptions
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActLikeOptions*
        name: GetActLikeOptions
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy.GetActLikeOptions*
        name: GetActLikeOptions
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.IEnemy.GetActLikeOptions
  UCT.Battle.Enemies.IEnemy._EnemyTurns*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy._EnemyTurns*
        name: _EnemyTurns
      VB:
      - id: UCT.Battle.Enemies.IEnemy._EnemyTurns*
        name: _EnemyTurns
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy._EnemyTurns*
        name: _EnemyTurns
      VB:
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy._EnemyTurns*
        name: _EnemyTurns
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy._EnemyTurns*
        name: _EnemyTurns
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemy*
        name: IEnemy
      - name: .
      - id: UCT.Battle.Enemies.IEnemy._EnemyTurns*
        name: _EnemyTurns
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.IEnemy._EnemyTurns
  UCT.Battle.Enemies.MercyType:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.MercyType
        name: MercyType
      VB:
      - id: UCT.Battle.Enemies.MercyType
        name: MercyType
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.MercyType
        name: MercyType
      VB:
      - id: UCT.Battle.Enemies.MercyType
        name: MercyType
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.MercyType
        name: MercyType
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.MercyType
        name: MercyType
    isDefinition: true
    parent: UCT.Battle.Enemies
    commentId: T:UCT.Battle.Enemies.MercyType
  UCT.Battle.Enemies.Npc1Enemy.TurnGenerator*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy.TurnGenerator*
        name: TurnGenerator
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy.TurnGenerator*
        name: TurnGenerator
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.TurnGenerator*
        name: TurnGenerator
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.TurnGenerator*
        name: TurnGenerator
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.TurnGenerator*
        name: TurnGenerator
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.TurnGenerator*
        name: TurnGenerator
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc1Enemy.TurnGenerator
  UCT.Battle.Enemies.Npc1Enemy.GetActOptions*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy.GetActOptions*
        name: GetActOptions
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy.GetActOptions*
        name: GetActOptions
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.GetActOptions*
        name: GetActOptions
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.GetActOptions*
        name: GetActOptions
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.GetActOptions*
        name: GetActOptions
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.GetActOptions*
        name: GetActOptions
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc1Enemy.GetActOptions
  UCT.Battle.Enemies.Npc1Enemy.MercyTypes*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy.MercyTypes*
        name: MercyTypes
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy.MercyTypes*
        name: MercyTypes
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.MercyTypes*
        name: MercyTypes
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.MercyTypes*
        name: MercyTypes
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.MercyTypes*
        name: MercyTypes
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.MercyTypes*
        name: MercyTypes
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc1Enemy.MercyTypes
  UCT.Battle.Enemies.Npc1Enemy.GetActLikeOptions*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy.GetActLikeOptions*
        name: GetActLikeOptions
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy.GetActLikeOptions*
        name: GetActLikeOptions
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.GetActLikeOptions*
        name: GetActLikeOptions
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.GetActLikeOptions*
        name: GetActLikeOptions
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.GetActLikeOptions*
        name: GetActLikeOptions
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.GetActLikeOptions*
        name: GetActLikeOptions
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc1Enemy.GetActLikeOptions
  UCT.Battle.Enemies.Npc1Enemy._EnemyTurns*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy._EnemyTurns*
        name: _EnemyTurns
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy._EnemyTurns*
        name: _EnemyTurns
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy._EnemyTurns*
        name: _EnemyTurns
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy._EnemyTurns*
        name: _EnemyTurns
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy._EnemyTurns*
        name: _EnemyTurns
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy._EnemyTurns*
        name: _EnemyTurns
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc1Enemy._EnemyTurns
  UCT.Battle.Enemies.Npc1Enemy.state*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy.state*
        name: state
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy.state*
        name: state
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.state*
        name: state
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.state*
        name: state
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.state*
        name: state
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.state*
        name: state
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc1Enemy.state
  UCT.Battle.Enemies.Npc1Enemy.exp*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy.exp*
        name: exp
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy.exp*
        name: exp
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.exp*
        name: exp
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.exp*
        name: exp
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.exp*
        name: exp
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.exp*
        name: exp
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc1Enemy.exp
  UCT.Battle.Enemies.Npc1Enemy.gold*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy.gold*
        name: gold
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy.gold*
        name: gold
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.gold*
        name: gold
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.gold*
        name: gold
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.gold*
        name: gold
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy*
        name: Npc1Enemy
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy.gold*
        name: gold
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.Npc1Enemy.gold
  UCT.Battle.Enemies.Npc1Enemy:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy
        name: Npc1Enemy
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy
        name: Npc1Enemy
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.Npc1Enemy
        name: Npc1Enemy
      VB:
      - id: UCT.Battle.Enemies.Npc1Enemy
        name: Npc1Enemy
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy
        name: Npc1Enemy
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.Npc1Enemy
        name: Npc1Enemy
    isDefinition: true
    commentId: T:UCT.Battle.Enemies.Npc1Enemy
  UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue*
        name: GetNextValue
      VB:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue*
        name: GetNextValue
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber*
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue*
        name: GetNextValue
      VB:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber*
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue*
        name: GetNextValue
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber*
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue*
        name: GetNextValue
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber*
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue*
        name: GetNextValue
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue
  UCT.Battle.Enemies.IEnemyTurnNumber.value*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.value*
        name: value
      VB:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.value*
        name: value
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber*
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.value*
        name: value
      VB:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber*
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.value*
        name: value
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber*
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.value*
        name: value
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber*
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.value*
        name: value
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.IEnemyTurnNumber.value
  UCT.Battle.Enemies.WeightedRandomTurnNumber.value*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.value*
        name: value
      VB:
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.value*
        name: value
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber*
        name: WeightedRandomTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.value*
        name: value
      VB:
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber*
        name: WeightedRandomTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.value*
        name: value
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber*
        name: WeightedRandomTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.value*
        name: value
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber*
        name: WeightedRandomTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.value*
        name: value
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.WeightedRandomTurnNumber.value
  UCT.Battle.Enemies.IEnemyTurnNumber.value:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.value
        name: value
      VB:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.value
        name: value
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.value
        name: value
      VB:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.value
        name: value
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.value
        name: value
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.value
        name: value
    isDefinition: true
    parent: UCT.Battle.Enemies.IEnemyTurnNumber
    commentId: P:UCT.Battle.Enemies.IEnemyTurnNumber.value
  UCT.Battle.Enemies.WeightedRandomTurnNumber:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber
        name: WeightedRandomTurnNumber
      VB:
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber
        name: WeightedRandomTurnNumber
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber
        name: WeightedRandomTurnNumber
      VB:
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber
        name: WeightedRandomTurnNumber
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber
        name: WeightedRandomTurnNumber
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber
        name: WeightedRandomTurnNumber
    isDefinition: true
    commentId: T:UCT.Battle.Enemies.WeightedRandomTurnNumber
  System.Collections.Generic.HashSet`1:
    name:
      CSharp:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        isExternal: true
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    isDefinition: true
    commentId: T:System.Collections.Generic.HashSet`1
  System.Collections.Generic.HashSet{System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.HashSet`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.HashSet{System.Int32}
  UCT.Battle.Enemies.WeightedRandomTurnNumber.#ctor*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.#ctor*
        name: WeightedRandomTurnNumber
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber*
        name: WeightedRandomTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.#ctor*
        name: WeightedRandomTurnNumber
      VB:
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber*
        name: WeightedRandomTurnNumber
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber*
        name: WeightedRandomTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.#ctor*
        name: WeightedRandomTurnNumber
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber*
        name: WeightedRandomTurnNumber
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.WeightedRandomTurnNumber.#ctor
  System.Collections.Generic.Dictionary{System.Int32,System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.Int32,System.Int32}
  UCT.Battle.Enemies.WeightedRandomTurnNumber.GetNextValue*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.GetNextValue*
        name: GetNextValue
      VB:
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.GetNextValue*
        name: GetNextValue
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber*
        name: WeightedRandomTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.GetNextValue*
        name: GetNextValue
      VB:
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber*
        name: WeightedRandomTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.GetNextValue*
        name: GetNextValue
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber*
        name: WeightedRandomTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.GetNextValue*
        name: GetNextValue
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber*
        name: WeightedRandomTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.WeightedRandomTurnNumber.GetNextValue*
        name: GetNextValue
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.WeightedRandomTurnNumber.GetNextValue
  UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue
        name: GetNextValue
      - name: (
      - name: )
      VB:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue
        name: GetNextValue
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue
        name: GetNextValue
      - name: (
      - name: )
      VB:
      - id: UCT.Battle.Enemies.IEnemyTurnNumber
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue
        name: GetNextValue
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue
        name: GetNextValue
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber
        name: IEnemyTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue
        name: GetNextValue
      - name: (
      - name: )
    isDefinition: true
    parent: UCT.Battle.Enemies.IEnemyTurnNumber
    commentId: M:UCT.Battle.Enemies.IEnemyTurnNumber.GetNextValue
  UCT.Battle.Enemies.CyclicTurnNumber.value*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.CyclicTurnNumber.value*
        name: value
      VB:
      - id: UCT.Battle.Enemies.CyclicTurnNumber.value*
        name: value
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.CyclicTurnNumber*
        name: CyclicTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber.value*
        name: value
      VB:
      - id: UCT.Battle.Enemies.CyclicTurnNumber*
        name: CyclicTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber.value*
        name: value
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber*
        name: CyclicTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber.value*
        name: value
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber*
        name: CyclicTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber.value*
        name: value
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.CyclicTurnNumber.value
  UCT.Battle.Enemies.CyclicTurnNumber:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.CyclicTurnNumber
        name: CyclicTurnNumber
      VB:
      - id: UCT.Battle.Enemies.CyclicTurnNumber
        name: CyclicTurnNumber
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.CyclicTurnNumber
        name: CyclicTurnNumber
      VB:
      - id: UCT.Battle.Enemies.CyclicTurnNumber
        name: CyclicTurnNumber
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber
        name: CyclicTurnNumber
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber
        name: CyclicTurnNumber
    isDefinition: true
    commentId: T:UCT.Battle.Enemies.CyclicTurnNumber
  UCT.Battle.Enemies.CyclicTurnNumber.#ctor*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.CyclicTurnNumber.#ctor*
        name: CyclicTurnNumber
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.CyclicTurnNumber*
        name: CyclicTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber.#ctor*
        name: CyclicTurnNumber
      VB:
      - id: UCT.Battle.Enemies.CyclicTurnNumber*
        name: CyclicTurnNumber
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber*
        name: CyclicTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber.#ctor*
        name: CyclicTurnNumber
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber*
        name: CyclicTurnNumber
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.CyclicTurnNumber.#ctor
  UCT.Battle.Enemies.CyclicTurnNumber.GetNextValue*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.CyclicTurnNumber.GetNextValue*
        name: GetNextValue
      VB:
      - id: UCT.Battle.Enemies.CyclicTurnNumber.GetNextValue*
        name: GetNextValue
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.CyclicTurnNumber*
        name: CyclicTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber.GetNextValue*
        name: GetNextValue
      VB:
      - id: UCT.Battle.Enemies.CyclicTurnNumber*
        name: CyclicTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber.GetNextValue*
        name: GetNextValue
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber*
        name: CyclicTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber.GetNextValue*
        name: GetNextValue
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber*
        name: CyclicTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.CyclicTurnNumber.GetNextValue*
        name: GetNextValue
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.CyclicTurnNumber.GetNextValue
  UCT.Battle.Enemies.FixedTurnNumber.value*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.FixedTurnNumber.value*
        name: value
      VB:
      - id: UCT.Battle.Enemies.FixedTurnNumber.value*
        name: value
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber.value*
        name: value
      VB:
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber.value*
        name: value
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber.value*
        name: value
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber.value*
        name: value
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.FixedTurnNumber.value
  UCT.Battle.Enemies.FixedTurnNumber:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.FixedTurnNumber
        name: FixedTurnNumber
      VB:
      - id: UCT.Battle.Enemies.FixedTurnNumber
        name: FixedTurnNumber
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.FixedTurnNumber
        name: FixedTurnNumber
      VB:
      - id: UCT.Battle.Enemies.FixedTurnNumber
        name: FixedTurnNumber
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber
        name: FixedTurnNumber
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Battle
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber
        name: FixedTurnNumber
    isDefinition: true
    commentId: T:UCT.Battle.Enemies.FixedTurnNumber
  UCT.Battle.Enemies.FixedTurnNumber.#ctor*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.FixedTurnNumber.#ctor*
        name: FixedTurnNumber
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber.#ctor*
        name: FixedTurnNumber
      VB:
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber.#ctor*
        name: FixedTurnNumber
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.FixedTurnNumber.#ctor
  UCT.Battle.Enemies.FixedTurnNumber.GetNextValue*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.FixedTurnNumber.GetNextValue*
        name: GetNextValue
      VB:
      - id: UCT.Battle.Enemies.FixedTurnNumber.GetNextValue*
        name: GetNextValue
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber.GetNextValue*
        name: GetNextValue
      VB:
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber.GetNextValue*
        name: GetNextValue
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber.GetNextValue*
        name: GetNextValue
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber.GetNextValue*
        name: GetNextValue
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.FixedTurnNumber.GetNextValue
  UCT.Battle.Enemies.FixedTurnNumber.SetValue*:
    name:
      CSharp:
      - id: UCT.Battle.Enemies.FixedTurnNumber.SetValue*
        name: SetValue
      VB:
      - id: UCT.Battle.Enemies.FixedTurnNumber.SetValue*
        name: SetValue
    nameWithType:
      CSharp:
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber.SetValue*
        name: SetValue
      VB:
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber.SetValue*
        name: SetValue
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber.SetValue*
        name: SetValue
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Battle*
        name: Battle
      - name: .
      - id: UCT.Battle.Enemies*
        name: Enemies
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber*
        name: FixedTurnNumber
      - name: .
      - id: UCT.Battle.Enemies.FixedTurnNumber.SetValue*
        name: SetValue
    isDefinition: true
    commentId: Overload:UCT.Battle.Enemies.FixedTurnNumber.SetValue
  UCT.Settings.SettingsOption.#ctor*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.#ctor*
        name: SettingsOption
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.#ctor*
        name: SettingsOption
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.#ctor*
        name: SettingsOption
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.#ctor
  System.Collections.Generic.Dictionary{System.Int32,System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.Int32,System.String}
  UCT.Settings.SettingsOption.GetSpDataNameWithIndex*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.GetSpDataNameWithIndex*
        name: GetSpDataNameWithIndex
      VB:
      - id: UCT.Settings.SettingsOption.GetSpDataNameWithIndex*
        name: GetSpDataNameWithIndex
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.GetSpDataNameWithIndex*
        name: GetSpDataNameWithIndex
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.GetSpDataNameWithIndex*
        name: GetSpDataNameWithIndex
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.GetSpDataNameWithIndex*
        name: GetSpDataNameWithIndex
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.GetSpDataNameWithIndex*
        name: GetSpDataNameWithIndex
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.GetSpDataNameWithIndex
  UCT.Settings.SettingsOption.NewSelectedOption*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.NewSelectedOption*
        name: NewSelectedOption
      VB:
      - id: UCT.Settings.SettingsOption.NewSelectedOption*
        name: NewSelectedOption
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.NewSelectedOption*
        name: NewSelectedOption
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.NewSelectedOption*
        name: NewSelectedOption
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.NewSelectedOption*
        name: NewSelectedOption
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.NewSelectedOption*
        name: NewSelectedOption
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.NewSelectedOption
  UCT.Settings.SettingsOption.DataName*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.DataName*
        name: DataName
      VB:
      - id: UCT.Settings.SettingsOption.DataName*
        name: DataName
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.DataName*
        name: DataName
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.DataName*
        name: DataName
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.DataName*
        name: DataName
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.DataName*
        name: DataName
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.DataName
  UCT.Settings.SettingsOption.DescriptionDataName*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.DescriptionDataName*
        name: DescriptionDataName
      VB:
      - id: UCT.Settings.SettingsOption.DescriptionDataName*
        name: DescriptionDataName
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.DescriptionDataName*
        name: DescriptionDataName
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.DescriptionDataName*
        name: DescriptionDataName
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.DescriptionDataName*
        name: DescriptionDataName
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.DescriptionDataName*
        name: DescriptionDataName
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.DescriptionDataName
  UCT.Settings:
    name:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
    isDefinition: true
    commentId: N:UCT.Settings
  UCT.Settings.OptionType:
    name:
      CSharp:
      - id: UCT.Settings.OptionType
        name: OptionType
      VB:
      - id: UCT.Settings.OptionType
        name: OptionType
    nameWithType:
      CSharp:
      - id: UCT.Settings.OptionType
        name: OptionType
      VB:
      - id: UCT.Settings.OptionType
        name: OptionType
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.OptionType
        name: OptionType
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.OptionType
        name: OptionType
    isDefinition: true
    parent: UCT.Settings
    commentId: T:UCT.Settings.OptionType
  UCT.Settings.SettingsOption.Type*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.Type*
        name: Type
      VB:
      - id: UCT.Settings.SettingsOption.Type*
        name: Type
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.Type*
        name: Type
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.Type*
        name: Type
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.Type*
        name: Type
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.Type*
        name: Type
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.Type
  UCT.Settings.SettingsOption.OnSelected*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.OnSelected*
        name: OnSelected
      VB:
      - id: UCT.Settings.SettingsOption.OnSelected*
        name: OnSelected
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.OnSelected*
        name: OnSelected
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.OnSelected*
        name: OnSelected
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.OnSelected*
        name: OnSelected
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.OnSelected*
        name: OnSelected
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.OnSelected
  System.Action{System.Object}:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Object
        name: object
        isExternal: true
      - name: '>'
      VB:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Object
        name: object
        isExternal: true
      - name: '>'
      VB:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Object
        name: object
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Action`1
    parent: System
    commentId: T:System.Action{System.Object}
  UCT.Settings.SettingsOption.SelectionBasedChangedValueSetter*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedValueSetter*
        name: SelectionBasedChangedValueSetter
      VB:
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedValueSetter*
        name: SelectionBasedChangedValueSetter
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedValueSetter*
        name: SelectionBasedChangedValueSetter
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedValueSetter*
        name: SelectionBasedChangedValueSetter
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedValueSetter*
        name: SelectionBasedChangedValueSetter
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedValueSetter*
        name: SelectionBasedChangedValueSetter
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.SelectionBasedChangedValueSetter
  System.Func`1:
    name:
      CSharp:
      - id: System.Func`1
        name: Func
        isExternal: true
      - name: <
      - name: TResult
      - name: '>'
      VB:
      - id: System.Func`1
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
    nameWithType:
      CSharp:
      - id: System.Func`1
        name: Func
        isExternal: true
      - name: <
      - name: TResult
      - name: '>'
      VB:
      - id: System.Func`1
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Func`1
        name: Func
        isExternal: true
      - name: <
      - name: TResult
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Func`1
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: TResult
      - name: )
    isDefinition: true
    commentId: T:System.Func`1
  System.Func{System.Object}:
    name:
      CSharp:
      - id: System.Func`1
        name: Func
        isExternal: true
      - name: <
      - id: System.Object
        name: object
        isExternal: true
      - name: '>'
      VB:
      - id: System.Func`1
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Func`1
        name: Func
        isExternal: true
      - name: <
      - id: System.Object
        name: object
        isExternal: true
      - name: '>'
      VB:
      - id: System.Func`1
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Func`1
        name: Func
        isExternal: true
      - name: <
      - id: System.Object
        name: object
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Func`1
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Func`1
    parent: System
    commentId: T:System.Func{System.Object}
  UCT.Settings.SettingsOption.SelectionBasedChangedValueGetter*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedValueGetter*
        name: SelectionBasedChangedValueGetter
      VB:
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedValueGetter*
        name: SelectionBasedChangedValueGetter
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedValueGetter*
        name: SelectionBasedChangedValueGetter
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedValueGetter*
        name: SelectionBasedChangedValueGetter
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedValueGetter*
        name: SelectionBasedChangedValueGetter
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedValueGetter*
        name: SelectionBasedChangedValueGetter
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.SelectionBasedChangedValueGetter
  UCT.Settings.SettingsOption.SelectionBasedChangedUnit*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedUnit*
        name: SelectionBasedChangedUnit
      VB:
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedUnit*
        name: SelectionBasedChangedUnit
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedUnit*
        name: SelectionBasedChangedUnit
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedUnit*
        name: SelectionBasedChangedUnit
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedUnit*
        name: SelectionBasedChangedUnit
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedUnit*
        name: SelectionBasedChangedUnit
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.SelectionBasedChangedUnit
  UCT.Settings.SettingsOption.SelectionBasedChangedUnitWhenGetC*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedUnitWhenGetC*
        name: SelectionBasedChangedUnitWhenGetC
      VB:
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedUnitWhenGetC*
        name: SelectionBasedChangedUnitWhenGetC
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedUnitWhenGetC*
        name: SelectionBasedChangedUnitWhenGetC
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedUnitWhenGetC*
        name: SelectionBasedChangedUnitWhenGetC
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedUnitWhenGetC*
        name: SelectionBasedChangedUnitWhenGetC
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedUnitWhenGetC*
        name: SelectionBasedChangedUnitWhenGetC
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.SelectionBasedChangedUnitWhenGetC
  UCT.Settings.SettingsOption.SelectionBasedChangedMax*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedMax*
        name: SelectionBasedChangedMax
      VB:
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedMax*
        name: SelectionBasedChangedMax
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedMax*
        name: SelectionBasedChangedMax
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedMax*
        name: SelectionBasedChangedMax
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedMax*
        name: SelectionBasedChangedMax
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedMax*
        name: SelectionBasedChangedMax
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.SelectionBasedChangedMax
  UCT.Settings.SettingsOption.SelectionBasedChangedMin*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedMin*
        name: SelectionBasedChangedMin
      VB:
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedMin*
        name: SelectionBasedChangedMin
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedMin*
        name: SelectionBasedChangedMin
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedMin*
        name: SelectionBasedChangedMin
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedMin*
        name: SelectionBasedChangedMin
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SelectionBasedChangedMin*
        name: SelectionBasedChangedMin
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.SelectionBasedChangedMin
  UCT.Settings.OptionDisplayMode:
    name:
      CSharp:
      - id: UCT.Settings.OptionDisplayMode
        name: OptionDisplayMode
      VB:
      - id: UCT.Settings.OptionDisplayMode
        name: OptionDisplayMode
    nameWithType:
      CSharp:
      - id: UCT.Settings.OptionDisplayMode
        name: OptionDisplayMode
      VB:
      - id: UCT.Settings.OptionDisplayMode
        name: OptionDisplayMode
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.OptionDisplayMode
        name: OptionDisplayMode
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.OptionDisplayMode
        name: OptionDisplayMode
    isDefinition: true
    parent: UCT.Settings
    commentId: T:UCT.Settings.OptionDisplayMode
  UCT.Settings.SettingsOption.OptionDisplayMode*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.OptionDisplayMode*
        name: OptionDisplayMode
      VB:
      - id: UCT.Settings.SettingsOption.OptionDisplayMode*
        name: OptionDisplayMode
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.OptionDisplayMode*
        name: OptionDisplayMode
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.OptionDisplayMode*
        name: OptionDisplayMode
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.OptionDisplayMode*
        name: OptionDisplayMode
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.OptionDisplayMode*
        name: OptionDisplayMode
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.OptionDisplayMode
  UCT.Settings.SettingsOption.SetValue*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.SetValue*
        name: SetValue
      VB:
      - id: UCT.Settings.SettingsOption.SetValue*
        name: SetValue
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SetValue*
        name: SetValue
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SetValue*
        name: SetValue
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SetValue*
        name: SetValue
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.SetValue*
        name: SetValue
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.SetValue
  UCT.Settings.SettingsOption.GetValue*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption.GetValue*
        name: GetValue
      VB:
      - id: UCT.Settings.SettingsOption.GetValue*
        name: GetValue
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.GetValue*
        name: GetValue
      VB:
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.GetValue*
        name: GetValue
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.GetValue*
        name: GetValue
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption*
        name: SettingsOption
      - name: .
      - id: UCT.Settings.SettingsOption.GetValue*
        name: GetValue
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsOption.GetValue
  UCT.Settings.SettingsOption:
    name:
      CSharp:
      - id: UCT.Settings.SettingsOption
        name: SettingsOption
      VB:
      - id: UCT.Settings.SettingsOption
        name: SettingsOption
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsOption
        name: SettingsOption
      VB:
      - id: UCT.Settings.SettingsOption
        name: SettingsOption
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption
        name: SettingsOption
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption
        name: SettingsOption
    isDefinition: true
    commentId: T:UCT.Settings.SettingsOption
  System.Collections.Generic.List{UCT.Settings.SettingsOption}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.Settings.SettingsOption
        name: SettingsOption
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Settings.SettingsOption
        name: SettingsOption
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.Settings.SettingsOption
        name: SettingsOption
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Settings.SettingsOption
        name: SettingsOption
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption
        name: SettingsOption
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsOption
        name: SettingsOption
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{UCT.Settings.SettingsOption}
  UCT.Settings.ISettingsLayer.AllSettingsOptions*:
    name:
      CSharp:
      - id: UCT.Settings.ISettingsLayer.AllSettingsOptions*
        name: AllSettingsOptions
      VB:
      - id: UCT.Settings.ISettingsLayer.AllSettingsOptions*
        name: AllSettingsOptions
    nameWithType:
      CSharp:
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AllSettingsOptions*
        name: AllSettingsOptions
      VB:
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AllSettingsOptions*
        name: AllSettingsOptions
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AllSettingsOptions*
        name: AllSettingsOptions
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AllSettingsOptions*
        name: AllSettingsOptions
    isDefinition: true
    commentId: Overload:UCT.Settings.ISettingsLayer.AllSettingsOptions
  UCT.Settings.ISettingsLayer.DisplayedSettingsOptions*:
    name:
      CSharp:
      - id: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions*
        name: DisplayedSettingsOptions
      VB:
      - id: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions*
        name: DisplayedSettingsOptions
    nameWithType:
      CSharp:
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions*
        name: DisplayedSettingsOptions
      VB:
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions*
        name: DisplayedSettingsOptions
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions*
        name: DisplayedSettingsOptions
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions*
        name: DisplayedSettingsOptions
    isDefinition: true
    commentId: Overload:UCT.Settings.ISettingsLayer.DisplayedSettingsOptions
  UCT.Settings.ISettingsLayer.AddBackOptionForDisplay*:
    name:
      CSharp:
      - id: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay*
        name: AddBackOptionForDisplay
      VB:
      - id: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay*
        name: AddBackOptionForDisplay
    nameWithType:
      CSharp:
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay*
        name: AddBackOptionForDisplay
      VB:
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay*
        name: AddBackOptionForDisplay
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay*
        name: AddBackOptionForDisplay
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay*
        name: AddBackOptionForDisplay
    isDefinition: true
    commentId: Overload:UCT.Settings.ISettingsLayer.AddBackOptionForDisplay
  UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay*:
    name:
      CSharp:
      - id: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay*
        name: AddSwitchPageOptionForDisplay
      VB:
      - id: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay*
        name: AddSwitchPageOptionForDisplay
    nameWithType:
      CSharp:
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay*
        name: AddSwitchPageOptionForDisplay
      VB:
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay*
        name: AddSwitchPageOptionForDisplay
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay*
        name: AddSwitchPageOptionForDisplay
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay*
        name: AddSwitchPageOptionForDisplay
    isDefinition: true
    commentId: Overload:UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay
  UCT.Settings.ISettingsLayer.AddLanguagePackageOption*:
    name:
      CSharp:
      - id: UCT.Settings.ISettingsLayer.AddLanguagePackageOption*
        name: AddLanguagePackageOption
      VB:
      - id: UCT.Settings.ISettingsLayer.AddLanguagePackageOption*
        name: AddLanguagePackageOption
    nameWithType:
      CSharp:
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddLanguagePackageOption*
        name: AddLanguagePackageOption
      VB:
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddLanguagePackageOption*
        name: AddLanguagePackageOption
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddLanguagePackageOption*
        name: AddLanguagePackageOption
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddLanguagePackageOption*
        name: AddLanguagePackageOption
    isDefinition: true
    commentId: Overload:UCT.Settings.ISettingsLayer.AddLanguagePackageOption
  UCT.Settings.ISettingsLayer.Clear*:
    name:
      CSharp:
      - id: UCT.Settings.ISettingsLayer.Clear*
        name: Clear
      VB:
      - id: UCT.Settings.ISettingsLayer.Clear*
        name: Clear
    nameWithType:
      CSharp:
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.Clear*
        name: Clear
      VB:
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.Clear*
        name: Clear
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.Clear*
        name: Clear
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer*
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.Clear*
        name: Clear
    isDefinition: true
    commentId: Overload:UCT.Settings.ISettingsLayer.Clear
  UCT.Settings.ISettingsLayer:
    name:
      CSharp:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      VB:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
    nameWithType:
      CSharp:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      VB:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
    isDefinition: true
    parent: UCT.Settings
    commentId: T:UCT.Settings.ISettingsLayer
  UCT.Settings.SettingsLayerBase.AllSettingsOptions*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AllSettingsOptions*
        name: AllSettingsOptions
      VB:
      - id: UCT.Settings.SettingsLayerBase.AllSettingsOptions*
        name: AllSettingsOptions
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AllSettingsOptions*
        name: AllSettingsOptions
      VB:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AllSettingsOptions*
        name: AllSettingsOptions
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AllSettingsOptions*
        name: AllSettingsOptions
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AllSettingsOptions*
        name: AllSettingsOptions
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsLayerBase.AllSettingsOptions
  UCT.Settings.ISettingsLayer.AllSettingsOptions:
    name:
      CSharp:
      - id: UCT.Settings.ISettingsLayer.AllSettingsOptions
        name: AllSettingsOptions
      VB:
      - id: UCT.Settings.ISettingsLayer.AllSettingsOptions
        name: AllSettingsOptions
    nameWithType:
      CSharp:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AllSettingsOptions
        name: AllSettingsOptions
      VB:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AllSettingsOptions
        name: AllSettingsOptions
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AllSettingsOptions
        name: AllSettingsOptions
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AllSettingsOptions
        name: AllSettingsOptions
    isDefinition: true
    parent: UCT.Settings.ISettingsLayer
    commentId: P:UCT.Settings.ISettingsLayer.AllSettingsOptions
  UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions*
        name: DisplayedSettingsOptions
      VB:
      - id: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions*
        name: DisplayedSettingsOptions
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions*
        name: DisplayedSettingsOptions
      VB:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions*
        name: DisplayedSettingsOptions
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions*
        name: DisplayedSettingsOptions
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions*
        name: DisplayedSettingsOptions
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
  UCT.Settings.ISettingsLayer.DisplayedSettingsOptions:
    name:
      CSharp:
      - id: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions
        name: DisplayedSettingsOptions
      VB:
      - id: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions
        name: DisplayedSettingsOptions
    nameWithType:
      CSharp:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions
        name: DisplayedSettingsOptions
      VB:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions
        name: DisplayedSettingsOptions
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions
        name: DisplayedSettingsOptions
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.DisplayedSettingsOptions
        name: DisplayedSettingsOptions
    isDefinition: true
    parent: UCT.Settings.ISettingsLayer
    commentId: P:UCT.Settings.ISettingsLayer.DisplayedSettingsOptions
  UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay*
        name: AddBackOptionForDisplay
      VB:
      - id: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay*
        name: AddBackOptionForDisplay
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay*
        name: AddBackOptionForDisplay
      VB:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay*
        name: AddBackOptionForDisplay
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay*
        name: AddBackOptionForDisplay
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay*
        name: AddBackOptionForDisplay
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay
  UCT.Settings.ISettingsLayer.AddBackOptionForDisplay(System.String,System.String,System.String):
    name:
      CSharp:
      - id: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay(System.String,System.String,System.String)
        name: AddBackOptionForDisplay
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay(System.String,System.String,System.String)
        name: AddBackOptionForDisplay
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay(System.String,System.String,System.String)
        name: AddBackOptionForDisplay
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay(System.String,System.String,System.String)
        name: AddBackOptionForDisplay
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay(System.String,System.String,System.String)
        name: AddBackOptionForDisplay
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddBackOptionForDisplay(System.String,System.String,System.String)
        name: AddBackOptionForDisplay
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Settings.ISettingsLayer
    commentId: M:UCT.Settings.ISettingsLayer.AddBackOptionForDisplay(System.String,System.String,System.String)
  UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay*
        name: AddSwitchPageOptionForDisplay
      VB:
      - id: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay*
        name: AddSwitchPageOptionForDisplay
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay*
        name: AddSwitchPageOptionForDisplay
      VB:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay*
        name: AddSwitchPageOptionForDisplay
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay*
        name: AddSwitchPageOptionForDisplay
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay*
        name: AddSwitchPageOptionForDisplay
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay
  UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay(System.String,System.String):
    name:
      CSharp:
      - id: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay(System.String,System.String)
        name: AddSwitchPageOptionForDisplay
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay(System.String,System.String)
        name: AddSwitchPageOptionForDisplay
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay(System.String,System.String)
        name: AddSwitchPageOptionForDisplay
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay(System.String,System.String)
        name: AddSwitchPageOptionForDisplay
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay(System.String,System.String)
        name: AddSwitchPageOptionForDisplay
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay(System.String,System.String)
        name: AddSwitchPageOptionForDisplay
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Settings.ISettingsLayer
    commentId: M:UCT.Settings.ISettingsLayer.AddSwitchPageOptionForDisplay(System.String,System.String)
  UCT.Settings.SettingsLayerBase.AddLanguagePackageOption*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption*
        name: AddLanguagePackageOption
      VB:
      - id: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption*
        name: AddLanguagePackageOption
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption*
        name: AddLanguagePackageOption
      VB:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption*
        name: AddLanguagePackageOption
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption*
        name: AddLanguagePackageOption
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption*
        name: AddLanguagePackageOption
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
  UCT.Settings.ISettingsLayer.AddLanguagePackageOption:
    name:
      CSharp:
      - id: UCT.Settings.ISettingsLayer.AddLanguagePackageOption
        name: AddLanguagePackageOption
      - name: (
      - name: )
      VB:
      - id: UCT.Settings.ISettingsLayer.AddLanguagePackageOption
        name: AddLanguagePackageOption
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddLanguagePackageOption
        name: AddLanguagePackageOption
      - name: (
      - name: )
      VB:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddLanguagePackageOption
        name: AddLanguagePackageOption
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddLanguagePackageOption
        name: AddLanguagePackageOption
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.AddLanguagePackageOption
        name: AddLanguagePackageOption
      - name: (
      - name: )
    isDefinition: true
    parent: UCT.Settings.ISettingsLayer
    commentId: M:UCT.Settings.ISettingsLayer.AddLanguagePackageOption
  UCT.Settings.SettingsLayerBase.Clear*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.Clear*
        name: Clear
      VB:
      - id: UCT.Settings.SettingsLayerBase.Clear*
        name: Clear
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.Clear*
        name: Clear
      VB:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.Clear*
        name: Clear
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.Clear*
        name: Clear
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.Clear*
        name: Clear
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsLayerBase.Clear
  UCT.Settings.ISettingsLayer.Clear:
    name:
      CSharp:
      - id: UCT.Settings.ISettingsLayer.Clear
        name: Clear
      - name: (
      - name: )
      VB:
      - id: UCT.Settings.ISettingsLayer.Clear
        name: Clear
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.Clear
        name: Clear
      - name: (
      - name: )
      VB:
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.Clear
        name: Clear
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.Clear
        name: Clear
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.ISettingsLayer
        name: ISettingsLayer
      - name: .
      - id: UCT.Settings.ISettingsLayer.Clear
        name: Clear
      - name: (
      - name: )
    isDefinition: true
    parent: UCT.Settings.ISettingsLayer
    commentId: M:UCT.Settings.ISettingsLayer.Clear
  UCT.Settings.SettingsLayerBase.AddEnterLayerOption*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AddEnterLayerOption*
        name: AddEnterLayerOption
      VB:
      - id: UCT.Settings.SettingsLayerBase.AddEnterLayerOption*
        name: AddEnterLayerOption
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterLayerOption*
        name: AddEnterLayerOption
      VB:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterLayerOption*
        name: AddEnterLayerOption
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterLayerOption*
        name: AddEnterLayerOption
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterLayerOption*
        name: AddEnterLayerOption
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsLayerBase.AddEnterLayerOption
  UCT.Settings.SettingsLayerBase.AddEnterSceneOption*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AddEnterSceneOption*
        name: AddEnterSceneOption
      VB:
      - id: UCT.Settings.SettingsLayerBase.AddEnterSceneOption*
        name: AddEnterSceneOption
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterSceneOption*
        name: AddEnterSceneOption
      VB:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterSceneOption*
        name: AddEnterSceneOption
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterSceneOption*
        name: AddEnterSceneOption
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterSceneOption*
        name: AddEnterSceneOption
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsLayerBase.AddEnterSceneOption
  UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption*
        name: AddConfigurableKeyOption
      VB:
      - id: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption*
        name: AddConfigurableKeyOption
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption*
        name: AddConfigurableKeyOption
      VB:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption*
        name: AddConfigurableKeyOption
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption*
        name: AddConfigurableKeyOption
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption*
        name: AddConfigurableKeyOption
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption
  UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption*
        name: AddKeyBindingsResetOption
      VB:
      - id: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption*
        name: AddKeyBindingsResetOption
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption*
        name: AddKeyBindingsResetOption
      VB:
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption*
        name: AddKeyBindingsResetOption
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption*
        name: AddKeyBindingsResetOption
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase*
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption*
        name: AddKeyBindingsResetOption
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption
  UCT.Settings.SettingsLayerBase:
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      VB:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      VB:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
    isDefinition: true
    parent: UCT.Settings
    commentId: T:UCT.Settings.SettingsLayerBase
  UCT.Settings.SettingsLayerBase.AllSettingsOptions:
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AllSettingsOptions
        name: AllSettingsOptions
      VB:
      - id: UCT.Settings.SettingsLayerBase.AllSettingsOptions
        name: AllSettingsOptions
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AllSettingsOptions
        name: AllSettingsOptions
      VB:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AllSettingsOptions
        name: AllSettingsOptions
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AllSettingsOptions
        name: AllSettingsOptions
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AllSettingsOptions
        name: AllSettingsOptions
    isDefinition: true
    parent: UCT.Settings.SettingsLayerBase
    commentId: P:UCT.Settings.SettingsLayerBase.AllSettingsOptions
  UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions:
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
        name: DisplayedSettingsOptions
      VB:
      - id: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
        name: DisplayedSettingsOptions
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
        name: DisplayedSettingsOptions
      VB:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
        name: DisplayedSettingsOptions
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
        name: DisplayedSettingsOptions
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
        name: DisplayedSettingsOptions
    isDefinition: true
    parent: UCT.Settings.SettingsLayerBase
    commentId: P:UCT.Settings.SettingsLayerBase.DisplayedSettingsOptions
  UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String):
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
        name: AddBackOptionForDisplay
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
        name: AddBackOptionForDisplay
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
        name: AddBackOptionForDisplay
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
        name: AddBackOptionForDisplay
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
        name: AddBackOptionForDisplay
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
        name: AddBackOptionForDisplay
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Settings.SettingsLayerBase
    commentId: M:UCT.Settings.SettingsLayerBase.AddBackOptionForDisplay(System.String,System.String,System.String)
  UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String):
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
        name: AddSwitchPageOptionForDisplay
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
        name: AddSwitchPageOptionForDisplay
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
        name: AddSwitchPageOptionForDisplay
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
        name: AddSwitchPageOptionForDisplay
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
        name: AddSwitchPageOptionForDisplay
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
        name: AddSwitchPageOptionForDisplay
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Settings.SettingsLayerBase
    commentId: M:UCT.Settings.SettingsLayerBase.AddSwitchPageOptionForDisplay(System.String,System.String)
  UCT.Settings.SettingsLayerBase.AddLanguagePackageOption:
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
        name: AddLanguagePackageOption
      - name: (
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
        name: AddLanguagePackageOption
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
        name: AddLanguagePackageOption
      - name: (
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
        name: AddLanguagePackageOption
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
        name: AddLanguagePackageOption
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
        name: AddLanguagePackageOption
      - name: (
      - name: )
    isDefinition: true
    parent: UCT.Settings.SettingsLayerBase
    commentId: M:UCT.Settings.SettingsLayerBase.AddLanguagePackageOption
  UCT.Settings.SettingsLayerBase.Clear:
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.Clear
        name: Clear
      - name: (
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase.Clear
        name: Clear
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.Clear
        name: Clear
      - name: (
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.Clear
        name: Clear
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.Clear
        name: Clear
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.Clear
        name: Clear
      - name: (
      - name: )
    isDefinition: true
    parent: UCT.Settings.SettingsLayerBase
    commentId: M:UCT.Settings.SettingsLayerBase.Clear
  UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32):
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
        name: AddEnterLayerOption
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
        name: AddEnterLayerOption
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
        name: AddEnterLayerOption
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
        name: AddEnterLayerOption
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
        name: AddEnterLayerOption
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: '['
      - name: ']'
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
        name: AddEnterLayerOption
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: (
      - name: )
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Settings.SettingsLayerBase
    commentId: M:UCT.Settings.SettingsLayerBase.AddEnterLayerOption(System.String,System.String,System.String[],System.Int32)
  UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String):
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
        name: AddEnterSceneOption
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
        name: AddEnterSceneOption
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
        name: AddEnterSceneOption
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
        name: AddEnterSceneOption
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
        name: AddEnterSceneOption
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
        name: AddEnterSceneOption
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Settings.SettingsLayerBase
    commentId: M:UCT.Settings.SettingsLayerBase.AddEnterSceneOption(System.String,System.String,System.String)
  UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String):
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
        name: AddConfigurableKeyOption
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
        name: AddConfigurableKeyOption
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
        name: AddConfigurableKeyOption
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
        name: AddConfigurableKeyOption
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
        name: AddConfigurableKeyOption
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
        name: AddConfigurableKeyOption
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Settings.SettingsLayerBase
    commentId: M:UCT.Settings.SettingsLayerBase.AddConfigurableKeyOption(System.String)
  UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String):
    name:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
        name: AddKeyBindingsResetOption
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
        name: AddKeyBindingsResetOption
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
        name: AddKeyBindingsResetOption
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
        name: AddKeyBindingsResetOption
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
        name: AddKeyBindingsResetOption
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: .
      - id: UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
        name: AddKeyBindingsResetOption
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Settings.SettingsLayerBase
    commentId: M:UCT.Settings.SettingsLayerBase.AddKeyBindingsResetOption(System.String)
  UCT.Settings.HomeSettingsLayer.#ctor*:
    name:
      CSharp:
      - id: UCT.Settings.HomeSettingsLayer.#ctor*
        name: HomeSettingsLayer
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Settings.HomeSettingsLayer*
        name: HomeSettingsLayer
      - name: .
      - id: UCT.Settings.HomeSettingsLayer.#ctor*
        name: HomeSettingsLayer
      VB:
      - id: UCT.Settings.HomeSettingsLayer*
        name: HomeSettingsLayer
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.HomeSettingsLayer*
        name: HomeSettingsLayer
      - name: .
      - id: UCT.Settings.HomeSettingsLayer.#ctor*
        name: HomeSettingsLayer
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.HomeSettingsLayer*
        name: HomeSettingsLayer
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Settings.HomeSettingsLayer.#ctor
  UCT.Settings.HomeSettingsLayer:
    name:
      CSharp:
      - id: UCT.Settings.HomeSettingsLayer
        name: HomeSettingsLayer
      VB:
      - id: UCT.Settings.HomeSettingsLayer
        name: HomeSettingsLayer
    nameWithType:
      CSharp:
      - id: UCT.Settings.HomeSettingsLayer
        name: HomeSettingsLayer
      VB:
      - id: UCT.Settings.HomeSettingsLayer
        name: HomeSettingsLayer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.HomeSettingsLayer
        name: HomeSettingsLayer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.HomeSettingsLayer
        name: HomeSettingsLayer
    isDefinition: true
    commentId: T:UCT.Settings.HomeSettingsLayer
  UCT.Settings.VideoSettingsLayer.#ctor*:
    name:
      CSharp:
      - id: UCT.Settings.VideoSettingsLayer.#ctor*
        name: VideoSettingsLayer
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Settings.VideoSettingsLayer*
        name: VideoSettingsLayer
      - name: .
      - id: UCT.Settings.VideoSettingsLayer.#ctor*
        name: VideoSettingsLayer
      VB:
      - id: UCT.Settings.VideoSettingsLayer*
        name: VideoSettingsLayer
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.VideoSettingsLayer*
        name: VideoSettingsLayer
      - name: .
      - id: UCT.Settings.VideoSettingsLayer.#ctor*
        name: VideoSettingsLayer
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.VideoSettingsLayer*
        name: VideoSettingsLayer
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Settings.VideoSettingsLayer.#ctor
  UCT.Settings.VideoSettingsLayer:
    name:
      CSharp:
      - id: UCT.Settings.VideoSettingsLayer
        name: VideoSettingsLayer
      VB:
      - id: UCT.Settings.VideoSettingsLayer
        name: VideoSettingsLayer
    nameWithType:
      CSharp:
      - id: UCT.Settings.VideoSettingsLayer
        name: VideoSettingsLayer
      VB:
      - id: UCT.Settings.VideoSettingsLayer
        name: VideoSettingsLayer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.VideoSettingsLayer
        name: VideoSettingsLayer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.VideoSettingsLayer
        name: VideoSettingsLayer
    isDefinition: true
    commentId: T:UCT.Settings.VideoSettingsLayer
  UCT.Settings.AudioSettingsLayer.#ctor*:
    name:
      CSharp:
      - id: UCT.Settings.AudioSettingsLayer.#ctor*
        name: AudioSettingsLayer
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Settings.AudioSettingsLayer*
        name: AudioSettingsLayer
      - name: .
      - id: UCT.Settings.AudioSettingsLayer.#ctor*
        name: AudioSettingsLayer
      VB:
      - id: UCT.Settings.AudioSettingsLayer*
        name: AudioSettingsLayer
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.AudioSettingsLayer*
        name: AudioSettingsLayer
      - name: .
      - id: UCT.Settings.AudioSettingsLayer.#ctor*
        name: AudioSettingsLayer
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.AudioSettingsLayer*
        name: AudioSettingsLayer
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Settings.AudioSettingsLayer.#ctor
  UCT.Settings.AudioSettingsLayer:
    name:
      CSharp:
      - id: UCT.Settings.AudioSettingsLayer
        name: AudioSettingsLayer
      VB:
      - id: UCT.Settings.AudioSettingsLayer
        name: AudioSettingsLayer
    nameWithType:
      CSharp:
      - id: UCT.Settings.AudioSettingsLayer
        name: AudioSettingsLayer
      VB:
      - id: UCT.Settings.AudioSettingsLayer
        name: AudioSettingsLayer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.AudioSettingsLayer
        name: AudioSettingsLayer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.AudioSettingsLayer
        name: AudioSettingsLayer
    isDefinition: true
    commentId: T:UCT.Settings.AudioSettingsLayer
  UCT.Settings.GraphicSettingsLayer.#ctor*:
    name:
      CSharp:
      - id: UCT.Settings.GraphicSettingsLayer.#ctor*
        name: GraphicSettingsLayer
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Settings.GraphicSettingsLayer*
        name: GraphicSettingsLayer
      - name: .
      - id: UCT.Settings.GraphicSettingsLayer.#ctor*
        name: GraphicSettingsLayer
      VB:
      - id: UCT.Settings.GraphicSettingsLayer*
        name: GraphicSettingsLayer
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.GraphicSettingsLayer*
        name: GraphicSettingsLayer
      - name: .
      - id: UCT.Settings.GraphicSettingsLayer.#ctor*
        name: GraphicSettingsLayer
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.GraphicSettingsLayer*
        name: GraphicSettingsLayer
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Settings.GraphicSettingsLayer.#ctor
  UCT.Settings.GraphicSettingsLayer:
    name:
      CSharp:
      - id: UCT.Settings.GraphicSettingsLayer
        name: GraphicSettingsLayer
      VB:
      - id: UCT.Settings.GraphicSettingsLayer
        name: GraphicSettingsLayer
    nameWithType:
      CSharp:
      - id: UCT.Settings.GraphicSettingsLayer
        name: GraphicSettingsLayer
      VB:
      - id: UCT.Settings.GraphicSettingsLayer
        name: GraphicSettingsLayer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.GraphicSettingsLayer
        name: GraphicSettingsLayer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.GraphicSettingsLayer
        name: GraphicSettingsLayer
    isDefinition: true
    commentId: T:UCT.Settings.GraphicSettingsLayer
  UCT.Settings.InputSettingsLayer.#ctor*:
    name:
      CSharp:
      - id: UCT.Settings.InputSettingsLayer.#ctor*
        name: InputSettingsLayer
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Settings.InputSettingsLayer*
        name: InputSettingsLayer
      - name: .
      - id: UCT.Settings.InputSettingsLayer.#ctor*
        name: InputSettingsLayer
      VB:
      - id: UCT.Settings.InputSettingsLayer*
        name: InputSettingsLayer
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.InputSettingsLayer*
        name: InputSettingsLayer
      - name: .
      - id: UCT.Settings.InputSettingsLayer.#ctor*
        name: InputSettingsLayer
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.InputSettingsLayer*
        name: InputSettingsLayer
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Settings.InputSettingsLayer.#ctor
  UCT.Settings.InputSettingsLayer:
    name:
      CSharp:
      - id: UCT.Settings.InputSettingsLayer
        name: InputSettingsLayer
      VB:
      - id: UCT.Settings.InputSettingsLayer
        name: InputSettingsLayer
    nameWithType:
      CSharp:
      - id: UCT.Settings.InputSettingsLayer
        name: InputSettingsLayer
      VB:
      - id: UCT.Settings.InputSettingsLayer
        name: InputSettingsLayer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.InputSettingsLayer
        name: InputSettingsLayer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.InputSettingsLayer
        name: InputSettingsLayer
    isDefinition: true
    commentId: T:UCT.Settings.InputSettingsLayer
  UCT.Settings.SettingKeyControlLayer.#ctor*:
    name:
      CSharp:
      - id: UCT.Settings.SettingKeyControlLayer.#ctor*
        name: SettingKeyControlLayer
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingKeyControlLayer*
        name: SettingKeyControlLayer
      - name: .
      - id: UCT.Settings.SettingKeyControlLayer.#ctor*
        name: SettingKeyControlLayer
      VB:
      - id: UCT.Settings.SettingKeyControlLayer*
        name: SettingKeyControlLayer
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingKeyControlLayer*
        name: SettingKeyControlLayer
      - name: .
      - id: UCT.Settings.SettingKeyControlLayer.#ctor*
        name: SettingKeyControlLayer
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingKeyControlLayer*
        name: SettingKeyControlLayer
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingKeyControlLayer.#ctor
  UCT.Settings.SettingKeyControlLayer:
    name:
      CSharp:
      - id: UCT.Settings.SettingKeyControlLayer
        name: SettingKeyControlLayer
      VB:
      - id: UCT.Settings.SettingKeyControlLayer
        name: SettingKeyControlLayer
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingKeyControlLayer
        name: SettingKeyControlLayer
      VB:
      - id: UCT.Settings.SettingKeyControlLayer
        name: SettingKeyControlLayer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingKeyControlLayer
        name: SettingKeyControlLayer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingKeyControlLayer
        name: SettingKeyControlLayer
    isDefinition: true
    commentId: T:UCT.Settings.SettingKeyControlLayer
  UCT.Settings.SettingLanguagePackageLayer:
    name:
      CSharp:
      - id: UCT.Settings.SettingLanguagePackageLayer
        name: SettingLanguagePackageLayer
      VB:
      - id: UCT.Settings.SettingLanguagePackageLayer
        name: SettingLanguagePackageLayer
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingLanguagePackageLayer
        name: SettingLanguagePackageLayer
      VB:
      - id: UCT.Settings.SettingLanguagePackageLayer
        name: SettingLanguagePackageLayer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingLanguagePackageLayer
        name: SettingLanguagePackageLayer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingLanguagePackageLayer
        name: SettingLanguagePackageLayer
    isDefinition: true
    commentId: T:UCT.Settings.SettingLanguagePackageLayer
  UCT.Settings.SubtitleSettingsLayer.#ctor*:
    name:
      CSharp:
      - id: UCT.Settings.SubtitleSettingsLayer.#ctor*
        name: SubtitleSettingsLayer
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Settings.SubtitleSettingsLayer*
        name: SubtitleSettingsLayer
      - name: .
      - id: UCT.Settings.SubtitleSettingsLayer.#ctor*
        name: SubtitleSettingsLayer
      VB:
      - id: UCT.Settings.SubtitleSettingsLayer*
        name: SubtitleSettingsLayer
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SubtitleSettingsLayer*
        name: SubtitleSettingsLayer
      - name: .
      - id: UCT.Settings.SubtitleSettingsLayer.#ctor*
        name: SubtitleSettingsLayer
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SubtitleSettingsLayer*
        name: SubtitleSettingsLayer
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Settings.SubtitleSettingsLayer.#ctor
  UCT.Settings.SubtitleSettingsLayer:
    name:
      CSharp:
      - id: UCT.Settings.SubtitleSettingsLayer
        name: SubtitleSettingsLayer
      VB:
      - id: UCT.Settings.SubtitleSettingsLayer
        name: SubtitleSettingsLayer
    nameWithType:
      CSharp:
      - id: UCT.Settings.SubtitleSettingsLayer
        name: SubtitleSettingsLayer
      VB:
      - id: UCT.Settings.SubtitleSettingsLayer
        name: SubtitleSettingsLayer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SubtitleSettingsLayer
        name: SubtitleSettingsLayer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SubtitleSettingsLayer
        name: SubtitleSettingsLayer
    isDefinition: true
    commentId: T:UCT.Settings.SubtitleSettingsLayer
  UCT.Settings.EscKeyExitHandler:
    name:
      CSharp:
      - id: UCT.Settings.EscKeyExitHandler
        name: EscKeyExitHandler
      VB:
      - id: UCT.Settings.EscKeyExitHandler
        name: EscKeyExitHandler
    nameWithType:
      CSharp:
      - id: UCT.Settings.EscKeyExitHandler
        name: EscKeyExitHandler
      VB:
      - id: UCT.Settings.EscKeyExitHandler
        name: EscKeyExitHandler
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.EscKeyExitHandler
        name: EscKeyExitHandler
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.EscKeyExitHandler
        name: EscKeyExitHandler
    isDefinition: true
    commentId: T:UCT.Settings.EscKeyExitHandler
  UCT.Settings.SettingsStorage.Pause*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.Pause*
        name: Pause
      VB:
      - id: UCT.Settings.SettingsStorage.Pause*
        name: Pause
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.Pause*
        name: Pause
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.Pause*
        name: Pause
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.Pause*
        name: Pause
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.Pause*
        name: Pause
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.Pause
  UCT.Settings.SettingsStorage.TextWidth*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.TextWidth*
        name: TextWidth
      VB:
      - id: UCT.Settings.SettingsStorage.TextWidth*
        name: TextWidth
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.TextWidth*
        name: TextWidth
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.TextWidth*
        name: TextWidth
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.TextWidth*
        name: TextWidth
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.TextWidth*
        name: TextWidth
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.TextWidth
  UCT.Settings.SettingsStorage.ResolutionLevel*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.ResolutionLevel*
        name: ResolutionLevel
      VB:
      - id: UCT.Settings.SettingsStorage.ResolutionLevel*
        name: ResolutionLevel
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.ResolutionLevel*
        name: ResolutionLevel
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.ResolutionLevel*
        name: ResolutionLevel
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.ResolutionLevel*
        name: ResolutionLevel
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.ResolutionLevel*
        name: ResolutionLevel
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.ResolutionLevel
  UCT.Settings.SettingsStorage.FrameRate*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.FrameRate*
        name: FrameRate
      VB:
      - id: UCT.Settings.SettingsStorage.FrameRate*
        name: FrameRate
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.FrameRate*
        name: FrameRate
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.FrameRate*
        name: FrameRate
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.FrameRate*
        name: FrameRate
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.FrameRate*
        name: FrameRate
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.FrameRate
  UCT.Settings.SettingsStorage.FullScreen*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.FullScreen*
        name: FullScreen
      VB:
      - id: UCT.Settings.SettingsStorage.FullScreen*
        name: FullScreen
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.FullScreen*
        name: FullScreen
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.FullScreen*
        name: FullScreen
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.FullScreen*
        name: FullScreen
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.FullScreen*
        name: FullScreen
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.FullScreen
  UCT.Settings.SettingsStorage.MainVolume*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.MainVolume*
        name: MainVolume
      VB:
      - id: UCT.Settings.SettingsStorage.MainVolume*
        name: MainVolume
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.MainVolume*
        name: MainVolume
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.MainVolume*
        name: MainVolume
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.MainVolume*
        name: MainVolume
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.MainVolume*
        name: MainVolume
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.MainVolume
  UCT.Settings.SettingsStorage.BGMVolume*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.BGMVolume*
        name: BGMVolume
      VB:
      - id: UCT.Settings.SettingsStorage.BGMVolume*
        name: BGMVolume
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.BGMVolume*
        name: BGMVolume
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.BGMVolume*
        name: BGMVolume
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.BGMVolume*
        name: BGMVolume
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.BGMVolume*
        name: BGMVolume
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.BGMVolume
  UCT.Settings.SettingsStorage.FXVolume*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.FXVolume*
        name: FXVolume
      VB:
      - id: UCT.Settings.SettingsStorage.FXVolume*
        name: FXVolume
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.FXVolume*
        name: FXVolume
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.FXVolume*
        name: FXVolume
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.FXVolume*
        name: FXVolume
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.FXVolume*
        name: FXVolume
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.FXVolume
  UCT.Settings.SettingsStorage.IsSimplifySfx*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.IsSimplifySfx*
        name: IsSimplifySfx
      VB:
      - id: UCT.Settings.SettingsStorage.IsSimplifySfx*
        name: IsSimplifySfx
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.IsSimplifySfx*
        name: IsSimplifySfx
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.IsSimplifySfx*
        name: IsSimplifySfx
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.IsSimplifySfx*
        name: IsSimplifySfx
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.IsSimplifySfx*
        name: IsSimplifySfx
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.IsSimplifySfx
  UCT.Settings.SettingsStorage.IsDisplayFPS*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.IsDisplayFPS*
        name: IsDisplayFPS
      VB:
      - id: UCT.Settings.SettingsStorage.IsDisplayFPS*
        name: IsDisplayFPS
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.IsDisplayFPS*
        name: IsDisplayFPS
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.IsDisplayFPS*
        name: IsDisplayFPS
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.IsDisplayFPS*
        name: IsDisplayFPS
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.IsDisplayFPS*
        name: IsDisplayFPS
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.IsDisplayFPS
  UCT.Settings.SettingsStorage.Resolution*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.Resolution*
        name: Resolution
      VB:
      - id: UCT.Settings.SettingsStorage.Resolution*
        name: Resolution
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.Resolution*
        name: Resolution
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.Resolution*
        name: Resolution
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.Resolution*
        name: Resolution
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.Resolution*
        name: Resolution
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.Resolution
  UCT.Settings.VSyncMode:
    name:
      CSharp:
      - id: UCT.Settings.VSyncMode
        name: VSyncMode
      VB:
      - id: UCT.Settings.VSyncMode
        name: VSyncMode
    nameWithType:
      CSharp:
      - id: UCT.Settings.VSyncMode
        name: VSyncMode
      VB:
      - id: UCT.Settings.VSyncMode
        name: VSyncMode
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.VSyncMode
        name: VSyncMode
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.VSyncMode
        name: VSyncMode
    isDefinition: true
    parent: UCT.Settings
    commentId: T:UCT.Settings.VSyncMode
  UCT.Settings.SettingsStorage.VsyncMode*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.VsyncMode*
        name: VsyncMode
      VB:
      - id: UCT.Settings.SettingsStorage.VsyncMode*
        name: VsyncMode
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.VsyncMode*
        name: VsyncMode
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.VsyncMode*
        name: VsyncMode
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.VsyncMode*
        name: VsyncMode
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.VsyncMode*
        name: VsyncMode
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.VsyncMode
  UCT.Settings.SettingsStorage.IsUsingHdFrame*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.IsUsingHdFrame*
        name: IsUsingHdFrame
      VB:
      - id: UCT.Settings.SettingsStorage.IsUsingHdFrame*
        name: IsUsingHdFrame
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.IsUsingHdFrame*
        name: IsUsingHdFrame
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.IsUsingHdFrame*
        name: IsUsingHdFrame
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.IsUsingHdFrame*
        name: IsUsingHdFrame
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.IsUsingHdFrame*
        name: IsUsingHdFrame
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.IsUsingHdFrame
  UCT.Settings.KeyBindingType:
    name:
      CSharp:
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
      VB:
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
    nameWithType:
      CSharp:
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
      VB:
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
    isDefinition: true
    parent: UCT.Settings
    commentId: T:UCT.Settings.KeyBindingType
  UCT.Settings.SettingsStorage.KeyBindingType*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.KeyBindingType*
        name: KeyBindingType
      VB:
      - id: UCT.Settings.SettingsStorage.KeyBindingType*
        name: KeyBindingType
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.KeyBindingType*
        name: KeyBindingType
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.KeyBindingType*
        name: KeyBindingType
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.KeyBindingType*
        name: KeyBindingType
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.KeyBindingType*
        name: KeyBindingType
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.KeyBindingType
  UCT.Settings.TypingSpeed:
    name:
      CSharp:
      - id: UCT.Settings.TypingSpeed
        name: TypingSpeed
      VB:
      - id: UCT.Settings.TypingSpeed
        name: TypingSpeed
    nameWithType:
      CSharp:
      - id: UCT.Settings.TypingSpeed
        name: TypingSpeed
      VB:
      - id: UCT.Settings.TypingSpeed
        name: TypingSpeed
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.TypingSpeed
        name: TypingSpeed
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.TypingSpeed
        name: TypingSpeed
    isDefinition: true
    parent: UCT.Settings
    commentId: T:UCT.Settings.TypingSpeed
  UCT.Settings.SettingsStorage.TypingSpeed*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.TypingSpeed*
        name: TypingSpeed
      VB:
      - id: UCT.Settings.SettingsStorage.TypingSpeed*
        name: TypingSpeed
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.TypingSpeed*
        name: TypingSpeed
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.TypingSpeed*
        name: TypingSpeed
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.TypingSpeed*
        name: TypingSpeed
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.TypingSpeed*
        name: TypingSpeed
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.TypingSpeed
  System.Collections.Generic.Dictionary{System.String,UCT.Settings.SettingsLayerBase}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsLayerBase
        name: SettingsLayerBase
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,UCT.Settings.SettingsLayerBase}
  UCT.Settings.SettingsStorage.CubismSettingsLayers*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage.CubismSettingsLayers*
        name: CubismSettingsLayers
      VB:
      - id: UCT.Settings.SettingsStorage.CubismSettingsLayers*
        name: CubismSettingsLayers
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.CubismSettingsLayers*
        name: CubismSettingsLayers
      VB:
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.CubismSettingsLayers*
        name: CubismSettingsLayers
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.CubismSettingsLayers*
        name: CubismSettingsLayers
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage*
        name: SettingsStorage
      - name: .
      - id: UCT.Settings.SettingsStorage.CubismSettingsLayers*
        name: CubismSettingsLayers
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsStorage.CubismSettingsLayers
  UCT.Settings.SettingsStorage:
    name:
      CSharp:
      - id: UCT.Settings.SettingsStorage
        name: SettingsStorage
      VB:
      - id: UCT.Settings.SettingsStorage
        name: SettingsStorage
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsStorage
        name: SettingsStorage
      VB:
      - id: UCT.Settings.SettingsStorage
        name: SettingsStorage
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage
        name: SettingsStorage
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsStorage
        name: SettingsStorage
    isDefinition: true
    commentId: T:UCT.Settings.SettingsStorage
  UCT.Settings.KeyBindings.SetKeyCode*:
    name:
      CSharp:
      - id: UCT.Settings.KeyBindings.SetKeyCode*
        name: SetKeyCode
      VB:
      - id: UCT.Settings.KeyBindings.SetKeyCode*
        name: SetKeyCode
    nameWithType:
      CSharp:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.SetKeyCode*
        name: SetKeyCode
      VB:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.SetKeyCode*
        name: SetKeyCode
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.SetKeyCode*
        name: SetKeyCode
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.SetKeyCode*
        name: SetKeyCode
    isDefinition: true
    commentId: Overload:UCT.Settings.KeyBindings.SetKeyCode
  UCT.Settings.KeyBindings.SetKeyCodeAtIndex*:
    name:
      CSharp:
      - id: UCT.Settings.KeyBindings.SetKeyCodeAtIndex*
        name: SetKeyCodeAtIndex
      VB:
      - id: UCT.Settings.KeyBindings.SetKeyCodeAtIndex*
        name: SetKeyCodeAtIndex
    nameWithType:
      CSharp:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.SetKeyCodeAtIndex*
        name: SetKeyCodeAtIndex
      VB:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.SetKeyCodeAtIndex*
        name: SetKeyCodeAtIndex
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.SetKeyCodeAtIndex*
        name: SetKeyCodeAtIndex
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.SetKeyCodeAtIndex*
        name: SetKeyCodeAtIndex
    isDefinition: true
    commentId: Overload:UCT.Settings.KeyBindings.SetKeyCodeAtIndex
  UCT.Settings.KeyBindings.GetKeyCode*:
    name:
      CSharp:
      - id: UCT.Settings.KeyBindings.GetKeyCode*
        name: GetKeyCode
      VB:
      - id: UCT.Settings.KeyBindings.GetKeyCode*
        name: GetKeyCode
    nameWithType:
      CSharp:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetKeyCode*
        name: GetKeyCode
      VB:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetKeyCode*
        name: GetKeyCode
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetKeyCode*
        name: GetKeyCode
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetKeyCode*
        name: GetKeyCode
    isDefinition: true
    commentId: Overload:UCT.Settings.KeyBindings.GetKeyCode
  UCT.Settings.KeyBindings.GetKeyCodeAtIndex*:
    name:
      CSharp:
      - id: UCT.Settings.KeyBindings.GetKeyCodeAtIndex*
        name: GetKeyCodeAtIndex
      VB:
      - id: UCT.Settings.KeyBindings.GetKeyCodeAtIndex*
        name: GetKeyCodeAtIndex
    nameWithType:
      CSharp:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetKeyCodeAtIndex*
        name: GetKeyCodeAtIndex
      VB:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetKeyCodeAtIndex*
        name: GetKeyCodeAtIndex
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetKeyCodeAtIndex*
        name: GetKeyCodeAtIndex
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetKeyCodeAtIndex*
        name: GetKeyCodeAtIndex
    isDefinition: true
    commentId: Overload:UCT.Settings.KeyBindings.GetKeyCodeAtIndex
  System.Collections.Generic.Dictionary{System.String,KeyCode}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,KeyCode}
  UCT.Settings.KeyBindings.GetKeyCodes*:
    name:
      CSharp:
      - id: UCT.Settings.KeyBindings.GetKeyCodes*
        name: GetKeyCodes
      VB:
      - id: UCT.Settings.KeyBindings.GetKeyCodes*
        name: GetKeyCodes
    nameWithType:
      CSharp:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetKeyCodes*
        name: GetKeyCodes
      VB:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetKeyCodes*
        name: GetKeyCodes
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetKeyCodes*
        name: GetKeyCodes
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetKeyCodes*
        name: GetKeyCodes
    isDefinition: true
    commentId: Overload:UCT.Settings.KeyBindings.GetKeyCodes
  System.Collections.Generic.Dictionary{UCT.Settings.KeyBindingType,System.Collections.Generic.Dictionary{System.String,KeyCode}}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
      - name: ','
      - name: " "
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: '>'
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
      - name: ','
      - name: " "
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
      - name: ','
      - name: " "
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: '>'
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
      - name: ','
      - name: " "
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
      - name: ','
      - name: " "
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: '>'
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
      - name: ','
      - name: " "
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{UCT.Settings.KeyBindingType,System.Collections.Generic.Dictionary{System.String,KeyCode}}
  UCT.Settings.KeyBindings.GetDictionary*:
    name:
      CSharp:
      - id: UCT.Settings.KeyBindings.GetDictionary*
        name: GetDictionary
      VB:
      - id: UCT.Settings.KeyBindings.GetDictionary*
        name: GetDictionary
    nameWithType:
      CSharp:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetDictionary*
        name: GetDictionary
      VB:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetDictionary*
        name: GetDictionary
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetDictionary*
        name: GetDictionary
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetDictionary*
        name: GetDictionary
    isDefinition: true
    commentId: Overload:UCT.Settings.KeyBindings.GetDictionary
  UCT.Settings.KeyBindings.ResetDictionary*:
    name:
      CSharp:
      - id: UCT.Settings.KeyBindings.ResetDictionary*
        name: ResetDictionary
      VB:
      - id: UCT.Settings.KeyBindings.ResetDictionary*
        name: ResetDictionary
    nameWithType:
      CSharp:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.ResetDictionary*
        name: ResetDictionary
      VB:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.ResetDictionary*
        name: ResetDictionary
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.ResetDictionary*
        name: ResetDictionary
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.ResetDictionary*
        name: ResetDictionary
    isDefinition: true
    commentId: Overload:UCT.Settings.KeyBindings.ResetDictionary
  System.Collections.Generic.KeyValuePair`2:
    name:
      CSharp:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        isExternal: true
      - name: <
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: '>'
      VB:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        isExternal: true
      - name: <
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: '>'
      VB:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        isExternal: true
      - name: <
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: TKey
      - name: ','
      - name: " "
      - name: TValue
      - name: )
    isDefinition: true
    commentId: T:System.Collections.Generic.KeyValuePair`2
  System.Collections.Generic.KeyValuePair{UCT.Settings.KeyBindingType,System.Collections.Generic.Dictionary{System.String,KeyCode}}:
    name:
      CSharp:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        isExternal: true
      - name: <
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
      - name: ','
      - name: " "
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: '>'
      - name: '>'
      VB:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
      - name: ','
      - name: " "
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        isExternal: true
      - name: <
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
      - name: ','
      - name: " "
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: '>'
      - name: '>'
      VB:
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
      - name: ','
      - name: " "
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
      - name: ','
      - name: " "
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: '>'
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.KeyValuePair`2
        name: KeyValuePair
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindingType
        name: KeyBindingType
      - name: ','
      - name: " "
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.KeyValuePair`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.KeyValuePair{UCT.Settings.KeyBindingType,System.Collections.Generic.Dictionary{System.String,KeyCode}}
  System.Func{KeyCode,System.Boolean}:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: <
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Boolean
        name: bool
        isExternal: true
      - name: '>'
      VB:
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Boolean
        name: Boolean
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: <
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Boolean
        name: bool
        isExternal: true
      - name: '>'
      VB:
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Boolean
        name: Boolean
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: <
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Boolean
        name: bool
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Func`2
        name: Func
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.KeyCode
        name: KeyCode
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Boolean
        name: Boolean
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Func`2
    parent: System
    commentId: T:System.Func{KeyCode,System.Boolean}
  UCT.Settings.KeyBindings.GetInputEveryKeyCodeAtIndex*:
    name:
      CSharp:
      - id: UCT.Settings.KeyBindings.GetInputEveryKeyCodeAtIndex*
        name: GetInputEveryKeyCodeAtIndex
      VB:
      - id: UCT.Settings.KeyBindings.GetInputEveryKeyCodeAtIndex*
        name: GetInputEveryKeyCodeAtIndex
    nameWithType:
      CSharp:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetInputEveryKeyCodeAtIndex*
        name: GetInputEveryKeyCodeAtIndex
      VB:
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetInputEveryKeyCodeAtIndex*
        name: GetInputEveryKeyCodeAtIndex
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetInputEveryKeyCodeAtIndex*
        name: GetInputEveryKeyCodeAtIndex
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings*
        name: KeyBindings
      - name: .
      - id: UCT.Settings.KeyBindings.GetInputEveryKeyCodeAtIndex*
        name: GetInputEveryKeyCodeAtIndex
    isDefinition: true
    commentId: Overload:UCT.Settings.KeyBindings.GetInputEveryKeyCodeAtIndex
  UCT.Settings.KeyBindings:
    name:
      CSharp:
      - id: UCT.Settings.KeyBindings
        name: KeyBindings
      VB:
      - id: UCT.Settings.KeyBindings
        name: KeyBindings
    nameWithType:
      CSharp:
      - id: UCT.Settings.KeyBindings
        name: KeyBindings
      VB:
      - id: UCT.Settings.KeyBindings
        name: KeyBindings
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings
        name: KeyBindings
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.KeyBindings
        name: KeyBindings
    isDefinition: true
    commentId: T:UCT.Settings.KeyBindings
  UCT.Settings.FpsMonitor:
    name:
      CSharp:
      - id: UCT.Settings.FpsMonitor
        name: FpsMonitor
      VB:
      - id: UCT.Settings.FpsMonitor
        name: FpsMonitor
    nameWithType:
      CSharp:
      - id: UCT.Settings.FpsMonitor
        name: FpsMonitor
      VB:
      - id: UCT.Settings.FpsMonitor
        name: FpsMonitor
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.FpsMonitor
        name: FpsMonitor
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.FpsMonitor
        name: FpsMonitor
    isDefinition: true
    commentId: T:UCT.Settings.FpsMonitor
  UCT.Settings.SettingsAnimEventHelper.AnimSetHeartRed*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartRed*
        name: AnimSetHeartRed
      VB:
      - id: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartRed*
        name: AnimSetHeartRed
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartRed*
        name: AnimSetHeartRed
      VB:
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartRed*
        name: AnimSetHeartRed
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartRed*
        name: AnimSetHeartRed
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartRed*
        name: AnimSetHeartRed
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsAnimEventHelper.AnimSetHeartRed
  UCT.Settings.SettingsAnimEventHelper.AnimHeartGo*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsAnimEventHelper.AnimHeartGo*
        name: AnimHeartGo
      VB:
      - id: UCT.Settings.SettingsAnimEventHelper.AnimHeartGo*
        name: AnimHeartGo
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimHeartGo*
        name: AnimHeartGo
      VB:
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimHeartGo*
        name: AnimHeartGo
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimHeartGo*
        name: AnimHeartGo
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimHeartGo*
        name: AnimHeartGo
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsAnimEventHelper.AnimHeartGo
  UCT.Settings.SettingsAnimEventHelper.AnimPlayFX*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsAnimEventHelper.AnimPlayFX*
        name: AnimPlayFX
      VB:
      - id: UCT.Settings.SettingsAnimEventHelper.AnimPlayFX*
        name: AnimPlayFX
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimPlayFX*
        name: AnimPlayFX
      VB:
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimPlayFX*
        name: AnimPlayFX
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimPlayFX*
        name: AnimPlayFX
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimPlayFX*
        name: AnimPlayFX
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsAnimEventHelper.AnimPlayFX
  UCT.Settings.SettingsAnimEventHelper.AnimSetHeartPos*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartPos*
        name: AnimSetHeartPos
      VB:
      - id: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartPos*
        name: AnimSetHeartPos
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartPos*
        name: AnimSetHeartPos
      VB:
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartPos*
        name: AnimSetHeartPos
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartPos*
        name: AnimSetHeartPos
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper*
        name: SettingsAnimEventHelper
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper.AnimSetHeartPos*
        name: AnimSetHeartPos
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsAnimEventHelper.AnimSetHeartPos
  UCT.Settings.SettingsAnimEventHelper:
    name:
      CSharp:
      - id: UCT.Settings.SettingsAnimEventHelper
        name: SettingsAnimEventHelper
      VB:
      - id: UCT.Settings.SettingsAnimEventHelper
        name: SettingsAnimEventHelper
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsAnimEventHelper
        name: SettingsAnimEventHelper
      VB:
      - id: UCT.Settings.SettingsAnimEventHelper
        name: SettingsAnimEventHelper
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper
        name: SettingsAnimEventHelper
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsAnimEventHelper
        name: SettingsAnimEventHelper
    isDefinition: true
    commentId: T:UCT.Settings.SettingsAnimEventHelper
  Global.OverworldControl:
    name:
      CSharp:
      - id: Global.OverworldControl
        name: OverworldControl
        isExternal: true
      VB:
      - id: Global.OverworldControl
        name: OverworldControl
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.OverworldControl
        name: OverworldControl
        isExternal: true
      VB:
      - id: Global.OverworldControl
        name: OverworldControl
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.OverworldControl
        name: OverworldControl
        isExternal: true
      VB:
      - id: Global.OverworldControl
        name: OverworldControl
        isExternal: true
    isDefinition: true
  Global.RenderMode:
    name:
      CSharp:
      - id: Global.RenderMode
        name: RenderMode
        isExternal: true
      VB:
      - id: Global.RenderMode
        name: RenderMode
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.RenderMode
        name: RenderMode
        isExternal: true
      VB:
      - id: Global.RenderMode
        name: RenderMode
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.RenderMode
        name: RenderMode
        isExternal: true
      VB:
      - id: Global.RenderMode
        name: RenderMode
        isExternal: true
    isDefinition: true
  UCT.Settings.SettingsController:
    name:
      CSharp:
      - id: UCT.Settings.SettingsController
        name: SettingsController
      VB:
      - id: UCT.Settings.SettingsController
        name: SettingsController
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsController
        name: SettingsController
      VB:
      - id: UCT.Settings.SettingsController
        name: SettingsController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsController
        name: SettingsController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Settings
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsController
        name: SettingsController
    isDefinition: true
    parent: UCT.Settings
    commentId: T:UCT.Settings.SettingsController
  UCT.Settings.SettingsController.Instance*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsController.Instance*
        name: Instance
      VB:
      - id: UCT.Settings.SettingsController.Instance*
        name: Instance
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Instance*
        name: Instance
      VB:
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Instance*
        name: Instance
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Instance*
        name: Instance
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Instance*
        name: Instance
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsController.Instance
  Global.Image:
    name:
      CSharp:
      - id: Global.Image
        name: Image
        isExternal: true
      VB:
      - id: Global.Image
        name: Image
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Image
        name: Image
        isExternal: true
      VB:
      - id: Global.Image
        name: Image
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Image
        name: Image
        isExternal: true
      VB:
      - id: Global.Image
        name: Image
        isExternal: true
    isDefinition: true
  UCT.Settings.SettingsController.Frame*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsController.Frame*
        name: Frame
      VB:
      - id: UCT.Settings.SettingsController.Frame*
        name: Frame
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Frame*
        name: Frame
      VB:
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Frame*
        name: Frame
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Frame*
        name: Frame
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Frame*
        name: Frame
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsController.Frame
  UCT.Settings.SettingsController.Animator*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsController.Animator*
        name: Animator
      VB:
      - id: UCT.Settings.SettingsController.Animator*
        name: Animator
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Animator*
        name: Animator
      VB:
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Animator*
        name: Animator
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Animator*
        name: Animator
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Animator*
        name: Animator
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsController.Animator
  UCT.Settings.SettingsController.Start*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsController.Start*
        name: Start
      VB:
      - id: UCT.Settings.SettingsController.Start*
        name: Start
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Start*
        name: Start
      VB:
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Start*
        name: Start
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Start*
        name: Start
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.Start*
        name: Start
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsController.Start
  UCT.Settings.SettingsController.OpenSetting*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsController.OpenSetting*
        name: OpenSetting
      VB:
      - id: UCT.Settings.SettingsController.OpenSetting*
        name: OpenSetting
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.OpenSetting*
        name: OpenSetting
      VB:
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.OpenSetting*
        name: OpenSetting
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.OpenSetting*
        name: OpenSetting
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.OpenSetting*
        name: OpenSetting
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsController.OpenSetting
  UCT.Settings.SettingsController.WorldPositionToUGUI*:
    name:
      CSharp:
      - id: UCT.Settings.SettingsController.WorldPositionToUGUI*
        name: WorldPositionToUGUI
      VB:
      - id: UCT.Settings.SettingsController.WorldPositionToUGUI*
        name: WorldPositionToUGUI
    nameWithType:
      CSharp:
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.WorldPositionToUGUI*
        name: WorldPositionToUGUI
      VB:
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.WorldPositionToUGUI*
        name: WorldPositionToUGUI
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.WorldPositionToUGUI*
        name: WorldPositionToUGUI
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Settings*
        name: Settings
      - name: .
      - id: UCT.Settings.SettingsController*
        name: SettingsController
      - name: .
      - id: UCT.Settings.SettingsController.WorldPositionToUGUI*
        name: WorldPositionToUGUI
    isDefinition: true
    commentId: Overload:UCT.Settings.SettingsController.WorldPositionToUGUI
  System.Collections.Generic.List{UCT.EventSystem.RuleEntry}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.EventSystem.RuleEntry
        name: RuleEntry
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.RuleEntry
        name: RuleEntry
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.EventSystem.RuleEntry
        name: RuleEntry
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.RuleEntry
        name: RuleEntry
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleEntry
        name: RuleEntry
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleEntry
        name: RuleEntry
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{UCT.EventSystem.RuleEntry}
  UCT.EventSystem.RuleTable:
    name:
      CSharp:
      - id: UCT.EventSystem.RuleTable
        name: RuleTable
      VB:
      - id: UCT.EventSystem.RuleTable
        name: RuleTable
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.RuleTable
        name: RuleTable
      VB:
      - id: UCT.EventSystem.RuleTable
        name: RuleTable
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleTable
        name: RuleTable
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleTable
        name: RuleTable
    isDefinition: true
    commentId: T:UCT.EventSystem.RuleTable
  System.Collections.Generic.List{UCT.EventSystem.FactEntry}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.EventSystem.FactEntry
        name: FactEntry
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.FactEntry
        name: FactEntry
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.EventSystem.FactEntry
        name: FactEntry
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.FactEntry
        name: FactEntry
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactEntry
        name: FactEntry
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactEntry
        name: FactEntry
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{UCT.EventSystem.FactEntry}
  UCT.EventSystem.FactTable:
    name:
      CSharp:
      - id: UCT.EventSystem.FactTable
        name: FactTable
      VB:
      - id: UCT.EventSystem.FactTable
        name: FactTable
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.FactTable
        name: FactTable
      VB:
      - id: UCT.EventSystem.FactTable
        name: FactTable
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactTable
        name: FactTable
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactTable
        name: FactTable
    isDefinition: true
    parent: UCT.EventSystem
    commentId: T:UCT.EventSystem.FactTable
  System.Collections.Generic.List{UCT.EventSystem.RuleCriterion}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.EventSystem.RuleCriterion
        name: RuleCriterion
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.RuleCriterion
        name: RuleCriterion
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.EventSystem.RuleCriterion
        name: RuleCriterion
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.RuleCriterion
        name: RuleCriterion
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleCriterion
        name: RuleCriterion
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleCriterion
        name: RuleCriterion
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{UCT.EventSystem.RuleCriterion}
  System.Collections.Generic.List{UCT.EventSystem.OverworldStatusChanger.MethodType}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.MethodType
        name: MethodType
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.MethodType
        name: MethodType
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.MethodType
        name: MethodType
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.MethodType
        name: MethodType
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.MethodType
        name: MethodType
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.MethodType
        name: MethodType
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{UCT.EventSystem.OverworldStatusChanger.MethodType}
  System.Collections.Generic.List{System.Boolean}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.Boolean
        name: bool
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Boolean
        name: Boolean
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.Boolean
        name: bool
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Boolean
        name: Boolean
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.Boolean
        name: bool
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Boolean
        name: Boolean
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Boolean}
  UCT.EventSystem.OverworldStatusChanger.SetCollidersEnabled*:
    name:
      CSharp:
      - id: UCT.EventSystem.OverworldStatusChanger.SetCollidersEnabled*
        name: SetCollidersEnabled
      VB:
      - id: UCT.EventSystem.OverworldStatusChanger.SetCollidersEnabled*
        name: SetCollidersEnabled
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.OverworldStatusChanger*
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.SetCollidersEnabled*
        name: SetCollidersEnabled
      VB:
      - id: UCT.EventSystem.OverworldStatusChanger*
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.SetCollidersEnabled*
        name: SetCollidersEnabled
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger*
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.SetCollidersEnabled*
        name: SetCollidersEnabled
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger*
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.SetCollidersEnabled*
        name: SetCollidersEnabled
    isDefinition: true
    commentId: Overload:UCT.EventSystem.OverworldStatusChanger.SetCollidersEnabled
  UCT.EventSystem.OverworldStatusChanger:
    name:
      CSharp:
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
      VB:
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
      VB:
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
    isDefinition: true
    commentId: T:UCT.EventSystem.OverworldStatusChanger
  System.SerializableAttribute:
    name:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        isExternal: true
    nameWithType:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.SerializableAttribute
        name: SerializableAttribute
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.SerializableAttribute
        name: SerializableAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SerializableAttribute
  System.SerializableAttribute.#ctor:
    name:
      CSharp:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        isExternal: true
      - name: (
      - name: )
      VB:
      - name: New
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        isExternal: true
      - name: .
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        isExternal: true
      - name: (
      - name: )
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        isExternal: true
      - name: .
      - name: New
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.SerializableAttribute
        name: SerializableAttribute
        isExternal: true
      - name: .
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        isExternal: true
      - name: (
      - name: )
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.SerializableAttribute
        name: SerializableAttribute
        isExternal: true
      - name: .
      - name: New
      - name: (
      - name: )
    isDefinition: true
    parent: System.SerializableAttribute
    commentId: M:System.SerializableAttribute.#ctor
  UCT.EventSystem:
    name:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
    isDefinition: true
    commentId: N:UCT.EventSystem
  UCT.EventSystem.OverworldStatusChanger.MethodType:
    name:
      CSharp:
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.MethodType
        name: MethodType
      VB:
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.MethodType
        name: MethodType
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.MethodType
        name: MethodType
      VB:
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.MethodType
        name: MethodType
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.MethodType
        name: MethodType
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger
        name: OverworldStatusChanger
      - name: .
      - id: UCT.EventSystem.OverworldStatusChanger.MethodType
        name: MethodType
    isDefinition: true
    parent: UCT.EventSystem
    commentId: T:UCT.EventSystem.OverworldStatusChanger.MethodType
  System.Collections.Generic.List{UCT.EventSystem.EventEntry}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.EventSystem.EventEntry
        name: EventEntry
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.EventEntry
        name: EventEntry
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.EventSystem.EventEntry
        name: EventEntry
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.EventEntry
        name: EventEntry
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventEntry
        name: EventEntry
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventEntry
        name: EventEntry
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{UCT.EventSystem.EventEntry}
  UCT.EventSystem.EventTable:
    name:
      CSharp:
      - id: UCT.EventSystem.EventTable
        name: EventTable
      VB:
      - id: UCT.EventSystem.EventTable
        name: EventTable
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.EventTable
        name: EventTable
      VB:
      - id: UCT.EventSystem.EventTable
        name: EventTable
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventTable
        name: EventTable
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventTable
        name: EventTable
    isDefinition: true
    parent: UCT.EventSystem
    commentId: T:UCT.EventSystem.EventTable
  System.Collections.Generic.Dictionary{UCT.EventSystem.MethodNameData,IMethodWrapper}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: UCT.EventSystem.MethodNameData
        name: MethodNameData
      - name: ','
      - name: " "
      - id: Global.IMethodWrapper
        name: IMethodWrapper
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.MethodNameData
        name: MethodNameData
      - name: ','
      - name: " "
      - id: Global.IMethodWrapper
        name: IMethodWrapper
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: UCT.EventSystem.MethodNameData
        name: MethodNameData
      - name: ','
      - name: " "
      - id: Global.IMethodWrapper
        name: IMethodWrapper
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.MethodNameData
        name: MethodNameData
      - name: ','
      - name: " "
      - id: Global.IMethodWrapper
        name: IMethodWrapper
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.MethodNameData
        name: MethodNameData
      - name: ','
      - name: " "
      - id: Global.IMethodWrapper
        name: IMethodWrapper
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.MethodNameData
        name: MethodNameData
      - name: ','
      - name: " "
      - id: Global.IMethodWrapper
        name: IMethodWrapper
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{UCT.EventSystem.MethodNameData,IMethodWrapper}
  UCT.EventSystem.EventController.MethodDictionary*:
    name:
      CSharp:
      - id: UCT.EventSystem.EventController.MethodDictionary*
        name: MethodDictionary
      VB:
      - id: UCT.EventSystem.EventController.MethodDictionary*
        name: MethodDictionary
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.MethodDictionary*
        name: MethodDictionary
      VB:
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.MethodDictionary*
        name: MethodDictionary
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.MethodDictionary*
        name: MethodDictionary
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.MethodDictionary*
        name: MethodDictionary
    isDefinition: true
    commentId: Overload:UCT.EventSystem.EventController.MethodDictionary
  UCT.EventSystem.EventController.eventTable*:
    name:
      CSharp:
      - id: UCT.EventSystem.EventController.eventTable*
        name: eventTable
      VB:
      - id: UCT.EventSystem.EventController.eventTable*
        name: eventTable
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.eventTable*
        name: eventTable
      VB:
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.eventTable*
        name: eventTable
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.eventTable*
        name: eventTable
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.eventTable*
        name: eventTable
    isDefinition: true
    commentId: Overload:UCT.EventSystem.EventController.eventTable
  UCT.EventSystem.EventController.factTable*:
    name:
      CSharp:
      - id: UCT.EventSystem.EventController.factTable*
        name: factTable
      VB:
      - id: UCT.EventSystem.EventController.factTable*
        name: factTable
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.factTable*
        name: factTable
      VB:
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.factTable*
        name: factTable
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.factTable*
        name: factTable
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.factTable*
        name: factTable
    isDefinition: true
    commentId: Overload:UCT.EventSystem.EventController.factTable
  UCT.EventSystem.EventController.globalEventTable*:
    name:
      CSharp:
      - id: UCT.EventSystem.EventController.globalEventTable*
        name: globalEventTable
      VB:
      - id: UCT.EventSystem.EventController.globalEventTable*
        name: globalEventTable
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.globalEventTable*
        name: globalEventTable
      VB:
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.globalEventTable*
        name: globalEventTable
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.globalEventTable*
        name: globalEventTable
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.globalEventTable*
        name: globalEventTable
    isDefinition: true
    commentId: Overload:UCT.EventSystem.EventController.globalEventTable
  UCT.EventSystem.EventController.globalFactTable*:
    name:
      CSharp:
      - id: UCT.EventSystem.EventController.globalFactTable*
        name: globalFactTable
      VB:
      - id: UCT.EventSystem.EventController.globalFactTable*
        name: globalFactTable
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.globalFactTable*
        name: globalFactTable
      VB:
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.globalFactTable*
        name: globalFactTable
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.globalFactTable*
        name: globalFactTable
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.globalFactTable*
        name: globalFactTable
    isDefinition: true
    commentId: Overload:UCT.EventSystem.EventController.globalFactTable
  UCT.EventSystem.EventController.LoadTables*:
    name:
      CSharp:
      - id: UCT.EventSystem.EventController.LoadTables*
        name: LoadTables
      VB:
      - id: UCT.EventSystem.EventController.LoadTables*
        name: LoadTables
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.LoadTables*
        name: LoadTables
      VB:
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.LoadTables*
        name: LoadTables
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.LoadTables*
        name: LoadTables
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.LoadTables*
        name: LoadTables
    isDefinition: true
    commentId: Overload:UCT.EventSystem.EventController.LoadTables
  UCT.EventSystem.EventEntry:
    name:
      CSharp:
      - id: UCT.EventSystem.EventEntry
        name: EventEntry
      VB:
      - id: UCT.EventSystem.EventEntry
        name: EventEntry
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.EventEntry
        name: EventEntry
      VB:
      - id: UCT.EventSystem.EventEntry
        name: EventEntry
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventEntry
        name: EventEntry
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventEntry
        name: EventEntry
    isDefinition: true
    parent: UCT.EventSystem
    commentId: T:UCT.EventSystem.EventEntry
  UCT.EventSystem.RuleEntry:
    name:
      CSharp:
      - id: UCT.EventSystem.RuleEntry
        name: RuleEntry
      VB:
      - id: UCT.EventSystem.RuleEntry
        name: RuleEntry
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.RuleEntry
        name: RuleEntry
      VB:
      - id: UCT.EventSystem.RuleEntry
        name: RuleEntry
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleEntry
        name: RuleEntry
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleEntry
        name: RuleEntry
    isDefinition: true
    parent: UCT.EventSystem
    commentId: T:UCT.EventSystem.RuleEntry
  UCT.EventSystem.EventController.DetectionRule*:
    name:
      CSharp:
      - id: UCT.EventSystem.EventController.DetectionRule*
        name: DetectionRule
      VB:
      - id: UCT.EventSystem.EventController.DetectionRule*
        name: DetectionRule
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.DetectionRule*
        name: DetectionRule
      VB:
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.DetectionRule*
        name: DetectionRule
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.DetectionRule*
        name: DetectionRule
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController*
        name: EventController
      - name: .
      - id: UCT.EventSystem.EventController.DetectionRule*
        name: DetectionRule
    isDefinition: true
    commentId: Overload:UCT.EventSystem.EventController.DetectionRule
  UCT.EventSystem.EventController:
    name:
      CSharp:
      - id: UCT.EventSystem.EventController
        name: EventController
      VB:
      - id: UCT.EventSystem.EventController
        name: EventController
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.EventController
        name: EventController
      VB:
      - id: UCT.EventSystem.EventController
        name: EventController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController
        name: EventController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventController
        name: EventController
    isDefinition: true
    commentId: T:UCT.EventSystem.EventController
  UCT.EventSystem.MethodNameData.#ctor*:
    name:
      CSharp:
      - id: UCT.EventSystem.MethodNameData.#ctor*
        name: MethodNameData
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.#ctor*
        name: MethodNameData
      VB:
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.#ctor*
        name: MethodNameData
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.EventSystem.MethodNameData.#ctor
  UCT.EventSystem.MethodNameData.MethodType*:
    name:
      CSharp:
      - id: UCT.EventSystem.MethodNameData.MethodType*
        name: MethodType
      VB:
      - id: UCT.EventSystem.MethodNameData.MethodType*
        name: MethodType
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.MethodType*
        name: MethodType
      VB:
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.MethodType*
        name: MethodType
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.MethodType*
        name: MethodType
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.MethodType*
        name: MethodType
    isDefinition: true
    commentId: Overload:UCT.EventSystem.MethodNameData.MethodType
  UCT.EventSystem.MethodNameData.MethodName*:
    name:
      CSharp:
      - id: UCT.EventSystem.MethodNameData.MethodName*
        name: MethodName
      VB:
      - id: UCT.EventSystem.MethodNameData.MethodName*
        name: MethodName
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.MethodName*
        name: MethodName
      VB:
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.MethodName*
        name: MethodName
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.MethodName*
        name: MethodName
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.MethodName*
        name: MethodName
    isDefinition: true
    commentId: Overload:UCT.EventSystem.MethodNameData.MethodName
  UCT.EventSystem.MethodNameData:
    name:
      CSharp:
      - id: UCT.EventSystem.MethodNameData
        name: MethodNameData
      VB:
      - id: UCT.EventSystem.MethodNameData
        name: MethodNameData
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.MethodNameData
        name: MethodNameData
      VB:
      - id: UCT.EventSystem.MethodNameData
        name: MethodNameData
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.MethodNameData
        name: MethodNameData
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.MethodNameData
        name: MethodNameData
    isDefinition: true
    parent: UCT.EventSystem
    commentId: T:UCT.EventSystem.MethodNameData
  UCT.EventSystem.MethodNameData.Equals*:
    name:
      CSharp:
      - id: UCT.EventSystem.MethodNameData.Equals*
        name: Equals
      VB:
      - id: UCT.EventSystem.MethodNameData.Equals*
        name: Equals
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.Equals*
        name: Equals
      VB:
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.Equals*
        name: Equals
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.Equals*
        name: Equals
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.Equals*
        name: Equals
    isDefinition: true
    commentId: Overload:UCT.EventSystem.MethodNameData.Equals
  UCT.EventSystem.MethodNameData.GetHashCode*:
    name:
      CSharp:
      - id: UCT.EventSystem.MethodNameData.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.EventSystem.MethodNameData.GetHashCode*
        name: GetHashCode
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.GetHashCode*
        name: GetHashCode
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.MethodNameData*
        name: MethodNameData
      - name: .
      - id: UCT.EventSystem.MethodNameData.GetHashCode*
        name: GetHashCode
    isDefinition: true
    commentId: Overload:UCT.EventSystem.MethodNameData.GetHashCode
  UCT.EventSystem.EventEntry.Equals*:
    name:
      CSharp:
      - id: UCT.EventSystem.EventEntry.Equals*
        name: Equals
      VB:
      - id: UCT.EventSystem.EventEntry.Equals*
        name: Equals
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.EventEntry*
        name: EventEntry
      - name: .
      - id: UCT.EventSystem.EventEntry.Equals*
        name: Equals
      VB:
      - id: UCT.EventSystem.EventEntry*
        name: EventEntry
      - name: .
      - id: UCT.EventSystem.EventEntry.Equals*
        name: Equals
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventEntry*
        name: EventEntry
      - name: .
      - id: UCT.EventSystem.EventEntry.Equals*
        name: Equals
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventEntry*
        name: EventEntry
      - name: .
      - id: UCT.EventSystem.EventEntry.Equals*
        name: Equals
    isDefinition: true
    commentId: Overload:UCT.EventSystem.EventEntry.Equals
  UCT.EventSystem.EventEntry.GetHashCode*:
    name:
      CSharp:
      - id: UCT.EventSystem.EventEntry.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.EventSystem.EventEntry.GetHashCode*
        name: GetHashCode
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.EventEntry*
        name: EventEntry
      - name: .
      - id: UCT.EventSystem.EventEntry.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.EventSystem.EventEntry*
        name: EventEntry
      - name: .
      - id: UCT.EventSystem.EventEntry.GetHashCode*
        name: GetHashCode
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventEntry*
        name: EventEntry
      - name: .
      - id: UCT.EventSystem.EventEntry.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventEntry*
        name: EventEntry
      - name: .
      - id: UCT.EventSystem.EventEntry.GetHashCode*
        name: GetHashCode
    isDefinition: true
    commentId: Overload:UCT.EventSystem.EventEntry.GetHashCode
  UCT.EventSystem.FactEntry:
    name:
      CSharp:
      - id: UCT.EventSystem.FactEntry
        name: FactEntry
      VB:
      - id: UCT.EventSystem.FactEntry
        name: FactEntry
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.FactEntry
        name: FactEntry
      VB:
      - id: UCT.EventSystem.FactEntry
        name: FactEntry
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactEntry
        name: FactEntry
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactEntry
        name: FactEntry
    isDefinition: true
    parent: UCT.EventSystem
    commentId: T:UCT.EventSystem.FactEntry
  UCT.EventSystem.FactEntry.Equals*:
    name:
      CSharp:
      - id: UCT.EventSystem.FactEntry.Equals*
        name: Equals
      VB:
      - id: UCT.EventSystem.FactEntry.Equals*
        name: Equals
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.FactEntry*
        name: FactEntry
      - name: .
      - id: UCT.EventSystem.FactEntry.Equals*
        name: Equals
      VB:
      - id: UCT.EventSystem.FactEntry*
        name: FactEntry
      - name: .
      - id: UCT.EventSystem.FactEntry.Equals*
        name: Equals
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactEntry*
        name: FactEntry
      - name: .
      - id: UCT.EventSystem.FactEntry.Equals*
        name: Equals
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactEntry*
        name: FactEntry
      - name: .
      - id: UCT.EventSystem.FactEntry.Equals*
        name: Equals
    isDefinition: true
    commentId: Overload:UCT.EventSystem.FactEntry.Equals
  UCT.EventSystem.FactEntry.GetHashCode*:
    name:
      CSharp:
      - id: UCT.EventSystem.FactEntry.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.EventSystem.FactEntry.GetHashCode*
        name: GetHashCode
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.FactEntry*
        name: FactEntry
      - name: .
      - id: UCT.EventSystem.FactEntry.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.EventSystem.FactEntry*
        name: FactEntry
      - name: .
      - id: UCT.EventSystem.FactEntry.GetHashCode*
        name: GetHashCode
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactEntry*
        name: FactEntry
      - name: .
      - id: UCT.EventSystem.FactEntry.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactEntry*
        name: FactEntry
      - name: .
      - id: UCT.EventSystem.FactEntry.GetHashCode*
        name: GetHashCode
    isDefinition: true
    commentId: Overload:UCT.EventSystem.FactEntry.GetHashCode
  System.Collections.Generic.List{System.Object}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.Object
        name: object
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.Object
        name: object
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: System.Object
        name: object
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Object
        name: Object
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Object}
  UCT.EventSystem.RuleCriterion:
    name:
      CSharp:
      - id: UCT.EventSystem.RuleCriterion
        name: RuleCriterion
      VB:
      - id: UCT.EventSystem.RuleCriterion
        name: RuleCriterion
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.RuleCriterion
        name: RuleCriterion
      VB:
      - id: UCT.EventSystem.RuleCriterion
        name: RuleCriterion
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleCriterion
        name: RuleCriterion
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleCriterion
        name: RuleCriterion
    isDefinition: true
    parent: UCT.EventSystem
    commentId: T:UCT.EventSystem.RuleCriterion
  System.Collections.Generic.List{UCT.EventSystem.FactModification}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.EventSystem.FactModification
        name: FactModification
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.FactModification
        name: FactModification
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.EventSystem.FactModification
        name: FactModification
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.FactModification
        name: FactModification
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactModification
        name: FactModification
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactModification
        name: FactModification
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{UCT.EventSystem.FactModification}
  UCT.EventSystem.RuleEntry.Equals*:
    name:
      CSharp:
      - id: UCT.EventSystem.RuleEntry.Equals*
        name: Equals
      VB:
      - id: UCT.EventSystem.RuleEntry.Equals*
        name: Equals
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.RuleEntry*
        name: RuleEntry
      - name: .
      - id: UCT.EventSystem.RuleEntry.Equals*
        name: Equals
      VB:
      - id: UCT.EventSystem.RuleEntry*
        name: RuleEntry
      - name: .
      - id: UCT.EventSystem.RuleEntry.Equals*
        name: Equals
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleEntry*
        name: RuleEntry
      - name: .
      - id: UCT.EventSystem.RuleEntry.Equals*
        name: Equals
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleEntry*
        name: RuleEntry
      - name: .
      - id: UCT.EventSystem.RuleEntry.Equals*
        name: Equals
    isDefinition: true
    commentId: Overload:UCT.EventSystem.RuleEntry.Equals
  UCT.EventSystem.RuleEntry.GetHashCode*:
    name:
      CSharp:
      - id: UCT.EventSystem.RuleEntry.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.EventSystem.RuleEntry.GetHashCode*
        name: GetHashCode
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.RuleEntry*
        name: RuleEntry
      - name: .
      - id: UCT.EventSystem.RuleEntry.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.EventSystem.RuleEntry*
        name: RuleEntry
      - name: .
      - id: UCT.EventSystem.RuleEntry.GetHashCode*
        name: GetHashCode
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleEntry*
        name: RuleEntry
      - name: .
      - id: UCT.EventSystem.RuleEntry.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleEntry*
        name: RuleEntry
      - name: .
      - id: UCT.EventSystem.RuleEntry.GetHashCode*
        name: GetHashCode
    isDefinition: true
    commentId: Overload:UCT.EventSystem.RuleEntry.GetHashCode
  UCT.EventSystem.FactModification.Operation:
    name:
      CSharp:
      - id: UCT.EventSystem.FactModification
        name: FactModification
      - name: .
      - id: UCT.EventSystem.FactModification.Operation
        name: Operation
      VB:
      - id: UCT.EventSystem.FactModification
        name: FactModification
      - name: .
      - id: UCT.EventSystem.FactModification.Operation
        name: Operation
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.FactModification
        name: FactModification
      - name: .
      - id: UCT.EventSystem.FactModification.Operation
        name: Operation
      VB:
      - id: UCT.EventSystem.FactModification
        name: FactModification
      - name: .
      - id: UCT.EventSystem.FactModification.Operation
        name: Operation
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactModification
        name: FactModification
      - name: .
      - id: UCT.EventSystem.FactModification.Operation
        name: Operation
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactModification
        name: FactModification
      - name: .
      - id: UCT.EventSystem.FactModification.Operation
        name: Operation
    isDefinition: true
    parent: UCT.EventSystem
    commentId: T:UCT.EventSystem.FactModification.Operation
  UCT.EventSystem.FactModification:
    name:
      CSharp:
      - id: UCT.EventSystem.FactModification
        name: FactModification
      VB:
      - id: UCT.EventSystem.FactModification
        name: FactModification
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.FactModification
        name: FactModification
      VB:
      - id: UCT.EventSystem.FactModification
        name: FactModification
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactModification
        name: FactModification
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactModification
        name: FactModification
    isDefinition: true
    parent: UCT.EventSystem
    commentId: T:UCT.EventSystem.FactModification
  UCT.EventSystem.FactModification.Equals*:
    name:
      CSharp:
      - id: UCT.EventSystem.FactModification.Equals*
        name: Equals
      VB:
      - id: UCT.EventSystem.FactModification.Equals*
        name: Equals
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.FactModification*
        name: FactModification
      - name: .
      - id: UCT.EventSystem.FactModification.Equals*
        name: Equals
      VB:
      - id: UCT.EventSystem.FactModification*
        name: FactModification
      - name: .
      - id: UCT.EventSystem.FactModification.Equals*
        name: Equals
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactModification*
        name: FactModification
      - name: .
      - id: UCT.EventSystem.FactModification.Equals*
        name: Equals
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactModification*
        name: FactModification
      - name: .
      - id: UCT.EventSystem.FactModification.Equals*
        name: Equals
    isDefinition: true
    commentId: Overload:UCT.EventSystem.FactModification.Equals
  UCT.EventSystem.FactModification.GetHashCode*:
    name:
      CSharp:
      - id: UCT.EventSystem.FactModification.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.EventSystem.FactModification.GetHashCode*
        name: GetHashCode
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.FactModification*
        name: FactModification
      - name: .
      - id: UCT.EventSystem.FactModification.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.EventSystem.FactModification*
        name: FactModification
      - name: .
      - id: UCT.EventSystem.FactModification.GetHashCode*
        name: GetHashCode
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactModification*
        name: FactModification
      - name: .
      - id: UCT.EventSystem.FactModification.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.FactModification*
        name: FactModification
      - name: .
      - id: UCT.EventSystem.FactModification.GetHashCode*
        name: GetHashCode
    isDefinition: true
    commentId: Overload:UCT.EventSystem.FactModification.GetHashCode
  UCT.EventSystem.CriteriaCompare:
    name:
      CSharp:
      - id: UCT.EventSystem.CriteriaCompare
        name: CriteriaCompare
      VB:
      - id: UCT.EventSystem.CriteriaCompare
        name: CriteriaCompare
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.CriteriaCompare
        name: CriteriaCompare
      VB:
      - id: UCT.EventSystem.CriteriaCompare
        name: CriteriaCompare
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.CriteriaCompare
        name: CriteriaCompare
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.CriteriaCompare
        name: CriteriaCompare
    isDefinition: true
    parent: UCT.EventSystem
    commentId: T:UCT.EventSystem.CriteriaCompare
  UCT.EventSystem.RuleLogicalOperation:
    name:
      CSharp:
      - id: UCT.EventSystem.RuleLogicalOperation
        name: RuleLogicalOperation
      VB:
      - id: UCT.EventSystem.RuleLogicalOperation
        name: RuleLogicalOperation
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.RuleLogicalOperation
        name: RuleLogicalOperation
      VB:
      - id: UCT.EventSystem.RuleLogicalOperation
        name: RuleLogicalOperation
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleLogicalOperation
        name: RuleLogicalOperation
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleLogicalOperation
        name: RuleLogicalOperation
    isDefinition: true
    parent: UCT.EventSystem
    commentId: T:UCT.EventSystem.RuleLogicalOperation
  UCT.EventSystem.RuleCriterion.GetResult*:
    name:
      CSharp:
      - id: UCT.EventSystem.RuleCriterion.GetResult*
        name: GetResult
      VB:
      - id: UCT.EventSystem.RuleCriterion.GetResult*
        name: GetResult
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.RuleCriterion*
        name: RuleCriterion
      - name: .
      - id: UCT.EventSystem.RuleCriterion.GetResult*
        name: GetResult
      VB:
      - id: UCT.EventSystem.RuleCriterion*
        name: RuleCriterion
      - name: .
      - id: UCT.EventSystem.RuleCriterion.GetResult*
        name: GetResult
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleCriterion*
        name: RuleCriterion
      - name: .
      - id: UCT.EventSystem.RuleCriterion.GetResult*
        name: GetResult
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleCriterion*
        name: RuleCriterion
      - name: .
      - id: UCT.EventSystem.RuleCriterion.GetResult*
        name: GetResult
    isDefinition: true
    commentId: Overload:UCT.EventSystem.RuleCriterion.GetResult
  UCT.EventSystem.RuleCriterion.Equals*:
    name:
      CSharp:
      - id: UCT.EventSystem.RuleCriterion.Equals*
        name: Equals
      VB:
      - id: UCT.EventSystem.RuleCriterion.Equals*
        name: Equals
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.RuleCriterion*
        name: RuleCriterion
      - name: .
      - id: UCT.EventSystem.RuleCriterion.Equals*
        name: Equals
      VB:
      - id: UCT.EventSystem.RuleCriterion*
        name: RuleCriterion
      - name: .
      - id: UCT.EventSystem.RuleCriterion.Equals*
        name: Equals
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleCriterion*
        name: RuleCriterion
      - name: .
      - id: UCT.EventSystem.RuleCriterion.Equals*
        name: Equals
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleCriterion*
        name: RuleCriterion
      - name: .
      - id: UCT.EventSystem.RuleCriterion.Equals*
        name: Equals
    isDefinition: true
    commentId: Overload:UCT.EventSystem.RuleCriterion.Equals
  UCT.EventSystem.RuleCriterion.GetHashCode*:
    name:
      CSharp:
      - id: UCT.EventSystem.RuleCriterion.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.EventSystem.RuleCriterion.GetHashCode*
        name: GetHashCode
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.RuleCriterion*
        name: RuleCriterion
      - name: .
      - id: UCT.EventSystem.RuleCriterion.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.EventSystem.RuleCriterion*
        name: RuleCriterion
      - name: .
      - id: UCT.EventSystem.RuleCriterion.GetHashCode*
        name: GetHashCode
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleCriterion*
        name: RuleCriterion
      - name: .
      - id: UCT.EventSystem.RuleCriterion.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.RuleCriterion*
        name: RuleCriterion
      - name: .
      - id: UCT.EventSystem.RuleCriterion.GetHashCode*
        name: GetHashCode
    isDefinition: true
    commentId: Overload:UCT.EventSystem.RuleCriterion.GetHashCode
  Global.FiniteStateMachine:
    name:
      CSharp:
      - id: Global.FiniteStateMachine
        name: FiniteStateMachine
        isExternal: true
      VB:
      - id: Global.FiniteStateMachine
        name: FiniteStateMachine
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.FiniteStateMachine
        name: FiniteStateMachine
        isExternal: true
      VB:
      - id: Global.FiniteStateMachine
        name: FiniteStateMachine
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.FiniteStateMachine
        name: FiniteStateMachine
        isExternal: true
      VB:
      - id: Global.FiniteStateMachine
        name: FiniteStateMachine
        isExternal: true
    isDefinition: true
    commentId: '!:Global.FiniteStateMachine'
  System.Collections.Generic.List{UCT.EventSystem.EventTriggerMode}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.EventSystem.EventTriggerMode
        name: EventTriggerMode
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.EventTriggerMode
        name: EventTriggerMode
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.EventSystem.EventTriggerMode
        name: EventTriggerMode
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.EventSystem.EventTriggerMode
        name: EventTriggerMode
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventTriggerMode
        name: EventTriggerMode
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventTriggerMode
        name: EventTriggerMode
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{UCT.EventSystem.EventTriggerMode}
  UCT.EventSystem.EventTriggerMode:
    name:
      CSharp:
      - id: UCT.EventSystem.EventTriggerMode
        name: EventTriggerMode
      VB:
      - id: UCT.EventSystem.EventTriggerMode
        name: EventTriggerMode
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.EventTriggerMode
        name: EventTriggerMode
      VB:
      - id: UCT.EventSystem.EventTriggerMode
        name: EventTriggerMode
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventTriggerMode
        name: EventTriggerMode
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.EventTriggerMode
        name: EventTriggerMode
    isDefinition: true
    parent: UCT.EventSystem
    commentId: T:UCT.EventSystem.EventTriggerMode
  UCT.EventSystem.OverworldEventTrigger.IsEventTriggerModeActive*:
    name:
      CSharp:
      - id: UCT.EventSystem.OverworldEventTrigger.IsEventTriggerModeActive*
        name: IsEventTriggerModeActive
      VB:
      - id: UCT.EventSystem.OverworldEventTrigger.IsEventTriggerModeActive*
        name: IsEventTriggerModeActive
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.OverworldEventTrigger*
        name: OverworldEventTrigger
      - name: .
      - id: UCT.EventSystem.OverworldEventTrigger.IsEventTriggerModeActive*
        name: IsEventTriggerModeActive
      VB:
      - id: UCT.EventSystem.OverworldEventTrigger*
        name: OverworldEventTrigger
      - name: .
      - id: UCT.EventSystem.OverworldEventTrigger.IsEventTriggerModeActive*
        name: IsEventTriggerModeActive
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.OverworldEventTrigger*
        name: OverworldEventTrigger
      - name: .
      - id: UCT.EventSystem.OverworldEventTrigger.IsEventTriggerModeActive*
        name: IsEventTriggerModeActive
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.OverworldEventTrigger*
        name: OverworldEventTrigger
      - name: .
      - id: UCT.EventSystem.OverworldEventTrigger.IsEventTriggerModeActive*
        name: IsEventTriggerModeActive
    isDefinition: true
    commentId: Overload:UCT.EventSystem.OverworldEventTrigger.IsEventTriggerModeActive
  UCT.EventSystem.OverworldEventTrigger.TriggerEvent*:
    name:
      CSharp:
      - id: UCT.EventSystem.OverworldEventTrigger.TriggerEvent*
        name: TriggerEvent
      VB:
      - id: UCT.EventSystem.OverworldEventTrigger.TriggerEvent*
        name: TriggerEvent
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.OverworldEventTrigger*
        name: OverworldEventTrigger
      - name: .
      - id: UCT.EventSystem.OverworldEventTrigger.TriggerEvent*
        name: TriggerEvent
      VB:
      - id: UCT.EventSystem.OverworldEventTrigger*
        name: OverworldEventTrigger
      - name: .
      - id: UCT.EventSystem.OverworldEventTrigger.TriggerEvent*
        name: TriggerEvent
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.OverworldEventTrigger*
        name: OverworldEventTrigger
      - name: .
      - id: UCT.EventSystem.OverworldEventTrigger.TriggerEvent*
        name: TriggerEvent
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.EventSystem*
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.OverworldEventTrigger*
        name: OverworldEventTrigger
      - name: .
      - id: UCT.EventSystem.OverworldEventTrigger.TriggerEvent*
        name: TriggerEvent
    isDefinition: true
    commentId: Overload:UCT.EventSystem.OverworldEventTrigger.TriggerEvent
  UCT.EventSystem.OverworldEventTrigger:
    name:
      CSharp:
      - id: UCT.EventSystem.OverworldEventTrigger
        name: OverworldEventTrigger
      VB:
      - id: UCT.EventSystem.OverworldEventTrigger
        name: OverworldEventTrigger
    nameWithType:
      CSharp:
      - id: UCT.EventSystem.OverworldEventTrigger
        name: OverworldEventTrigger
      VB:
      - id: UCT.EventSystem.OverworldEventTrigger
        name: OverworldEventTrigger
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.OverworldEventTrigger
        name: OverworldEventTrigger
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.EventSystem
        name: EventSystem
      - name: .
      - id: UCT.EventSystem.OverworldEventTrigger
        name: OverworldEventTrigger
    isDefinition: true
    commentId: T:UCT.EventSystem.OverworldEventTrigger
  Global.AudioSource:
    name:
      CSharp:
      - id: Global.AudioSource
        name: AudioSource
        isExternal: true
      VB:
      - id: Global.AudioSource
        name: AudioSource
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.AudioSource
        name: AudioSource
        isExternal: true
      VB:
      - id: Global.AudioSource
        name: AudioSource
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.AudioSource
        name: AudioSource
        isExternal: true
      VB:
      - id: Global.AudioSource
        name: AudioSource
        isExternal: true
    isDefinition: true
  UCT.Audio:
    name:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Audio
        name: Audio
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Audio
        name: Audio
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Audio
        name: Audio
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Audio
        name: Audio
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Audio
        name: Audio
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Audio
        name: Audio
    isDefinition: true
    commentId: N:UCT.Audio
  UCT.Audio.AudioController:
    name:
      CSharp:
      - id: UCT.Audio.AudioController
        name: AudioController
      VB:
      - id: UCT.Audio.AudioController
        name: AudioController
    nameWithType:
      CSharp:
      - id: UCT.Audio.AudioController
        name: AudioController
      VB:
      - id: UCT.Audio.AudioController
        name: AudioController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Audio
        name: Audio
      - name: .
      - id: UCT.Audio.AudioController
        name: AudioController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Audio
        name: Audio
      - name: .
      - id: UCT.Audio.AudioController
        name: AudioController
    isDefinition: true
    parent: UCT.Audio
    commentId: T:UCT.Audio.AudioController
  UCT.Audio.AudioController.Instance*:
    name:
      CSharp:
      - id: UCT.Audio.AudioController.Instance*
        name: Instance
      VB:
      - id: UCT.Audio.AudioController.Instance*
        name: Instance
    nameWithType:
      CSharp:
      - id: UCT.Audio.AudioController*
        name: AudioController
      - name: .
      - id: UCT.Audio.AudioController.Instance*
        name: Instance
      VB:
      - id: UCT.Audio.AudioController*
        name: AudioController
      - name: .
      - id: UCT.Audio.AudioController.Instance*
        name: Instance
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Audio*
        name: Audio
      - name: .
      - id: UCT.Audio.AudioController*
        name: AudioController
      - name: .
      - id: UCT.Audio.AudioController.Instance*
        name: Instance
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Audio*
        name: Audio
      - name: .
      - id: UCT.Audio.AudioController*
        name: AudioController
      - name: .
      - id: UCT.Audio.AudioController.Instance*
        name: Instance
    isDefinition: true
    commentId: Overload:UCT.Audio.AudioController.Instance
  Global.AudioMixerGroup:
    name:
      CSharp:
      - id: Global.AudioMixerGroup
        name: AudioMixerGroup
        isExternal: true
      VB:
      - id: Global.AudioMixerGroup
        name: AudioMixerGroup
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.AudioMixerGroup
        name: AudioMixerGroup
        isExternal: true
      VB:
      - id: Global.AudioMixerGroup
        name: AudioMixerGroup
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.AudioMixerGroup
        name: AudioMixerGroup
        isExternal: true
      VB:
      - id: Global.AudioMixerGroup
        name: AudioMixerGroup
        isExternal: true
    isDefinition: true
  UCT.Audio.AudioController.PlayFx*:
    name:
      CSharp:
      - id: UCT.Audio.AudioController.PlayFx*
        name: PlayFx
      VB:
      - id: UCT.Audio.AudioController.PlayFx*
        name: PlayFx
    nameWithType:
      CSharp:
      - id: UCT.Audio.AudioController*
        name: AudioController
      - name: .
      - id: UCT.Audio.AudioController.PlayFx*
        name: PlayFx
      VB:
      - id: UCT.Audio.AudioController*
        name: AudioController
      - name: .
      - id: UCT.Audio.AudioController.PlayFx*
        name: PlayFx
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Audio*
        name: Audio
      - name: .
      - id: UCT.Audio.AudioController*
        name: AudioController
      - name: .
      - id: UCT.Audio.AudioController.PlayFx*
        name: PlayFx
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Audio*
        name: Audio
      - name: .
      - id: UCT.Audio.AudioController*
        name: AudioController
      - name: .
      - id: UCT.Audio.AudioController.PlayFx*
        name: PlayFx
    isDefinition: true
    commentId: Overload:UCT.Audio.AudioController.PlayFx
  System.ValueTuple`2:
    name:
      CSharp:
      - name: (
      - name: T1
      - name: ','
      - name: " "
      - name: T2
      - name: )
      VB:
      - name: (
      - name: T1
      - name: ','
      - name: " "
      - name: T2
      - name: )
    nameWithType:
      CSharp:
      - name: (
      - name: T1
      - name: ','
      - name: " "
      - name: T2
      - name: )
      VB:
      - name: (
      - name: T1
      - name: ','
      - name: " "
      - name: T2
      - name: )
    qualifiedName:
      CSharp:
      - name: (
      - name: T1
      - name: ','
      - name: " "
      - name: T2
      - name: )
      VB:
      - name: (
      - name: T1
      - name: ','
      - name: " "
      - name: T2
      - name: )
    isDefinition: true
    commentId: T:System.ValueTuple`2
  System.ValueTuple{AudioClip,CharacterSpriteManager}:
    name:
      CSharp:
      - name: (
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
      - name: " "
      - id: System.ValueTuple{AudioClip,CharacterSpriteManager}.result
        name: result
      - name: ','
      - name: " "
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
      - name: " "
      - id: System.ValueTuple{AudioClip,CharacterSpriteManager}.manager
        name: manager
      - name: )
      VB:
      - name: (
      - id: System.ValueTuple{AudioClip,CharacterSpriteManager}.result
        name: result
      - name: " "
      - name: As
      - name: " "
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
      - name: ','
      - name: " "
      - id: System.ValueTuple{AudioClip,CharacterSpriteManager}.manager
        name: manager
      - name: " "
      - name: As
      - name: " "
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - name: (
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
      - name: " "
      - id: System.ValueTuple{AudioClip,CharacterSpriteManager}.result
        name: result
      - name: ','
      - name: " "
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
      - name: " "
      - id: System.ValueTuple{AudioClip,CharacterSpriteManager}.manager
        name: manager
      - name: )
      VB:
      - name: (
      - id: System.ValueTuple{AudioClip,CharacterSpriteManager}.result
        name: result
      - name: " "
      - name: As
      - name: " "
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
      - name: ','
      - name: " "
      - id: System.ValueTuple{AudioClip,CharacterSpriteManager}.manager
        name: manager
      - name: " "
      - name: As
      - name: " "
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - name: (
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
      - name: " "
      - id: System.ValueTuple{AudioClip,CharacterSpriteManager}.result
        name: result
      - name: ','
      - name: " "
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
      - name: " "
      - id: System.ValueTuple{AudioClip,CharacterSpriteManager}.manager
        name: manager
      - name: )
      VB:
      - name: (
      - id: System.ValueTuple{AudioClip,CharacterSpriteManager}.result
        name: result
      - name: " "
      - name: As
      - name: " "
      - id: Global.AudioClip
        name: AudioClip
        isExternal: true
      - name: ','
      - name: " "
      - id: System.ValueTuple{AudioClip,CharacterSpriteManager}.manager
        name: manager
      - name: " "
      - name: As
      - name: " "
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.ValueTuple`2
    parent: System
    commentId: T:System.ValueTuple{AudioClip,CharacterSpriteManager}
  UCT.Audio.AudioController.GetClipFromCharacterSpriteManager*:
    name:
      CSharp:
      - id: UCT.Audio.AudioController.GetClipFromCharacterSpriteManager*
        name: GetClipFromCharacterSpriteManager
      VB:
      - id: UCT.Audio.AudioController.GetClipFromCharacterSpriteManager*
        name: GetClipFromCharacterSpriteManager
    nameWithType:
      CSharp:
      - id: UCT.Audio.AudioController*
        name: AudioController
      - name: .
      - id: UCT.Audio.AudioController.GetClipFromCharacterSpriteManager*
        name: GetClipFromCharacterSpriteManager
      VB:
      - id: UCT.Audio.AudioController*
        name: AudioController
      - name: .
      - id: UCT.Audio.AudioController.GetClipFromCharacterSpriteManager*
        name: GetClipFromCharacterSpriteManager
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Audio*
        name: Audio
      - name: .
      - id: UCT.Audio.AudioController*
        name: AudioController
      - name: .
      - id: UCT.Audio.AudioController.GetClipFromCharacterSpriteManager*
        name: GetClipFromCharacterSpriteManager
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Audio*
        name: Audio
      - name: .
      - id: UCT.Audio.AudioController*
        name: AudioController
      - name: .
      - id: UCT.Audio.AudioController.GetClipFromCharacterSpriteManager*
        name: GetClipFromCharacterSpriteManager
    isDefinition: true
    commentId: Overload:UCT.Audio.AudioController.GetClipFromCharacterSpriteManager
  Global.CharacterSpriteManager:
    name:
      CSharp:
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
      VB:
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
      VB:
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
      VB:
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
    isDefinition: true
  UCT.Audio.AudioPlayer.Playing*:
    name:
      CSharp:
      - id: UCT.Audio.AudioPlayer.Playing*
        name: Playing
      VB:
      - id: UCT.Audio.AudioPlayer.Playing*
        name: Playing
    nameWithType:
      CSharp:
      - id: UCT.Audio.AudioPlayer*
        name: AudioPlayer
      - name: .
      - id: UCT.Audio.AudioPlayer.Playing*
        name: Playing
      VB:
      - id: UCT.Audio.AudioPlayer*
        name: AudioPlayer
      - name: .
      - id: UCT.Audio.AudioPlayer.Playing*
        name: Playing
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Audio*
        name: Audio
      - name: .
      - id: UCT.Audio.AudioPlayer*
        name: AudioPlayer
      - name: .
      - id: UCT.Audio.AudioPlayer.Playing*
        name: Playing
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Audio*
        name: Audio
      - name: .
      - id: UCT.Audio.AudioPlayer*
        name: AudioPlayer
      - name: .
      - id: UCT.Audio.AudioPlayer.Playing*
        name: Playing
    isDefinition: true
    commentId: Overload:UCT.Audio.AudioPlayer.Playing
  UCT.Audio.AudioPlayer:
    name:
      CSharp:
      - id: UCT.Audio.AudioPlayer
        name: AudioPlayer
      VB:
      - id: UCT.Audio.AudioPlayer
        name: AudioPlayer
    nameWithType:
      CSharp:
      - id: UCT.Audio.AudioPlayer
        name: AudioPlayer
      VB:
      - id: UCT.Audio.AudioPlayer
        name: AudioPlayer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Audio
        name: Audio
      - name: .
      - id: UCT.Audio.AudioPlayer
        name: AudioPlayer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Audio
        name: Audio
      - name: .
      - id: UCT.Audio.AudioPlayer
        name: AudioPlayer
    isDefinition: true
    commentId: T:UCT.Audio.AudioPlayer
  Global.MeshRenderer:
    name:
      CSharp:
      - id: Global.MeshRenderer
        name: MeshRenderer
        isExternal: true
      VB:
      - id: Global.MeshRenderer
        name: MeshRenderer
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.MeshRenderer
        name: MeshRenderer
        isExternal: true
      VB:
      - id: Global.MeshRenderer
        name: MeshRenderer
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.MeshRenderer
        name: MeshRenderer
        isExternal: true
      VB:
      - id: Global.MeshRenderer
        name: MeshRenderer
        isExternal: true
    isDefinition: true
    commentId: '!:Global.MeshRenderer'
  UCT.UI:
    name:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
    isDefinition: true
    commentId: N:UCT.UI
  UCT.UI.BoxController.BoxType:
    name:
      CSharp:
      - id: UCT.UI.BoxController
        name: BoxController
      - name: .
      - id: UCT.UI.BoxController.BoxType
        name: BoxType
      VB:
      - id: UCT.UI.BoxController
        name: BoxController
      - name: .
      - id: UCT.UI.BoxController.BoxType
        name: BoxType
    nameWithType:
      CSharp:
      - id: UCT.UI.BoxController
        name: BoxController
      - name: .
      - id: UCT.UI.BoxController.BoxType
        name: BoxType
      VB:
      - id: UCT.UI.BoxController
        name: BoxController
      - name: .
      - id: UCT.UI.BoxController.BoxType
        name: BoxType
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      - name: .
      - id: UCT.UI.BoxController
        name: BoxController
      - name: .
      - id: UCT.UI.BoxController.BoxType
        name: BoxType
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      - name: .
      - id: UCT.UI.BoxController
        name: BoxController
      - name: .
      - id: UCT.UI.BoxController.BoxType
        name: BoxType
    isDefinition: true
    parent: UCT.UI
    commentId: T:UCT.UI.BoxController.BoxType
  UCT.UI.BoxDrawer:
    name:
      CSharp:
      - id: UCT.UI.BoxDrawer
        name: BoxDrawer
      VB:
      - id: UCT.UI.BoxDrawer
        name: BoxDrawer
    nameWithType:
      CSharp:
      - id: UCT.UI.BoxDrawer
        name: BoxDrawer
      VB:
      - id: UCT.UI.BoxDrawer
        name: BoxDrawer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      - name: .
      - id: UCT.UI.BoxDrawer
        name: BoxDrawer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      - name: .
      - id: UCT.UI.BoxDrawer
        name: BoxDrawer
    isDefinition: true
    parent: UCT.UI
    commentId: T:UCT.UI.BoxDrawer
  System.Collections.Generic.List{UCT.UI.BoxDrawer}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.UI.BoxDrawer
        name: BoxDrawer
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.UI.BoxDrawer
        name: BoxDrawer
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.UI.BoxDrawer
        name: BoxDrawer
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.UI.BoxDrawer
        name: BoxDrawer
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      - name: .
      - id: UCT.UI.BoxDrawer
        name: BoxDrawer
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      - name: .
      - id: UCT.UI.BoxDrawer
        name: BoxDrawer
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{UCT.UI.BoxDrawer}
  UCT.UI.BoxDrawer.Update*:
    name:
      CSharp:
      - id: UCT.UI.BoxDrawer.Update*
        name: Update
      VB:
      - id: UCT.UI.BoxDrawer.Update*
        name: Update
    nameWithType:
      CSharp:
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.Update*
        name: Update
      VB:
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.Update*
        name: Update
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.Update*
        name: Update
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.Update*
        name: Update
    isDefinition: true
    commentId: Overload:UCT.UI.BoxDrawer.Update
  UCT.UI.BoxDrawer.AddQuaternions*:
    name:
      CSharp:
      - id: UCT.UI.BoxDrawer.AddQuaternions*
        name: AddQuaternions
      VB:
      - id: UCT.UI.BoxDrawer.AddQuaternions*
        name: AddQuaternions
    nameWithType:
      CSharp:
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.AddQuaternions*
        name: AddQuaternions
      VB:
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.AddQuaternions*
        name: AddQuaternions
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.AddQuaternions*
        name: AddQuaternions
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.AddQuaternions*
        name: AddQuaternions
    isDefinition: true
    commentId: Overload:UCT.UI.BoxDrawer.AddQuaternions
  UCT.UI.BoxDrawer.GetRealPoints*:
    name:
      CSharp:
      - id: UCT.UI.BoxDrawer.GetRealPoints*
        name: GetRealPoints
      VB:
      - id: UCT.UI.BoxDrawer.GetRealPoints*
        name: GetRealPoints
    nameWithType:
      CSharp:
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.GetRealPoints*
        name: GetRealPoints
      VB:
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.GetRealPoints*
        name: GetRealPoints
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.GetRealPoints*
        name: GetRealPoints
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.GetRealPoints*
        name: GetRealPoints
    isDefinition: true
    commentId: Overload:UCT.UI.BoxDrawer.GetRealPoints
  UCT.UI.BoxDrawer.IsOpenComponentsData*:
    name:
      CSharp:
      - id: UCT.UI.BoxDrawer.IsOpenComponentsData*
        name: IsOpenComponentsData
      VB:
      - id: UCT.UI.BoxDrawer.IsOpenComponentsData*
        name: IsOpenComponentsData
    nameWithType:
      CSharp:
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.IsOpenComponentsData*
        name: IsOpenComponentsData
      VB:
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.IsOpenComponentsData*
        name: IsOpenComponentsData
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.IsOpenComponentsData*
        name: IsOpenComponentsData
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.IsOpenComponentsData*
        name: IsOpenComponentsData
    isDefinition: true
    commentId: Overload:UCT.UI.BoxDrawer.IsOpenComponentsData
  UCT.UI.BoxDrawer.GetComponents*:
    name:
      CSharp:
      - id: UCT.UI.BoxDrawer.GetComponents*
        name: GetComponents
      VB:
      - id: UCT.UI.BoxDrawer.GetComponents*
        name: GetComponents
    nameWithType:
      CSharp:
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.GetComponents*
        name: GetComponents
      VB:
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.GetComponents*
        name: GetComponents
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.GetComponents*
        name: GetComponents
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.BoxDrawer*
        name: BoxDrawer
      - name: .
      - id: UCT.UI.BoxDrawer.GetComponents*
        name: GetComponents
    isDefinition: true
    commentId: Overload:UCT.UI.BoxDrawer.GetComponents
  UCT.UI.DynamicTmpType:
    name:
      CSharp:
      - id: UCT.UI.DynamicTmpType
        name: DynamicTmpType
      VB:
      - id: UCT.UI.DynamicTmpType
        name: DynamicTmpType
    nameWithType:
      CSharp:
      - id: UCT.UI.DynamicTmpType
        name: DynamicTmpType
      VB:
      - id: UCT.UI.DynamicTmpType
        name: DynamicTmpType
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      - name: .
      - id: UCT.UI.DynamicTmpType
        name: DynamicTmpType
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      - name: .
      - id: UCT.UI.DynamicTmpType
        name: DynamicTmpType
    isDefinition: true
    parent: UCT.UI
    commentId: T:UCT.UI.DynamicTmpType
  UCT.UI.DynamicTmp:
    name:
      CSharp:
      - id: UCT.UI.DynamicTmp
        name: DynamicTmp
      VB:
      - id: UCT.UI.DynamicTmp
        name: DynamicTmp
    nameWithType:
      CSharp:
      - id: UCT.UI.DynamicTmp
        name: DynamicTmp
      VB:
      - id: UCT.UI.DynamicTmp
        name: DynamicTmp
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      - name: .
      - id: UCT.UI.DynamicTmp
        name: DynamicTmp
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      - name: .
      - id: UCT.UI.DynamicTmp
        name: DynamicTmp
    isDefinition: true
    commentId: T:UCT.UI.DynamicTmp
  UCT.UI.BoxController:
    name:
      CSharp:
      - id: UCT.UI.BoxController
        name: BoxController
      VB:
      - id: UCT.UI.BoxController
        name: BoxController
    nameWithType:
      CSharp:
      - id: UCT.UI.BoxController
        name: BoxController
      VB:
      - id: UCT.UI.BoxController
        name: BoxController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      - name: .
      - id: UCT.UI.BoxController
        name: BoxController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      - name: .
      - id: UCT.UI.BoxController
        name: BoxController
    isDefinition: true
    parent: UCT.UI
    commentId: T:UCT.UI.BoxController
  UCT.UI.BoxController.Instance*:
    name:
      CSharp:
      - id: UCT.UI.BoxController.Instance*
        name: Instance
      VB:
      - id: UCT.UI.BoxController.Instance*
        name: Instance
    nameWithType:
      CSharp:
      - id: UCT.UI.BoxController*
        name: BoxController
      - name: .
      - id: UCT.UI.BoxController.Instance*
        name: Instance
      VB:
      - id: UCT.UI.BoxController*
        name: BoxController
      - name: .
      - id: UCT.UI.BoxController.Instance*
        name: Instance
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.BoxController*
        name: BoxController
      - name: .
      - id: UCT.UI.BoxController.Instance*
        name: Instance
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.BoxController*
        name: BoxController
      - name: .
      - id: UCT.UI.BoxController.Instance*
        name: Instance
    isDefinition: true
    commentId: Overload:UCT.UI.BoxController.Instance
  Global.Vector4[]:
    name:
      CSharp:
      - id: Global.Vector4
        name: Vector4
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.Vector4
        name: Vector4
        isExternal: true
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Global.Vector4
        name: Vector4
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.Vector4
        name: Vector4
        isExternal: true
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Global.Vector4
        name: Vector4
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.Vector4
        name: Vector4
        isExternal: true
      - name: (
      - name: )
    isDefinition: false
  System.Single[]:
    name:
      CSharp:
      - id: System.Single
        name: float
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.Single
        name: Single
        isExternal: true
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: System.Single
        name: float
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.Single
        name: Single
        isExternal: true
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: System.Single
        name: float
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: System.Single
        name: Single
        isExternal: true
      - name: (
      - name: )
    isDefinition: false
  Global.Vector3[]:
    name:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: (
      - name: )
    isDefinition: false
  UCT.UI.TextChanger.Set*:
    name:
      CSharp:
      - id: UCT.UI.TextChanger.Set*
        name: Set
      VB:
      - id: UCT.UI.TextChanger.Set*
        name: Set
    nameWithType:
      CSharp:
      - id: UCT.UI.TextChanger*
        name: TextChanger
      - name: .
      - id: UCT.UI.TextChanger.Set*
        name: Set
      VB:
      - id: UCT.UI.TextChanger*
        name: TextChanger
      - name: .
      - id: UCT.UI.TextChanger.Set*
        name: Set
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.TextChanger*
        name: TextChanger
      - name: .
      - id: UCT.UI.TextChanger.Set*
        name: Set
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.TextChanger*
        name: TextChanger
      - name: .
      - id: UCT.UI.TextChanger.Set*
        name: Set
    isDefinition: true
    commentId: Overload:UCT.UI.TextChanger.Set
  UCT.UI.TextChanger.Change*:
    name:
      CSharp:
      - id: UCT.UI.TextChanger.Change*
        name: Change
      VB:
      - id: UCT.UI.TextChanger.Change*
        name: Change
    nameWithType:
      CSharp:
      - id: UCT.UI.TextChanger*
        name: TextChanger
      - name: .
      - id: UCT.UI.TextChanger.Change*
        name: Change
      VB:
      - id: UCT.UI.TextChanger*
        name: TextChanger
      - name: .
      - id: UCT.UI.TextChanger.Change*
        name: Change
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.TextChanger*
        name: TextChanger
      - name: .
      - id: UCT.UI.TextChanger.Change*
        name: Change
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.UI*
        name: UI
      - name: .
      - id: UCT.UI.TextChanger*
        name: TextChanger
      - name: .
      - id: UCT.UI.TextChanger.Change*
        name: Change
    isDefinition: true
    commentId: Overload:UCT.UI.TextChanger.Change
  UCT.UI.TextChanger:
    name:
      CSharp:
      - id: UCT.UI.TextChanger
        name: TextChanger
      VB:
      - id: UCT.UI.TextChanger
        name: TextChanger
    nameWithType:
      CSharp:
      - id: UCT.UI.TextChanger
        name: TextChanger
      VB:
      - id: UCT.UI.TextChanger
        name: TextChanger
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      - name: .
      - id: UCT.UI.TextChanger
        name: TextChanger
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.UI
        name: UI
      - name: .
      - id: UCT.UI.TextChanger
        name: TextChanger
    isDefinition: true
    commentId: T:UCT.UI.TextChanger
  UCT.Control.ItemData:
    name:
      CSharp:
      - id: UCT.Control.ItemData
        name: ItemData
      VB:
      - id: UCT.Control.ItemData
        name: ItemData
    nameWithType:
      CSharp:
      - id: UCT.Control.ItemData
        name: ItemData
      VB:
      - id: UCT.Control.ItemData
        name: ItemData
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ItemData
        name: ItemData
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ItemData
        name: ItemData
    isDefinition: true
    parent: UCT.Control
    commentId: T:UCT.Control.ItemData
  UCT.Control.ItemData.#ctor*:
    name:
      CSharp:
      - id: UCT.Control.ItemData.#ctor*
        name: ItemData
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Control.ItemData*
        name: ItemData
      - name: .
      - id: UCT.Control.ItemData.#ctor*
        name: ItemData
      VB:
      - id: UCT.Control.ItemData*
        name: ItemData
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ItemData*
        name: ItemData
      - name: .
      - id: UCT.Control.ItemData.#ctor*
        name: ItemData
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ItemData*
        name: ItemData
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Control.ItemData.#ctor
  UCT.Control:
    name:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
    isDefinition: true
    commentId: N:UCT.Control
  UCT.Control.ItemData.Equals*:
    name:
      CSharp:
      - id: UCT.Control.ItemData.Equals*
        name: Equals
      VB:
      - id: UCT.Control.ItemData.Equals*
        name: Equals
    nameWithType:
      CSharp:
      - id: UCT.Control.ItemData*
        name: ItemData
      - name: .
      - id: UCT.Control.ItemData.Equals*
        name: Equals
      VB:
      - id: UCT.Control.ItemData*
        name: ItemData
      - name: .
      - id: UCT.Control.ItemData.Equals*
        name: Equals
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ItemData*
        name: ItemData
      - name: .
      - id: UCT.Control.ItemData.Equals*
        name: Equals
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ItemData*
        name: ItemData
      - name: .
      - id: UCT.Control.ItemData.Equals*
        name: Equals
    isDefinition: true
    commentId: Overload:UCT.Control.ItemData.Equals
  UCT.Control.ItemData.GetHashCode*:
    name:
      CSharp:
      - id: UCT.Control.ItemData.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.Control.ItemData.GetHashCode*
        name: GetHashCode
    nameWithType:
      CSharp:
      - id: UCT.Control.ItemData*
        name: ItemData
      - name: .
      - id: UCT.Control.ItemData.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT.Control.ItemData*
        name: ItemData
      - name: .
      - id: UCT.Control.ItemData.GetHashCode*
        name: GetHashCode
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ItemData*
        name: ItemData
      - name: .
      - id: UCT.Control.ItemData.GetHashCode*
        name: GetHashCode
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ItemData*
        name: ItemData
      - name: .
      - id: UCT.Control.ItemData.GetHashCode*
        name: GetHashCode
    isDefinition: true
    commentId: Overload:UCT.Control.ItemData.GetHashCode
  System.Action{System.Int32}:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Action`1
    parent: System
    commentId: T:System.Action{System.Int32}
  UCT.Control.GameItem:
    name:
      CSharp:
      - id: UCT.Control.GameItem
        name: GameItem
      VB:
      - id: UCT.Control.GameItem
        name: GameItem
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItem
        name: GameItem
      VB:
      - id: UCT.Control.GameItem
        name: GameItem
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItem
        name: GameItem
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItem
        name: GameItem
    isDefinition: true
    parent: UCT.Control
    commentId: T:UCT.Control.GameItem
  UCT.Control.GameItem.#ctor*:
    name:
      CSharp:
      - id: UCT.Control.GameItem.#ctor*
        name: GameItem
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.#ctor*
        name: GameItem
      VB:
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.#ctor*
        name: GameItem
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Control.GameItem.#ctor
  UCT.Control.GameItem.Data*:
    name:
      CSharp:
      - id: UCT.Control.GameItem.Data*
        name: Data
      VB:
      - id: UCT.Control.GameItem.Data*
        name: Data
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.Data*
        name: Data
      VB:
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.Data*
        name: Data
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.Data*
        name: Data
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.Data*
        name: Data
    isDefinition: true
    commentId: Overload:UCT.Control.GameItem.Data
  UCT.Control.GameItem.OnUse*:
    name:
      CSharp:
      - id: UCT.Control.GameItem.OnUse*
        name: OnUse
      VB:
      - id: UCT.Control.GameItem.OnUse*
        name: OnUse
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnUse*
        name: OnUse
      VB:
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnUse*
        name: OnUse
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnUse*
        name: OnUse
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnUse*
        name: OnUse
    isDefinition: true
    commentId: Overload:UCT.Control.GameItem.OnUse
  UCT.Control.GameItem.OnCheck*:
    name:
      CSharp:
      - id: UCT.Control.GameItem.OnCheck*
        name: OnCheck
      VB:
      - id: UCT.Control.GameItem.OnCheck*
        name: OnCheck
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnCheck*
        name: OnCheck
      VB:
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnCheck*
        name: OnCheck
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnCheck*
        name: OnCheck
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnCheck*
        name: OnCheck
    isDefinition: true
    commentId: Overload:UCT.Control.GameItem.OnCheck
  UCT.Control.GameItem.OnDrop*:
    name:
      CSharp:
      - id: UCT.Control.GameItem.OnDrop*
        name: OnDrop
      VB:
      - id: UCT.Control.GameItem.OnDrop*
        name: OnDrop
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnDrop*
        name: OnDrop
      VB:
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnDrop*
        name: OnDrop
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnDrop*
        name: OnDrop
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItem*
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnDrop*
        name: OnDrop
    isDefinition: true
    commentId: Overload:UCT.Control.GameItem.OnDrop
  UCT.Control.GameItem.OnUseAction:
    name:
      CSharp:
      - id: UCT.Control.GameItem.OnUseAction
        name: OnUseAction
      VB:
      - id: UCT.Control.GameItem.OnUseAction
        name: OnUseAction
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnUseAction
        name: OnUseAction
      VB:
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnUseAction
        name: OnUseAction
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnUseAction
        name: OnUseAction
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnUseAction
        name: OnUseAction
    isDefinition: true
    parent: UCT.Control.GameItem
    commentId: F:UCT.Control.GameItem.OnUseAction
  UCT.Control.GameItem.Data:
    name:
      CSharp:
      - id: UCT.Control.GameItem.Data
        name: Data
      VB:
      - id: UCT.Control.GameItem.Data
        name: Data
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.Data
        name: Data
      VB:
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.Data
        name: Data
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.Data
        name: Data
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.Data
        name: Data
    isDefinition: true
    parent: UCT.Control.GameItem
    commentId: P:UCT.Control.GameItem.Data
  UCT.Control.GameItem.OnUse(System.Int32):
    name:
      CSharp:
      - id: UCT.Control.GameItem.OnUse(System.Int32)
        name: OnUse
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItem.OnUse(System.Int32)
        name: OnUse
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnUse(System.Int32)
        name: OnUse
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnUse(System.Int32)
        name: OnUse
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnUse(System.Int32)
        name: OnUse
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnUse(System.Int32)
        name: OnUse
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Control.GameItem
    commentId: M:UCT.Control.GameItem.OnUse(System.Int32)
  UCT.Control.GameItem.OnCheck(System.Int32):
    name:
      CSharp:
      - id: UCT.Control.GameItem.OnCheck(System.Int32)
        name: OnCheck
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItem.OnCheck(System.Int32)
        name: OnCheck
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnCheck(System.Int32)
        name: OnCheck
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnCheck(System.Int32)
        name: OnCheck
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnCheck(System.Int32)
        name: OnCheck
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnCheck(System.Int32)
        name: OnCheck
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Control.GameItem
    commentId: M:UCT.Control.GameItem.OnCheck(System.Int32)
  UCT.Control.GameItem.OnDrop(System.Int32):
    name:
      CSharp:
      - id: UCT.Control.GameItem.OnDrop(System.Int32)
        name: OnDrop
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItem.OnDrop(System.Int32)
        name: OnDrop
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnDrop(System.Int32)
        name: OnDrop
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnDrop(System.Int32)
        name: OnDrop
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnDrop(System.Int32)
        name: OnDrop
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItem
        name: GameItem
      - name: .
      - id: UCT.Control.GameItem.OnDrop(System.Int32)
        name: OnDrop
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Control.GameItem
    commentId: M:UCT.Control.GameItem.OnDrop(System.Int32)
  UCT.Control.FoodItem:
    name:
      CSharp:
      - id: UCT.Control.FoodItem
        name: FoodItem
      VB:
      - id: UCT.Control.FoodItem
        name: FoodItem
    nameWithType:
      CSharp:
      - id: UCT.Control.FoodItem
        name: FoodItem
      VB:
      - id: UCT.Control.FoodItem
        name: FoodItem
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItem
        name: FoodItem
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItem
        name: FoodItem
    isDefinition: true
    commentId: T:UCT.Control.FoodItem
  UCT.Control.FoodItem.#ctor*:
    name:
      CSharp:
      - id: UCT.Control.FoodItem.#ctor*
        name: FoodItem
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Control.FoodItem*
        name: FoodItem
      - name: .
      - id: UCT.Control.FoodItem.#ctor*
        name: FoodItem
      VB:
      - id: UCT.Control.FoodItem*
        name: FoodItem
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.FoodItem*
        name: FoodItem
      - name: .
      - id: UCT.Control.FoodItem.#ctor*
        name: FoodItem
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.FoodItem*
        name: FoodItem
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Control.FoodItem.#ctor
  UCT.Control.ParentFoodItem:
    name:
      CSharp:
      - id: UCT.Control.ParentFoodItem
        name: ParentFoodItem
      VB:
      - id: UCT.Control.ParentFoodItem
        name: ParentFoodItem
    nameWithType:
      CSharp:
      - id: UCT.Control.ParentFoodItem
        name: ParentFoodItem
      VB:
      - id: UCT.Control.ParentFoodItem
        name: ParentFoodItem
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItem
        name: ParentFoodItem
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItem
        name: ParentFoodItem
    isDefinition: true
    commentId: T:UCT.Control.ParentFoodItem
  UCT.Control.ParentFoodItem.#ctor*:
    name:
      CSharp:
      - id: UCT.Control.ParentFoodItem.#ctor*
        name: ParentFoodItem
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Control.ParentFoodItem*
        name: ParentFoodItem
      - name: .
      - id: UCT.Control.ParentFoodItem.#ctor*
        name: ParentFoodItem
      VB:
      - id: UCT.Control.ParentFoodItem*
        name: ParentFoodItem
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItem*
        name: ParentFoodItem
      - name: .
      - id: UCT.Control.ParentFoodItem.#ctor*
        name: ParentFoodItem
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItem*
        name: ParentFoodItem
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Control.ParentFoodItem.#ctor
  UCT.Control.GameItemBuilder`1:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    isDefinition: true
    commentId: T:UCT.Control.GameItemBuilder`1
  UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1
    parent: UCT.Control
    commentId: T:UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}
  UCT.Control.GameItemBuilder`1.Data:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder`1.Data
        name: Data
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.Data
        name: Data
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.Data
        name: Data
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.Data
        name: Data
    isDefinition: true
    commentId: F:UCT.Control.GameItemBuilder`1.Data
  UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Data:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Data
        name: Data
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Data
        name: Data
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Data
        name: Data
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Data
        name: Data
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.Data
    parent: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Data
  UCT.Control.GameItemBuilder`1.OnUse:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder`1.OnUse
        name: OnUse
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.OnUse
        name: OnUse
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.OnUse
        name: OnUse
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.OnUse
        name: OnUse
    isDefinition: true
    commentId: F:UCT.Control.GameItemBuilder`1.OnUse
  UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnUse:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnUse
        name: OnUse
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnUse
        name: OnUse
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnUse
        name: OnUse
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnUse
    parent: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnUse
  UCT.Control.GameItemBuilder`1.OnCheck:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder`1.OnCheck
        name: OnCheck
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.OnCheck
        name: OnCheck
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.OnCheck
        name: OnCheck
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.OnCheck
        name: OnCheck
    isDefinition: true
    commentId: F:UCT.Control.GameItemBuilder`1.OnCheck
  UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnCheck:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnCheck
        name: OnCheck
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnCheck
        name: OnCheck
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnCheck
        name: OnCheck
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnCheck
    parent: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnCheck
  UCT.Control.GameItemBuilder`1.OnDrop:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder`1.OnDrop
        name: OnDrop
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.OnDrop
        name: OnDrop
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.OnDrop
        name: OnDrop
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.OnDrop
        name: OnDrop
    isDefinition: true
    commentId: F:UCT.Control.GameItemBuilder`1.OnDrop
  UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnDrop:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnDrop
        name: OnDrop
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnDrop
        name: OnDrop
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnDrop
        name: OnDrop
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnDrop
    parent: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.OnDrop
  UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: true
    commentId: M:UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
  UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetData(System.String,System.Int32):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
    parent: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetData(System.String,System.Int32)
  UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: true
    commentId: M:UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnUse(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnUse(System.Action{System.Int32})
  UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: true
    commentId: M:UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnCheck(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnCheck(System.Action{System.Int32})
  UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: true
    commentId: M:UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnDrop(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.SetOnDrop(System.Action{System.Int32})
  UCT.Control.GameItemBuilder`1.Build:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1.Build
        name: Build
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.Build
        name: Build
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.Build
        name: Build
      - name: (
      - name: )
    isDefinition: true
    commentId: M:UCT.Control.GameItemBuilder`1.Build
  UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Build:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.Build
    parent: UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.GameItemBuilder}.Build
  UCT.Control.GameItemBuilder:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      VB:
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      VB:
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder
        name: GameItemBuilder
    isDefinition: true
    commentId: T:UCT.Control.GameItemBuilder
  UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1
    parent: UCT.Control
    commentId: T:UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}
  UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Data:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Data
        name: Data
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Data
        name: Data
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Data
        name: Data
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Data
        name: Data
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.Data
    parent: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Data
  UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnUse:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnUse
        name: OnUse
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnUse
        name: OnUse
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnUse
        name: OnUse
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnUse
    parent: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnUse
  UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnCheck:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnCheck
        name: OnCheck
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnCheck
        name: OnCheck
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnCheck
        name: OnCheck
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnCheck
    parent: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnCheck
  UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnDrop:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnDrop
        name: OnDrop
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnDrop
        name: OnDrop
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnDrop
        name: OnDrop
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnDrop
    parent: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.OnDrop
  UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetData(System.String,System.Int32):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
    parent: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetData(System.String,System.Int32)
  UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnUse(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnUse(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnCheck(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnDrop(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Build:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.Build
    parent: UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.FoodItemBuilder}.Build
  UCT.Control.FoodItemBuilder.Build*:
    name:
      CSharp:
      - id: UCT.Control.FoodItemBuilder.Build*
        name: Build
      VB:
      - id: UCT.Control.FoodItemBuilder.Build*
        name: Build
    nameWithType:
      CSharp:
      - id: UCT.Control.FoodItemBuilder*
        name: FoodItemBuilder
      - name: .
      - id: UCT.Control.FoodItemBuilder.Build*
        name: Build
      VB:
      - id: UCT.Control.FoodItemBuilder*
        name: FoodItemBuilder
      - name: .
      - id: UCT.Control.FoodItemBuilder.Build*
        name: Build
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder*
        name: FoodItemBuilder
      - name: .
      - id: UCT.Control.FoodItemBuilder.Build*
        name: Build
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder*
        name: FoodItemBuilder
      - name: .
      - id: UCT.Control.FoodItemBuilder.Build*
        name: Build
    isDefinition: true
    commentId: Overload:UCT.Control.FoodItemBuilder.Build
  UCT.Control.FoodItemBuilder:
    name:
      CSharp:
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      VB:
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
    nameWithType:
      CSharp:
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      VB:
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.FoodItemBuilder
        name: FoodItemBuilder
    isDefinition: true
    commentId: T:UCT.Control.FoodItemBuilder
  UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1
    parent: UCT.Control
    commentId: T:UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}
  UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Data:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Data
        name: Data
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Data
        name: Data
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Data
        name: Data
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Data
        name: Data
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.Data
    parent: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Data
  UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnUse:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnUse
        name: OnUse
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnUse
        name: OnUse
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnUse
        name: OnUse
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnUse
    parent: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnUse
  UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnCheck:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnCheck
        name: OnCheck
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnCheck
        name: OnCheck
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnCheck
        name: OnCheck
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnCheck
    parent: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnCheck
  UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnDrop:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnDrop
        name: OnDrop
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnDrop
        name: OnDrop
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnDrop
        name: OnDrop
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnDrop
    parent: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.OnDrop
  UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetData(System.String,System.Int32):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
    parent: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetData(System.String,System.Int32)
  UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnUse(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnUse(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnCheck(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnCheck(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnDrop(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.SetOnDrop(System.Action{System.Int32})
  UCT.Control.ParentFoodItemBuilder:
    name:
      CSharp:
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      VB:
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
    nameWithType:
      CSharp:
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      VB:
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
    isDefinition: true
    commentId: T:UCT.Control.ParentFoodItemBuilder
  UCT.Control.ParentFoodItemBuilder.#ctor*:
    name:
      CSharp:
      - id: UCT.Control.ParentFoodItemBuilder.#ctor*
        name: ParentFoodItemBuilder
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Control.ParentFoodItemBuilder*
        name: ParentFoodItemBuilder
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder.#ctor*
        name: ParentFoodItemBuilder
      VB:
      - id: UCT.Control.ParentFoodItemBuilder*
        name: ParentFoodItemBuilder
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder*
        name: ParentFoodItemBuilder
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder.#ctor*
        name: ParentFoodItemBuilder
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder*
        name: ParentFoodItemBuilder
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Control.ParentFoodItemBuilder.#ctor
  UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Build:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder
        name: ParentFoodItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.Build
    parent: UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.ParentFoodItemBuilder}.Build
  UCT.Control.ParentFoodItemBuilder.Build*:
    name:
      CSharp:
      - id: UCT.Control.ParentFoodItemBuilder.Build*
        name: Build
      VB:
      - id: UCT.Control.ParentFoodItemBuilder.Build*
        name: Build
    nameWithType:
      CSharp:
      - id: UCT.Control.ParentFoodItemBuilder*
        name: ParentFoodItemBuilder
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder.Build*
        name: Build
      VB:
      - id: UCT.Control.ParentFoodItemBuilder*
        name: ParentFoodItemBuilder
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder.Build*
        name: Build
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder*
        name: ParentFoodItemBuilder
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder.Build*
        name: Build
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder*
        name: ParentFoodItemBuilder
      - name: .
      - id: UCT.Control.ParentFoodItemBuilder.Build*
        name: Build
    isDefinition: true
    commentId: Overload:UCT.Control.ParentFoodItemBuilder.Build
  UCT.Control.GameItemBuilder`1.SetData*:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1.SetData*
        name: SetData
      VB:
      - id: UCT.Control.GameItemBuilder`1.SetData*
        name: SetData
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetData*
        name: SetData
      VB:
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetData*
        name: SetData
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetData*
        name: SetData
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetData*
        name: SetData
    isDefinition: true
    commentId: Overload:UCT.Control.GameItemBuilder`1.SetData
  UCT.Control.GameItemBuilder`1.SetOnUse*:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1.SetOnUse*
        name: SetOnUse
      VB:
      - id: UCT.Control.GameItemBuilder`1.SetOnUse*
        name: SetOnUse
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnUse*
        name: SetOnUse
      VB:
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnUse*
        name: SetOnUse
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnUse*
        name: SetOnUse
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnUse*
        name: SetOnUse
    isDefinition: true
    commentId: Overload:UCT.Control.GameItemBuilder`1.SetOnUse
  UCT.Control.GameItemBuilder`1.SetOnCheck*:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1.SetOnCheck*
        name: SetOnCheck
      VB:
      - id: UCT.Control.GameItemBuilder`1.SetOnCheck*
        name: SetOnCheck
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnCheck*
        name: SetOnCheck
      VB:
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnCheck*
        name: SetOnCheck
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnCheck*
        name: SetOnCheck
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnCheck*
        name: SetOnCheck
    isDefinition: true
    commentId: Overload:UCT.Control.GameItemBuilder`1.SetOnCheck
  UCT.Control.GameItemBuilder`1.SetOnDrop*:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1.SetOnDrop*
        name: SetOnDrop
      VB:
      - id: UCT.Control.GameItemBuilder`1.SetOnDrop*
        name: SetOnDrop
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnDrop*
        name: SetOnDrop
      VB:
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnDrop*
        name: SetOnDrop
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnDrop*
        name: SetOnDrop
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.SetOnDrop*
        name: SetOnDrop
    isDefinition: true
    commentId: Overload:UCT.Control.GameItemBuilder`1.SetOnDrop
  UCT.Control.GameItemBuilder`1.Build*:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1.Build*
        name: Build
      VB:
      - id: UCT.Control.GameItemBuilder`1.Build*
        name: Build
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.Build*
        name: Build
      VB:
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.Build*
        name: Build
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder`1.Build*
        name: Build
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1*
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder`1.Build*
        name: Build
    isDefinition: true
    commentId: Overload:UCT.Control.GameItemBuilder`1.Build
  UCT.Control.EquipmentItem:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      VB:
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      VB:
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
    isDefinition: true
    parent: UCT.Control
    commentId: T:UCT.Control.EquipmentItem
  UCT.Control.EquipmentItem.#ctor*:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItem.#ctor*
        name: EquipmentItem
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.#ctor*
        name: EquipmentItem
      VB:
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.#ctor*
        name: EquipmentItem
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Control.EquipmentItem.#ctor
  UCT.Control.EquipmentItem.OnSwitch*:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItem.OnSwitch*
        name: OnSwitch
      VB:
      - id: UCT.Control.EquipmentItem.OnSwitch*
        name: OnSwitch
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnSwitch*
        name: OnSwitch
      VB:
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnSwitch*
        name: OnSwitch
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnSwitch*
        name: OnSwitch
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnSwitch*
        name: OnSwitch
    isDefinition: true
    commentId: Overload:UCT.Control.EquipmentItem.OnSwitch
  UCT.Control.EquipmentItem.OnEquip*:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItem.OnEquip*
        name: OnEquip
      VB:
      - id: UCT.Control.EquipmentItem.OnEquip*
        name: OnEquip
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnEquip*
        name: OnEquip
      VB:
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnEquip*
        name: OnEquip
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnEquip*
        name: OnEquip
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnEquip*
        name: OnEquip
    isDefinition: true
    commentId: Overload:UCT.Control.EquipmentItem.OnEquip
  UCT.Control.EquipmentItem.OnRemove*:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItem.OnRemove*
        name: OnRemove
      VB:
      - id: UCT.Control.EquipmentItem.OnRemove*
        name: OnRemove
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnRemove*
        name: OnRemove
      VB:
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnRemove*
        name: OnRemove
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnRemove*
        name: OnRemove
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnRemove*
        name: OnRemove
    isDefinition: true
    commentId: Overload:UCT.Control.EquipmentItem.OnRemove
  UCT.Control.EquipmentItem.OnUpdate*:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItem.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT.Control.EquipmentItem.OnUpdate*
        name: OnUpdate
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnUpdate*
        name: OnUpdate
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem*
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnUpdate*
        name: OnUpdate
    isDefinition: true
    commentId: Overload:UCT.Control.EquipmentItem.OnUpdate
  UCT.Control.EquipmentItemBuilder`1:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    isDefinition: true
    commentId: T:UCT.Control.EquipmentItemBuilder`1
  UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1
    parent: UCT.Control
    commentId: T:UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}
  UCT.Control.EquipmentItemBuilder`1.OnSwitch:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1.OnSwitch
        name: OnSwitch
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1.OnSwitch
        name: OnSwitch
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnSwitch
        name: OnSwitch
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnSwitch
        name: OnSwitch
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnSwitch
        name: OnSwitch
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnSwitch
        name: OnSwitch
    isDefinition: true
    commentId: F:UCT.Control.EquipmentItemBuilder`1.OnSwitch
  UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnSwitch:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnSwitch
        name: OnSwitch
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnSwitch
        name: OnSwitch
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnSwitch
        name: OnSwitch
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnSwitch
        name: OnSwitch
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnSwitch
        name: OnSwitch
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnSwitch
        name: OnSwitch
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.OnSwitch
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: F:UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnSwitch
  UCT.Control.EquipmentItemBuilder`1.OnEquip:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1.OnEquip
        name: OnEquip
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1.OnEquip
        name: OnEquip
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnEquip
        name: OnEquip
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnEquip
        name: OnEquip
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnEquip
        name: OnEquip
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnEquip
        name: OnEquip
    isDefinition: true
    commentId: F:UCT.Control.EquipmentItemBuilder`1.OnEquip
  UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnEquip:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnEquip
        name: OnEquip
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnEquip
        name: OnEquip
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnEquip
        name: OnEquip
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnEquip
        name: OnEquip
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnEquip
        name: OnEquip
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnEquip
        name: OnEquip
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.OnEquip
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: F:UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnEquip
  UCT.Control.EquipmentItemBuilder`1.OnRemove:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1.OnRemove
        name: OnRemove
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1.OnRemove
        name: OnRemove
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnRemove
        name: OnRemove
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnRemove
        name: OnRemove
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnRemove
        name: OnRemove
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnRemove
        name: OnRemove
    isDefinition: true
    commentId: F:UCT.Control.EquipmentItemBuilder`1.OnRemove
  UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnRemove:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnRemove
        name: OnRemove
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnRemove
        name: OnRemove
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnRemove
        name: OnRemove
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnRemove
        name: OnRemove
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnRemove
        name: OnRemove
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnRemove
        name: OnRemove
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.OnRemove
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: F:UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnRemove
  UCT.Control.EquipmentItemBuilder`1.OnUpdate:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1.OnUpdate
        name: OnUpdate
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1.OnUpdate
        name: OnUpdate
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnUpdate
        name: OnUpdate
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnUpdate
        name: OnUpdate
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnUpdate
        name: OnUpdate
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.OnUpdate
        name: OnUpdate
    isDefinition: true
    commentId: F:UCT.Control.EquipmentItemBuilder`1.OnUpdate
  UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUpdate:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUpdate
        name: OnUpdate
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUpdate
        name: OnUpdate
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUpdate
        name: OnUpdate
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUpdate
        name: OnUpdate
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUpdate
        name: OnUpdate
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUpdate
        name: OnUpdate
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.OnUpdate
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: F:UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUpdate
  UCT.Control.EquipmentItemBuilder`1.SetOnSwitch(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: true
    commentId: M:UCT.Control.EquipmentItemBuilder`1.SetOnSwitch(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnSwitch(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch(System.Action{System.Int32})
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: M:UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnSwitch(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder`1.SetOnEquip(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: true
    commentId: M:UCT.Control.EquipmentItemBuilder`1.SetOnEquip(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnEquip(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.SetOnEquip(System.Action{System.Int32})
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: M:UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnEquip(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder`1.SetOnRemove(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: true
    commentId: M:UCT.Control.EquipmentItemBuilder`1.SetOnRemove(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnRemove(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.SetOnRemove(System.Action{System.Int32})
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: M:UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnRemove(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder`1.SetOnUpdate(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: true
    commentId: M:UCT.Control.EquipmentItemBuilder`1.SetOnUpdate(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUpdate(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate(System.Action{System.Int32})
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: M:UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUpdate(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder`1.Build:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1.Build
        name: Build
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.Build
        name: Build
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.Build
        name: Build
      - name: (
      - name: )
    isDefinition: true
    commentId: M:UCT.Control.EquipmentItemBuilder`1.Build
  UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.Build:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.Build
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: M:UCT.Control.EquipmentItemBuilder{UCT.Control.EquipmentItemBuilder}.Build
  UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1
    parent: UCT.Control
    commentId: T:UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}
  UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.Data:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.Data
        name: Data
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.Data
        name: Data
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.Data
        name: Data
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.Data
        name: Data
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.Data
    parent: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.Data
  UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUse:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUse
        name: OnUse
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUse
        name: OnUse
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUse
        name: OnUse
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnUse
    parent: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnUse
  UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnCheck:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnCheck
        name: OnCheck
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnCheck
        name: OnCheck
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnCheck
        name: OnCheck
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnCheck
    parent: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnCheck
  UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnDrop:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnDrop
        name: OnDrop
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnDrop
        name: OnDrop
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnDrop
        name: OnDrop
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnDrop
    parent: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.OnDrop
  UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetData(System.String,System.Int32):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
    parent: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetData(System.String,System.Int32)
  UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUse(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnUse(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnCheck(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnCheck(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnDrop(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.EquipmentItemBuilder}.SetOnDrop(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      VB:
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      VB:
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder
        name: EquipmentItemBuilder
    isDefinition: true
    commentId: T:UCT.Control.EquipmentItemBuilder
  UCT.Control.GameItemBuilder{{T}}:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1
    parent: UCT.Control
    commentId: T:UCT.Control.GameItemBuilder{`0}
  UCT.Control.GameItemBuilder{{T}}.Data:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{`0}.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder{`0}.Data
        name: Data
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.Data
        name: Data
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.Data
        name: Data
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.Data
        name: Data
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.Data
    parent: UCT.Control.GameItemBuilder{{T}}
    commentId: F:UCT.Control.GameItemBuilder{`0}.Data
  UCT.Control.GameItemBuilder{{T}}.OnUse:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{`0}.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder{`0}.OnUse
        name: OnUse
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.OnUse
        name: OnUse
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.OnUse
        name: OnUse
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.OnUse
        name: OnUse
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnUse
    parent: UCT.Control.GameItemBuilder{{T}}
    commentId: F:UCT.Control.GameItemBuilder{`0}.OnUse
  UCT.Control.GameItemBuilder{{T}}.OnCheck:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{`0}.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder{`0}.OnCheck
        name: OnCheck
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.OnCheck
        name: OnCheck
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.OnCheck
        name: OnCheck
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.OnCheck
        name: OnCheck
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnCheck
    parent: UCT.Control.GameItemBuilder{{T}}
    commentId: F:UCT.Control.GameItemBuilder{`0}.OnCheck
  UCT.Control.GameItemBuilder{{T}}.OnDrop:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{`0}.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder{`0}.OnDrop
        name: OnDrop
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.OnDrop
        name: OnDrop
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.OnDrop
        name: OnDrop
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.OnDrop
        name: OnDrop
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnDrop
    parent: UCT.Control.GameItemBuilder{{T}}
    commentId: F:UCT.Control.GameItemBuilder{`0}.OnDrop
  UCT.Control.GameItemBuilder{{T}}.SetData(System.String,System.Int32):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{`0}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{`0}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
    parent: UCT.Control.GameItemBuilder{{T}}
    commentId: M:UCT.Control.GameItemBuilder{`0}.SetData(System.String,System.Int32)
  UCT.Control.GameItemBuilder{{T}}.SetOnUse(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{`0}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{`0}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{{T}}
    commentId: M:UCT.Control.GameItemBuilder{`0}.SetOnUse(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{{T}}.SetOnCheck(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{`0}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{`0}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{{T}}
    commentId: M:UCT.Control.GameItemBuilder{`0}.SetOnCheck(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{{T}}.SetOnDrop(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{`0}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{`0}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{{T}}
    commentId: M:UCT.Control.GameItemBuilder{`0}.SetOnDrop(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder`1.SetOnSwitch*:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch*
        name: SetOnSwitch
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch*
        name: SetOnSwitch
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch*
        name: SetOnSwitch
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch*
        name: SetOnSwitch
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch*
        name: SetOnSwitch
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch*
        name: SetOnSwitch
    isDefinition: true
    commentId: Overload:UCT.Control.EquipmentItemBuilder`1.SetOnSwitch
  UCT.Control.EquipmentItemBuilder`1.SetOnEquip*:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnEquip*
        name: SetOnEquip
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnEquip*
        name: SetOnEquip
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnEquip*
        name: SetOnEquip
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnEquip*
        name: SetOnEquip
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnEquip*
        name: SetOnEquip
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnEquip*
        name: SetOnEquip
    isDefinition: true
    commentId: Overload:UCT.Control.EquipmentItemBuilder`1.SetOnEquip
  UCT.Control.EquipmentItemBuilder`1.SetOnRemove*:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnRemove*
        name: SetOnRemove
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnRemove*
        name: SetOnRemove
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnRemove*
        name: SetOnRemove
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnRemove*
        name: SetOnRemove
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnRemove*
        name: SetOnRemove
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnRemove*
        name: SetOnRemove
    isDefinition: true
    commentId: Overload:UCT.Control.EquipmentItemBuilder`1.SetOnRemove
  UCT.Control.EquipmentItemBuilder`1.SetOnUpdate*:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate*
        name: SetOnUpdate
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate*
        name: SetOnUpdate
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate*
        name: SetOnUpdate
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate*
        name: SetOnUpdate
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate*
        name: SetOnUpdate
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate*
        name: SetOnUpdate
    isDefinition: true
    commentId: Overload:UCT.Control.EquipmentItemBuilder`1.SetOnUpdate
  UCT.Control.GameItemBuilder{{T}}.Build:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{`0}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{`0}.Build
        name: Build
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.Build
        name: Build
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{`0}.Build
        name: Build
      - name: (
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.Build
    parent: UCT.Control.GameItemBuilder{{T}}
    commentId: M:UCT.Control.GameItemBuilder{`0}.Build
  UCT.Control.EquipmentItemBuilder`1.Build*:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1.Build*
        name: Build
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1.Build*
        name: Build
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.Build*
        name: Build
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.Build*
        name: Build
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: <
      - name: T
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.Build*
        name: Build
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1*
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - name: T
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1.Build*
        name: Build
    isDefinition: true
    commentId: Overload:UCT.Control.EquipmentItemBuilder`1.Build
  UCT.Control.EquipmentItem.OnSwitch(System.Int32):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItem.OnSwitch(System.Int32)
        name: OnSwitch
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.EquipmentItem.OnSwitch(System.Int32)
        name: OnSwitch
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnSwitch(System.Int32)
        name: OnSwitch
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnSwitch(System.Int32)
        name: OnSwitch
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnSwitch(System.Int32)
        name: OnSwitch
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnSwitch(System.Int32)
        name: OnSwitch
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Control.EquipmentItem
    commentId: M:UCT.Control.EquipmentItem.OnSwitch(System.Int32)
  UCT.Control.EquipmentItem.OnEquip(System.Int32):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItem.OnEquip(System.Int32)
        name: OnEquip
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.EquipmentItem.OnEquip(System.Int32)
        name: OnEquip
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnEquip(System.Int32)
        name: OnEquip
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnEquip(System.Int32)
        name: OnEquip
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnEquip(System.Int32)
        name: OnEquip
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnEquip(System.Int32)
        name: OnEquip
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Control.EquipmentItem
    commentId: M:UCT.Control.EquipmentItem.OnEquip(System.Int32)
  UCT.Control.EquipmentItem.OnRemove(System.Int32):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItem.OnRemove(System.Int32)
        name: OnRemove
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.EquipmentItem.OnRemove(System.Int32)
        name: OnRemove
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnRemove(System.Int32)
        name: OnRemove
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnRemove(System.Int32)
        name: OnRemove
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnRemove(System.Int32)
        name: OnRemove
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnRemove(System.Int32)
        name: OnRemove
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Control.EquipmentItem
    commentId: M:UCT.Control.EquipmentItem.OnRemove(System.Int32)
  UCT.Control.EquipmentItem.OnUpdate(System.Int32):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItem.OnUpdate(System.Int32)
        name: OnUpdate
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.EquipmentItem.OnUpdate(System.Int32)
        name: OnUpdate
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnUpdate(System.Int32)
        name: OnUpdate
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnUpdate(System.Int32)
        name: OnUpdate
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnUpdate(System.Int32)
        name: OnUpdate
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItem
        name: EquipmentItem
      - name: .
      - id: UCT.Control.EquipmentItem.OnUpdate(System.Int32)
        name: OnUpdate
      - name: (
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Control.EquipmentItem
    commentId: M:UCT.Control.EquipmentItem.OnUpdate(System.Int32)
  UCT.Control.WeaponItem:
    name:
      CSharp:
      - id: UCT.Control.WeaponItem
        name: WeaponItem
      VB:
      - id: UCT.Control.WeaponItem
        name: WeaponItem
    nameWithType:
      CSharp:
      - id: UCT.Control.WeaponItem
        name: WeaponItem
      VB:
      - id: UCT.Control.WeaponItem
        name: WeaponItem
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItem
        name: WeaponItem
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItem
        name: WeaponItem
    isDefinition: true
    commentId: T:UCT.Control.WeaponItem
  UCT.Control.WeaponItem.#ctor*:
    name:
      CSharp:
      - id: UCT.Control.WeaponItem.#ctor*
        name: WeaponItem
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - id: UCT.Control.WeaponItem.#ctor*
        name: WeaponItem
      VB:
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - id: UCT.Control.WeaponItem.#ctor*
        name: WeaponItem
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Control.WeaponItem.#ctor
  UCT.Control.WeaponItem.OnAttack*:
    name:
      CSharp:
      - id: UCT.Control.WeaponItem.OnAttack*
        name: OnAttack
      VB:
      - id: UCT.Control.WeaponItem.OnAttack*
        name: OnAttack
    nameWithType:
      CSharp:
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - id: UCT.Control.WeaponItem.OnAttack*
        name: OnAttack
      VB:
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - id: UCT.Control.WeaponItem.OnAttack*
        name: OnAttack
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - id: UCT.Control.WeaponItem.OnAttack*
        name: OnAttack
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - id: UCT.Control.WeaponItem.OnAttack*
        name: OnAttack
    isDefinition: true
    commentId: Overload:UCT.Control.WeaponItem.OnAttack
  UCT.Control.WeaponItem.OnMiss*:
    name:
      CSharp:
      - id: UCT.Control.WeaponItem.OnMiss*
        name: OnMiss
      VB:
      - id: UCT.Control.WeaponItem.OnMiss*
        name: OnMiss
    nameWithType:
      CSharp:
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - id: UCT.Control.WeaponItem.OnMiss*
        name: OnMiss
      VB:
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - id: UCT.Control.WeaponItem.OnMiss*
        name: OnMiss
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - id: UCT.Control.WeaponItem.OnMiss*
        name: OnMiss
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - id: UCT.Control.WeaponItem.OnMiss*
        name: OnMiss
    isDefinition: true
    commentId: Overload:UCT.Control.WeaponItem.OnMiss
  UCT.Control.WeaponItem.OnHit*:
    name:
      CSharp:
      - id: UCT.Control.WeaponItem.OnHit*
        name: OnHit
      VB:
      - id: UCT.Control.WeaponItem.OnHit*
        name: OnHit
    nameWithType:
      CSharp:
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - id: UCT.Control.WeaponItem.OnHit*
        name: OnHit
      VB:
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - id: UCT.Control.WeaponItem.OnHit*
        name: OnHit
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - id: UCT.Control.WeaponItem.OnHit*
        name: OnHit
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItem*
        name: WeaponItem
      - name: .
      - id: UCT.Control.WeaponItem.OnHit*
        name: OnHit
    isDefinition: true
    commentId: Overload:UCT.Control.WeaponItem.OnHit
  UCT.Control.ArmorItem:
    name:
      CSharp:
      - id: UCT.Control.ArmorItem
        name: ArmorItem
      VB:
      - id: UCT.Control.ArmorItem
        name: ArmorItem
    nameWithType:
      CSharp:
      - id: UCT.Control.ArmorItem
        name: ArmorItem
      VB:
      - id: UCT.Control.ArmorItem
        name: ArmorItem
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItem
        name: ArmorItem
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItem
        name: ArmorItem
    isDefinition: true
    commentId: T:UCT.Control.ArmorItem
  UCT.Control.ArmorItem.#ctor*:
    name:
      CSharp:
      - id: UCT.Control.ArmorItem.#ctor*
        name: ArmorItem
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Control.ArmorItem*
        name: ArmorItem
      - name: .
      - id: UCT.Control.ArmorItem.#ctor*
        name: ArmorItem
      VB:
      - id: UCT.Control.ArmorItem*
        name: ArmorItem
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ArmorItem*
        name: ArmorItem
      - name: .
      - id: UCT.Control.ArmorItem.#ctor*
        name: ArmorItem
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ArmorItem*
        name: ArmorItem
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Control.ArmorItem.#ctor
  UCT.Control.ArmorItem.OnDamageTaken*:
    name:
      CSharp:
      - id: UCT.Control.ArmorItem.OnDamageTaken*
        name: OnDamageTaken
      VB:
      - id: UCT.Control.ArmorItem.OnDamageTaken*
        name: OnDamageTaken
    nameWithType:
      CSharp:
      - id: UCT.Control.ArmorItem*
        name: ArmorItem
      - name: .
      - id: UCT.Control.ArmorItem.OnDamageTaken*
        name: OnDamageTaken
      VB:
      - id: UCT.Control.ArmorItem*
        name: ArmorItem
      - name: .
      - id: UCT.Control.ArmorItem.OnDamageTaken*
        name: OnDamageTaken
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ArmorItem*
        name: ArmorItem
      - name: .
      - id: UCT.Control.ArmorItem.OnDamageTaken*
        name: OnDamageTaken
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ArmorItem*
        name: ArmorItem
      - name: .
      - id: UCT.Control.ArmorItem.OnDamageTaken*
        name: OnDamageTaken
    isDefinition: true
    commentId: Overload:UCT.Control.ArmorItem.OnDamageTaken
  UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1
    parent: UCT.Control
    commentId: T:UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}
  UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnSwitch:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnSwitch
        name: OnSwitch
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnSwitch
        name: OnSwitch
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnSwitch
        name: OnSwitch
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnSwitch
        name: OnSwitch
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnSwitch
        name: OnSwitch
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnSwitch
        name: OnSwitch
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.OnSwitch
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: F:UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnSwitch
  UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnEquip:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnEquip
        name: OnEquip
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnEquip
        name: OnEquip
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnEquip
        name: OnEquip
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnEquip
        name: OnEquip
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnEquip
        name: OnEquip
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnEquip
        name: OnEquip
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.OnEquip
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: F:UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnEquip
  UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnRemove:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnRemove
        name: OnRemove
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnRemove
        name: OnRemove
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnRemove
        name: OnRemove
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnRemove
        name: OnRemove
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnRemove
        name: OnRemove
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnRemove
        name: OnRemove
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.OnRemove
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: F:UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnRemove
  UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnUpdate:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnUpdate
        name: OnUpdate
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnUpdate
        name: OnUpdate
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnUpdate
        name: OnUpdate
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnUpdate
        name: OnUpdate
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnUpdate
        name: OnUpdate
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnUpdate
        name: OnUpdate
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.OnUpdate
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: F:UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.OnUpdate
  UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnSwitch(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch(System.Action{System.Int32})
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: M:UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnSwitch(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnEquip(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.SetOnEquip(System.Action{System.Int32})
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: M:UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnEquip(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnRemove(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.SetOnRemove(System.Action{System.Int32})
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: M:UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnRemove(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUpdate(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate(System.Action{System.Int32})
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: M:UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUpdate(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1
    parent: UCT.Control
    commentId: T:UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}
  UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.Data:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.Data
        name: Data
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.Data
        name: Data
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.Data
        name: Data
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.Data
        name: Data
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.Data
    parent: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.Data
  UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnUse:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnUse
        name: OnUse
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnUse
        name: OnUse
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnUse
        name: OnUse
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnUse
    parent: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnUse
  UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnCheck:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnCheck
        name: OnCheck
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnCheck
        name: OnCheck
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnCheck
        name: OnCheck
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnCheck
    parent: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnCheck
  UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnDrop:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnDrop
        name: OnDrop
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnDrop
        name: OnDrop
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnDrop
        name: OnDrop
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnDrop
    parent: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.OnDrop
  UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetData(System.String,System.Int32):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
    parent: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetData(System.String,System.Int32)
  UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUse(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnUse(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnCheck(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnCheck(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnDrop(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.WeaponItemBuilder}.SetOnDrop(System.Action{System.Int32})
  UCT.Control.WeaponItemBuilder:
    name:
      CSharp:
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      VB:
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
    nameWithType:
      CSharp:
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      VB:
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
    isDefinition: true
    parent: UCT.Control
    commentId: T:UCT.Control.WeaponItemBuilder
  UCT.Control.WeaponItemBuilder.SetOnAttack*:
    name:
      CSharp:
      - id: UCT.Control.WeaponItemBuilder.SetOnAttack*
        name: SetOnAttack
      VB:
      - id: UCT.Control.WeaponItemBuilder.SetOnAttack*
        name: SetOnAttack
    nameWithType:
      CSharp:
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.SetOnAttack*
        name: SetOnAttack
      VB:
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.SetOnAttack*
        name: SetOnAttack
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.SetOnAttack*
        name: SetOnAttack
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.SetOnAttack*
        name: SetOnAttack
    isDefinition: true
    commentId: Overload:UCT.Control.WeaponItemBuilder.SetOnAttack
  UCT.Control.WeaponItemBuilder.SetOnMiss*:
    name:
      CSharp:
      - id: UCT.Control.WeaponItemBuilder.SetOnMiss*
        name: SetOnMiss
      VB:
      - id: UCT.Control.WeaponItemBuilder.SetOnMiss*
        name: SetOnMiss
    nameWithType:
      CSharp:
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.SetOnMiss*
        name: SetOnMiss
      VB:
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.SetOnMiss*
        name: SetOnMiss
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.SetOnMiss*
        name: SetOnMiss
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.SetOnMiss*
        name: SetOnMiss
    isDefinition: true
    commentId: Overload:UCT.Control.WeaponItemBuilder.SetOnMiss
  UCT.Control.WeaponItemBuilder.SetOnHit*:
    name:
      CSharp:
      - id: UCT.Control.WeaponItemBuilder.SetOnHit*
        name: SetOnHit
      VB:
      - id: UCT.Control.WeaponItemBuilder.SetOnHit*
        name: SetOnHit
    nameWithType:
      CSharp:
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.SetOnHit*
        name: SetOnHit
      VB:
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.SetOnHit*
        name: SetOnHit
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.SetOnHit*
        name: SetOnHit
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.SetOnHit*
        name: SetOnHit
    isDefinition: true
    commentId: Overload:UCT.Control.WeaponItemBuilder.SetOnHit
  UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.Build:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder
        name: WeaponItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.Build
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}
    commentId: M:UCT.Control.EquipmentItemBuilder{UCT.Control.WeaponItemBuilder}.Build
  UCT.Control.WeaponItemBuilder.Build*:
    name:
      CSharp:
      - id: UCT.Control.WeaponItemBuilder.Build*
        name: Build
      VB:
      - id: UCT.Control.WeaponItemBuilder.Build*
        name: Build
    nameWithType:
      CSharp:
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.Build*
        name: Build
      VB:
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.Build*
        name: Build
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.Build*
        name: Build
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.WeaponItemBuilder*
        name: WeaponItemBuilder
      - name: .
      - id: UCT.Control.WeaponItemBuilder.Build*
        name: Build
    isDefinition: true
    commentId: Overload:UCT.Control.WeaponItemBuilder.Build
  UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1
    parent: UCT.Control
    commentId: T:UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}
  UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnSwitch:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnSwitch
        name: OnSwitch
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnSwitch
        name: OnSwitch
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnSwitch
        name: OnSwitch
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnSwitch
        name: OnSwitch
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnSwitch
        name: OnSwitch
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnSwitch
        name: OnSwitch
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.OnSwitch
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: F:UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnSwitch
  UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnEquip:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnEquip
        name: OnEquip
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnEquip
        name: OnEquip
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnEquip
        name: OnEquip
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnEquip
        name: OnEquip
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnEquip
        name: OnEquip
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnEquip
        name: OnEquip
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.OnEquip
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: F:UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnEquip
  UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnRemove:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnRemove
        name: OnRemove
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnRemove
        name: OnRemove
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnRemove
        name: OnRemove
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnRemove
        name: OnRemove
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnRemove
        name: OnRemove
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnRemove
        name: OnRemove
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.OnRemove
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: F:UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnRemove
  UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnUpdate:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnUpdate
        name: OnUpdate
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnUpdate
        name: OnUpdate
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnUpdate
        name: OnUpdate
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnUpdate
        name: OnUpdate
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnUpdate
        name: OnUpdate
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnUpdate
        name: OnUpdate
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.OnUpdate
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: F:UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.OnUpdate
  UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnSwitch(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnSwitch(System.Action{System.Int32})
        name: SetOnSwitch
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.SetOnSwitch(System.Action{System.Int32})
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: M:UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnSwitch(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnEquip(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnEquip(System.Action{System.Int32})
        name: SetOnEquip
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.SetOnEquip(System.Action{System.Int32})
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: M:UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnEquip(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnRemove(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnRemove(System.Action{System.Int32})
        name: SetOnRemove
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.SetOnRemove(System.Action{System.Int32})
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: M:UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnRemove(System.Action{System.Int32})
  UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUpdate(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUpdate(System.Action{System.Int32})
        name: SetOnUpdate
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.SetOnUpdate(System.Action{System.Int32})
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: M:UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUpdate(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1
    parent: UCT.Control
    commentId: T:UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}
  UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.Data:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.Data
        name: Data
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.Data
        name: Data
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.Data
        name: Data
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.Data
        name: Data
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.Data
        name: Data
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.Data
    parent: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.Data
  UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnUse:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnUse
        name: OnUse
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnUse
        name: OnUse
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnUse
        name: OnUse
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnUse
        name: OnUse
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnUse
    parent: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnUse
  UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnCheck:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnCheck
        name: OnCheck
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnCheck
        name: OnCheck
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnCheck
        name: OnCheck
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnCheck
        name: OnCheck
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnCheck
    parent: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnCheck
  UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnDrop:
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnDrop
        name: OnDrop
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnDrop
        name: OnDrop
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnDrop
        name: OnDrop
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnDrop
        name: OnDrop
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.OnDrop
    parent: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: F:UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.OnDrop
  UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetData(System.String,System.Int32):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetData(System.String,System.Int32)
        name: SetData
      - name: (
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetData(System.String,System.Int32)
    parent: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetData(System.String,System.Int32)
  UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUse(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUse(System.Action{System.Int32})
        name: SetOnUse
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnUse(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnUse(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnCheck(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnCheck(System.Action{System.Int32})
        name: SetOnCheck
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnCheck(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnCheck(System.Action{System.Int32})
  UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnDrop(System.Action{System.Int32}):
    name:
      CSharp:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItemBuilder`1
        name: GameItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnDrop(System.Action{System.Int32})
        name: SetOnDrop
      - name: (
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`1
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
      - name: )
    isDefinition: false
    definition: UCT.Control.GameItemBuilder`1.SetOnDrop(System.Action{System.Int32})
    parent: UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: M:UCT.Control.GameItemBuilder{UCT.Control.ArmorItemBuilder}.SetOnDrop(System.Action{System.Int32})
  UCT.Control.ArmorItemBuilder:
    name:
      CSharp:
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      VB:
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
    nameWithType:
      CSharp:
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      VB:
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
    isDefinition: true
    parent: UCT.Control
    commentId: T:UCT.Control.ArmorItemBuilder
  UCT.Control.ArmorItemBuilder.SetOnDamageTaken*:
    name:
      CSharp:
      - id: UCT.Control.ArmorItemBuilder.SetOnDamageTaken*
        name: SetOnDamageTaken
      VB:
      - id: UCT.Control.ArmorItemBuilder.SetOnDamageTaken*
        name: SetOnDamageTaken
    nameWithType:
      CSharp:
      - id: UCT.Control.ArmorItemBuilder*
        name: ArmorItemBuilder
      - name: .
      - id: UCT.Control.ArmorItemBuilder.SetOnDamageTaken*
        name: SetOnDamageTaken
      VB:
      - id: UCT.Control.ArmorItemBuilder*
        name: ArmorItemBuilder
      - name: .
      - id: UCT.Control.ArmorItemBuilder.SetOnDamageTaken*
        name: SetOnDamageTaken
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder*
        name: ArmorItemBuilder
      - name: .
      - id: UCT.Control.ArmorItemBuilder.SetOnDamageTaken*
        name: SetOnDamageTaken
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder*
        name: ArmorItemBuilder
      - name: .
      - id: UCT.Control.ArmorItemBuilder.SetOnDamageTaken*
        name: SetOnDamageTaken
    isDefinition: true
    commentId: Overload:UCT.Control.ArmorItemBuilder.SetOnDamageTaken
  UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.Build:
    name:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: '>'
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.Build
        name: Build
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.EquipmentItemBuilder`1
        name: EquipmentItemBuilder
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder
        name: ArmorItemBuilder
      - name: )
      - name: .
      - id: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.Build
        name: Build
      - name: (
      - name: )
    isDefinition: false
    definition: UCT.Control.EquipmentItemBuilder`1.Build
    parent: UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}
    commentId: M:UCT.Control.EquipmentItemBuilder{UCT.Control.ArmorItemBuilder}.Build
  UCT.Control.ArmorItemBuilder.Build*:
    name:
      CSharp:
      - id: UCT.Control.ArmorItemBuilder.Build*
        name: Build
      VB:
      - id: UCT.Control.ArmorItemBuilder.Build*
        name: Build
    nameWithType:
      CSharp:
      - id: UCT.Control.ArmorItemBuilder*
        name: ArmorItemBuilder
      - name: .
      - id: UCT.Control.ArmorItemBuilder.Build*
        name: Build
      VB:
      - id: UCT.Control.ArmorItemBuilder*
        name: ArmorItemBuilder
      - name: .
      - id: UCT.Control.ArmorItemBuilder.Build*
        name: Build
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder*
        name: ArmorItemBuilder
      - name: .
      - id: UCT.Control.ArmorItemBuilder.Build*
        name: Build
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ArmorItemBuilder*
        name: ArmorItemBuilder
      - name: .
      - id: UCT.Control.ArmorItemBuilder.Build*
        name: Build
    isDefinition: true
    commentId: Overload:UCT.Control.ArmorItemBuilder.Build
  Global.IBattleConfig:
    name:
      CSharp:
      - id: Global.IBattleConfig
        name: IBattleConfig
        isExternal: true
      VB:
      - id: Global.IBattleConfig
        name: IBattleConfig
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.IBattleConfig
        name: IBattleConfig
        isExternal: true
      VB:
      - id: Global.IBattleConfig
        name: IBattleConfig
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.IBattleConfig
        name: IBattleConfig
        isExternal: true
      VB:
      - id: Global.IBattleConfig
        name: IBattleConfig
        isExternal: true
    isDefinition: true
    commentId: '!:Global.IBattleConfig'
  UCT.Control.BattleControl:
    name:
      CSharp:
      - id: UCT.Control.BattleControl
        name: BattleControl
      VB:
      - id: UCT.Control.BattleControl
        name: BattleControl
    nameWithType:
      CSharp:
      - id: UCT.Control.BattleControl
        name: BattleControl
      VB:
      - id: UCT.Control.BattleControl
        name: BattleControl
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.BattleControl
        name: BattleControl
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.BattleControl
        name: BattleControl
    isDefinition: true
    commentId: T:UCT.Control.BattleControl
  UCT.Control.BattleControl.BulletColor:
    name:
      CSharp:
      - id: UCT.Control.BattleControl
        name: BattleControl
      - name: .
      - id: UCT.Control.BattleControl.BulletColor
        name: BulletColor
      VB:
      - id: UCT.Control.BattleControl
        name: BattleControl
      - name: .
      - id: UCT.Control.BattleControl.BulletColor
        name: BulletColor
    nameWithType:
      CSharp:
      - id: UCT.Control.BattleControl
        name: BattleControl
      - name: .
      - id: UCT.Control.BattleControl.BulletColor
        name: BulletColor
      VB:
      - id: UCT.Control.BattleControl
        name: BattleControl
      - name: .
      - id: UCT.Control.BattleControl.BulletColor
        name: BulletColor
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.BattleControl
        name: BattleControl
      - name: .
      - id: UCT.Control.BattleControl.BulletColor
        name: BulletColor
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.BattleControl
        name: BattleControl
      - name: .
      - id: UCT.Control.BattleControl.BulletColor
        name: BulletColor
    isDefinition: true
    parent: UCT.Control
    commentId: T:UCT.Control.BattleControl.BulletColor
  UCT.Control.BattleControl.PlayerColor:
    name:
      CSharp:
      - id: UCT.Control.BattleControl
        name: BattleControl
      - name: .
      - id: UCT.Control.BattleControl.PlayerColor
        name: PlayerColor
      VB:
      - id: UCT.Control.BattleControl
        name: BattleControl
      - name: .
      - id: UCT.Control.BattleControl.PlayerColor
        name: PlayerColor
    nameWithType:
      CSharp:
      - id: UCT.Control.BattleControl
        name: BattleControl
      - name: .
      - id: UCT.Control.BattleControl.PlayerColor
        name: PlayerColor
      VB:
      - id: UCT.Control.BattleControl
        name: BattleControl
      - name: .
      - id: UCT.Control.BattleControl.PlayerColor
        name: PlayerColor
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.BattleControl
        name: BattleControl
      - name: .
      - id: UCT.Control.BattleControl.PlayerColor
        name: PlayerColor
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.BattleControl
        name: BattleControl
      - name: .
      - id: UCT.Control.BattleControl.PlayerColor
        name: PlayerColor
    isDefinition: true
    parent: UCT.Control
    commentId: T:UCT.Control.BattleControl.PlayerColor
  System.Collections.Generic.List{UCT.Control.SpriteExpressionCollection}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{UCT.Control.SpriteExpressionCollection}
  System.ValueTuple{System.String,UCT.Control.CharacterSpriteManager}:
    name:
      CSharp:
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.String,UCT.Control.CharacterSpriteManager}.result
        name: result
      - name: ','
      - name: " "
      - id: UCT.Control.CharacterSpriteManager
        name: CharacterSpriteManager
      - name: " "
      - id: System.ValueTuple{System.String,UCT.Control.CharacterSpriteManager}.manager
        name: manager
      - name: )
      VB:
      - name: (
      - id: System.ValueTuple{System.String,UCT.Control.CharacterSpriteManager}.result
        name: result
      - name: " "
      - name: As
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.ValueTuple{System.String,UCT.Control.CharacterSpriteManager}.manager
        name: manager
      - name: " "
      - name: As
      - name: " "
      - id: UCT.Control.CharacterSpriteManager
        name: CharacterSpriteManager
      - name: )
    nameWithType:
      CSharp:
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.String,UCT.Control.CharacterSpriteManager}.result
        name: result
      - name: ','
      - name: " "
      - id: UCT.Control.CharacterSpriteManager
        name: CharacterSpriteManager
      - name: " "
      - id: System.ValueTuple{System.String,UCT.Control.CharacterSpriteManager}.manager
        name: manager
      - name: )
      VB:
      - name: (
      - id: System.ValueTuple{System.String,UCT.Control.CharacterSpriteManager}.result
        name: result
      - name: " "
      - name: As
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.ValueTuple{System.String,UCT.Control.CharacterSpriteManager}.manager
        name: manager
      - name: " "
      - name: As
      - name: " "
      - id: UCT.Control.CharacterSpriteManager
        name: CharacterSpriteManager
      - name: )
    qualifiedName:
      CSharp:
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.String,UCT.Control.CharacterSpriteManager}.result
        name: result
      - name: ','
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.CharacterSpriteManager
        name: CharacterSpriteManager
      - name: " "
      - id: System.ValueTuple{System.String,UCT.Control.CharacterSpriteManager}.manager
        name: manager
      - name: )
      VB:
      - name: (
      - id: System.ValueTuple{System.String,UCT.Control.CharacterSpriteManager}.result
        name: result
      - name: " "
      - name: As
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.ValueTuple{System.String,UCT.Control.CharacterSpriteManager}.manager
        name: manager
      - name: " "
      - name: As
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.CharacterSpriteManager
        name: CharacterSpriteManager
      - name: )
    isDefinition: false
    definition: System.ValueTuple`2
    parent: System
    commentId: T:System.ValueTuple{System.String,UCT.Control.CharacterSpriteManager}
  UCT.Control.CharacterSpriteManager.StandardizeCharacterKey*:
    name:
      CSharp:
      - id: UCT.Control.CharacterSpriteManager.StandardizeCharacterKey*
        name: StandardizeCharacterKey
      VB:
      - id: UCT.Control.CharacterSpriteManager.StandardizeCharacterKey*
        name: StandardizeCharacterKey
    nameWithType:
      CSharp:
      - id: UCT.Control.CharacterSpriteManager*
        name: CharacterSpriteManager
      - name: .
      - id: UCT.Control.CharacterSpriteManager.StandardizeCharacterKey*
        name: StandardizeCharacterKey
      VB:
      - id: UCT.Control.CharacterSpriteManager*
        name: CharacterSpriteManager
      - name: .
      - id: UCT.Control.CharacterSpriteManager.StandardizeCharacterKey*
        name: StandardizeCharacterKey
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.CharacterSpriteManager*
        name: CharacterSpriteManager
      - name: .
      - id: UCT.Control.CharacterSpriteManager.StandardizeCharacterKey*
        name: StandardizeCharacterKey
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.CharacterSpriteManager*
        name: CharacterSpriteManager
      - name: .
      - id: UCT.Control.CharacterSpriteManager.StandardizeCharacterKey*
        name: StandardizeCharacterKey
    isDefinition: true
    commentId: Overload:UCT.Control.CharacterSpriteManager.StandardizeCharacterKey
  System.Nullable{System.ValueTuple{System.String,System.String,System.String}}:
    name:
      CSharp:
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.String,System.String,System.String}.Manager
        name: Manager
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.String,System.String,System.String}.Sprite
        name: Sprite
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.String,System.String,System.String}.AudioClip
        name: AudioClip
      - name: )
      - name: '?'
      VB:
      - name: (
      - id: System.ValueTuple{System.String,System.String,System.String}.Manager
        name: Manager
      - name: " "
      - name: As
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.ValueTuple{System.String,System.String,System.String}.Sprite
        name: Sprite
      - name: " "
      - name: As
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.ValueTuple{System.String,System.String,System.String}.AudioClip
        name: AudioClip
      - name: " "
      - name: As
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
      - name: '?'
    nameWithType:
      CSharp:
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.String,System.String,System.String}.Manager
        name: Manager
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.String,System.String,System.String}.Sprite
        name: Sprite
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.String,System.String,System.String}.AudioClip
        name: AudioClip
      - name: )
      - name: '?'
      VB:
      - name: (
      - id: System.ValueTuple{System.String,System.String,System.String}.Manager
        name: Manager
      - name: " "
      - name: As
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.ValueTuple{System.String,System.String,System.String}.Sprite
        name: Sprite
      - name: " "
      - name: As
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.ValueTuple{System.String,System.String,System.String}.AudioClip
        name: AudioClip
      - name: " "
      - name: As
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
      - name: '?'
    qualifiedName:
      CSharp:
      - name: (
      - id: System.String
        name: string
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.String,System.String,System.String}.Manager
        name: Manager
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.String,System.String,System.String}.Sprite
        name: Sprite
      - name: ','
      - name: " "
      - id: System.String
        name: string
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.String,System.String,System.String}.AudioClip
        name: AudioClip
      - name: )
      - name: '?'
      VB:
      - name: (
      - id: System.ValueTuple{System.String,System.String,System.String}.Manager
        name: Manager
      - name: " "
      - name: As
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.ValueTuple{System.String,System.String,System.String}.Sprite
        name: Sprite
      - name: " "
      - name: As
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: System.ValueTuple{System.String,System.String,System.String}.AudioClip
        name: AudioClip
      - name: " "
      - name: As
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: )
      - name: '?'
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.ValueTuple{System.String,System.String,System.String}}
  UCT.Control.CharacterSpriteManager.ParseTernary*:
    name:
      CSharp:
      - id: UCT.Control.CharacterSpriteManager.ParseTernary*
        name: ParseTernary
      VB:
      - id: UCT.Control.CharacterSpriteManager.ParseTernary*
        name: ParseTernary
    nameWithType:
      CSharp:
      - id: UCT.Control.CharacterSpriteManager*
        name: CharacterSpriteManager
      - name: .
      - id: UCT.Control.CharacterSpriteManager.ParseTernary*
        name: ParseTernary
      VB:
      - id: UCT.Control.CharacterSpriteManager*
        name: CharacterSpriteManager
      - name: .
      - id: UCT.Control.CharacterSpriteManager.ParseTernary*
        name: ParseTernary
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.CharacterSpriteManager*
        name: CharacterSpriteManager
      - name: .
      - id: UCT.Control.CharacterSpriteManager.ParseTernary*
        name: ParseTernary
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.CharacterSpriteManager*
        name: CharacterSpriteManager
      - name: .
      - id: UCT.Control.CharacterSpriteManager.ParseTernary*
        name: ParseTernary
    isDefinition: true
    commentId: Overload:UCT.Control.CharacterSpriteManager.ParseTernary
  UCT.Control.CharacterSpriteManager:
    name:
      CSharp:
      - id: UCT.Control.CharacterSpriteManager
        name: CharacterSpriteManager
      VB:
      - id: UCT.Control.CharacterSpriteManager
        name: CharacterSpriteManager
    nameWithType:
      CSharp:
      - id: UCT.Control.CharacterSpriteManager
        name: CharacterSpriteManager
      VB:
      - id: UCT.Control.CharacterSpriteManager
        name: CharacterSpriteManager
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.CharacterSpriteManager
        name: CharacterSpriteManager
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.CharacterSpriteManager
        name: CharacterSpriteManager
    isDefinition: true
    commentId: T:UCT.Control.CharacterSpriteManager
  Global.Sprite:
    name:
      CSharp:
      - id: Global.Sprite
        name: Sprite
        isExternal: true
      VB:
      - id: Global.Sprite
        name: Sprite
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Sprite
        name: Sprite
        isExternal: true
      VB:
      - id: Global.Sprite
        name: Sprite
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Sprite
        name: Sprite
        isExternal: true
      VB:
      - id: Global.Sprite
        name: Sprite
        isExternal: true
    isDefinition: true
  UCT.Control.MusicData:
    name:
      CSharp:
      - id: UCT.Control.MusicData
        name: MusicData
      VB:
      - id: UCT.Control.MusicData
        name: MusicData
    nameWithType:
      CSharp:
      - id: UCT.Control.MusicData
        name: MusicData
      VB:
      - id: UCT.Control.MusicData
        name: MusicData
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.MusicData
        name: MusicData
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.MusicData
        name: MusicData
    isDefinition: true
    commentId: T:UCT.Control.MusicData
  Global.AudioMixer:
    name:
      CSharp:
      - id: Global.AudioMixer
        name: AudioMixer
        isExternal: true
      VB:
      - id: Global.AudioMixer
        name: AudioMixer
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.AudioMixer
        name: AudioMixer
        isExternal: true
      VB:
      - id: Global.AudioMixer
        name: AudioMixer
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.AudioMixer
        name: AudioMixer
        isExternal: true
      VB:
      - id: Global.AudioMixer
        name: AudioMixer
        isExternal: true
    isDefinition: true
    commentId: '!:Global.AudioMixer'
  UCT.Control.AudioControl:
    name:
      CSharp:
      - id: UCT.Control.AudioControl
        name: AudioControl
      VB:
      - id: UCT.Control.AudioControl
        name: AudioControl
    nameWithType:
      CSharp:
      - id: UCT.Control.AudioControl
        name: AudioControl
      VB:
      - id: UCT.Control.AudioControl
        name: AudioControl
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.AudioControl
        name: AudioControl
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.AudioControl
        name: AudioControl
    isDefinition: true
    commentId: T:UCT.Control.AudioControl
  UCT.Control.SpriteExpressionCollection:
    name:
      CSharp:
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
      VB:
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
    nameWithType:
      CSharp:
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
      VB:
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
    isDefinition: true
    commentId: T:UCT.Control.SpriteExpressionCollection
  UCT.Control.SpriteExpressionCollection.State:
    name:
      CSharp:
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
      - name: .
      - id: UCT.Control.SpriteExpressionCollection.State
        name: State
      VB:
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
      - name: .
      - id: UCT.Control.SpriteExpressionCollection.State
        name: State
    nameWithType:
      CSharp:
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
      - name: .
      - id: UCT.Control.SpriteExpressionCollection.State
        name: State
      VB:
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
      - name: .
      - id: UCT.Control.SpriteExpressionCollection.State
        name: State
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
      - name: .
      - id: UCT.Control.SpriteExpressionCollection.State
        name: State
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.SpriteExpressionCollection
        name: SpriteExpressionCollection
      - name: .
      - id: UCT.Control.SpriteExpressionCollection.State
        name: State
    isDefinition: true
    parent: UCT.Control
    commentId: T:UCT.Control.SpriteExpressionCollection.State
  System.Collections.Generic.List{TMP_FontAsset}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.TMP_FontAsset
        name: TMP_FontAsset
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.TMP_FontAsset
        name: TMP_FontAsset
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.TMP_FontAsset
        name: TMP_FontAsset
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.TMP_FontAsset
        name: TMP_FontAsset
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.TMP_FontAsset
        name: TMP_FontAsset
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.TMP_FontAsset
        name: TMP_FontAsset
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{TMP_FontAsset}
  UCT.Control.OverworldControl:
    name:
      CSharp:
      - id: UCT.Control.OverworldControl
        name: OverworldControl
      VB:
      - id: UCT.Control.OverworldControl
        name: OverworldControl
    nameWithType:
      CSharp:
      - id: UCT.Control.OverworldControl
        name: OverworldControl
      VB:
      - id: UCT.Control.OverworldControl
        name: OverworldControl
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.OverworldControl
        name: OverworldControl
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.OverworldControl
        name: OverworldControl
    isDefinition: true
    commentId: T:UCT.Control.OverworldControl
  UCT.Control.OverworldControl.DynamicType:
    name:
      CSharp:
      - id: UCT.Control.OverworldControl
        name: OverworldControl
      - name: .
      - id: UCT.Control.OverworldControl.DynamicType
        name: DynamicType
      VB:
      - id: UCT.Control.OverworldControl
        name: OverworldControl
      - name: .
      - id: UCT.Control.OverworldControl.DynamicType
        name: DynamicType
    nameWithType:
      CSharp:
      - id: UCT.Control.OverworldControl
        name: OverworldControl
      - name: .
      - id: UCT.Control.OverworldControl.DynamicType
        name: DynamicType
      VB:
      - id: UCT.Control.OverworldControl
        name: OverworldControl
      - name: .
      - id: UCT.Control.OverworldControl.DynamicType
        name: DynamicType
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.OverworldControl
        name: OverworldControl
      - name: .
      - id: UCT.Control.OverworldControl.DynamicType
        name: DynamicType
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.OverworldControl
        name: OverworldControl
      - name: .
      - id: UCT.Control.OverworldControl.DynamicType
        name: DynamicType
    isDefinition: true
    parent: UCT.Control
    commentId: T:UCT.Control.OverworldControl.DynamicType
  UCT.Control.LanguagePackControl:
    name:
      CSharp:
      - id: UCT.Control.LanguagePackControl
        name: LanguagePackControl
      VB:
      - id: UCT.Control.LanguagePackControl
        name: LanguagePackControl
    nameWithType:
      CSharp:
      - id: UCT.Control.LanguagePackControl
        name: LanguagePackControl
      VB:
      - id: UCT.Control.LanguagePackControl
        name: LanguagePackControl
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.LanguagePackControl
        name: LanguagePackControl
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.LanguagePackControl
        name: LanguagePackControl
    isDefinition: true
    commentId: T:UCT.Control.LanguagePackControl
  UCT.Control.PlayerControl:
    name:
      CSharp:
      - id: UCT.Control.PlayerControl
        name: PlayerControl
      VB:
      - id: UCT.Control.PlayerControl
        name: PlayerControl
    nameWithType:
      CSharp:
      - id: UCT.Control.PlayerControl
        name: PlayerControl
      VB:
      - id: UCT.Control.PlayerControl
        name: PlayerControl
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.PlayerControl
        name: PlayerControl
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.PlayerControl
        name: PlayerControl
    isDefinition: true
    commentId: T:UCT.Control.PlayerControl
  System.Collections.Generic.Dictionary{System.String,UCT.Control.GameItem}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: UCT.Control.GameItem
        name: GameItem
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: UCT.Control.GameItem
        name: GameItem
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: UCT.Control.GameItem
        name: GameItem
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: UCT.Control.GameItem
        name: GameItem
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: System.String
        name: string
        isExternal: true
      - name: ','
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItem
        name: GameItem
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.String
        name: String
        isExternal: true
      - name: ','
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.GameItem
        name: GameItem
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,UCT.Control.GameItem}
  UCT.Control.ItemController.ItemDictionary*:
    name:
      CSharp:
      - id: UCT.Control.ItemController.ItemDictionary*
        name: ItemDictionary
      VB:
      - id: UCT.Control.ItemController.ItemDictionary*
        name: ItemDictionary
    nameWithType:
      CSharp:
      - id: UCT.Control.ItemController*
        name: ItemController
      - name: .
      - id: UCT.Control.ItemController.ItemDictionary*
        name: ItemDictionary
      VB:
      - id: UCT.Control.ItemController*
        name: ItemController
      - name: .
      - id: UCT.Control.ItemController.ItemDictionary*
        name: ItemDictionary
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ItemController*
        name: ItemController
      - name: .
      - id: UCT.Control.ItemController.ItemDictionary*
        name: ItemDictionary
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ItemController*
        name: ItemController
      - name: .
      - id: UCT.Control.ItemController.ItemDictionary*
        name: ItemDictionary
    isDefinition: true
    commentId: Overload:UCT.Control.ItemController.ItemDictionary
  UCT.Control.ItemController.InitializeItems*:
    name:
      CSharp:
      - id: UCT.Control.ItemController.InitializeItems*
        name: InitializeItems
      VB:
      - id: UCT.Control.ItemController.InitializeItems*
        name: InitializeItems
    nameWithType:
      CSharp:
      - id: UCT.Control.ItemController*
        name: ItemController
      - name: .
      - id: UCT.Control.ItemController.InitializeItems*
        name: InitializeItems
      VB:
      - id: UCT.Control.ItemController*
        name: ItemController
      - name: .
      - id: UCT.Control.ItemController.InitializeItems*
        name: InitializeItems
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ItemController*
        name: ItemController
      - name: .
      - id: UCT.Control.ItemController.InitializeItems*
        name: InitializeItems
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Control*
        name: Control
      - name: .
      - id: UCT.Control.ItemController*
        name: ItemController
      - name: .
      - id: UCT.Control.ItemController.InitializeItems*
        name: InitializeItems
    isDefinition: true
    commentId: Overload:UCT.Control.ItemController.InitializeItems
  UCT.Control.ItemController:
    name:
      CSharp:
      - id: UCT.Control.ItemController
        name: ItemController
      VB:
      - id: UCT.Control.ItemController
        name: ItemController
    nameWithType:
      CSharp:
      - id: UCT.Control.ItemController
        name: ItemController
      VB:
      - id: UCT.Control.ItemController
        name: ItemController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ItemController
        name: ItemController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.ItemController
        name: ItemController
    isDefinition: true
    commentId: T:UCT.Control.ItemController
  Global.BulletColor:
    name:
      CSharp:
      - id: Global.BulletColor
        name: BulletColor
        isExternal: true
      VB:
      - id: Global.BulletColor
        name: BulletColor
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.BulletColor
        name: BulletColor
        isExternal: true
      VB:
      - id: Global.BulletColor
        name: BulletColor
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.BulletColor
        name: BulletColor
        isExternal: true
      VB:
      - id: Global.BulletColor
        name: BulletColor
        isExternal: true
    isDefinition: true
    commentId: '!:Global.BulletColor'
  Global.FollowMode:
    name:
      CSharp:
      - id: Global.FollowMode
        name: FollowMode
        isExternal: true
      VB:
      - id: Global.FollowMode
        name: FollowMode
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.FollowMode
        name: FollowMode
        isExternal: true
      VB:
      - id: Global.FollowMode
        name: FollowMode
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.FollowMode
        name: FollowMode
        isExternal: true
      VB:
      - id: Global.FollowMode
        name: FollowMode
        isExternal: true
    isDefinition: true
    commentId: '!:Global.FollowMode'
  UCT.Control.BulletControl:
    name:
      CSharp:
      - id: UCT.Control.BulletControl
        name: BulletControl
      VB:
      - id: UCT.Control.BulletControl
        name: BulletControl
    nameWithType:
      CSharp:
      - id: UCT.Control.BulletControl
        name: BulletControl
      VB:
      - id: UCT.Control.BulletControl
        name: BulletControl
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.BulletControl
        name: BulletControl
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Control
        name: Control
      - name: .
      - id: UCT.Control.BulletControl
        name: BulletControl
    isDefinition: true
    commentId: T:UCT.Control.BulletControl
  UCT.Scene.MusicRoomController:
    name:
      CSharp:
      - id: UCT.Scene.MusicRoomController
        name: MusicRoomController
      VB:
      - id: UCT.Scene.MusicRoomController
        name: MusicRoomController
    nameWithType:
      CSharp:
      - id: UCT.Scene.MusicRoomController
        name: MusicRoomController
      VB:
      - id: UCT.Scene.MusicRoomController
        name: MusicRoomController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      - name: .
      - id: UCT.Scene.MusicRoomController
        name: MusicRoomController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      - name: .
      - id: UCT.Scene.MusicRoomController
        name: MusicRoomController
    isDefinition: true
    commentId: T:UCT.Scene.MusicRoomController
  UCT.Scene.StartController:
    name:
      CSharp:
      - id: UCT.Scene.StartController
        name: StartController
      VB:
      - id: UCT.Scene.StartController
        name: StartController
    nameWithType:
      CSharp:
      - id: UCT.Scene.StartController
        name: StartController
      VB:
      - id: UCT.Scene.StartController
        name: StartController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      - name: .
      - id: UCT.Scene.StartController
        name: StartController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      - name: .
      - id: UCT.Scene.StartController
        name: StartController
    isDefinition: true
    commentId: T:UCT.Scene.StartController
  UCT.Scene.MenuController:
    name:
      CSharp:
      - id: UCT.Scene.MenuController
        name: MenuController
      VB:
      - id: UCT.Scene.MenuController
        name: MenuController
    nameWithType:
      CSharp:
      - id: UCT.Scene.MenuController
        name: MenuController
      VB:
      - id: UCT.Scene.MenuController
        name: MenuController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      - name: .
      - id: UCT.Scene.MenuController
        name: MenuController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      - name: .
      - id: UCT.Scene.MenuController
        name: MenuController
    isDefinition: true
    commentId: T:UCT.Scene.MenuController
  UCT.Scene:
    name:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
    isDefinition: true
    commentId: N:UCT.Scene
  UCT.Scene.RenameController.SceneState:
    name:
      CSharp:
      - id: UCT.Scene.RenameController
        name: RenameController
      - name: .
      - id: UCT.Scene.RenameController.SceneState
        name: SceneState
      VB:
      - id: UCT.Scene.RenameController
        name: RenameController
      - name: .
      - id: UCT.Scene.RenameController.SceneState
        name: SceneState
    nameWithType:
      CSharp:
      - id: UCT.Scene.RenameController
        name: RenameController
      - name: .
      - id: UCT.Scene.RenameController.SceneState
        name: SceneState
      VB:
      - id: UCT.Scene.RenameController
        name: RenameController
      - name: .
      - id: UCT.Scene.RenameController.SceneState
        name: SceneState
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      - name: .
      - id: UCT.Scene.RenameController
        name: RenameController
      - name: .
      - id: UCT.Scene.RenameController.SceneState
        name: SceneState
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      - name: .
      - id: UCT.Scene.RenameController
        name: RenameController
      - name: .
      - id: UCT.Scene.RenameController.SceneState
        name: SceneState
    isDefinition: true
    parent: UCT.Scene
    commentId: T:UCT.Scene.RenameController.SceneState
  UCT.Scene.RenameController:
    name:
      CSharp:
      - id: UCT.Scene.RenameController
        name: RenameController
      VB:
      - id: UCT.Scene.RenameController
        name: RenameController
    nameWithType:
      CSharp:
      - id: UCT.Scene.RenameController
        name: RenameController
      VB:
      - id: UCT.Scene.RenameController
        name: RenameController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      - name: .
      - id: UCT.Scene.RenameController
        name: RenameController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      - name: .
      - id: UCT.Scene.RenameController
        name: RenameController
    isDefinition: true
    commentId: T:UCT.Scene.RenameController
  UCT.Scene.AudioSpectrumVisualizer:
    name:
      CSharp:
      - id: UCT.Scene.AudioSpectrumVisualizer
        name: AudioSpectrumVisualizer
      VB:
      - id: UCT.Scene.AudioSpectrumVisualizer
        name: AudioSpectrumVisualizer
    nameWithType:
      CSharp:
      - id: UCT.Scene.AudioSpectrumVisualizer
        name: AudioSpectrumVisualizer
      VB:
      - id: UCT.Scene.AudioSpectrumVisualizer
        name: AudioSpectrumVisualizer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      - name: .
      - id: UCT.Scene.AudioSpectrumVisualizer
        name: AudioSpectrumVisualizer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      - name: .
      - id: UCT.Scene.AudioSpectrumVisualizer
        name: AudioSpectrumVisualizer
    isDefinition: true
    commentId: T:UCT.Scene.AudioSpectrumVisualizer
  UCT.Scene.StorySceneController:
    name:
      CSharp:
      - id: UCT.Scene.StorySceneController
        name: StorySceneController
      VB:
      - id: UCT.Scene.StorySceneController
        name: StorySceneController
    nameWithType:
      CSharp:
      - id: UCT.Scene.StorySceneController
        name: StorySceneController
      VB:
      - id: UCT.Scene.StorySceneController
        name: StorySceneController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      - name: .
      - id: UCT.Scene.StorySceneController
        name: StorySceneController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Scene
        name: Scene
      - name: .
      - id: UCT.Scene.StorySceneController
        name: StorySceneController
    isDefinition: true
    parent: UCT.Scene
    commentId: T:UCT.Scene.StorySceneController
  UCT.Scene.StorySceneController.Instance*:
    name:
      CSharp:
      - id: UCT.Scene.StorySceneController.Instance*
        name: Instance
      VB:
      - id: UCT.Scene.StorySceneController.Instance*
        name: Instance
    nameWithType:
      CSharp:
      - id: UCT.Scene.StorySceneController*
        name: StorySceneController
      - name: .
      - id: UCT.Scene.StorySceneController.Instance*
        name: Instance
      VB:
      - id: UCT.Scene.StorySceneController*
        name: StorySceneController
      - name: .
      - id: UCT.Scene.StorySceneController.Instance*
        name: Instance
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Scene*
        name: Scene
      - name: .
      - id: UCT.Scene.StorySceneController*
        name: StorySceneController
      - name: .
      - id: UCT.Scene.StorySceneController.Instance*
        name: Instance
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Scene*
        name: Scene
      - name: .
      - id: UCT.Scene.StorySceneController*
        name: StorySceneController
      - name: .
      - id: UCT.Scene.StorySceneController.Instance*
        name: Instance
    isDefinition: true
    commentId: Overload:UCT.Scene.StorySceneController.Instance
  UCT.Scene.StorySceneController.Fade*:
    name:
      CSharp:
      - id: UCT.Scene.StorySceneController.Fade*
        name: Fade
      VB:
      - id: UCT.Scene.StorySceneController.Fade*
        name: Fade
    nameWithType:
      CSharp:
      - id: UCT.Scene.StorySceneController*
        name: StorySceneController
      - name: .
      - id: UCT.Scene.StorySceneController.Fade*
        name: Fade
      VB:
      - id: UCT.Scene.StorySceneController*
        name: StorySceneController
      - name: .
      - id: UCT.Scene.StorySceneController.Fade*
        name: Fade
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Scene*
        name: Scene
      - name: .
      - id: UCT.Scene.StorySceneController*
        name: StorySceneController
      - name: .
      - id: UCT.Scene.StorySceneController.Fade*
        name: Fade
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Scene*
        name: Scene
      - name: .
      - id: UCT.Scene.StorySceneController*
        name: StorySceneController
      - name: .
      - id: UCT.Scene.StorySceneController.Fade*
        name: Fade
    isDefinition: true
    commentId: Overload:UCT.Scene.StorySceneController.Fade
  UCT.Overworld:
    name:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
    isDefinition: true
    commentId: N:UCT.Overworld
  UCT.Overworld.SaveBoxController:
    name:
      CSharp:
      - id: UCT.Overworld.SaveBoxController
        name: SaveBoxController
      VB:
      - id: UCT.Overworld.SaveBoxController
        name: SaveBoxController
    nameWithType:
      CSharp:
      - id: UCT.Overworld.SaveBoxController
        name: SaveBoxController
      VB:
      - id: UCT.Overworld.SaveBoxController
        name: SaveBoxController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.SaveBoxController
        name: SaveBoxController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.SaveBoxController
        name: SaveBoxController
    isDefinition: true
    parent: UCT.Overworld
    commentId: T:UCT.Overworld.SaveBoxController
  UCT.Overworld.SaveBoxController.Instance*:
    name:
      CSharp:
      - id: UCT.Overworld.SaveBoxController.Instance*
        name: Instance
      VB:
      - id: UCT.Overworld.SaveBoxController.Instance*
        name: Instance
    nameWithType:
      CSharp:
      - id: UCT.Overworld.SaveBoxController*
        name: SaveBoxController
      - name: .
      - id: UCT.Overworld.SaveBoxController.Instance*
        name: Instance
      VB:
      - id: UCT.Overworld.SaveBoxController*
        name: SaveBoxController
      - name: .
      - id: UCT.Overworld.SaveBoxController.Instance*
        name: Instance
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.SaveBoxController*
        name: SaveBoxController
      - name: .
      - id: UCT.Overworld.SaveBoxController.Instance*
        name: Instance
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.SaveBoxController*
        name: SaveBoxController
      - name: .
      - id: UCT.Overworld.SaveBoxController.Instance*
        name: Instance
    isDefinition: true
    commentId: Overload:UCT.Overworld.SaveBoxController.Instance
  UCT.Overworld.SaveBoxController.OpenSaveBox*:
    name:
      CSharp:
      - id: UCT.Overworld.SaveBoxController.OpenSaveBox*
        name: OpenSaveBox
      VB:
      - id: UCT.Overworld.SaveBoxController.OpenSaveBox*
        name: OpenSaveBox
    nameWithType:
      CSharp:
      - id: UCT.Overworld.SaveBoxController*
        name: SaveBoxController
      - name: .
      - id: UCT.Overworld.SaveBoxController.OpenSaveBox*
        name: OpenSaveBox
      VB:
      - id: UCT.Overworld.SaveBoxController*
        name: SaveBoxController
      - name: .
      - id: UCT.Overworld.SaveBoxController.OpenSaveBox*
        name: OpenSaveBox
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.SaveBoxController*
        name: SaveBoxController
      - name: .
      - id: UCT.Overworld.SaveBoxController.OpenSaveBox*
        name: OpenSaveBox
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.SaveBoxController*
        name: SaveBoxController
      - name: .
      - id: UCT.Overworld.SaveBoxController.OpenSaveBox*
        name: OpenSaveBox
    isDefinition: true
    commentId: Overload:UCT.Overworld.SaveBoxController.OpenSaveBox
  UCT.Overworld.SaveService.SaveGame*:
    name:
      CSharp:
      - id: UCT.Overworld.SaveService.SaveGame*
        name: SaveGame
      VB:
      - id: UCT.Overworld.SaveService.SaveGame*
        name: SaveGame
    nameWithType:
      CSharp:
      - id: UCT.Overworld.SaveService*
        name: SaveService
      - name: .
      - id: UCT.Overworld.SaveService.SaveGame*
        name: SaveGame
      VB:
      - id: UCT.Overworld.SaveService*
        name: SaveService
      - name: .
      - id: UCT.Overworld.SaveService.SaveGame*
        name: SaveGame
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.SaveService*
        name: SaveService
      - name: .
      - id: UCT.Overworld.SaveService.SaveGame*
        name: SaveGame
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.SaveService*
        name: SaveService
      - name: .
      - id: UCT.Overworld.SaveService.SaveGame*
        name: SaveGame
    isDefinition: true
    commentId: Overload:UCT.Overworld.SaveService.SaveGame
  UCT.Overworld.SaveService:
    name:
      CSharp:
      - id: UCT.Overworld.SaveService
        name: SaveService
      VB:
      - id: UCT.Overworld.SaveService
        name: SaveService
    nameWithType:
      CSharp:
      - id: UCT.Overworld.SaveService
        name: SaveService
      VB:
      - id: UCT.Overworld.SaveService
        name: SaveService
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.SaveService
        name: SaveService
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.SaveService
        name: SaveService
    isDefinition: true
    commentId: T:UCT.Overworld.SaveService
  UCT.Overworld.OverworldChaseUIController:
    name:
      CSharp:
      - id: UCT.Overworld.OverworldChaseUIController
        name: OverworldChaseUIController
      VB:
      - id: UCT.Overworld.OverworldChaseUIController
        name: OverworldChaseUIController
    nameWithType:
      CSharp:
      - id: UCT.Overworld.OverworldChaseUIController
        name: OverworldChaseUIController
      VB:
      - id: UCT.Overworld.OverworldChaseUIController
        name: OverworldChaseUIController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldChaseUIController
        name: OverworldChaseUIController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldChaseUIController
        name: OverworldChaseUIController
    isDefinition: true
    commentId: T:UCT.Overworld.OverworldChaseUIController
  UCT.Overworld.FiniteStateMachine:
    name:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
    isDefinition: true
    commentId: N:UCT.Overworld.FiniteStateMachine
  UCT.Overworld.FiniteStateMachine.FiniteStateMachine:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine
    commentId: T:UCT.Overworld.FiniteStateMachine.FiniteStateMachine
  UCT.Overworld.FiniteStateMachine.FiniteStateMachine.data:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.data
        name: data
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.data
        name: data
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.data
        name: data
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.data
        name: data
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.data
        name: data
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.data
        name: data
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
    commentId: F:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.data
  UCT.Overworld.FiniteStateMachine.FiniteStateMachine.dataRoute:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.dataRoute
        name: dataRoute
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.dataRoute
        name: dataRoute
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.dataRoute
        name: dataRoute
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.dataRoute
        name: dataRoute
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.dataRoute
        name: dataRoute
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.dataRoute
        name: dataRoute
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
    commentId: F:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.dataRoute
  UCT.Overworld.FiniteStateMachine.FiniteStateMachine.States:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.States
        name: States
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.States
        name: States
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.States
        name: States
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.States
        name: States
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.States
        name: States
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.States
        name: States
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
    commentId: F:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.States
  UCT.Overworld.FiniteStateMachine.FiniteStateMachine.CurrentState:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.CurrentState
        name: CurrentState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.CurrentState
        name: CurrentState
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.CurrentState
        name: CurrentState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.CurrentState
        name: CurrentState
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.CurrentState
        name: CurrentState
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.CurrentState
        name: CurrentState
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
    commentId: F:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.CurrentState
  UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState(UCT.Overworld.FiniteStateMachine.IState):
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState(UCT.Overworld.FiniteStateMachine.IState)
        name: TransitionState
      - name: (
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState(UCT.Overworld.FiniteStateMachine.IState)
        name: TransitionState
      - name: (
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState(UCT.Overworld.FiniteStateMachine.IState)
        name: TransitionState
      - name: (
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState(UCT.Overworld.FiniteStateMachine.IState)
        name: TransitionState
      - name: (
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState(UCT.Overworld.FiniteStateMachine.IState)
        name: TransitionState
      - name: (
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState(UCT.Overworld.FiniteStateMachine.IState)
        name: TransitionState
      - name: (
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: )
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
    commentId: M:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState(UCT.Overworld.FiniteStateMachine.IState)
  UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo(Vector3):
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo(Vector3)
        name: UpdateMoveTo
      - name: (
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo(Vector3)
        name: UpdateMoveTo
      - name: (
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo(Vector3)
        name: UpdateMoveTo
      - name: (
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo(Vector3)
        name: UpdateMoveTo
      - name: (
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo(Vector3)
        name: UpdateMoveTo
      - name: (
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo(Vector3)
        name: UpdateMoveTo
      - name: (
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
    commentId: M:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo(Vector3)
  UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance(Vector2,Vector2):
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance(Vector2,Vector2)
        name: DiagonalDistance
      - name: (
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance(Vector2,Vector2)
        name: DiagonalDistance
      - name: (
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance(Vector2,Vector2)
        name: DiagonalDistance
      - name: (
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance(Vector2,Vector2)
        name: DiagonalDistance
      - name: (
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance(Vector2,Vector2)
        name: DiagonalDistance
      - name: (
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance(Vector2,Vector2)
        name: DiagonalDistance
      - name: (
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: ','
      - name: " "
      - id: Global.Vector2
        name: Vector2
        isExternal: true
      - name: )
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
    commentId: M:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance(Vector2,Vector2)
  Global.StateType:
    name:
      CSharp:
      - id: Global.StateType
        name: StateType
        isExternal: true
      VB:
      - id: Global.StateType
        name: StateType
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.StateType
        name: StateType
        isExternal: true
      VB:
      - id: Global.StateType
        name: StateType
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.StateType
        name: StateType
        isExternal: true
      VB:
      - id: Global.StateType
        name: StateType
        isExternal: true
    isDefinition: true
  UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates
        name: InitializeStates
      - name: (
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates
        name: InitializeStates
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates
        name: InitializeStates
      - name: (
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates
        name: InitializeStates
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates
        name: InitializeStates
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates
        name: InitializeStates
      - name: (
      - name: )
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine.FiniteStateMachine
    commentId: M:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates
  UCT.Overworld.OverworldPlayerBehaviour.InitializeStates*:
    name:
      CSharp:
      - id: UCT.Overworld.OverworldPlayerBehaviour.InitializeStates*
        name: InitializeStates
      VB:
      - id: UCT.Overworld.OverworldPlayerBehaviour.InitializeStates*
        name: InitializeStates
    nameWithType:
      CSharp:
      - id: UCT.Overworld.OverworldPlayerBehaviour*
        name: OverworldPlayerBehaviour
      - name: .
      - id: UCT.Overworld.OverworldPlayerBehaviour.InitializeStates*
        name: InitializeStates
      VB:
      - id: UCT.Overworld.OverworldPlayerBehaviour*
        name: OverworldPlayerBehaviour
      - name: .
      - id: UCT.Overworld.OverworldPlayerBehaviour.InitializeStates*
        name: InitializeStates
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldPlayerBehaviour*
        name: OverworldPlayerBehaviour
      - name: .
      - id: UCT.Overworld.OverworldPlayerBehaviour.InitializeStates*
        name: InitializeStates
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldPlayerBehaviour*
        name: OverworldPlayerBehaviour
      - name: .
      - id: UCT.Overworld.OverworldPlayerBehaviour.InitializeStates*
        name: InitializeStates
    isDefinition: true
    commentId: Overload:UCT.Overworld.OverworldPlayerBehaviour.InitializeStates
  UCT.Overworld.OverworldPlayerBehaviour.TransitionToStateIfNeeded*:
    name:
      CSharp:
      - id: UCT.Overworld.OverworldPlayerBehaviour.TransitionToStateIfNeeded*
        name: TransitionToStateIfNeeded
      VB:
      - id: UCT.Overworld.OverworldPlayerBehaviour.TransitionToStateIfNeeded*
        name: TransitionToStateIfNeeded
    nameWithType:
      CSharp:
      - id: UCT.Overworld.OverworldPlayerBehaviour*
        name: OverworldPlayerBehaviour
      - name: .
      - id: UCT.Overworld.OverworldPlayerBehaviour.TransitionToStateIfNeeded*
        name: TransitionToStateIfNeeded
      VB:
      - id: UCT.Overworld.OverworldPlayerBehaviour*
        name: OverworldPlayerBehaviour
      - name: .
      - id: UCT.Overworld.OverworldPlayerBehaviour.TransitionToStateIfNeeded*
        name: TransitionToStateIfNeeded
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldPlayerBehaviour*
        name: OverworldPlayerBehaviour
      - name: .
      - id: UCT.Overworld.OverworldPlayerBehaviour.TransitionToStateIfNeeded*
        name: TransitionToStateIfNeeded
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldPlayerBehaviour*
        name: OverworldPlayerBehaviour
      - name: .
      - id: UCT.Overworld.OverworldPlayerBehaviour.TransitionToStateIfNeeded*
        name: TransitionToStateIfNeeded
    isDefinition: true
    commentId: Overload:UCT.Overworld.OverworldPlayerBehaviour.TransitionToStateIfNeeded
  UCT.Overworld.OverworldPlayerBehaviour:
    name:
      CSharp:
      - id: UCT.Overworld.OverworldPlayerBehaviour
        name: OverworldPlayerBehaviour
      VB:
      - id: UCT.Overworld.OverworldPlayerBehaviour
        name: OverworldPlayerBehaviour
    nameWithType:
      CSharp:
      - id: UCT.Overworld.OverworldPlayerBehaviour
        name: OverworldPlayerBehaviour
      VB:
      - id: UCT.Overworld.OverworldPlayerBehaviour
        name: OverworldPlayerBehaviour
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldPlayerBehaviour
        name: OverworldPlayerBehaviour
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldPlayerBehaviour
        name: OverworldPlayerBehaviour
    isDefinition: true
    commentId: T:UCT.Overworld.OverworldPlayerBehaviour
  Global.SpriteExpressionCollection:
    name:
      CSharp:
      - id: Global.SpriteExpressionCollection
        name: SpriteExpressionCollection
        isExternal: true
      VB:
      - id: Global.SpriteExpressionCollection
        name: SpriteExpressionCollection
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.SpriteExpressionCollection
        name: SpriteExpressionCollection
        isExternal: true
      VB:
      - id: Global.SpriteExpressionCollection
        name: SpriteExpressionCollection
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.SpriteExpressionCollection
        name: SpriteExpressionCollection
        isExternal: true
      VB:
      - id: Global.SpriteExpressionCollection
        name: SpriteExpressionCollection
        isExternal: true
    isDefinition: true
    commentId: '!:Global.SpriteExpressionCollection'
  Global.SpriteExpressionCollection.State:
    name:
      CSharp:
      - id: Global.SpriteExpressionCollection.State
        name: State
        isExternal: true
      VB:
      - id: Global.SpriteExpressionCollection.State
        name: State
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.SpriteExpressionCollection
        name: SpriteExpressionCollection
        isExternal: true
      - name: .
      - id: Global.SpriteExpressionCollection.State
        name: State
        isExternal: true
      VB:
      - id: Global.SpriteExpressionCollection
        name: SpriteExpressionCollection
        isExternal: true
      - name: .
      - id: Global.SpriteExpressionCollection.State
        name: State
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.SpriteExpressionCollection
        name: SpriteExpressionCollection
        isExternal: true
      - name: .
      - id: Global.SpriteExpressionCollection.State
        name: State
        isExternal: true
      VB:
      - id: Global.SpriteExpressionCollection
        name: SpriteExpressionCollection
        isExternal: true
      - name: .
      - id: Global.SpriteExpressionCollection.State
        name: State
        isExternal: true
    isDefinition: true
    commentId: '!:Global.SpriteExpressionCollection.State'
  UCT.Overworld.OverworldSpriteChanger.UpdateSpriteDisplay*:
    name:
      CSharp:
      - id: UCT.Overworld.OverworldSpriteChanger.UpdateSpriteDisplay*
        name: UpdateSpriteDisplay
      VB:
      - id: UCT.Overworld.OverworldSpriteChanger.UpdateSpriteDisplay*
        name: UpdateSpriteDisplay
    nameWithType:
      CSharp:
      - id: UCT.Overworld.OverworldSpriteChanger*
        name: OverworldSpriteChanger
      - name: .
      - id: UCT.Overworld.OverworldSpriteChanger.UpdateSpriteDisplay*
        name: UpdateSpriteDisplay
      VB:
      - id: UCT.Overworld.OverworldSpriteChanger*
        name: OverworldSpriteChanger
      - name: .
      - id: UCT.Overworld.OverworldSpriteChanger.UpdateSpriteDisplay*
        name: UpdateSpriteDisplay
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldSpriteChanger*
        name: OverworldSpriteChanger
      - name: .
      - id: UCT.Overworld.OverworldSpriteChanger.UpdateSpriteDisplay*
        name: UpdateSpriteDisplay
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldSpriteChanger*
        name: OverworldSpriteChanger
      - name: .
      - id: UCT.Overworld.OverworldSpriteChanger.UpdateSpriteDisplay*
        name: UpdateSpriteDisplay
    isDefinition: true
    commentId: Overload:UCT.Overworld.OverworldSpriteChanger.UpdateSpriteDisplay
  UCT.Overworld.OverworldSpriteChanger:
    name:
      CSharp:
      - id: UCT.Overworld.OverworldSpriteChanger
        name: OverworldSpriteChanger
      VB:
      - id: UCT.Overworld.OverworldSpriteChanger
        name: OverworldSpriteChanger
    nameWithType:
      CSharp:
      - id: UCT.Overworld.OverworldSpriteChanger
        name: OverworldSpriteChanger
      VB:
      - id: UCT.Overworld.OverworldSpriteChanger
        name: OverworldSpriteChanger
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldSpriteChanger
        name: OverworldSpriteChanger
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldSpriteChanger
        name: OverworldSpriteChanger
    isDefinition: true
    commentId: T:UCT.Overworld.OverworldSpriteChanger
  UCT.Overworld.OverworldPlayerAnimEventHelper.PlayWalkAudio*:
    name:
      CSharp:
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper.PlayWalkAudio*
        name: PlayWalkAudio
      VB:
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper.PlayWalkAudio*
        name: PlayWalkAudio
    nameWithType:
      CSharp:
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper*
        name: OverworldPlayerAnimEventHelper
      - name: .
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper.PlayWalkAudio*
        name: PlayWalkAudio
      VB:
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper*
        name: OverworldPlayerAnimEventHelper
      - name: .
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper.PlayWalkAudio*
        name: PlayWalkAudio
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper*
        name: OverworldPlayerAnimEventHelper
      - name: .
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper.PlayWalkAudio*
        name: PlayWalkAudio
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper*
        name: OverworldPlayerAnimEventHelper
      - name: .
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper.PlayWalkAudio*
        name: PlayWalkAudio
    isDefinition: true
    commentId: Overload:UCT.Overworld.OverworldPlayerAnimEventHelper.PlayWalkAudio
  UCT.Overworld.OverworldPlayerAnimEventHelper:
    name:
      CSharp:
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper
        name: OverworldPlayerAnimEventHelper
      VB:
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper
        name: OverworldPlayerAnimEventHelper
    nameWithType:
      CSharp:
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper
        name: OverworldPlayerAnimEventHelper
      VB:
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper
        name: OverworldPlayerAnimEventHelper
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper
        name: OverworldPlayerAnimEventHelper
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldPlayerAnimEventHelper
        name: OverworldPlayerAnimEventHelper
    isDefinition: true
    commentId: T:UCT.Overworld.OverworldPlayerAnimEventHelper
  UCT.Overworld.CameraFollowPlayer:
    name:
      CSharp:
      - id: UCT.Overworld.CameraFollowPlayer
        name: CameraFollowPlayer
      VB:
      - id: UCT.Overworld.CameraFollowPlayer
        name: CameraFollowPlayer
    nameWithType:
      CSharp:
      - id: UCT.Overworld.CameraFollowPlayer
        name: CameraFollowPlayer
      VB:
      - id: UCT.Overworld.CameraFollowPlayer
        name: CameraFollowPlayer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer
        name: CameraFollowPlayer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer
        name: CameraFollowPlayer
    isDefinition: true
    parent: UCT.Overworld
    commentId: T:UCT.Overworld.CameraFollowPlayer
  UCT.Overworld.CameraFollowPlayer.Instance*:
    name:
      CSharp:
      - id: UCT.Overworld.CameraFollowPlayer.Instance*
        name: Instance
      VB:
      - id: UCT.Overworld.CameraFollowPlayer.Instance*
        name: Instance
    nameWithType:
      CSharp:
      - id: UCT.Overworld.CameraFollowPlayer*
        name: CameraFollowPlayer
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer.Instance*
        name: Instance
      VB:
      - id: UCT.Overworld.CameraFollowPlayer*
        name: CameraFollowPlayer
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer.Instance*
        name: Instance
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer*
        name: CameraFollowPlayer
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer.Instance*
        name: Instance
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer*
        name: CameraFollowPlayer
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer.Instance*
        name: Instance
    isDefinition: true
    commentId: Overload:UCT.Overworld.CameraFollowPlayer.Instance
  UCT.Overworld.CameraFollowPlayer.GetLimitedPosition*:
    name:
      CSharp:
      - id: UCT.Overworld.CameraFollowPlayer.GetLimitedPosition*
        name: GetLimitedPosition
      VB:
      - id: UCT.Overworld.CameraFollowPlayer.GetLimitedPosition*
        name: GetLimitedPosition
    nameWithType:
      CSharp:
      - id: UCT.Overworld.CameraFollowPlayer*
        name: CameraFollowPlayer
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer.GetLimitedPosition*
        name: GetLimitedPosition
      VB:
      - id: UCT.Overworld.CameraFollowPlayer*
        name: CameraFollowPlayer
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer.GetLimitedPosition*
        name: GetLimitedPosition
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer*
        name: CameraFollowPlayer
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer.GetLimitedPosition*
        name: GetLimitedPosition
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer*
        name: CameraFollowPlayer
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer.GetLimitedPosition*
        name: GetLimitedPosition
    isDefinition: true
    commentId: Overload:UCT.Overworld.CameraFollowPlayer.GetLimitedPosition
  UCT.Overworld.CameraFollowPlayer.ShakeCamera*:
    name:
      CSharp:
      - id: UCT.Overworld.CameraFollowPlayer.ShakeCamera*
        name: ShakeCamera
      VB:
      - id: UCT.Overworld.CameraFollowPlayer.ShakeCamera*
        name: ShakeCamera
    nameWithType:
      CSharp:
      - id: UCT.Overworld.CameraFollowPlayer*
        name: CameraFollowPlayer
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer.ShakeCamera*
        name: ShakeCamera
      VB:
      - id: UCT.Overworld.CameraFollowPlayer*
        name: CameraFollowPlayer
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer.ShakeCamera*
        name: ShakeCamera
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer*
        name: CameraFollowPlayer
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer.ShakeCamera*
        name: ShakeCamera
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer*
        name: CameraFollowPlayer
      - name: .
      - id: UCT.Overworld.CameraFollowPlayer.ShakeCamera*
        name: ShakeCamera
    isDefinition: true
    commentId: Overload:UCT.Overworld.CameraFollowPlayer.ShakeCamera
  UCT.Overworld.OverworldChaseLineDrawer:
    name:
      CSharp:
      - id: UCT.Overworld.OverworldChaseLineDrawer
        name: OverworldChaseLineDrawer
      VB:
      - id: UCT.Overworld.OverworldChaseLineDrawer
        name: OverworldChaseLineDrawer
    nameWithType:
      CSharp:
      - id: UCT.Overworld.OverworldChaseLineDrawer
        name: OverworldChaseLineDrawer
      VB:
      - id: UCT.Overworld.OverworldChaseLineDrawer
        name: OverworldChaseLineDrawer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldChaseLineDrawer
        name: OverworldChaseLineDrawer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.OverworldChaseLineDrawer
        name: OverworldChaseLineDrawer
    isDefinition: true
    commentId: T:UCT.Overworld.OverworldChaseLineDrawer
  Global.BoxDrawer:
    name:
      CSharp:
      - id: Global.BoxDrawer
        name: BoxDrawer
        isExternal: true
      VB:
      - id: Global.BoxDrawer
        name: BoxDrawer
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.BoxDrawer
        name: BoxDrawer
        isExternal: true
      VB:
      - id: Global.BoxDrawer
        name: BoxDrawer
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.BoxDrawer
        name: BoxDrawer
        isExternal: true
      VB:
      - id: Global.BoxDrawer
        name: BoxDrawer
        isExternal: true
    isDefinition: true
  UCT.Overworld.TalkBoxController:
    name:
      CSharp:
      - id: UCT.Overworld.TalkBoxController
        name: TalkBoxController
      VB:
      - id: UCT.Overworld.TalkBoxController
        name: TalkBoxController
    nameWithType:
      CSharp:
      - id: UCT.Overworld.TalkBoxController
        name: TalkBoxController
      VB:
      - id: UCT.Overworld.TalkBoxController
        name: TalkBoxController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.TalkBoxController
        name: TalkBoxController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.TalkBoxController
        name: TalkBoxController
    isDefinition: true
    parent: UCT.Overworld
    commentId: T:UCT.Overworld.TalkBoxController
  UCT.Overworld.TalkBoxController.Instance*:
    name:
      CSharp:
      - id: UCT.Overworld.TalkBoxController.Instance*
        name: Instance
      VB:
      - id: UCT.Overworld.TalkBoxController.Instance*
        name: Instance
    nameWithType:
      CSharp:
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.Instance*
        name: Instance
      VB:
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.Instance*
        name: Instance
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.Instance*
        name: Instance
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.Instance*
        name: Instance
    isDefinition: true
    commentId: Overload:UCT.Overworld.TalkBoxController.Instance
  Global.ItemScroller:
    name:
      CSharp:
      - id: Global.ItemScroller
        name: ItemScroller
        isExternal: true
      VB:
      - id: Global.ItemScroller
        name: ItemScroller
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.ItemScroller
        name: ItemScroller
        isExternal: true
      VB:
      - id: Global.ItemScroller
        name: ItemScroller
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.ItemScroller
        name: ItemScroller
        isExternal: true
      VB:
      - id: Global.ItemScroller
        name: ItemScroller
        isExternal: true
    isDefinition: true
    commentId: '!:Global.ItemScroller'
  UCT.Overworld.TalkBoxController.ItemScroller*:
    name:
      CSharp:
      - id: UCT.Overworld.TalkBoxController.ItemScroller*
        name: ItemScroller
      VB:
      - id: UCT.Overworld.TalkBoxController.ItemScroller*
        name: ItemScroller
    nameWithType:
      CSharp:
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.ItemScroller*
        name: ItemScroller
      VB:
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.ItemScroller*
        name: ItemScroller
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.ItemScroller*
        name: ItemScroller
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.ItemScroller*
        name: ItemScroller
    isDefinition: true
    commentId: Overload:UCT.Overworld.TalkBoxController.ItemScroller
  UCT.Overworld.TalkBoxController.CleanText*:
    name:
      CSharp:
      - id: UCT.Overworld.TalkBoxController.CleanText*
        name: CleanText
      VB:
      - id: UCT.Overworld.TalkBoxController.CleanText*
        name: CleanText
    nameWithType:
      CSharp:
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.CleanText*
        name: CleanText
      VB:
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.CleanText*
        name: CleanText
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.CleanText*
        name: CleanText
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.CleanText*
        name: CleanText
    isDefinition: true
    commentId: Overload:UCT.Overworld.TalkBoxController.CleanText
  UCT.Overworld.TalkBoxController.SetHead*:
    name:
      CSharp:
      - id: UCT.Overworld.TalkBoxController.SetHead*
        name: SetHead
      VB:
      - id: UCT.Overworld.TalkBoxController.SetHead*
        name: SetHead
    nameWithType:
      CSharp:
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.SetHead*
        name: SetHead
      VB:
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.SetHead*
        name: SetHead
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.SetHead*
        name: SetHead
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.TalkBoxController*
        name: TalkBoxController
      - name: .
      - id: UCT.Overworld.TalkBoxController.SetHead*
        name: SetHead
    isDefinition: true
    commentId: Overload:UCT.Overworld.TalkBoxController.SetHead
  UCT.Overworld.BackpackBehaviour.BoxZAxisVisible*:
    name:
      CSharp:
      - id: UCT.Overworld.BackpackBehaviour.BoxZAxisVisible*
        name: BoxZAxisVisible
      VB:
      - id: UCT.Overworld.BackpackBehaviour.BoxZAxisVisible*
        name: BoxZAxisVisible
    nameWithType:
      CSharp:
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.BoxZAxisVisible*
        name: BoxZAxisVisible
      VB:
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.BoxZAxisVisible*
        name: BoxZAxisVisible
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.BoxZAxisVisible*
        name: BoxZAxisVisible
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.BoxZAxisVisible*
        name: BoxZAxisVisible
    isDefinition: true
    commentId: Overload:UCT.Overworld.BackpackBehaviour.BoxZAxisVisible
  UCT.Overworld.BackpackBehaviour.BoxZAxisInvisible*:
    name:
      CSharp:
      - id: UCT.Overworld.BackpackBehaviour.BoxZAxisInvisible*
        name: BoxZAxisInvisible
      VB:
      - id: UCT.Overworld.BackpackBehaviour.BoxZAxisInvisible*
        name: BoxZAxisInvisible
    nameWithType:
      CSharp:
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.BoxZAxisInvisible*
        name: BoxZAxisInvisible
      VB:
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.BoxZAxisInvisible*
        name: BoxZAxisInvisible
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.BoxZAxisInvisible*
        name: BoxZAxisInvisible
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.BoxZAxisInvisible*
        name: BoxZAxisInvisible
    isDefinition: true
    commentId: Overload:UCT.Overworld.BackpackBehaviour.BoxZAxisInvisible
  UCT.Overworld.BackpackBehaviour:
    name:
      CSharp:
      - id: UCT.Overworld.BackpackBehaviour
        name: BackpackBehaviour
      VB:
      - id: UCT.Overworld.BackpackBehaviour
        name: BackpackBehaviour
    nameWithType:
      CSharp:
      - id: UCT.Overworld.BackpackBehaviour
        name: BackpackBehaviour
      VB:
      - id: UCT.Overworld.BackpackBehaviour
        name: BackpackBehaviour
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.BackpackBehaviour
        name: BackpackBehaviour
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.BackpackBehaviour
        name: BackpackBehaviour
    isDefinition: true
    parent: UCT.Overworld
    commentId: T:UCT.Overworld.BackpackBehaviour
  UCT.Overworld.BackpackBehaviour.Instance*:
    name:
      CSharp:
      - id: UCT.Overworld.BackpackBehaviour.Instance*
        name: Instance
      VB:
      - id: UCT.Overworld.BackpackBehaviour.Instance*
        name: Instance
    nameWithType:
      CSharp:
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.Instance*
        name: Instance
      VB:
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.Instance*
        name: Instance
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.Instance*
        name: Instance
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.Instance*
        name: Instance
    isDefinition: true
    commentId: Overload:UCT.Overworld.BackpackBehaviour.Instance
  UCT.Overworld.BackpackBehaviour.Heart*:
    name:
      CSharp:
      - id: UCT.Overworld.BackpackBehaviour.Heart*
        name: Heart
      VB:
      - id: UCT.Overworld.BackpackBehaviour.Heart*
        name: Heart
    nameWithType:
      CSharp:
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.Heart*
        name: Heart
      VB:
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.Heart*
        name: Heart
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.Heart*
        name: Heart
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.Heart*
        name: Heart
    isDefinition: true
    commentId: Overload:UCT.Overworld.BackpackBehaviour.Heart
  UCT.Overworld.BackpackBehaviour.IsOpenBackPack*:
    name:
      CSharp:
      - id: UCT.Overworld.BackpackBehaviour.IsOpenBackPack*
        name: IsOpenBackPack
      VB:
      - id: UCT.Overworld.BackpackBehaviour.IsOpenBackPack*
        name: IsOpenBackPack
    nameWithType:
      CSharp:
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.IsOpenBackPack*
        name: IsOpenBackPack
      VB:
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.IsOpenBackPack*
        name: IsOpenBackPack
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.IsOpenBackPack*
        name: IsOpenBackPack
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.BackpackBehaviour*
        name: BackpackBehaviour
      - name: .
      - id: UCT.Overworld.BackpackBehaviour.IsOpenBackPack*
        name: IsOpenBackPack
    isDefinition: true
    commentId: Overload:UCT.Overworld.BackpackBehaviour.IsOpenBackPack
  UCT.Overworld.TriggerChangeLayer:
    name:
      CSharp:
      - id: UCT.Overworld.TriggerChangeLayer
        name: TriggerChangeLayer
      VB:
      - id: UCT.Overworld.TriggerChangeLayer
        name: TriggerChangeLayer
    nameWithType:
      CSharp:
      - id: UCT.Overworld.TriggerChangeLayer
        name: TriggerChangeLayer
      VB:
      - id: UCT.Overworld.TriggerChangeLayer
        name: TriggerChangeLayer
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.TriggerChangeLayer
        name: TriggerChangeLayer
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.TriggerChangeLayer
        name: TriggerChangeLayer
    isDefinition: true
    commentId: T:UCT.Overworld.TriggerChangeLayer
  Global.Rigidbody2D:
    name:
      CSharp:
      - id: Global.Rigidbody2D
        name: Rigidbody2D
        isExternal: true
      VB:
      - id: Global.Rigidbody2D
        name: Rigidbody2D
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Rigidbody2D
        name: Rigidbody2D
        isExternal: true
      VB:
      - id: Global.Rigidbody2D
        name: Rigidbody2D
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Rigidbody2D
        name: Rigidbody2D
        isExternal: true
      VB:
      - id: Global.Rigidbody2D
        name: Rigidbody2D
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Rigidbody2D'
  UCT.Overworld.FiniteStateMachine.FiniteStateMachineData:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
        name: FiniteStateMachineData
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
        name: FiniteStateMachineData
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
        name: FiniteStateMachineData
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
        name: FiniteStateMachineData
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
        name: FiniteStateMachineData
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
        name: FiniteStateMachineData
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine
    commentId: T:UCT.Overworld.FiniteStateMachine.FiniteStateMachineData
  UCT.Overworld.FiniteStateMachine.SightComponent:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.SightComponent
        name: SightComponent
      VB:
      - id: UCT.Overworld.FiniteStateMachine.SightComponent
        name: SightComponent
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.SightComponent
        name: SightComponent
      VB:
      - id: UCT.Overworld.FiniteStateMachine.SightComponent
        name: SightComponent
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SightComponent
        name: SightComponent
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SightComponent
        name: SightComponent
    isDefinition: true
    commentId: T:UCT.Overworld.FiniteStateMachine.SightComponent
  System.Collections.Generic.List{Vector3}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: <
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.List`1
        name: List
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: Global.Vector3
        name: Vector3
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Vector3}
  UCT.Overworld.FiniteStateMachine.TriggerObjectComponent:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent
        name: TriggerObjectComponent
      VB:
      - id: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent
        name: TriggerObjectComponent
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent
        name: TriggerObjectComponent
      VB:
      - id: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent
        name: TriggerObjectComponent
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent
        name: TriggerObjectComponent
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.TriggerObjectComponent
        name: TriggerObjectComponent
    isDefinition: true
    commentId: T:UCT.Overworld.FiniteStateMachine.TriggerObjectComponent
  UCT.Overworld.FiniteStateMachine.StateType:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.StateType
        name: StateType
      VB:
      - id: UCT.Overworld.FiniteStateMachine.StateType
        name: StateType
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.StateType
        name: StateType
      VB:
      - id: UCT.Overworld.FiniteStateMachine.StateType
        name: StateType
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.StateType
        name: StateType
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.StateType
        name: StateType
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine
    commentId: T:UCT.Overworld.FiniteStateMachine.StateType
  System.Collections.Generic.Dictionary{UCT.Overworld.FiniteStateMachine.StateType,UCT.Overworld.FiniteStateMachine.IState}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: UCT.Overworld.FiniteStateMachine.StateType
        name: StateType
      - name: ','
      - name: " "
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Overworld.FiniteStateMachine.StateType
        name: StateType
      - name: ','
      - name: " "
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: )
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: UCT.Overworld.FiniteStateMachine.StateType
        name: StateType
      - name: ','
      - name: " "
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT.Overworld.FiniteStateMachine.StateType
        name: StateType
      - name: ','
      - name: " "
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: <
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.StateType
        name: StateType
      - name: ','
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.StateType
        name: StateType
      - name: ','
      - name: " "
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{UCT.Overworld.FiniteStateMachine.StateType,UCT.Overworld.FiniteStateMachine.IState}
  UCT.Overworld.FiniteStateMachine.IState:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine
    commentId: T:UCT.Overworld.FiniteStateMachine.IState
  UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates*
        name: InitializeStates
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates*
        name: InitializeStates
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates*
        name: InitializeStates
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates*
        name: InitializeStates
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates*
        name: InitializeStates
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates*
        name: InitializeStates
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.InitializeStates
  UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState*
        name: TransitionState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState*
        name: TransitionState
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState*
        name: TransitionState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState*
        name: TransitionState
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState*
        name: TransitionState
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState*
        name: TransitionState
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.TransitionState
  UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo*
        name: UpdateMoveTo
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo*
        name: UpdateMoveTo
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo*
        name: UpdateMoveTo
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo*
        name: UpdateMoveTo
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo*
        name: UpdateMoveTo
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo*
        name: UpdateMoveTo
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.UpdateMoveTo
  UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance*
        name: DiagonalDistance
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance*
        name: DiagonalDistance
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance*
        name: DiagonalDistance
      VB:
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance*
        name: DiagonalDistance
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance*
        name: DiagonalDistance
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance*
        name: DiagonalDistance
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.FiniteStateMachine.DiagonalDistance
  UCT.Overworld.FiniteStateMachine.AStarNode:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.AStarNode
        name: AStarNode
      VB:
      - id: UCT.Overworld.FiniteStateMachine.AStarNode
        name: AStarNode
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.AStarNode
        name: AStarNode
      VB:
      - id: UCT.Overworld.FiniteStateMachine.AStarNode
        name: AStarNode
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.AStarNode
        name: AStarNode
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.AStarNode
        name: AStarNode
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine
    commentId: T:UCT.Overworld.FiniteStateMachine.AStarNode
  UCT.Overworld.FiniteStateMachine.IState.OnEnter*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnEnter*
        name: OnEnter
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnEnter*
        name: OnEnter
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnEnter*
        name: OnEnter
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnEnter*
        name: OnEnter
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnEnter*
        name: OnEnter
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnEnter*
        name: OnEnter
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.IState.OnEnter
  UCT.Overworld.FiniteStateMachine.IState.OnUpdate*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnUpdate*
        name: OnUpdate
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnUpdate*
        name: OnUpdate
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnUpdate*
        name: OnUpdate
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.IState.OnUpdate
  UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate*
        name: OnFixedUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate*
        name: OnFixedUpdate
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate*
        name: OnFixedUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate*
        name: OnFixedUpdate
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate*
        name: OnFixedUpdate
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate*
        name: OnFixedUpdate
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate
  UCT.Overworld.FiniteStateMachine.IState.OnExit*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnExit*
        name: OnExit
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnExit*
        name: OnExit
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnExit*
        name: OnExit
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnExit*
        name: OnExit
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnExit*
        name: OnExit
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState*
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnExit*
        name: OnExit
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.IState.OnExit
  UCT.Overworld.FiniteStateMachine.IdleState.#ctor*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IdleState.#ctor*
        name: IdleState
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.#ctor*
        name: IdleState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.#ctor*
        name: IdleState
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.IdleState.#ctor
  UCT.Overworld.FiniteStateMachine.IdleState.OnEnter*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnEnter*
        name: OnEnter
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnEnter*
        name: OnEnter
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnEnter*
        name: OnEnter
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnEnter*
        name: OnEnter
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnEnter*
        name: OnEnter
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnEnter*
        name: OnEnter
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.IdleState.OnEnter
  UCT.Overworld.FiniteStateMachine.IState.OnEnter:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnEnter
        name: OnEnter
      - name: (
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnEnter
        name: OnEnter
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnEnter
        name: OnEnter
      - name: (
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnEnter
        name: OnEnter
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnEnter
        name: OnEnter
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnEnter
        name: OnEnter
      - name: (
      - name: )
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine.IState
    commentId: M:UCT.Overworld.FiniteStateMachine.IState.OnEnter
  UCT.Overworld.FiniteStateMachine.IdleState.OnUpdate*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnUpdate*
        name: OnUpdate
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnUpdate*
        name: OnUpdate
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnUpdate*
        name: OnUpdate
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.IdleState.OnUpdate
  UCT.Overworld.FiniteStateMachine.IState.OnUpdate:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnUpdate
        name: OnUpdate
      - name: (
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnUpdate
        name: OnUpdate
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnUpdate
        name: OnUpdate
      - name: (
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnUpdate
        name: OnUpdate
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnUpdate
        name: OnUpdate
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnUpdate
        name: OnUpdate
      - name: (
      - name: )
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine.IState
    commentId: M:UCT.Overworld.FiniteStateMachine.IState.OnUpdate
  UCT.Overworld.FiniteStateMachine.IdleState.OnFixedUpdate*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnFixedUpdate*
        name: OnFixedUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnFixedUpdate*
        name: OnFixedUpdate
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnFixedUpdate*
        name: OnFixedUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnFixedUpdate*
        name: OnFixedUpdate
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnFixedUpdate*
        name: OnFixedUpdate
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnFixedUpdate*
        name: OnFixedUpdate
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.IdleState.OnFixedUpdate
  UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate
        name: OnFixedUpdate
      - name: (
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate
        name: OnFixedUpdate
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate
        name: OnFixedUpdate
      - name: (
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate
        name: OnFixedUpdate
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate
        name: OnFixedUpdate
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate
        name: OnFixedUpdate
      - name: (
      - name: )
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine.IState
    commentId: M:UCT.Overworld.FiniteStateMachine.IState.OnFixedUpdate
  UCT.Overworld.FiniteStateMachine.IdleState.OnExit*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnExit*
        name: OnExit
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnExit*
        name: OnExit
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnExit*
        name: OnExit
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnExit*
        name: OnExit
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnExit*
        name: OnExit
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState*
        name: IdleState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState.OnExit*
        name: OnExit
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.IdleState.OnExit
  UCT.Overworld.FiniteStateMachine.IState.OnExit:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnExit
        name: OnExit
      - name: (
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState.OnExit
        name: OnExit
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnExit
        name: OnExit
      - name: (
      - name: )
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnExit
        name: OnExit
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnExit
        name: OnExit
      - name: (
      - name: )
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState
        name: IState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IState.OnExit
        name: OnExit
      - name: (
      - name: )
    isDefinition: true
    parent: UCT.Overworld.FiniteStateMachine.IState
    commentId: M:UCT.Overworld.FiniteStateMachine.IState.OnExit
  UCT.Overworld.FiniteStateMachine.IdleState:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IdleState
        name: IdleState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IdleState
        name: IdleState
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.IdleState
        name: IdleState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.IdleState
        name: IdleState
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState
        name: IdleState
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.IdleState
        name: IdleState
    isDefinition: true
    commentId: T:UCT.Overworld.FiniteStateMachine.IdleState
  UCT.Overworld.FiniteStateMachine.WalkState.#ctor*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.WalkState.#ctor*
        name: WalkState
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.#ctor*
        name: WalkState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.#ctor*
        name: WalkState
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.WalkState.#ctor
  UCT.Overworld.FiniteStateMachine.WalkState.OnEnter*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnEnter*
        name: OnEnter
      VB:
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnEnter*
        name: OnEnter
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnEnter*
        name: OnEnter
      VB:
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnEnter*
        name: OnEnter
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnEnter*
        name: OnEnter
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnEnter*
        name: OnEnter
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.WalkState.OnEnter
  UCT.Overworld.FiniteStateMachine.WalkState.OnUpdate*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnUpdate*
        name: OnUpdate
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnUpdate*
        name: OnUpdate
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnUpdate*
        name: OnUpdate
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.WalkState.OnUpdate
  UCT.Overworld.FiniteStateMachine.WalkState.OnFixedUpdate*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnFixedUpdate*
        name: OnFixedUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnFixedUpdate*
        name: OnFixedUpdate
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnFixedUpdate*
        name: OnFixedUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnFixedUpdate*
        name: OnFixedUpdate
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnFixedUpdate*
        name: OnFixedUpdate
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnFixedUpdate*
        name: OnFixedUpdate
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.WalkState.OnFixedUpdate
  UCT.Overworld.FiniteStateMachine.WalkState.OnExit*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnExit*
        name: OnExit
      VB:
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnExit*
        name: OnExit
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnExit*
        name: OnExit
      VB:
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnExit*
        name: OnExit
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnExit*
        name: OnExit
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState*
        name: WalkState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState.OnExit*
        name: OnExit
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.WalkState.OnExit
  UCT.Overworld.FiniteStateMachine.WalkState:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.WalkState
        name: WalkState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.WalkState
        name: WalkState
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.WalkState
        name: WalkState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.WalkState
        name: WalkState
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState
        name: WalkState
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.WalkState
        name: WalkState
    isDefinition: true
    commentId: T:UCT.Overworld.FiniteStateMachine.WalkState
  UCT.Overworld.FiniteStateMachine.RunState.#ctor*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.RunState.#ctor*
        name: RunState
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.#ctor*
        name: RunState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.#ctor*
        name: RunState
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.RunState.#ctor
  UCT.Overworld.FiniteStateMachine.RunState.OnEnter*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnEnter*
        name: OnEnter
      VB:
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnEnter*
        name: OnEnter
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnEnter*
        name: OnEnter
      VB:
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnEnter*
        name: OnEnter
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnEnter*
        name: OnEnter
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnEnter*
        name: OnEnter
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.RunState.OnEnter
  UCT.Overworld.FiniteStateMachine.RunState.OnUpdate*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnUpdate*
        name: OnUpdate
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnUpdate*
        name: OnUpdate
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnUpdate*
        name: OnUpdate
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.RunState.OnUpdate
  UCT.Overworld.FiniteStateMachine.RunState.OnFixedUpdate*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnFixedUpdate*
        name: OnFixedUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnFixedUpdate*
        name: OnFixedUpdate
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnFixedUpdate*
        name: OnFixedUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnFixedUpdate*
        name: OnFixedUpdate
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnFixedUpdate*
        name: OnFixedUpdate
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnFixedUpdate*
        name: OnFixedUpdate
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.RunState.OnFixedUpdate
  UCT.Overworld.FiniteStateMachine.RunState.OnExit*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnExit*
        name: OnExit
      VB:
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnExit*
        name: OnExit
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnExit*
        name: OnExit
      VB:
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnExit*
        name: OnExit
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnExit*
        name: OnExit
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState*
        name: RunState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState.OnExit*
        name: OnExit
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.RunState.OnExit
  UCT.Overworld.FiniteStateMachine.RunState:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.RunState
        name: RunState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.RunState
        name: RunState
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.RunState
        name: RunState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.RunState
        name: RunState
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState
        name: RunState
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.RunState
        name: RunState
    isDefinition: true
    commentId: T:UCT.Overworld.FiniteStateMachine.RunState
  UCT.Overworld.FiniteStateMachine.SpinState.#ctor*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.SpinState.#ctor*
        name: SpinState
      VB:
      - name: New
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.#ctor*
        name: SpinState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - name: New
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.#ctor*
        name: SpinState
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - name: New
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.SpinState.#ctor
  UCT.Overworld.FiniteStateMachine.SpinState.OnEnter*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnEnter*
        name: OnEnter
      VB:
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnEnter*
        name: OnEnter
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnEnter*
        name: OnEnter
      VB:
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnEnter*
        name: OnEnter
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnEnter*
        name: OnEnter
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnEnter*
        name: OnEnter
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.SpinState.OnEnter
  UCT.Overworld.FiniteStateMachine.SpinState.OnUpdate*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnUpdate*
        name: OnUpdate
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnUpdate*
        name: OnUpdate
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnUpdate*
        name: OnUpdate
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnUpdate*
        name: OnUpdate
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.SpinState.OnUpdate
  UCT.Overworld.FiniteStateMachine.SpinState.OnFixedUpdate*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnFixedUpdate*
        name: OnFixedUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnFixedUpdate*
        name: OnFixedUpdate
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnFixedUpdate*
        name: OnFixedUpdate
      VB:
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnFixedUpdate*
        name: OnFixedUpdate
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnFixedUpdate*
        name: OnFixedUpdate
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnFixedUpdate*
        name: OnFixedUpdate
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.SpinState.OnFixedUpdate
  UCT.Overworld.FiniteStateMachine.SpinState.OnExit*:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnExit*
        name: OnExit
      VB:
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnExit*
        name: OnExit
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnExit*
        name: OnExit
      VB:
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnExit*
        name: OnExit
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnExit*
        name: OnExit
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Overworld*
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine*
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState*
        name: SpinState
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState.OnExit*
        name: OnExit
    isDefinition: true
    commentId: Overload:UCT.Overworld.FiniteStateMachine.SpinState.OnExit
  UCT.Overworld.FiniteStateMachine.SpinState:
    name:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.SpinState
        name: SpinState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.SpinState
        name: SpinState
    nameWithType:
      CSharp:
      - id: UCT.Overworld.FiniteStateMachine.SpinState
        name: SpinState
      VB:
      - id: UCT.Overworld.FiniteStateMachine.SpinState
        name: SpinState
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState
        name: SpinState
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.FiniteStateMachine
        name: FiniteStateMachine
      - name: .
      - id: UCT.Overworld.FiniteStateMachine.SpinState
        name: SpinState
    isDefinition: true
    commentId: T:UCT.Overworld.FiniteStateMachine.SpinState
  UCT.Overworld.Corridor.ColumnsMove:
    name:
      CSharp:
      - id: UCT.Overworld.Corridor.ColumnsMove
        name: ColumnsMove
      VB:
      - id: UCT.Overworld.Corridor.ColumnsMove
        name: ColumnsMove
    nameWithType:
      CSharp:
      - id: UCT.Overworld.Corridor.ColumnsMove
        name: ColumnsMove
      VB:
      - id: UCT.Overworld.Corridor.ColumnsMove
        name: ColumnsMove
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.Corridor
        name: Corridor
      - name: .
      - id: UCT.Overworld.Corridor.ColumnsMove
        name: ColumnsMove
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.Corridor
        name: Corridor
      - name: .
      - id: UCT.Overworld.Corridor.ColumnsMove
        name: ColumnsMove
    isDefinition: true
    commentId: T:UCT.Overworld.Corridor.ColumnsMove
  UCT.Overworld.Corridor:
    name:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.Corridor
        name: Corridor
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.Corridor
        name: Corridor
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.Corridor
        name: Corridor
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.Corridor
        name: Corridor
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.Corridor
        name: Corridor
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Overworld
        name: Overworld
      - name: .
      - id: UCT.Overworld.Corridor
        name: Corridor
    isDefinition: true
    commentId: N:UCT.Overworld.Corridor
  UCT.Core.TypeWritterTagProcessor.SetItemDataName*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterTagProcessor.SetItemDataName*
        name: SetItemDataName
      VB:
      - id: UCT.Core.TypeWritterTagProcessor.SetItemDataName*
        name: SetItemDataName
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.SetItemDataName*
        name: SetItemDataName
      VB:
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.SetItemDataName*
        name: SetItemDataName
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.SetItemDataName*
        name: SetItemDataName
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.SetItemDataName*
        name: SetItemDataName
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritterTagProcessor.SetItemDataName
  UCT.Core:
    name:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
    nameWithType:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
    isDefinition: true
    commentId: N:UCT.Core
  UCT.Core.TypeWritter:
    name:
      CSharp:
      - id: UCT.Core.TypeWritter
        name: TypeWritter
      VB:
      - id: UCT.Core.TypeWritter
        name: TypeWritter
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritter
        name: TypeWritter
      VB:
      - id: UCT.Core.TypeWritter
        name: TypeWritter
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.TypeWritter
        name: TypeWritter
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.TypeWritter
        name: TypeWritter
    isDefinition: true
    parent: UCT.Core
    commentId: T:UCT.Core.TypeWritter
  Global.TMP_Text:
    name:
      CSharp:
      - id: Global.TMP_Text
        name: TMP_Text
        isExternal: true
      VB:
      - id: Global.TMP_Text
        name: TMP_Text
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.TMP_Text
        name: TMP_Text
        isExternal: true
      VB:
      - id: Global.TMP_Text
        name: TMP_Text
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.TMP_Text
        name: TMP_Text
        isExternal: true
      VB:
      - id: Global.TMP_Text
        name: TMP_Text
        isExternal: true
    isDefinition: true
  UCT.Core.TypeWritterTagProcessor.TypeWritterProcessTag*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterTagProcessor.TypeWritterProcessTag*
        name: TypeWritterProcessTag
      VB:
      - id: UCT.Core.TypeWritterTagProcessor.TypeWritterProcessTag*
        name: TypeWritterProcessTag
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.TypeWritterProcessTag*
        name: TypeWritterProcessTag
      VB:
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.TypeWritterProcessTag*
        name: TypeWritterProcessTag
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.TypeWritterProcessTag*
        name: TypeWritterProcessTag
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.TypeWritterProcessTag*
        name: TypeWritterProcessTag
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritterTagProcessor.TypeWritterProcessTag
  UCT.Core.TypeWritterTagProcessor.GetTypeWritterStopTime*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterTagProcessor.GetTypeWritterStopTime*
        name: GetTypeWritterStopTime
      VB:
      - id: UCT.Core.TypeWritterTagProcessor.GetTypeWritterStopTime*
        name: GetTypeWritterStopTime
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.GetTypeWritterStopTime*
        name: GetTypeWritterStopTime
      VB:
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.GetTypeWritterStopTime*
        name: GetTypeWritterStopTime
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.GetTypeWritterStopTime*
        name: GetTypeWritterStopTime
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.GetTypeWritterStopTime*
        name: GetTypeWritterStopTime
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritterTagProcessor.GetTypeWritterStopTime
  UCT.Core.TypeWritterTagProcessor.TypeWritterPlayFx*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterTagProcessor.TypeWritterPlayFx*
        name: TypeWritterPlayFx
      VB:
      - id: UCT.Core.TypeWritterTagProcessor.TypeWritterPlayFx*
        name: TypeWritterPlayFx
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.TypeWritterPlayFx*
        name: TypeWritterPlayFx
      VB:
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.TypeWritterPlayFx*
        name: TypeWritterPlayFx
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.TypeWritterPlayFx*
        name: TypeWritterPlayFx
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.TypeWritterPlayFx*
        name: TypeWritterPlayFx
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritterTagProcessor.TypeWritterPlayFx
  UCT.Core.TypeWritterTagProcessor.SetSpeedMode*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterTagProcessor.SetSpeedMode*
        name: SetSpeedMode
      VB:
      - id: UCT.Core.TypeWritterTagProcessor.SetSpeedMode*
        name: SetSpeedMode
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.SetSpeedMode*
        name: SetSpeedMode
      VB:
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.SetSpeedMode*
        name: SetSpeedMode
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.SetSpeedMode*
        name: SetSpeedMode
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.SetSpeedMode*
        name: SetSpeedMode
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritterTagProcessor.SetSpeedMode
  UCT.Core.TypeWritterTagProcessor.ConvertStaticTagHandlers*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterTagProcessor.ConvertStaticTagHandlers*
        name: ConvertStaticTagHandlers
      VB:
      - id: UCT.Core.TypeWritterTagProcessor.ConvertStaticTagHandlers*
        name: ConvertStaticTagHandlers
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.ConvertStaticTagHandlers*
        name: ConvertStaticTagHandlers
      VB:
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.ConvertStaticTagHandlers*
        name: ConvertStaticTagHandlers
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.ConvertStaticTagHandlers*
        name: ConvertStaticTagHandlers
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor*
        name: TypeWritterTagProcessor
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor.ConvertStaticTagHandlers*
        name: ConvertStaticTagHandlers
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritterTagProcessor.ConvertStaticTagHandlers
  UCT.Core.TypeWritterTagProcessor:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterTagProcessor
        name: TypeWritterTagProcessor
      VB:
      - id: UCT.Core.TypeWritterTagProcessor
        name: TypeWritterTagProcessor
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterTagProcessor
        name: TypeWritterTagProcessor
      VB:
      - id: UCT.Core.TypeWritterTagProcessor
        name: TypeWritterTagProcessor
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor
        name: TypeWritterTagProcessor
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterTagProcessor
        name: TypeWritterTagProcessor
    isDefinition: true
    commentId: T:UCT.Core.TypeWritterTagProcessor
  UCT.Core.MainControl.SceneState:
    name:
      CSharp:
      - id: UCT.Core.MainControl
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.SceneState
        name: SceneState
      VB:
      - id: UCT.Core.MainControl
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.SceneState
        name: SceneState
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.SceneState
        name: SceneState
      VB:
      - id: UCT.Core.MainControl
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.SceneState
        name: SceneState
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.MainControl
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.SceneState
        name: SceneState
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.MainControl
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.SceneState
        name: SceneState
    isDefinition: true
    parent: UCT.Core
    commentId: T:UCT.Core.MainControl.SceneState
  Global.Camera:
    name:
      CSharp:
      - id: Global.Camera
        name: Camera
        isExternal: true
      VB:
      - id: Global.Camera
        name: Camera
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.Camera
        name: Camera
        isExternal: true
      VB:
      - id: Global.Camera
        name: Camera
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.Camera
        name: Camera
        isExternal: true
      VB:
      - id: Global.Camera
        name: Camera
        isExternal: true
    isDefinition: true
  Global.BattlePlayerController:
    name:
      CSharp:
      - id: Global.BattlePlayerController
        name: BattlePlayerController
        isExternal: true
      VB:
      - id: Global.BattlePlayerController
        name: BattlePlayerController
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.BattlePlayerController
        name: BattlePlayerController
        isExternal: true
      VB:
      - id: Global.BattlePlayerController
        name: BattlePlayerController
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.BattlePlayerController
        name: BattlePlayerController
        isExternal: true
      VB:
      - id: Global.BattlePlayerController
        name: BattlePlayerController
        isExternal: true
    isDefinition: true
    commentId: '!:Global.BattlePlayerController'
  Global.SelectUIController:
    name:
      CSharp:
      - id: Global.SelectUIController
        name: SelectUIController
        isExternal: true
      VB:
      - id: Global.SelectUIController
        name: SelectUIController
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.SelectUIController
        name: SelectUIController
        isExternal: true
      VB:
      - id: Global.SelectUIController
        name: SelectUIController
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.SelectUIController
        name: SelectUIController
        isExternal: true
      VB:
      - id: Global.SelectUIController
        name: SelectUIController
        isExternal: true
    isDefinition: true
    commentId: '!:Global.SelectUIController'
  Global.CameraShake:
    name:
      CSharp:
      - id: Global.CameraShake
        name: CameraShake
        isExternal: true
      VB:
      - id: Global.CameraShake
        name: CameraShake
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.CameraShake
        name: CameraShake
        isExternal: true
      VB:
      - id: Global.CameraShake
        name: CameraShake
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.CameraShake
        name: CameraShake
        isExternal: true
      VB:
      - id: Global.CameraShake
        name: CameraShake
        isExternal: true
    isDefinition: true
  Global.EventController:
    name:
      CSharp:
      - id: Global.EventController
        name: EventController
        isExternal: true
      VB:
      - id: Global.EventController
        name: EventController
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.EventController
        name: EventController
        isExternal: true
      VB:
      - id: Global.EventController
        name: EventController
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.EventController
        name: EventController
        isExternal: true
      VB:
      - id: Global.EventController
        name: EventController
        isExternal: true
    isDefinition: true
    commentId: '!:Global.EventController'
  Global.UnityEngine.Rendering.Volume:
    name:
      CSharp:
      - id: Global.UnityEngine.Rendering.Volume
        name: Volume
        isExternal: true
      VB:
      - id: Global.UnityEngine.Rendering.Volume
        name: Volume
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.UnityEngine
        name: UnityEngine
        isExternal: true
      - name: .
      - id: Global.UnityEngine.Rendering
        name: Rendering
        isExternal: true
      - name: .
      - id: Global.UnityEngine.Rendering.Volume
        name: Volume
        isExternal: true
      VB:
      - id: Global.UnityEngine
        name: UnityEngine
        isExternal: true
      - name: .
      - id: Global.UnityEngine.Rendering
        name: Rendering
        isExternal: true
      - name: .
      - id: Global.UnityEngine.Rendering.Volume
        name: Volume
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.UnityEngine
        name: UnityEngine
        isExternal: true
      - name: .
      - id: Global.UnityEngine.Rendering
        name: Rendering
        isExternal: true
      - name: .
      - id: Global.UnityEngine.Rendering.Volume
        name: Volume
        isExternal: true
      VB:
      - id: Global.UnityEngine
        name: UnityEngine
        isExternal: true
      - name: .
      - id: Global.UnityEngine.Rendering
        name: Rendering
        isExternal: true
      - name: .
      - id: Global.UnityEngine.Rendering.Volume
        name: Volume
        isExternal: true
    isDefinition: true
    commentId: '!:Global.UnityEngine.Rendering.Volume'
  Global.ItemController:
    name:
      CSharp:
      - id: Global.ItemController
        name: ItemController
        isExternal: true
      VB:
      - id: Global.ItemController
        name: ItemController
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.ItemController
        name: ItemController
        isExternal: true
      VB:
      - id: Global.ItemController
        name: ItemController
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.ItemController
        name: ItemController
        isExternal: true
      VB:
      - id: Global.ItemController
        name: ItemController
        isExternal: true
    isDefinition: true
    commentId: '!:Global.ItemController'
  Global.OverworldPlayerBehaviour:
    name:
      CSharp:
      - id: Global.OverworldPlayerBehaviour
        name: OverworldPlayerBehaviour
        isExternal: true
      VB:
      - id: Global.OverworldPlayerBehaviour
        name: OverworldPlayerBehaviour
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.OverworldPlayerBehaviour
        name: OverworldPlayerBehaviour
        isExternal: true
      VB:
      - id: Global.OverworldPlayerBehaviour
        name: OverworldPlayerBehaviour
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.OverworldPlayerBehaviour
        name: OverworldPlayerBehaviour
        isExternal: true
      VB:
      - id: Global.OverworldPlayerBehaviour
        name: OverworldPlayerBehaviour
        isExternal: true
    isDefinition: true
    commentId: '!:Global.OverworldPlayerBehaviour'
  UCT.Core.MainControl.OverworldPlayerBehaviour*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.OverworldPlayerBehaviour*
        name: OverworldPlayerBehaviour
      VB:
      - id: UCT.Core.MainControl.OverworldPlayerBehaviour*
        name: OverworldPlayerBehaviour
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.OverworldPlayerBehaviour*
        name: OverworldPlayerBehaviour
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.OverworldPlayerBehaviour*
        name: OverworldPlayerBehaviour
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.OverworldPlayerBehaviour*
        name: OverworldPlayerBehaviour
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.OverworldPlayerBehaviour*
        name: OverworldPlayerBehaviour
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.OverworldPlayerBehaviour
  UCT.Core.ObjectPool:
    name:
      CSharp:
      - id: UCT.Core.ObjectPool
        name: ObjectPool
      VB:
      - id: UCT.Core.ObjectPool
        name: ObjectPool
    nameWithType:
      CSharp:
      - id: UCT.Core.ObjectPool
        name: ObjectPool
      VB:
      - id: UCT.Core.ObjectPool
        name: ObjectPool
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.ObjectPool
        name: ObjectPool
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.ObjectPool
        name: ObjectPool
    isDefinition: true
    parent: UCT.Core
    commentId: T:UCT.Core.ObjectPool
  UCT.Core.MainControl.OverworldBulletPool*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.OverworldBulletPool*
        name: OverworldBulletPool
      VB:
      - id: UCT.Core.MainControl.OverworldBulletPool*
        name: OverworldBulletPool
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.OverworldBulletPool*
        name: OverworldBulletPool
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.OverworldBulletPool*
        name: OverworldBulletPool
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.OverworldBulletPool*
        name: OverworldBulletPool
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.OverworldBulletPool*
        name: OverworldBulletPool
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.OverworldBulletPool
  UCT.Core.MainControl:
    name:
      CSharp:
      - id: UCT.Core.MainControl
        name: MainControl
      VB:
      - id: UCT.Core.MainControl
        name: MainControl
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl
        name: MainControl
      VB:
      - id: UCT.Core.MainControl
        name: MainControl
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.MainControl
        name: MainControl
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.MainControl
        name: MainControl
    isDefinition: true
    parent: UCT.Core
    commentId: T:UCT.Core.MainControl
  UCT.Core.MainControl.Instance*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.Instance*
        name: Instance
      VB:
      - id: UCT.Core.MainControl.Instance*
        name: Instance
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.Instance*
        name: Instance
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.Instance*
        name: Instance
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.Instance*
        name: Instance
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.Instance*
        name: Instance
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.Instance
  UCT.Core.MainControl.LanguagePackageExternalNumber*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.LanguagePackageExternalNumber*
        name: LanguagePackageExternalNumber
      VB:
      - id: UCT.Core.MainControl.LanguagePackageExternalNumber*
        name: LanguagePackageExternalNumber
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.LanguagePackageExternalNumber*
        name: LanguagePackageExternalNumber
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.LanguagePackageExternalNumber*
        name: LanguagePackageExternalNumber
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.LanguagePackageExternalNumber*
        name: LanguagePackageExternalNumber
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.LanguagePackageExternalNumber*
        name: LanguagePackageExternalNumber
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.LanguagePackageExternalNumber
  UCT.Core.MainControl.LanguagePackageInternalNumber*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.LanguagePackageInternalNumber*
        name: LanguagePackageInternalNumber
      VB:
      - id: UCT.Core.MainControl.LanguagePackageInternalNumber*
        name: LanguagePackageInternalNumber
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.LanguagePackageInternalNumber*
        name: LanguagePackageInternalNumber
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.LanguagePackageInternalNumber*
        name: LanguagePackageInternalNumber
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.LanguagePackageInternalNumber*
        name: LanguagePackageInternalNumber
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.LanguagePackageInternalNumber*
        name: LanguagePackageInternalNumber
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.LanguagePackageInternalNumber
  Global.LanguagePackControl:
    name:
      CSharp:
      - id: Global.LanguagePackControl
        name: LanguagePackControl
        isExternal: true
      VB:
      - id: Global.LanguagePackControl
        name: LanguagePackControl
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.LanguagePackControl
        name: LanguagePackControl
        isExternal: true
      VB:
      - id: Global.LanguagePackControl
        name: LanguagePackControl
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.LanguagePackControl
        name: LanguagePackControl
        isExternal: true
      VB:
      - id: Global.LanguagePackControl
        name: LanguagePackControl
        isExternal: true
    isDefinition: true
    commentId: '!:Global.LanguagePackControl'
  UCT.Core.MainControl.LanguagePackControl*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.LanguagePackControl*
        name: LanguagePackControl
      VB:
      - id: UCT.Core.MainControl.LanguagePackControl*
        name: LanguagePackControl
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.LanguagePackControl*
        name: LanguagePackControl
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.LanguagePackControl*
        name: LanguagePackControl
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.LanguagePackControl*
        name: LanguagePackControl
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.LanguagePackControl*
        name: LanguagePackControl
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.LanguagePackControl
  Global.AudioControl:
    name:
      CSharp:
      - id: Global.AudioControl
        name: AudioControl
        isExternal: true
      VB:
      - id: Global.AudioControl
        name: AudioControl
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.AudioControl
        name: AudioControl
        isExternal: true
      VB:
      - id: Global.AudioControl
        name: AudioControl
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.AudioControl
        name: AudioControl
        isExternal: true
      VB:
      - id: Global.AudioControl
        name: AudioControl
        isExternal: true
    isDefinition: true
    commentId: '!:Global.AudioControl'
  UCT.Core.MainControl.AudioControl*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.AudioControl*
        name: AudioControl
      VB:
      - id: UCT.Core.MainControl.AudioControl*
        name: AudioControl
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.AudioControl*
        name: AudioControl
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.AudioControl*
        name: AudioControl
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.AudioControl*
        name: AudioControl
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.AudioControl*
        name: AudioControl
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.AudioControl
  Global.BattleControl:
    name:
      CSharp:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      VB:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      VB:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
      VB:
      - id: Global.BattleControl
        name: BattleControl
        isExternal: true
    isDefinition: true
    commentId: '!:Global.BattleControl'
  UCT.Core.MainControl.BattleControl*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.BattleControl*
        name: BattleControl
      VB:
      - id: UCT.Core.MainControl.BattleControl*
        name: BattleControl
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.BattleControl*
        name: BattleControl
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.BattleControl*
        name: BattleControl
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.BattleControl*
        name: BattleControl
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.BattleControl*
        name: BattleControl
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.BattleControl
  Global.CharacterSpriteManager[]:
    name:
      CSharp:
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
      - name: (
      - name: )
    nameWithType:
      CSharp:
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
      - name: (
      - name: )
    qualifiedName:
      CSharp:
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
      - name: '['
      - name: ']'
      VB:
      - id: Global.CharacterSpriteManager
        name: CharacterSpriteManager
        isExternal: true
      - name: (
      - name: )
    isDefinition: false
  UCT.Core.MainControl.CharacterSpriteManagers*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.CharacterSpriteManagers*
        name: CharacterSpriteManagers
      VB:
      - id: UCT.Core.MainControl.CharacterSpriteManagers*
        name: CharacterSpriteManagers
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.CharacterSpriteManagers*
        name: CharacterSpriteManagers
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.CharacterSpriteManagers*
        name: CharacterSpriteManagers
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.CharacterSpriteManagers*
        name: CharacterSpriteManagers
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.CharacterSpriteManagers*
        name: CharacterSpriteManagers
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.CharacterSpriteManagers
  UCT.Core.MainControl.Start*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.Start*
        name: Start
      VB:
      - id: UCT.Core.MainControl.Start*
        name: Start
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.Start*
        name: Start
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.Start*
        name: Start
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.Start*
        name: Start
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.Start*
        name: Start
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.Start
  UCT.Core.MainControl.SetLanguagePackageExternalNumber*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.SetLanguagePackageExternalNumber*
        name: SetLanguagePackageExternalNumber
      VB:
      - id: UCT.Core.MainControl.SetLanguagePackageExternalNumber*
        name: SetLanguagePackageExternalNumber
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.SetLanguagePackageExternalNumber*
        name: SetLanguagePackageExternalNumber
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.SetLanguagePackageExternalNumber*
        name: SetLanguagePackageExternalNumber
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.SetLanguagePackageExternalNumber*
        name: SetLanguagePackageExternalNumber
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.SetLanguagePackageExternalNumber*
        name: SetLanguagePackageExternalNumber
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.SetLanguagePackageExternalNumber
  UCT.Core.MainControl.GetOverworldPlayerBehaviour*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.GetOverworldPlayerBehaviour*
        name: GetOverworldPlayerBehaviour
      VB:
      - id: UCT.Core.MainControl.GetOverworldPlayerBehaviour*
        name: GetOverworldPlayerBehaviour
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.GetOverworldPlayerBehaviour*
        name: GetOverworldPlayerBehaviour
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.GetOverworldPlayerBehaviour*
        name: GetOverworldPlayerBehaviour
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.GetOverworldPlayerBehaviour*
        name: GetOverworldPlayerBehaviour
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.GetOverworldPlayerBehaviour*
        name: GetOverworldPlayerBehaviour
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.GetOverworldPlayerBehaviour
  UCT.Core.MainControl.Initialization*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.Initialization*
        name: Initialization
      VB:
      - id: UCT.Core.MainControl.Initialization*
        name: Initialization
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.Initialization*
        name: Initialization
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.Initialization*
        name: Initialization
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.Initialization*
        name: Initialization
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.Initialization*
        name: Initialization
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.Initialization
  UCT.Core.MainControl.InitializationScene*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.InitializationScene*
        name: InitializationScene
      VB:
      - id: UCT.Core.MainControl.InitializationScene*
        name: InitializationScene
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.InitializationScene*
        name: InitializationScene
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.InitializationScene*
        name: InitializationScene
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.InitializationScene*
        name: InitializationScene
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.InitializationScene*
        name: InitializationScene
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.InitializationScene
  UCT.Core.MainControl.HitPlayer*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.HitPlayer*
        name: HitPlayer
      VB:
      - id: UCT.Core.MainControl.HitPlayer*
        name: HitPlayer
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.HitPlayer*
        name: HitPlayer
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.HitPlayer*
        name: HitPlayer
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.HitPlayer*
        name: HitPlayer
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.HitPlayer*
        name: HitPlayer
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.HitPlayer
  UCT.Core.MainControl.EnterChase*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.EnterChase*
        name: EnterChase
      VB:
      - id: UCT.Core.MainControl.EnterChase*
        name: EnterChase
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.EnterChase*
        name: EnterChase
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.EnterChase*
        name: EnterChase
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.EnterChase*
        name: EnterChase
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.EnterChase*
        name: EnterChase
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.EnterChase
  UCT.Core.MainControl.ExitChase*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.ExitChase*
        name: ExitChase
      VB:
      - id: UCT.Core.MainControl.ExitChase*
        name: ExitChase
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.ExitChase*
        name: ExitChase
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.ExitChase*
        name: ExitChase
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.ExitChase*
        name: ExitChase
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.ExitChase*
        name: ExitChase
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.ExitChase
  UCT.Core.MainControl.KillPlayer*:
    name:
      CSharp:
      - id: UCT.Core.MainControl.KillPlayer*
        name: KillPlayer
      VB:
      - id: UCT.Core.MainControl.KillPlayer*
        name: KillPlayer
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.KillPlayer*
        name: KillPlayer
      VB:
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.KillPlayer*
        name: KillPlayer
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.KillPlayer*
        name: KillPlayer
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.MainControl*
        name: MainControl
      - name: .
      - id: UCT.Core.MainControl.KillPlayer*
        name: KillPlayer
    isDefinition: true
    commentId: Overload:UCT.Core.MainControl.KillPlayer
  UCT.Core.MainControlSummon:
    name:
      CSharp:
      - id: UCT.Core.MainControlSummon
        name: MainControlSummon
      VB:
      - id: UCT.Core.MainControlSummon
        name: MainControlSummon
    nameWithType:
      CSharp:
      - id: UCT.Core.MainControlSummon
        name: MainControlSummon
      VB:
      - id: UCT.Core.MainControlSummon
        name: MainControlSummon
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.MainControlSummon
        name: MainControlSummon
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.MainControlSummon
        name: MainControlSummon
    isDefinition: true
    commentId: T:UCT.Core.MainControlSummon
  UCT.Core.TypeWritterSelectController.Story*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterSelectController.Story*
        name: Story
      VB:
      - id: UCT.Core.TypeWritterSelectController.Story*
        name: Story
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.Story*
        name: Story
      VB:
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.Story*
        name: Story
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.Story*
        name: Story
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.Story*
        name: Story
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritterSelectController.Story
  UCT.Core.TypeWritterSelectController.IsSelecting*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterSelectController.IsSelecting*
        name: IsSelecting
      VB:
      - id: UCT.Core.TypeWritterSelectController.IsSelecting*
        name: IsSelecting
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.IsSelecting*
        name: IsSelecting
      VB:
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.IsSelecting*
        name: IsSelecting
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.IsSelecting*
        name: IsSelecting
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.IsSelecting*
        name: IsSelecting
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritterSelectController.IsSelecting
  UCT.Core.TypeWritterSelectController.GlobalItemIndex*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterSelectController.GlobalItemIndex*
        name: GlobalItemIndex
      VB:
      - id: UCT.Core.TypeWritterSelectController.GlobalItemIndex*
        name: GlobalItemIndex
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.GlobalItemIndex*
        name: GlobalItemIndex
      VB:
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.GlobalItemIndex*
        name: GlobalItemIndex
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.GlobalItemIndex*
        name: GlobalItemIndex
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.GlobalItemIndex*
        name: GlobalItemIndex
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritterSelectController.GlobalItemIndex
  UCT.Core.TypeWritterSelectController.VisibleItemIndex*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterSelectController.VisibleItemIndex*
        name: VisibleItemIndex
      VB:
      - id: UCT.Core.TypeWritterSelectController.VisibleItemIndex*
        name: VisibleItemIndex
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.VisibleItemIndex*
        name: VisibleItemIndex
      VB:
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.VisibleItemIndex*
        name: VisibleItemIndex
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.VisibleItemIndex*
        name: VisibleItemIndex
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.VisibleItemIndex*
        name: VisibleItemIndex
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritterSelectController.VisibleItemIndex
  UCT.Core.TypeWritterSelectController.SetStory*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterSelectController.SetStory*
        name: SetStory
      VB:
      - id: UCT.Core.TypeWritterSelectController.SetStory*
        name: SetStory
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.SetStory*
        name: SetStory
      VB:
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.SetStory*
        name: SetStory
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.SetStory*
        name: SetStory
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.SetStory*
        name: SetStory
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritterSelectController.SetStory
  UCT.Core.TypeWritterSelectController.GetStoryDialogue*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterSelectController.GetStoryDialogue*
        name: GetStoryDialogue
      VB:
      - id: UCT.Core.TypeWritterSelectController.GetStoryDialogue*
        name: GetStoryDialogue
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.GetStoryDialogue*
        name: GetStoryDialogue
      VB:
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.GetStoryDialogue*
        name: GetStoryDialogue
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.GetStoryDialogue*
        name: GetStoryDialogue
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterSelectController*
        name: TypeWritterSelectController
      - name: .
      - id: UCT.Core.TypeWritterSelectController.GetStoryDialogue*
        name: GetStoryDialogue
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritterSelectController.GetStoryDialogue
  UCT.Core.TypeWritterSelectController:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterSelectController
        name: TypeWritterSelectController
      VB:
      - id: UCT.Core.TypeWritterSelectController
        name: TypeWritterSelectController
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterSelectController
        name: TypeWritterSelectController
      VB:
      - id: UCT.Core.TypeWritterSelectController
        name: TypeWritterSelectController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterSelectController
        name: TypeWritterSelectController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterSelectController
        name: TypeWritterSelectController
    isDefinition: true
    parent: UCT.Core
    commentId: T:UCT.Core.TypeWritterSelectController
  UCT.Core.SaveController.SaveData*:
    name:
      CSharp:
      - id: UCT.Core.SaveController.SaveData*
        name: SaveData
      VB:
      - id: UCT.Core.SaveController.SaveData*
        name: SaveData
    nameWithType:
      CSharp:
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.SaveData*
        name: SaveData
      VB:
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.SaveData*
        name: SaveData
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.SaveData*
        name: SaveData
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.SaveData*
        name: SaveData
    isDefinition: true
    commentId: Overload:UCT.Core.SaveController.SaveData
  UCT.Core.SaveController.LoadData*:
    name:
      CSharp:
      - id: UCT.Core.SaveController.LoadData*
        name: LoadData
      VB:
      - id: UCT.Core.SaveController.LoadData*
        name: LoadData
    nameWithType:
      CSharp:
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.LoadData*
        name: LoadData
      VB:
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.LoadData*
        name: LoadData
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.LoadData*
        name: LoadData
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.LoadData*
        name: LoadData
    isDefinition: true
    commentId: Overload:UCT.Core.SaveController.LoadData
  UCT.Core.SaveController.GetDataNumber*:
    name:
      CSharp:
      - id: UCT.Core.SaveController.GetDataNumber*
        name: GetDataNumber
      VB:
      - id: UCT.Core.SaveController.GetDataNumber*
        name: GetDataNumber
    nameWithType:
      CSharp:
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.GetDataNumber*
        name: GetDataNumber
      VB:
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.GetDataNumber*
        name: GetDataNumber
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.GetDataNumber*
        name: GetDataNumber
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.GetDataNumber*
        name: GetDataNumber
    isDefinition: true
    commentId: Overload:UCT.Core.SaveController.GetDataNumber
  UCT.Core.SaveController.DeleteData*:
    name:
      CSharp:
      - id: UCT.Core.SaveController.DeleteData*
        name: DeleteData
      VB:
      - id: UCT.Core.SaveController.DeleteData*
        name: DeleteData
    nameWithType:
      CSharp:
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.DeleteData*
        name: DeleteData
      VB:
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.DeleteData*
        name: DeleteData
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.DeleteData*
        name: DeleteData
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.SaveController*
        name: SaveController
      - name: .
      - id: UCT.Core.SaveController.DeleteData*
        name: DeleteData
    isDefinition: true
    commentId: Overload:UCT.Core.SaveController.DeleteData
  UCT.Core.SaveController:
    name:
      CSharp:
      - id: UCT.Core.SaveController
        name: SaveController
      VB:
      - id: UCT.Core.SaveController
        name: SaveController
    nameWithType:
      CSharp:
      - id: UCT.Core.SaveController
        name: SaveController
      VB:
      - id: UCT.Core.SaveController
        name: SaveController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.SaveController
        name: SaveController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.SaveController
        name: SaveController
    isDefinition: true
    commentId: T:UCT.Core.SaveController
  Global.OverworldSpriteChanger:
    name:
      CSharp:
      - id: Global.OverworldSpriteChanger
        name: OverworldSpriteChanger
        isExternal: true
      VB:
      - id: Global.OverworldSpriteChanger
        name: OverworldSpriteChanger
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.OverworldSpriteChanger
        name: OverworldSpriteChanger
        isExternal: true
      VB:
      - id: Global.OverworldSpriteChanger
        name: OverworldSpriteChanger
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.OverworldSpriteChanger
        name: OverworldSpriteChanger
        isExternal: true
      VB:
      - id: Global.OverworldSpriteChanger
        name: OverworldSpriteChanger
        isExternal: true
    isDefinition: true
    commentId: '!:Global.OverworldSpriteChanger'
  Global.OverworldControl.DynamicType:
    name:
      CSharp:
      - id: Global.OverworldControl.DynamicType
        name: DynamicType
        isExternal: true
      VB:
      - id: Global.OverworldControl.DynamicType
        name: DynamicType
        isExternal: true
    nameWithType:
      CSharp:
      - id: Global.OverworldControl
        name: OverworldControl
        isExternal: true
      - name: .
      - id: Global.OverworldControl.DynamicType
        name: DynamicType
        isExternal: true
      VB:
      - id: Global.OverworldControl
        name: OverworldControl
        isExternal: true
      - name: .
      - id: Global.OverworldControl.DynamicType
        name: DynamicType
        isExternal: true
    qualifiedName:
      CSharp:
      - id: Global.OverworldControl
        name: OverworldControl
        isExternal: true
      - name: .
      - id: Global.OverworldControl.DynamicType
        name: DynamicType
        isExternal: true
      VB:
      - id: Global.OverworldControl
        name: OverworldControl
        isExternal: true
      - name: .
      - id: Global.OverworldControl.DynamicType
        name: DynamicType
        isExternal: true
    isDefinition: true
  UCT.Core.TypeWritter.TypeMode:
    name:
      CSharp:
      - id: UCT.Core.TypeWritter
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.TypeMode
        name: TypeMode
      VB:
      - id: UCT.Core.TypeWritter
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.TypeMode
        name: TypeMode
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritter
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.TypeMode
        name: TypeMode
      VB:
      - id: UCT.Core.TypeWritter
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.TypeMode
        name: TypeMode
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.TypeWritter
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.TypeMode
        name: TypeMode
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.TypeWritter
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.TypeMode
        name: TypeMode
    isDefinition: true
    parent: UCT.Core
    commentId: T:UCT.Core.TypeWritter.TypeMode
  UCT.Core.TypeWritter.StartTypeWritter*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritter.StartTypeWritter*
        name: StartTypeWritter
      VB:
      - id: UCT.Core.TypeWritter.StartTypeWritter*
        name: StartTypeWritter
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.StartTypeWritter*
        name: StartTypeWritter
      VB:
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.StartTypeWritter*
        name: StartTypeWritter
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.StartTypeWritter*
        name: StartTypeWritter
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.StartTypeWritter*
        name: StartTypeWritter
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritter.StartTypeWritter
  UCT.Core.TypeWritter.TypeStop*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritter.TypeStop*
        name: TypeStop
      VB:
      - id: UCT.Core.TypeWritter.TypeStop*
        name: TypeStop
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.TypeStop*
        name: TypeStop
      VB:
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.TypeStop*
        name: TypeStop
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.TypeStop*
        name: TypeStop
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.TypeStop*
        name: TypeStop
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritter.TypeStop
  UCT.Core.TypeWritter.TypePause*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritter.TypePause*
        name: TypePause
      VB:
      - id: UCT.Core.TypeWritter.TypePause*
        name: TypePause
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.TypePause*
        name: TypePause
      VB:
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.TypePause*
        name: TypePause
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.TypePause*
        name: TypePause
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.TypePause*
        name: TypePause
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritter.TypePause
  UCT.Core.TypeWritter.PassTextWithDelay*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritter.PassTextWithDelay*
        name: PassTextWithDelay
      VB:
      - id: UCT.Core.TypeWritter.PassTextWithDelay*
        name: PassTextWithDelay
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.PassTextWithDelay*
        name: PassTextWithDelay
      VB:
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.PassTextWithDelay*
        name: PassTextWithDelay
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.PassTextWithDelay*
        name: PassTextWithDelay
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritter*
        name: TypeWritter
      - name: .
      - id: UCT.Core.TypeWritter.PassTextWithDelay*
        name: PassTextWithDelay
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritter.PassTextWithDelay
  System.Collections.Generic.IEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator
        name: IEnumerator
        isExternal: true
      VB:
      - id: System.Collections.Generic.IEnumerator
        name: IEnumerator
        isExternal: true
    nameWithType:
      CSharp:
      - id: System.Collections.Generic.IEnumerator
        name: IEnumerator
        isExternal: true
      VB:
      - id: System.Collections.Generic.IEnumerator
        name: IEnumerator
        isExternal: true
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.IEnumerator
        name: IEnumerator
        isExternal: true
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Collections
        name: Collections
        isExternal: true
      - name: .
      - id: System.Collections.Generic
        name: Generic
        isExternal: true
      - name: .
      - id: System.Collections.Generic.IEnumerator
        name: IEnumerator
        isExternal: true
    isDefinition: true
    commentId: '!:System.Collections.Generic.IEnumerator'
  UCT.Core.TypeWritterDynamicController.DynamicTmp*:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterDynamicController.DynamicTmp*
        name: DynamicTmp
      VB:
      - id: UCT.Core.TypeWritterDynamicController.DynamicTmp*
        name: DynamicTmp
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterDynamicController*
        name: TypeWritterDynamicController
      - name: .
      - id: UCT.Core.TypeWritterDynamicController.DynamicTmp*
        name: DynamicTmp
      VB:
      - id: UCT.Core.TypeWritterDynamicController*
        name: TypeWritterDynamicController
      - name: .
      - id: UCT.Core.TypeWritterDynamicController.DynamicTmp*
        name: DynamicTmp
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterDynamicController*
        name: TypeWritterDynamicController
      - name: .
      - id: UCT.Core.TypeWritterDynamicController.DynamicTmp*
        name: DynamicTmp
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterDynamicController*
        name: TypeWritterDynamicController
      - name: .
      - id: UCT.Core.TypeWritterDynamicController.DynamicTmp*
        name: DynamicTmp
    isDefinition: true
    commentId: Overload:UCT.Core.TypeWritterDynamicController.DynamicTmp
  UCT.Core.TypeWritterDynamicController:
    name:
      CSharp:
      - id: UCT.Core.TypeWritterDynamicController
        name: TypeWritterDynamicController
      VB:
      - id: UCT.Core.TypeWritterDynamicController
        name: TypeWritterDynamicController
    nameWithType:
      CSharp:
      - id: UCT.Core.TypeWritterDynamicController
        name: TypeWritterDynamicController
      VB:
      - id: UCT.Core.TypeWritterDynamicController
        name: TypeWritterDynamicController
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterDynamicController
        name: TypeWritterDynamicController
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.TypeWritterDynamicController
        name: TypeWritterDynamicController
    isDefinition: true
    commentId: T:UCT.Core.TypeWritterDynamicController
  UCT.Core.ItemScroller.Open*:
    name:
      CSharp:
      - id: UCT.Core.ItemScroller.Open*
        name: Open
      VB:
      - id: UCT.Core.ItemScroller.Open*
        name: Open
    nameWithType:
      CSharp:
      - id: UCT.Core.ItemScroller*
        name: ItemScroller
      - name: .
      - id: UCT.Core.ItemScroller.Open*
        name: Open
      VB:
      - id: UCT.Core.ItemScroller*
        name: ItemScroller
      - name: .
      - id: UCT.Core.ItemScroller.Open*
        name: Open
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.ItemScroller*
        name: ItemScroller
      - name: .
      - id: UCT.Core.ItemScroller.Open*
        name: Open
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.ItemScroller*
        name: ItemScroller
      - name: .
      - id: UCT.Core.ItemScroller.Open*
        name: Open
    isDefinition: true
    commentId: Overload:UCT.Core.ItemScroller.Open
  UCT.Core.ItemScroller.Close*:
    name:
      CSharp:
      - id: UCT.Core.ItemScroller.Close*
        name: Close
      VB:
      - id: UCT.Core.ItemScroller.Close*
        name: Close
    nameWithType:
      CSharp:
      - id: UCT.Core.ItemScroller*
        name: ItemScroller
      - name: .
      - id: UCT.Core.ItemScroller.Close*
        name: Close
      VB:
      - id: UCT.Core.ItemScroller*
        name: ItemScroller
      - name: .
      - id: UCT.Core.ItemScroller.Close*
        name: Close
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.ItemScroller*
        name: ItemScroller
      - name: .
      - id: UCT.Core.ItemScroller.Close*
        name: Close
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.ItemScroller*
        name: ItemScroller
      - name: .
      - id: UCT.Core.ItemScroller.Close*
        name: Close
    isDefinition: true
    commentId: Overload:UCT.Core.ItemScroller.Close
  System.ValueTuple{System.Int32,System.Int32}:
    name:
      CSharp:
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.Int32,System.Int32}.globalItemIndex
        name: globalItemIndex
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.Int32,System.Int32}.visibleItemIndex
        name: visibleItemIndex
      - name: )
      VB:
      - name: (
      - id: System.ValueTuple{System.Int32,System.Int32}.globalItemIndex
        name: globalItemIndex
      - name: " "
      - name: As
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.ValueTuple{System.Int32,System.Int32}.visibleItemIndex
        name: visibleItemIndex
      - name: " "
      - name: As
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.Int32,System.Int32}.globalItemIndex
        name: globalItemIndex
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.Int32,System.Int32}.visibleItemIndex
        name: visibleItemIndex
      - name: )
      VB:
      - name: (
      - id: System.ValueTuple{System.Int32,System.Int32}.globalItemIndex
        name: globalItemIndex
      - name: " "
      - name: As
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.ValueTuple{System.Int32,System.Int32}.visibleItemIndex
        name: visibleItemIndex
      - name: " "
      - name: As
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - name: (
      - id: System.Int32
        name: int
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.Int32,System.Int32}.globalItemIndex
        name: globalItemIndex
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: " "
      - id: System.ValueTuple{System.Int32,System.Int32}.visibleItemIndex
        name: visibleItemIndex
      - name: )
      VB:
      - name: (
      - id: System.ValueTuple{System.Int32,System.Int32}.globalItemIndex
        name: globalItemIndex
      - name: " "
      - name: As
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.ValueTuple{System.Int32,System.Int32}.visibleItemIndex
        name: visibleItemIndex
      - name: " "
      - name: As
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.ValueTuple`2
    parent: System
    commentId: T:System.ValueTuple{System.Int32,System.Int32}
  System.Action`2:
    name:
      CSharp:
      - id: System.Action`2
        name: Action
        isExternal: true
      - name: <
      - name: T1
      - name: ','
      - name: " "
      - name: T2
      - name: '>'
      VB:
      - id: System.Action`2
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T1
      - name: ','
      - name: " "
      - name: T2
      - name: )
    nameWithType:
      CSharp:
      - id: System.Action`2
        name: Action
        isExternal: true
      - name: <
      - name: T1
      - name: ','
      - name: " "
      - name: T2
      - name: '>'
      VB:
      - id: System.Action`2
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T1
      - name: ','
      - name: " "
      - name: T2
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`2
        name: Action
        isExternal: true
      - name: <
      - name: T1
      - name: ','
      - name: " "
      - name: T2
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`2
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - name: T1
      - name: ','
      - name: " "
      - name: T2
      - name: )
    isDefinition: true
    commentId: T:System.Action`2
  System.Action{System.Int32,System.Int32}:
    name:
      CSharp:
      - id: System.Action`2
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System.Action`2
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    nameWithType:
      CSharp:
      - id: System.Action`2
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System.Action`2
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    qualifiedName:
      CSharp:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`2
        name: Action
        isExternal: true
      - name: <
      - id: System.Int32
        name: int
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: int
        isExternal: true
      - name: '>'
      VB:
      - id: System
        name: System
        isExternal: true
      - name: .
      - id: System.Action`2
        name: Action
        isExternal: true
      - name: (
      - name: Of
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: ','
      - name: " "
      - id: System.Int32
        name: Integer
        isExternal: true
      - name: )
    isDefinition: false
    definition: System.Action`2
    parent: System
    commentId: T:System.Action{System.Int32,System.Int32}
  UCT.Core.ItemScroller.UpdateHandleItemInput*:
    name:
      CSharp:
      - id: UCT.Core.ItemScroller.UpdateHandleItemInput*
        name: UpdateHandleItemInput
      VB:
      - id: UCT.Core.ItemScroller.UpdateHandleItemInput*
        name: UpdateHandleItemInput
    nameWithType:
      CSharp:
      - id: UCT.Core.ItemScroller*
        name: ItemScroller
      - name: .
      - id: UCT.Core.ItemScroller.UpdateHandleItemInput*
        name: UpdateHandleItemInput
      VB:
      - id: UCT.Core.ItemScroller*
        name: ItemScroller
      - name: .
      - id: UCT.Core.ItemScroller.UpdateHandleItemInput*
        name: UpdateHandleItemInput
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.ItemScroller*
        name: ItemScroller
      - name: .
      - id: UCT.Core.ItemScroller.UpdateHandleItemInput*
        name: UpdateHandleItemInput
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.ItemScroller*
        name: ItemScroller
      - name: .
      - id: UCT.Core.ItemScroller.UpdateHandleItemInput*
        name: UpdateHandleItemInput
    isDefinition: true
    commentId: Overload:UCT.Core.ItemScroller.UpdateHandleItemInput
  UCT.Core.ItemScroller:
    name:
      CSharp:
      - id: UCT.Core.ItemScroller
        name: ItemScroller
      VB:
      - id: UCT.Core.ItemScroller
        name: ItemScroller
    nameWithType:
      CSharp:
      - id: UCT.Core.ItemScroller
        name: ItemScroller
      VB:
      - id: UCT.Core.ItemScroller
        name: ItemScroller
    qualifiedName:
      CSharp:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.ItemScroller
        name: ItemScroller
      VB:
      - id: UCT
        name: UCT
      - name: .
      - id: UCT.Core
        name: Core
      - name: .
      - id: UCT.Core.ItemScroller
        name: ItemScroller
    isDefinition: true
    commentId: T:UCT.Core.ItemScroller
  UCT.Core.ObjectPool.FillPool*:
    name:
      CSharp:
      - id: UCT.Core.ObjectPool.FillPool*
        name: FillPool
      VB:
      - id: UCT.Core.ObjectPool.FillPool*
        name: FillPool
    nameWithType:
      CSharp:
      - id: UCT.Core.ObjectPool*
        name: ObjectPool
      - name: .
      - id: UCT.Core.ObjectPool.FillPool*
        name: FillPool
      VB:
      - id: UCT.Core.ObjectPool*
        name: ObjectPool
      - name: .
      - id: UCT.Core.ObjectPool.FillPool*
        name: FillPool
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.ObjectPool*
        name: ObjectPool
      - name: .
      - id: UCT.Core.ObjectPool.FillPool*
        name: FillPool
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.ObjectPool*
        name: ObjectPool
      - name: .
      - id: UCT.Core.ObjectPool.FillPool*
        name: FillPool
    isDefinition: true
    commentId: Overload:UCT.Core.ObjectPool.FillPool
  UCT.Core.ObjectPool.ReturnPool*:
    name:
      CSharp:
      - id: UCT.Core.ObjectPool.ReturnPool*
        name: ReturnPool
      VB:
      - id: UCT.Core.ObjectPool.ReturnPool*
        name: ReturnPool
    nameWithType:
      CSharp:
      - id: UCT.Core.ObjectPool*
        name: ObjectPool
      - name: .
      - id: UCT.Core.ObjectPool.ReturnPool*
        name: ReturnPool
      VB:
      - id: UCT.Core.ObjectPool*
        name: ObjectPool
      - name: .
      - id: UCT.Core.ObjectPool.ReturnPool*
        name: ReturnPool
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.ObjectPool*
        name: ObjectPool
      - name: .
      - id: UCT.Core.ObjectPool.ReturnPool*
        name: ReturnPool
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.ObjectPool*
        name: ObjectPool
      - name: .
      - id: UCT.Core.ObjectPool.ReturnPool*
        name: ReturnPool
    isDefinition: true
    commentId: Overload:UCT.Core.ObjectPool.ReturnPool
  UCT.Core.ObjectPool.GetFromPool*:
    name:
      CSharp:
      - id: UCT.Core.ObjectPool.GetFromPool*
        name: GetFromPool
      VB:
      - id: UCT.Core.ObjectPool.GetFromPool*
        name: GetFromPool
    nameWithType:
      CSharp:
      - id: UCT.Core.ObjectPool*
        name: ObjectPool
      - name: .
      - id: UCT.Core.ObjectPool.GetFromPool*
        name: GetFromPool
      VB:
      - id: UCT.Core.ObjectPool*
        name: ObjectPool
      - name: .
      - id: UCT.Core.ObjectPool.GetFromPool*
        name: GetFromPool
    qualifiedName:
      CSharp:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.ObjectPool*
        name: ObjectPool
      - name: .
      - id: UCT.Core.ObjectPool.GetFromPool*
        name: GetFromPool
      VB:
      - id: UCT*
        name: UCT
      - name: .
      - id: UCT.Core*
        name: Core
      - name: .
      - id: UCT.Core.ObjectPool*
        name: ObjectPool
      - name: .
      - id: UCT.Core.ObjectPool.GetFromPool*
        name: GetFromPool
    isDefinition: true
    commentId: Overload:UCT.Core.ObjectPool.GetFromPool
